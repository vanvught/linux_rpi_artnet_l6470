In archive lib_linux/librdm.a:

rdmconst.o:     file format elf64-x86-64


rdmdevice.o:     file format elf64-x86-64


Disassembly of section .text._ZNK7Network5GetIpEv:

0000000000000000 <Network::GetIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 10             	mov    0x10(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Network::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN8Hardware13GetWebsiteUrlEv:

0000000000000000 <Hardware::GetWebsiteUrl()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 13 <Hardware::GetWebsiteUrl()+0x13>
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN9RDMDeviceC2Ev:

0000000000000000 <RDMDevice::RDMDevice()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 50          	sub    $0x50,%rsp
   c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  23:	c6 00 00             	movb   $0x0,(%rax)
  26:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  2a:	c6 40 72 00          	movb   $0x0,0x72(%rax)
  2e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  32:	66 c7 40 74 00 00    	movw   $0x0,0x74(%rax)
  38:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  3c:	48 c7 40 78 00 00 00 	movq   $0x0,0x78(%rax)
  43:	00 
  44:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4b <RDMDevice::RDMDevice()+0x4b>
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	call   53 <RDMDevice::RDMDevice()+0x53>
  53:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  57:	48 c7 45 c8 20 00 00 	movq   $0x20,-0x38(%rbp)
  5e:	00 
  5f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  63:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
  67:	48 89 d6             	mov    %rdx,%rsi
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	e8 00 00 00 00       	call   72 <RDMDevice::RDMDevice()+0x72>
  72:	48 8b 00             	mov    (%rax),%rax
  75:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  79:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  7d:	48 8d 48 2c          	lea    0x2c(%rax),%rcx
  81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  85:	48 89 c2             	mov    %rax,%rdx
  88:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8f <RDMDevice::RDMDevice()+0x8f>
  8f:	48 89 c6             	mov    %rax,%rsi
  92:	48 89 cf             	mov    %rcx,%rdi
  95:	e8 00 00 00 00       	call   9a <RDMDevice::RDMDevice()+0x9a>
  9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9e:	89 c2                	mov    %eax,%edx
  a0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  a4:	88 50 4c             	mov    %dl,0x4c(%rax)
  a7:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # ae <RDMDevice::RDMDevice()+0xae>
  ae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  b2:	88 50 01             	mov    %dl,0x1(%rax)
  b5:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # bc <RDMDevice::RDMDevice()+0xbc>
  bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  c0:	88 50 02             	mov    %dl,0x2(%rax)
  c3:	e8 00 00 00 00       	call   c8 <RDMDevice::RDMDevice()+0xc8>
  c8:	48 89 c2             	mov    %rax,%rdx
  cb:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
  cf:	48 89 c6             	mov    %rax,%rsi
  d2:	48 89 d7             	mov    %rdx,%rdi
  d5:	e8 00 00 00 00       	call   da <RDMDevice::RDMDevice()+0xda>
  da:	e8 00 00 00 00       	call   df <RDMDevice::RDMDevice()+0xdf>
  df:	48 89 c7             	mov    %rax,%rdi
  e2:	e8 00 00 00 00       	call   e7 <RDMDevice::RDMDevice()+0xe7>
  e7:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  ea:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  ed:	c1 e8 18             	shr    $0x18,%eax
  f0:	89 c2                	mov    %eax,%edx
  f2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  f6:	88 50 06             	mov    %dl,0x6(%rax)
  f9:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  fc:	c1 e8 10             	shr    $0x10,%eax
  ff:	89 c2                	mov    %eax,%edx
 101:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 105:	88 50 05             	mov    %dl,0x5(%rax)
 108:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 10b:	c1 e8 08             	shr    $0x8,%eax
 10e:	89 c2                	mov    %eax,%edx
 110:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 114:	88 50 04             	mov    %dl,0x4(%rax)
 117:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 11a:	89 c2                	mov    %eax,%edx
 11c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 120:	88 50 03             	mov    %dl,0x3(%rax)
 123:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 127:	0f b6 50 06          	movzbl 0x6(%rax),%edx
 12b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 12f:	88 50 07             	mov    %dl,0x7(%rax)
 132:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 136:	0f b6 50 05          	movzbl 0x5(%rax),%edx
 13a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 13e:	88 50 08             	mov    %dl,0x8(%rax)
 141:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 145:	0f b6 50 04          	movzbl 0x4(%rax),%edx
 149:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 14d:	88 50 09             	mov    %dl,0x9(%rax)
 150:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 154:	0f b6 50 03          	movzbl 0x3(%rax),%edx
 158:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 15c:	88 50 0a             	mov    %dl,0xa(%rax)
 15f:	e8 00 00 00 00       	call   164 <RDMDevice::RDMDevice()+0x164>
 164:	48 89 c7             	mov    %rax,%rdi
 167:	e8 00 00 00 00       	call   16c <RDMDevice::RDMDevice()+0x16c>
 16c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 170:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 174:	48 89 c7             	mov    %rax,%rdi
 177:	e8 00 00 00 00       	call   17c <RDMDevice::RDMDevice()+0x17c>
 17c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 180:	48 c7 45 c8 20 00 00 	movq   $0x20,-0x38(%rbp)
 187:	00 
 188:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
 18c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
 190:	48 89 d6             	mov    %rdx,%rsi
 193:	48 89 c7             	mov    %rax,%rdi
 196:	e8 00 00 00 00       	call   19b <RDMDevice::RDMDevice()+0x19b>
 19b:	48 8b 00             	mov    (%rax),%rax
 19e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 1a2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 1a6:	48 8d 48 2c          	lea    0x2c(%rax),%rcx
 1aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 1ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 1b2:	48 89 c6             	mov    %rax,%rsi
 1b5:	48 89 cf             	mov    %rcx,%rdi
 1b8:	e8 00 00 00 00       	call   1bd <RDMDevice::RDMDevice()+0x1bd>
 1bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1c1:	89 c2                	mov    %eax,%edx
 1c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 1c7:	88 50 4c             	mov    %dl,0x4c(%rax)
 1ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 1ce:	66 c7 40 4e ff 7f    	movw   $0x7fff,0x4e(%rax)
 1d4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 1d8:	66 c7 40 50 ff 7f    	movw   $0x7fff,0x50(%rax)
 1de:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 1e2:	c6 40 72 10          	movb   $0x10,0x72(%rax)
 1e6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 1ea:	0f b6 40 72          	movzbl 0x72(%rax),%eax
 1ee:	0f b6 c0             	movzbl %al,%eax
 1f1:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 1f5:	48 8d 4a 52          	lea    0x52(%rdx),%rcx
 1f9:	48 89 c2             	mov    %rax,%rdx
 1fc:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 203 <RDMDevice::RDMDevice()+0x203>
 203:	48 89 c6             	mov    %rax,%rsi
 206:	48 89 cf             	mov    %rcx,%rdi
 209:	e8 00 00 00 00       	call   20e <RDMDevice::RDMDevice()+0x20e>
 20e:	90                   	nop
 20f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 213:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 21a:	00 00 
 21c:	74 05                	je     223 <RDMDevice::RDMDevice()+0x223>
 21e:	e8 00 00 00 00       	call   223 <RDMDevice::RDMDevice()+0x223>
 223:	c9                   	leave  
 224:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice5PrintEv:

0000000000000000 <RDMDevice::Print()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 17 <RDMDevice::Print()+0x17>
  17:	48 89 c7             	mov    %rax,%rdi
  1a:	e8 00 00 00 00       	call   1f <RDMDevice::Print()+0x1f>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	48 8d 50 2c          	lea    0x2c(%rax),%rdx
  27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2b:	0f b6 40 4c          	movzbl 0x4c(%rax),%eax
  2f:	0f b6 c0             	movzbl %al,%eax
  32:	89 c6                	mov    %eax,%esi
  34:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3b <RDMDevice::Print()+0x3b>
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	b8 00 00 00 00       	mov    $0x0,%eax
  43:	e8 00 00 00 00       	call   48 <RDMDevice::Print()+0x48>
  48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4c:	0f b6 40 02          	movzbl 0x2(%rax),%eax
  50:	0f b6 d0             	movzbl %al,%edx
  53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  57:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  5b:	0f b6 c0             	movzbl %al,%eax
  5e:	89 c6                	mov    %eax,%esi
  60:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 67 <RDMDevice::Print()+0x67>
  67:	48 89 c7             	mov    %rax,%rdi
  6a:	b8 00 00 00 00       	mov    $0x0,%eax
  6f:	e8 00 00 00 00       	call   74 <RDMDevice::Print()+0x74>
  74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  78:	0f b6 40 07          	movzbl 0x7(%rax),%eax
  7c:	0f b6 f0             	movzbl %al,%esi
  7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  83:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  87:	0f b6 c8             	movzbl %al,%ecx
  8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8e:	0f b6 40 09          	movzbl 0x9(%rax),%eax
  92:	0f b6 d0             	movzbl %al,%edx
  95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  99:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  9d:	0f b6 c0             	movzbl %al,%eax
  a0:	41 89 f0             	mov    %esi,%r8d
  a3:	89 c6                	mov    %eax,%esi
  a5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ac <RDMDevice::Print()+0xac>
  ac:	48 89 c7             	mov    %rax,%rdi
  af:	b8 00 00 00 00       	mov    $0x0,%eax
  b4:	e8 00 00 00 00       	call   b9 <RDMDevice::Print()+0xb9>
  b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bd:	48 8d 50 0b          	lea    0xb(%rax),%rdx
  c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c5:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
  c9:	0f b6 c0             	movzbl %al,%eax
  cc:	89 c6                	mov    %eax,%esi
  ce:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # d5 <RDMDevice::Print()+0xd5>
  d5:	48 89 c7             	mov    %rax,%rdi
  d8:	b8 00 00 00 00       	mov    $0x0,%eax
  dd:	e8 00 00 00 00       	call   e2 <RDMDevice::Print()+0xe2>
  e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e6:	0f b7 40 4e          	movzwl 0x4e(%rax),%eax
  ea:	0f b7 c0             	movzwl %ax,%eax
  ed:	0f b6 d0             	movzbl %al,%edx
  f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  f4:	0f b7 40 4e          	movzwl 0x4e(%rax),%eax
  f8:	66 c1 e8 08          	shr    $0x8,%ax
  fc:	0f b7 c0             	movzwl %ax,%eax
  ff:	89 c6                	mov    %eax,%esi
 101:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 108 <RDMDevice::Print()+0x108>
 108:	48 89 c7             	mov    %rax,%rdi
 10b:	b8 00 00 00 00       	mov    $0x0,%eax
 110:	e8 00 00 00 00       	call   115 <RDMDevice::Print()+0x115>
 115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 119:	0f b7 40 50          	movzwl 0x50(%rax),%eax
 11d:	0f b7 c0             	movzwl %ax,%eax
 120:	0f b6 d0             	movzbl %al,%edx
 123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 127:	0f b7 40 50          	movzwl 0x50(%rax),%eax
 12b:	66 c1 e8 08          	shr    $0x8,%ax
 12f:	0f b7 c0             	movzwl %ax,%eax
 132:	89 c6                	mov    %eax,%esi
 134:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 13b <RDMDevice::Print()+0x13b>
 13b:	48 89 c7             	mov    %rax,%rdi
 13e:	b8 00 00 00 00       	mov    $0x0,%eax
 143:	e8 00 00 00 00       	call   148 <RDMDevice::Print()+0x148>
 148:	90                   	nop
 149:	c9                   	leave  
 14a:	c3                   	ret    

Disassembly of section .text._ZSt3minImERKT_S2_S2_:

0000000000000000 <unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 8b 10             	mov    (%rax),%rdx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 8b 00             	mov    (%rax),%rax
  1e:	48 39 c2             	cmp    %rax,%rdx
  21:	73 06                	jae    29 <unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)+0x29>
  23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  27:	eb 04                	jmp    2d <unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)+0x2d>
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	5d                   	pop    %rbp
  2e:	c3                   	ret    

rdmdeviceparamsconst.o:     file format elf64-x86-64


rdmdeviceparams.o:     file format elf64-x86-64


Disassembly of section .text._ZN9RDMDevice8SetLabelEPK18TRDMDeviceInfoData:

0000000000000000 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 f5             	mov    %rsi,%rbp
   8:	48 83 c6 08          	add    $0x8,%rsi
   c:	53                   	push   %rbx
   d:	48 89 fb             	mov    %rdi,%rbx
  10:	48 83 ec 18          	sub    $0x18,%rsp
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  22:	31 c0                	xor    %eax,%eax
  24:	48 8d 7c 24 07       	lea    0x7(%rsp),%rdi
  29:	c6 44 24 07 20       	movb   $0x20,0x7(%rsp)
  2e:	e8 00 00 00 00       	call   33 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x33>
  33:	80 3b 00             	cmpb   $0x0,(%rbx)
  36:	48 8b 75 00          	mov    0x0(%rbp),%rsi
  3a:	0f b6 08             	movzbl (%rax),%ecx
  3d:	48 89 c8             	mov    %rcx,%rax
  40:	74 3a                	je     7c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x7c>
  42:	4c 8d 43 0b          	lea    0xb(%rbx),%r8
  46:	4c 89 c7             	mov    %r8,%rdi
  49:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
  4b:	88 43 2b             	mov    %al,0x2b(%rbx)
  4e:	48 8b 7b 78          	mov    0x78(%rbx),%rdi
  52:	48 85 ff             	test   %rdi,%rdi
  55:	74 31                	je     88 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x88>
  57:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  5c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  63:	00 00 
  65:	75 31                	jne    98 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x98>
  67:	0f b6 d0             	movzbl %al,%edx
  6a:	48 8b 07             	mov    (%rdi),%rax
  6d:	4c 89 c6             	mov    %r8,%rsi
  70:	48 8b 48 10          	mov    0x10(%rax),%rcx
  74:	48 83 c4 18          	add    $0x18,%rsp
  78:	5b                   	pop    %rbx
  79:	5d                   	pop    %rbp
  7a:	ff e1                	jmp    *%rcx
  7c:	48 8d 53 52          	lea    0x52(%rbx),%rdx
  80:	48 89 d7             	mov    %rdx,%rdi
  83:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
  85:	88 43 72             	mov    %al,0x72(%rbx)
  88:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  8d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  94:	00 00 
  96:	74 05                	je     9d <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x9d>
  98:	e8 00 00 00 00       	call   9d <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x9d>
  9d:	48 83 c4 18          	add    $0x18,%rsp
  a1:	5b                   	pop    %rbx
  a2:	5d                   	pop    %rbp
  a3:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice18SetProductCategoryEt:

0000000000000000 <RDMDevice::SetProductCategory(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	66 89 77 4e          	mov    %si,0x4e(%rdi)
   8:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice16SetProductDetailEt:

0000000000000000 <RDMDevice::SetProductDetail(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	66 89 77 50          	mov    %si,0x50(%rdi)
   8:	c3                   	ret    

Disassembly of section .text._ZNK15RDMDeviceParams9isMaskSetEj:

0000000000000000 <RDMDeviceParams::isMaskSet(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8b 47 08             	mov    0x8(%rdi),%eax
   7:	21 f0                	and    %esi,%eax
   9:	39 f0                	cmp    %esi,%eax
   b:	0f 94 c0             	sete   %al
   e:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8AddHex16EPKctb:

0000000000000000 <PropertiesBuilder::AddHex16(char const*, unsigned short, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	0f b6 c9             	movzbl %cl,%ecx
   7:	0f b7 d2             	movzwl %dx,%edx
   a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  10:	e9 00 00 00 00       	jmp    15 <PropertiesBuilder::AddHex16(char const*, unsigned short, bool)+0x15>

Disassembly of section .text._ZN17PropertiesBuilder7GetSizeEv:

0000000000000000 <PropertiesBuilder::GetSize()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	80 7f 0c 00          	cmpb   $0x0,0xc(%rdi)
   8:	74 1b                	je     25 <PropertiesBuilder::GetSize()+0x25>
   a:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
   e:	48 8b 17             	mov    (%rdi),%rdx
  11:	c6 44 02 ff 7d       	movb   $0x7d,-0x1(%rdx,%rax,1)
  16:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
  1a:	48 8b 17             	mov    (%rdi),%rdx
  1d:	c6 04 02 7d          	movb   $0x7d,(%rdx,%rax,1)
  21:	66 ff 47 0a          	incw   0xa(%rdi)
  25:	66 8b 47 0a          	mov    0xa(%rdi),%ax
  29:	c3                   	ret    

Disassembly of section .text._ZN15RDMDeviceParamsC2EP20RDMDeviceParamsStore:

0000000000000000 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 89 37             	mov    %rsi,(%rdi)
   7:	48 8d 77 08          	lea    0x8(%rdi),%rsi
   b:	48 89 fa             	mov    %rdi,%rdx
   e:	b9 25 00 00 00       	mov    $0x25,%ecx
  13:	31 c0                	xor    %eax,%eax
  15:	48 89 f7             	mov    %rsi,%rdi
  18:	f3 aa                	rep stos %al,%es:(%rdi)
  1a:	c7 42 2d ff 7f ff 7f 	movl   $0x7fff7fff,0x2d(%rdx)
  21:	c3                   	ret    

Disassembly of section .text._ZN15RDMDeviceParams4LoadEv:

0000000000000000 <RDMDeviceParams::Load()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	48 89 fa             	mov    %rdi,%rdx
   9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 10 <RDMDeviceParams::Load()+0x10>
  10:	55                   	push   %rbp
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	48 83 ec 20          	sub    $0x20,%rsp
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  27:	31 c0                	xor    %eax,%eax
  29:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  30:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  35:	48 89 ef             	mov    %rbp,%rdi
  38:	e8 00 00 00 00       	call   3d <RDMDeviceParams::Load()+0x3d>
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 47 <RDMDeviceParams::Load()+0x47>
  47:	e8 00 00 00 00       	call   4c <RDMDeviceParams::Load()+0x4c>
  4c:	48 8b 3b             	mov    (%rbx),%rdi
  4f:	84 c0                	test   %al,%al
  51:	41 89 c4             	mov    %eax,%r12d
  54:	74 11                	je     67 <RDMDeviceParams::Load()+0x67>
  56:	48 85 ff             	test   %rdi,%rdi
  59:	74 1e                	je     79 <RDMDeviceParams::Load()+0x79>
  5b:	48 8b 07             	mov    (%rdi),%rax
  5e:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  62:	ff 50 10             	call   *0x10(%rax)
  65:	eb 12                	jmp    79 <RDMDeviceParams::Load()+0x79>
  67:	48 85 ff             	test   %rdi,%rdi
  6a:	74 0d                	je     79 <RDMDeviceParams::Load()+0x79>
  6c:	48 8b 07             	mov    (%rdi),%rax
  6f:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  73:	41 b4 01             	mov    $0x1,%r12b
  76:	ff 50 18             	call   *0x18(%rax)
  79:	48 89 ef             	mov    %rbp,%rdi
  7c:	e8 00 00 00 00       	call   81 <RDMDeviceParams::Load()+0x81>
  81:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  86:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8d:	00 00 
  8f:	74 05                	je     96 <RDMDeviceParams::Load()+0x96>
  91:	e8 00 00 00 00       	call   96 <RDMDeviceParams::Load()+0x96>
  96:	48 83 c4 20          	add    $0x20,%rsp
  9a:	44 89 e0             	mov    %r12d,%eax
  9d:	5b                   	pop    %rbx
  9e:	5d                   	pop    %rbp
  9f:	41 5c                	pop    %r12
  a1:	c3                   	ret    

Disassembly of section .text._ZN15RDMDeviceParams4LoadEPKcj:

0000000000000000 <RDMDeviceParams::Load(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	55                   	push   %rbp
   9:	53                   	push   %rbx
   a:	48 83 ec 28          	sub    $0x28,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  22:	74 4a                	je     6e <RDMDeviceParams::Load(char const*, unsigned int)+0x6e>
  24:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  2b:	48 89 fb             	mov    %rdi,%rbx
  2e:	49 89 f4             	mov    %rsi,%r12
  31:	41 89 d5             	mov    %edx,%r13d
  34:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  39:	48 89 fa             	mov    %rdi,%rdx
  3c:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 43 <RDMDeviceParams::Load(char const*, unsigned int)+0x43>
  43:	48 89 ef             	mov    %rbp,%rdi
  46:	e8 00 00 00 00       	call   4b <RDMDeviceParams::Load(char const*, unsigned int)+0x4b>
  4b:	44 89 ea             	mov    %r13d,%edx
  4e:	4c 89 e6             	mov    %r12,%rsi
  51:	48 89 ef             	mov    %rbp,%rdi
  54:	e8 00 00 00 00       	call   59 <RDMDeviceParams::Load(char const*, unsigned int)+0x59>
  59:	48 8b 3b             	mov    (%rbx),%rdi
  5c:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  60:	48 8b 07             	mov    (%rdi),%rax
  63:	ff 50 10             	call   *0x10(%rax)
  66:	48 89 ef             	mov    %rbp,%rdi
  69:	e8 00 00 00 00       	call   6e <RDMDeviceParams::Load(char const*, unsigned int)+0x6e>
  6e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  73:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  7a:	00 00 
  7c:	74 05                	je     83 <RDMDeviceParams::Load(char const*, unsigned int)+0x83>
  7e:	e8 00 00 00 00       	call   83 <RDMDeviceParams::Load(char const*, unsigned int)+0x83>
  83:	48 83 c4 28          	add    $0x28,%rsp
  87:	5b                   	pop    %rbx
  88:	5d                   	pop    %rbp
  89:	41 5c                	pop    %r12
  8b:	41 5d                	pop    %r13
  8d:	c3                   	ret    

Disassembly of section .text._ZN15RDMDeviceParams16callbackFunctionEPKc:

0000000000000000 <RDMDeviceParams::callbackFunction(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	48 8d 57 0c          	lea    0xc(%rdi),%rdx
   a:	55                   	push   %rbp
   b:	48 89 f5             	mov    %rsi,%rbp
   e:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 15 <RDMDeviceParams::callbackFunction(char const*)+0x15>
  15:	53                   	push   %rbx
  16:	48 89 fb             	mov    %rdi,%rbx
  19:	48 89 ef             	mov    %rbp,%rdi
  1c:	48 83 ec 10          	sub    $0x10,%rsp
  20:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  27:	00 00 
  29:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  2e:	31 c0                	xor    %eax,%eax
  30:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
  35:	c7 44 24 04 20 00 00 	movl   $0x20,0x4(%rsp)
  3c:	00 
  3d:	e8 00 00 00 00       	call   42 <RDMDeviceParams::callbackFunction(char const*)+0x42>
  42:	85 c0                	test   %eax,%eax
  44:	75 0d                	jne    53 <RDMDeviceParams::callbackFunction(char const*)+0x53>
  46:	8b 44 24 04          	mov    0x4(%rsp),%eax
  4a:	83 4b 08 01          	orl    $0x1,0x8(%rbx)
  4e:	88 43 2c             	mov    %al,0x2c(%rbx)
  51:	eb 66                	jmp    b9 <RDMDeviceParams::callbackFunction(char const*)+0xb9>
  53:	4c 8d 64 24 02       	lea    0x2(%rsp),%r12
  58:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 5f <RDMDeviceParams::callbackFunction(char const*)+0x5f>
  5f:	48 89 ef             	mov    %rbp,%rdi
  62:	4c 89 e2             	mov    %r12,%rdx
  65:	e8 00 00 00 00       	call   6a <RDMDeviceParams::callbackFunction(char const*)+0x6a>
  6a:	85 c0                	test   %eax,%eax
  6c:	75 16                	jne    84 <RDMDeviceParams::callbackFunction(char const*)+0x84>
  6e:	8b 43 08             	mov    0x8(%rbx),%eax
  71:	66 8b 54 24 02       	mov    0x2(%rsp),%dx
  76:	89 c1                	mov    %eax,%ecx
  78:	66 89 53 2d          	mov    %dx,0x2d(%rbx)
  7c:	83 e0 fd             	and    $0xfffffffd,%eax
  7f:	83 c9 02             	or     $0x2,%ecx
  82:	eb 2a                	jmp    ae <RDMDeviceParams::callbackFunction(char const*)+0xae>
  84:	4c 89 e2             	mov    %r12,%rdx
  87:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 8e <RDMDeviceParams::callbackFunction(char const*)+0x8e>
  8e:	48 89 ef             	mov    %rbp,%rdi
  91:	e8 00 00 00 00       	call   96 <RDMDeviceParams::callbackFunction(char const*)+0x96>
  96:	85 c0                	test   %eax,%eax
  98:	75 1f                	jne    b9 <RDMDeviceParams::callbackFunction(char const*)+0xb9>
  9a:	66 8b 54 24 02       	mov    0x2(%rsp),%dx
  9f:	8b 43 08             	mov    0x8(%rbx),%eax
  a2:	66 89 53 2f          	mov    %dx,0x2f(%rbx)
  a6:	89 c1                	mov    %eax,%ecx
  a8:	83 e0 fb             	and    $0xfffffffb,%eax
  ab:	83 c9 04             	or     $0x4,%ecx
  ae:	66 81 fa ff 7f       	cmp    $0x7fff,%dx
  b3:	0f 45 c1             	cmovne %ecx,%eax
  b6:	89 43 08             	mov    %eax,0x8(%rbx)
  b9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  be:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  c5:	00 00 
  c7:	74 05                	je     ce <RDMDeviceParams::callbackFunction(char const*)+0xce>
  c9:	e8 00 00 00 00       	call   ce <RDMDeviceParams::callbackFunction(char const*)+0xce>
  ce:	48 83 c4 10          	add    $0x10,%rsp
  d2:	5b                   	pop    %rbx
  d3:	5d                   	pop    %rbp
  d4:	41 5c                	pop    %r12
  d6:	c3                   	ret    

Disassembly of section .text._ZN15RDMDeviceParams3SetEP9RDMDevice:

0000000000000000 <RDMDeviceParams::Set(RDMDevice*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 f5             	mov    %rsi,%rbp
   8:	be 01 00 00 00       	mov    $0x1,%esi
   d:	53                   	push   %rbx
   e:	48 89 fb             	mov    %rdi,%rbx
  11:	48 83 ec 28          	sub    $0x28,%rsp
  15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1c:	00 00 
  1e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  23:	31 c0                	xor    %eax,%eax
  25:	e8 00 00 00 00       	call   2a <RDMDeviceParams::Set(RDMDevice*)+0x2a>
  2a:	84 c0                	test   %al,%al
  2c:	74 1d                	je     4b <RDMDeviceParams::Set(RDMDevice*)+0x4b>
  2e:	48 8d 43 0c          	lea    0xc(%rbx),%rax
  32:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
  37:	48 89 ef             	mov    %rbp,%rdi
  3a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  3f:	8a 43 2c             	mov    0x2c(%rbx),%al
  42:	88 44 24 10          	mov    %al,0x10(%rsp)
  46:	e8 00 00 00 00       	call   4b <RDMDeviceParams::Set(RDMDevice*)+0x4b>
  4b:	be 02 00 00 00       	mov    $0x2,%esi
  50:	48 89 df             	mov    %rbx,%rdi
  53:	e8 00 00 00 00       	call   58 <RDMDeviceParams::Set(RDMDevice*)+0x58>
  58:	84 c0                	test   %al,%al
  5a:	74 0c                	je     68 <RDMDeviceParams::Set(RDMDevice*)+0x68>
  5c:	0f b7 73 2d          	movzwl 0x2d(%rbx),%esi
  60:	48 89 ef             	mov    %rbp,%rdi
  63:	e8 00 00 00 00       	call   68 <RDMDeviceParams::Set(RDMDevice*)+0x68>
  68:	be 04 00 00 00       	mov    $0x4,%esi
  6d:	48 89 df             	mov    %rbx,%rdi
  70:	e8 00 00 00 00       	call   75 <RDMDeviceParams::Set(RDMDevice*)+0x75>
  75:	84 c0                	test   %al,%al
  77:	74 22                	je     9b <RDMDeviceParams::Set(RDMDevice*)+0x9b>
  79:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  7e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  85:	00 00 
  87:	75 22                	jne    ab <RDMDeviceParams::Set(RDMDevice*)+0xab>
  89:	0f b7 73 2f          	movzwl 0x2f(%rbx),%esi
  8d:	48 83 c4 28          	add    $0x28,%rsp
  91:	48 89 ef             	mov    %rbp,%rdi
  94:	5b                   	pop    %rbx
  95:	5d                   	pop    %rbp
  96:	e9 00 00 00 00       	jmp    9b <RDMDeviceParams::Set(RDMDevice*)+0x9b>
  9b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  a0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  a7:	00 00 
  a9:	74 05                	je     b0 <RDMDeviceParams::Set(RDMDevice*)+0xb0>
  ab:	e8 00 00 00 00       	call   b0 <RDMDeviceParams::Set(RDMDevice*)+0xb0>
  b0:	48 83 c4 28          	add    $0x28,%rsp
  b4:	5b                   	pop    %rbx
  b5:	5d                   	pop    %rbp
  b6:	c3                   	ret    

Disassembly of section .text._ZN15RDMDeviceParams4DumpEv:

0000000000000000 <RDMDeviceParams::Dump()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	c3                   	ret    

Disassembly of section .text._ZN15RDMDeviceParams22staticCallbackFunctionEPvPKc:

0000000000000000 <RDMDeviceParams::staticCallbackFunction(void*, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	e9 00 00 00 00       	jmp    9 <RDMDeviceParams::staticCallbackFunction(void*, char const*)+0x9>

Disassembly of section .text._ZN15RDMDeviceParams7BuilderEPKN3rdm12deviceparams6ParamsEPcjRj:

0000000000000000 <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 56                	push   %r14
   6:	41 89 ce             	mov    %ecx,%r14d
   9:	41 55                	push   %r13
   b:	49 89 d5             	mov    %rdx,%r13
   e:	41 54                	push   %r12
  10:	4d 89 c4             	mov    %r8,%r12
  13:	4c 8d 47 08          	lea    0x8(%rdi),%r8
  17:	55                   	push   %rbp
  18:	53                   	push   %rbx
  19:	48 89 fb             	mov    %rdi,%rbx
  1c:	48 83 ec 20          	sub    $0x20,%rsp
  20:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  27:	00 00 
  29:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  2e:	31 c0                	xor    %eax,%eax
  30:	48 85 f6             	test   %rsi,%rsi
  33:	74 0c                	je     41 <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0x41>
  35:	b9 29 00 00 00       	mov    $0x29,%ecx
  3a:	4c 89 c7             	mov    %r8,%rdi
  3d:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
  3f:	eb 0c                	jmp    4d <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0x4d>
  41:	48 8b 3f             	mov    (%rdi),%rdi
  44:	4c 89 c6             	mov    %r8,%rsi
  47:	48 8b 07             	mov    (%rdi),%rax
  4a:	ff 50 18             	call   *0x18(%rax)
  4d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  52:	44 89 f1             	mov    %r14d,%ecx
  55:	4c 89 ea             	mov    %r13,%rdx
  58:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 5f <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0x5f>
  5f:	48 89 ef             	mov    %rbp,%rdi
  62:	e8 00 00 00 00       	call   67 <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0x67>
  67:	be 02 00 00 00       	mov    $0x2,%esi
  6c:	48 89 df             	mov    %rbx,%rdi
  6f:	e8 00 00 00 00       	call   74 <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
  74:	0f b7 53 2d          	movzwl 0x2d(%rbx),%edx
  78:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 7f <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0x7f>
  7f:	48 89 ef             	mov    %rbp,%rdi
  82:	0f b6 c8             	movzbl %al,%ecx
  85:	e8 00 00 00 00       	call   8a <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0x8a>
  8a:	be 04 00 00 00       	mov    $0x4,%esi
  8f:	48 89 df             	mov    %rbx,%rdi
  92:	e8 00 00 00 00       	call   97 <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0x97>
  97:	0f b7 53 2f          	movzwl 0x2f(%rbx),%edx
  9b:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # a2 <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
  a2:	48 89 ef             	mov    %rbp,%rdi
  a5:	0f b6 c8             	movzbl %al,%ecx
  a8:	e8 00 00 00 00       	call   ad <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0xad>
  ad:	48 89 ef             	mov    %rbp,%rdi
  b0:	e8 00 00 00 00       	call   b5 <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0xb5>
  b5:	0f b7 c0             	movzwl %ax,%eax
  b8:	41 89 04 24          	mov    %eax,(%r12)
  bc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  c1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  c8:	00 00 
  ca:	74 05                	je     d1 <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0xd1>
  cc:	e8 00 00 00 00       	call   d1 <RDMDeviceParams::Builder(rdm::deviceparams::Params const*, char*, unsigned int, unsigned int&)+0xd1>
  d1:	48 83 c4 20          	add    $0x20,%rsp
  d5:	5b                   	pop    %rbx
  d6:	5d                   	pop    %rbp
  d7:	41 5c                	pop    %r12
  d9:	41 5d                	pop    %r13
  db:	41 5e                	pop    %r14
  dd:	c3                   	ret    

Disassembly of section .text._ZN15RDMDeviceParams4SaveEPcjRj:

0000000000000000 <RDMDeviceParams::Save(char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   8:	49 89 c8             	mov    %rcx,%r8
   b:	75 07                	jne    14 <RDMDeviceParams::Save(char*, unsigned int, unsigned int&)+0x14>
   d:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
  13:	c3                   	ret    
  14:	89 d1                	mov    %edx,%ecx
  16:	48 89 f2             	mov    %rsi,%rdx
  19:	31 f6                	xor    %esi,%esi
  1b:	e9 00 00 00 00       	jmp    20 <RDMDeviceParams::Save(char*, unsigned int, unsigned int&)+0x20>

Disassembly of section .text._ZSt3minIhERKT_S2_S2_:

0000000000000000 <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8a 17                	mov    (%rdi),%dl
   6:	48 89 f8             	mov    %rdi,%rax
   9:	38 16                	cmp    %dl,(%rsi)
   b:	73 03                	jae    10 <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)+0x10>
   d:	48 89 f0             	mov    %rsi,%rax
  10:	c3                   	ret    

rdmdeviceresponder.o:     file format elf64-x86-64


Disassembly of section .text._ZN9RDMDevice4InitEv:

0000000000000000 <RDMDevice::Init()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	c6 00 01             	movb   $0x1,(%rax)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <RDMDevice::Init()+0x23>
  23:	90                   	nop
  24:	c9                   	leave  
  25:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice18SetFactoryDefaultsEv:

0000000000000000 <RDMDevice::SetFactoryDefaults()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	48 83 c0 52          	add    $0x52,%rax
  27:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2f:	0f b6 40 72          	movzbl 0x72(%rax),%eax
  33:	88 45 e8             	mov    %al,-0x18(%rbp)
  36:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  3e:	48 89 d6             	mov    %rdx,%rsi
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <RDMDevice::SetFactoryDefaults()+0x49>
  49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	e8 00 00 00 00       	call   55 <RDMDevice::SetFactoryDefaults()+0x55>
  55:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  59:	66 89 42 74          	mov    %ax,0x74(%rdx)
  5d:	90                   	nop
  5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  62:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  69:	00 00 
  6b:	74 05                	je     72 <RDMDevice::SetFactoryDefaults()+0x72>
  6d:	e8 00 00 00 00       	call   72 <RDMDevice::SetFactoryDefaults()+0x72>
  72:	c9                   	leave  
  73:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice8SetLabelEPK18TRDMDeviceInfoData:

0000000000000000 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  27:	48 8d 50 08          	lea    0x8(%rax),%rdx
  2b:	c6 45 f6 20          	movb   $0x20,-0xa(%rbp)
  2f:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  33:	48 89 d6             	mov    %rdx,%rsi
  36:	48 89 c7             	mov    %rax,%rdi
  39:	e8 00 00 00 00       	call   3e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3e>
  3e:	0f b6 00             	movzbl (%rax),%eax
  41:	88 45 f7             	mov    %al,-0x9(%rbp)
  44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  48:	0f b6 00             	movzbl (%rax),%eax
  4b:	84 c0                	test   %al,%al
  4d:	74 6a                	je     b9 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xb9>
  4f:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  57:	48 8b 00             	mov    (%rax),%rax
  5a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  5e:	48 83 c1 0b          	add    $0xb,%rcx
  62:	48 89 c6             	mov    %rax,%rsi
  65:	48 89 cf             	mov    %rcx,%rdi
  68:	e8 00 00 00 00       	call   6d <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x6d>
  6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  71:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  75:	88 50 2b             	mov    %dl,0x2b(%rax)
  78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7c:	48 8b 40 78          	mov    0x78(%rax),%rax
  80:	48 85 c0             	test   %rax,%rax
  83:	74 5d                	je     e2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xe2>
  85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  89:	48 8b 40 78          	mov    0x78(%rax),%rax
  8d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  91:	48 8b 52 78          	mov    0x78(%rdx),%rdx
  95:	48 8b 12             	mov    (%rdx),%rdx
  98:	48 83 c2 10          	add    $0x10,%rdx
  9c:	48 8b 0a             	mov    (%rdx),%rcx
  9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  a3:	0f b6 52 2b          	movzbl 0x2b(%rdx),%edx
  a7:	0f b6 d2             	movzbl %dl,%edx
  aa:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  ae:	48 83 c6 0b          	add    $0xb,%rsi
  b2:	48 89 c7             	mov    %rax,%rdi
  b5:	ff d1                	call   *%rcx
  b7:	eb 29                	jmp    e2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xe2>
  b9:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  c1:	48 8b 00             	mov    (%rax),%rax
  c4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  c8:	48 83 c1 52          	add    $0x52,%rcx
  cc:	48 89 c6             	mov    %rax,%rsi
  cf:	48 89 cf             	mov    %rcx,%rdi
  d2:	e8 00 00 00 00       	call   d7 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xd7>
  d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  db:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  df:	88 50 72             	mov    %dl,0x72(%rax)
  e2:	90                   	nop
  e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  ee:	00 00 
  f0:	74 05                	je     f7 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xf7>
  f2:	e8 00 00 00 00       	call   f7 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xf7>
  f7:	c9                   	leave  
  f8:	c3                   	ret    

Disassembly of section .text._ZNK9RDMDevice18GetProductCategoryEv:

0000000000000000 <RDMDevice::GetProductCategory() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b7 40 4e          	movzwl 0x4e(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice17CalculateChecksumEv:

0000000000000000 <RDMDevice::CalculateChecksum()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	0f b6 40 72          	movzbl 0x72(%rax),%eax
  14:	0f b6 c0             	movzbl %al,%eax
  17:	66 89 45 fa          	mov    %ax,-0x6(%rbp)
  1b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  22:	eb 16                	jmp    3a <RDMDevice::CalculateChecksum()+0x3a>
  24:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  28:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2b:	0f b6 44 02 0b       	movzbl 0xb(%rdx,%rax,1),%eax
  30:	66 98                	cbtw   
  32:	66 01 45 fa          	add    %ax,-0x6(%rbp)
  36:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
  42:	0f b6 c0             	movzbl %al,%eax
  45:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  48:	72 da                	jb     24 <RDMDevice::CalculateChecksum()+0x24>
  4a:	0f b7 45 fa          	movzwl -0x6(%rbp),%eax
  4e:	5d                   	pop    %rbp
  4f:	c3                   	ret    

Disassembly of section .text._ZN8Hardware10GetBoardIdEv:

0000000000000000 <Hardware::GetBoardId()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 80 4c 02 00 00    	mov    0x24c(%rax),%eax
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN11RDMIdentifyD2Ev:

0000000000000000 <RDMIdentify::~RDMIdentify()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZNK14RDMPersonality11GetLightSetEv:

0000000000000000 <RDMPersonality::GetLightSet() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 40 08          	mov    0x8(%rax),%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZNK14RDMPersonality14GetDescriptionEv:

0000000000000000 <RDMPersonality::GetDescription() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 10          	add    $0x10,%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZNK14RDMPersonality20GetDescriptionLengthEv:

0000000000000000 <RDMPersonality::GetDescriptionLength() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 30             	mov    0x30(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK10RDMSensors8GetCountEv:

0000000000000000 <RDMSensors::GetCount() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZNK13RDMSubDevices8GetCountEv:

0000000000000000 <RDMSubDevices::GetCount() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponderD2Ev:

0000000000000000 <RDMDeviceResponder::~RDMDeviceResponder()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <RDMDeviceResponder::~RDMDeviceResponder()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 05 a0 00 00 00    	add    $0xa0,%rax
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <RDMDeviceResponder::~RDMDeviceResponder()+0x30>
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	48 05 90 00 00 00    	add    $0x90,%rax
  3a:	48 89 c7             	mov    %rax,%rdi
  3d:	e8 00 00 00 00       	call   42 <RDMDeviceResponder::~RDMDeviceResponder()+0x42>
  42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  46:	48 05 88 00 00 00    	add    $0x88,%rax
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	call   54 <RDMDeviceResponder::~RDMDeviceResponder()+0x54>
  54:	90                   	nop
  55:	c9                   	leave  
  56:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponderD0Ev:

0000000000000000 <RDMDeviceResponder::~RDMDeviceResponder()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <RDMDeviceResponder::~RDMDeviceResponder()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder13GetDeviceInfoEt:

0000000000000000 <RDMDeviceResponder::GetDeviceInfo(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	66 83 7d e4 00       	cmpw   $0x0,-0x1c(%rbp)
  1b:	0f 84 c0 00 00 00    	je     e1 <RDMDeviceResponder::GetDeviceInfo(unsigned short)+0xe1>
  21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  25:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
  2c:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  30:	89 c6                	mov    %eax,%esi
  32:	48 89 d7             	mov    %rdx,%rdi
  35:	e8 00 00 00 00       	call   3a <RDMDeviceResponder::GetDeviceInfo(unsigned short)+0x3a>
  3a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  3e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  43:	0f 84 8c 00 00 00    	je     d5 <RDMDeviceResponder::GetDeviceInfo(unsigned short)+0xd5>
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	0f b7 00             	movzwl (%rax),%eax
  50:	66 c1 e8 08          	shr    $0x8,%ax
  54:	89 c2                	mov    %eax,%edx
  56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5a:	88 90 de 00 00 00    	mov    %dl,0xde(%rax)
  60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  64:	0f b7 00             	movzwl (%rax),%eax
  67:	89 c2                	mov    %eax,%edx
  69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6d:	88 90 df 00 00 00    	mov    %dl,0xdf(%rax)
  73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  77:	0f b6 50 04          	movzbl 0x4(%rax),%edx
  7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7f:	88 90 e0 00 00 00    	mov    %dl,0xe0(%rax)
  85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  89:	0f b6 50 05          	movzbl 0x5(%rax),%edx
  8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  91:	88 90 e1 00 00 00    	mov    %dl,0xe1(%rax)
  97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  9b:	0f b7 40 02          	movzwl 0x2(%rax),%eax
  9f:	66 c1 e8 08          	shr    $0x8,%ax
  a3:	89 c2                	mov    %eax,%edx
  a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a9:	88 90 e2 00 00 00    	mov    %dl,0xe2(%rax)
  af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b3:	0f b7 40 02          	movzwl 0x2(%rax),%eax
  b7:	89 c2                	mov    %eax,%edx
  b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  bd:	88 90 e3 00 00 00    	mov    %dl,0xe3(%rax)
  c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c7:	0f b6 50 27          	movzbl 0x27(%rax),%edx
  cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  cf:	88 90 e6 00 00 00    	mov    %dl,0xe6(%rax)
  d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d9:	48 05 d4 00 00 00    	add    $0xd4,%rax
  df:	eb 0a                	jmp    eb <RDMDeviceResponder::GetDeviceInfo(unsigned short)+0xeb>
  e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e5:	48 05 c1 00 00 00    	add    $0xc1,%rax
  eb:	c9                   	leave  
  ec:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder17CalculateChecksumEv:

0000000000000000 <RDMDeviceResponder::CalculateChecksum()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	0f b6 80 cf 00 00 00 	movzbl 0xcf(%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	c1 f8 08             	sar    $0x8,%eax
  1d:	89 c2                	mov    %eax,%edx
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	0f b6 80 d0 00 00 00 	movzbl 0xd0(%rax),%eax
  2a:	0f b6 c0             	movzbl %al,%eax
  2d:	01 d0                	add    %edx,%eax
  2f:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
  33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  37:	0f b6 80 cd 00 00 00 	movzbl 0xcd(%rax),%eax
  3e:	0f b6 c0             	movzbl %al,%eax
  41:	66 01 45 fe          	add    %ax,-0x2(%rbp)
  45:	0f b7 45 fe          	movzwl -0x2(%rbp),%eax
  49:	5d                   	pop    %rbp
  4a:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponderC2EPP14RDMPersonalityj:

0000000000000000 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 55 dc             	mov    %edx,-0x24(%rbp)
  17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1b:	48 83 c0 08          	add    $0x8,%rax
  1f:	48 89 c7             	mov    %rax,%rdi
  22:	e8 00 00 00 00       	call   27 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x27>
  27:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x2e>
  2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  32:	48 89 10             	mov    %rdx,(%rax)
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	48 05 88 00 00 00    	add    $0x88,%rax
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x47>
  47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4b:	48 05 90 00 00 00    	add    $0x90,%rax
  51:	48 89 c7             	mov    %rax,%rdi
  54:	e8 00 00 00 00       	call   59 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x59>
  59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5d:	48 05 a0 00 00 00    	add    $0xa0,%rax
  63:	48 89 c7             	mov    %rax,%rdi
  66:	e8 00 00 00 00       	call   6b <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x6b>
  6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  73:	48 89 90 b0 00 00 00 	mov    %rdx,0xb0(%rax)
  7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7e:	c6 80 e9 00 00 00 01 	movb   $0x1,0xe9(%rax)
  85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  89:	66 c7 80 ea 00 00 00 	movw   $0x0,0xea(%rax)
  90:	00 00 
  92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  96:	66 c7 80 ec 00 00 00 	movw   $0x1,0xec(%rax)
  9d:	01 00 
  9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a3:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # aa <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xaa>
  aa:	ba 65 00 00 00       	mov    $0x65,%edx
  af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b3:	88 90 e7 00 00 00    	mov    %dl,0xe7(%rax)
  b9:	ba 6e 00 00 00       	mov    $0x6e,%edx
  be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c2:	88 90 e8 00 00 00    	mov    %dl,0xe8(%rax)
  c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  cc:	48 05 c1 00 00 00    	add    $0xc1,%rax
  d2:	ba 13 00 00 00       	mov    $0x13,%edx
  d7:	be 00 00 00 00       	mov    $0x0,%esi
  dc:	48 89 c7             	mov    %rax,%rdi
  df:	e8 00 00 00 00       	call   e4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xe4>
  e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e8:	48 05 d4 00 00 00    	add    $0xd4,%rax
  ee:	ba 13 00 00 00       	mov    $0x13,%edx
  f3:	be 00 00 00 00       	mov    $0x0,%esi
  f8:	48 89 c7             	mov    %rax,%rdi
  fb:	e8 00 00 00 00       	call   100 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x100>
 100:	8b 45 dc             	mov    -0x24(%rbp),%eax
 103:	89 c2                	mov    %eax,%edx
 105:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 109:	88 90 ce 00 00 00    	mov    %dl,0xce(%rax)
 10f:	e8 00 00 00 00       	call   114 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x114>
 114:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 118:	48 89 82 b8 00 00 00 	mov    %rax,0xb8(%rdx)
 11f:	e8 00 00 00 00       	call   124 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x124>
 124:	89 c2                	mov    %eax,%edx
 126:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 12a:	88 90 c0 00 00 00    	mov    %dl,0xc0(%rax)
 130:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 134:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
 13b:	48 8b 00             	mov    (%rax),%rax
 13e:	48 89 c7             	mov    %rax,%rdi
 141:	e8 00 00 00 00       	call   146 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x146>
 146:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 14a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
 14f:	75 0d                	jne    15e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x15e>
 151:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 155:	66 c7 80 ec 00 00 00 	movw   $0xffff,0xec(%rax)
 15c:	ff ff 
 15e:	90                   	nop
 15f:	c9                   	leave  
 160:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder4InitEv:

0000000000000000 <RDMDeviceResponder::Init()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  14:	48 83 c0 08          	add    $0x8,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <RDMDeviceResponder::Init()+0x20>
  20:	e8 00 00 00 00       	call   25 <RDMDeviceResponder::Init()+0x25>
  25:	89 45 f0             	mov    %eax,-0x10(%rbp)
  28:	e8 00 00 00 00       	call   2d <RDMDeviceResponder::Init()+0x2d>
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <RDMDeviceResponder::Init()+0x35>
  35:	89 45 f4             	mov    %eax,-0xc(%rbp)
  38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  3c:	48 83 c0 08          	add    $0x8,%rax
  40:	48 89 c7             	mov    %rax,%rdi
  43:	e8 00 00 00 00       	call   48 <RDMDeviceResponder::Init()+0x48>
  48:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
  4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  50:	48 05 a0 00 00 00    	add    $0xa0,%rax
  56:	48 89 c7             	mov    %rax,%rdi
  59:	e8 00 00 00 00       	call   5e <RDMDeviceResponder::Init()+0x5e>
  5e:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
  62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  66:	c6 80 c1 00 00 00 01 	movb   $0x1,0xc1(%rax)
  6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  71:	c6 80 c2 00 00 00 00 	movb   $0x0,0xc2(%rax)
  78:	8b 45 f4             	mov    -0xc(%rbp),%eax
  7b:	c1 e8 08             	shr    $0x8,%eax
  7e:	89 c2                	mov    %eax,%edx
  80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  84:	88 90 c3 00 00 00    	mov    %dl,0xc3(%rax)
  8a:	8b 45 f4             	mov    -0xc(%rbp),%eax
  8d:	89 c2                	mov    %eax,%edx
  8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  93:	88 90 c4 00 00 00    	mov    %dl,0xc4(%rax)
  99:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
  9d:	66 c1 e8 08          	shr    $0x8,%ax
  a1:	89 c2                	mov    %eax,%edx
  a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a7:	88 90 c5 00 00 00    	mov    %dl,0xc5(%rax)
  ad:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
  b1:	89 c2                	mov    %eax,%edx
  b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b7:	88 90 c6 00 00 00    	mov    %dl,0xc6(%rax)
  bd:	8b 45 f0             	mov    -0x10(%rbp),%eax
  c0:	c1 e8 18             	shr    $0x18,%eax
  c3:	89 c2                	mov    %eax,%edx
  c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c9:	88 90 c7 00 00 00    	mov    %dl,0xc7(%rax)
  cf:	8b 45 f0             	mov    -0x10(%rbp),%eax
  d2:	c1 e8 10             	shr    $0x10,%eax
  d5:	89 c2                	mov    %eax,%edx
  d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  db:	88 90 c8 00 00 00    	mov    %dl,0xc8(%rax)
  e1:	8b 45 f0             	mov    -0x10(%rbp),%eax
  e4:	c1 e8 08             	shr    $0x8,%eax
  e7:	89 c2                	mov    %eax,%edx
  e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ed:	88 90 c9 00 00 00    	mov    %dl,0xc9(%rax)
  f3:	8b 45 f0             	mov    -0x10(%rbp),%eax
  f6:	89 c2                	mov    %eax,%edx
  f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  fc:	88 90 ca 00 00 00    	mov    %dl,0xca(%rax)
 102:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 106:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
 10d:	48 8b 00             	mov    (%rax),%rax
 110:	48 89 c7             	mov    %rax,%rdi
 113:	e8 00 00 00 00       	call   118 <RDMDeviceResponder::Init()+0x118>
 118:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 11c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
 121:	75 4d                	jne    170 <RDMDeviceResponder::Init()+0x170>
 123:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 127:	c6 80 cb 00 00 00 00 	movb   $0x0,0xcb(%rax)
 12e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 132:	c6 80 cc 00 00 00 00 	movb   $0x0,0xcc(%rax)
 139:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 13d:	0f b7 80 ec 00 00 00 	movzwl 0xec(%rax),%eax
 144:	66 c1 e8 08          	shr    $0x8,%ax
 148:	89 c2                	mov    %eax,%edx
 14a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 14e:	88 90 cf 00 00 00    	mov    %dl,0xcf(%rax)
 154:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 158:	0f b7 80 ec 00 00 00 	movzwl 0xec(%rax),%eax
 15f:	89 c2                	mov    %eax,%edx
 161:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 165:	88 90 d0 00 00 00    	mov    %dl,0xd0(%rax)
 16b:	e9 94 00 00 00       	jmp    204 <RDMDeviceResponder::Init()+0x204>
 170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 174:	48 8b 00             	mov    (%rax),%rax
 177:	48 83 c0 50          	add    $0x50,%rax
 17b:	48 8b 10             	mov    (%rax),%rdx
 17e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 182:	48 89 c7             	mov    %rax,%rdi
 185:	ff d2                	call   *%rdx
 187:	66 c1 e8 08          	shr    $0x8,%ax
 18b:	89 c2                	mov    %eax,%edx
 18d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 191:	88 90 cb 00 00 00    	mov    %dl,0xcb(%rax)
 197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 19b:	48 8b 00             	mov    (%rax),%rax
 19e:	48 83 c0 50          	add    $0x50,%rax
 1a2:	48 8b 10             	mov    (%rax),%rdx
 1a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1a9:	48 89 c7             	mov    %rax,%rdi
 1ac:	ff d2                	call   *%rdx
 1ae:	89 c2                	mov    %eax,%edx
 1b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1b4:	88 90 cc 00 00 00    	mov    %dl,0xcc(%rax)
 1ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1be:	48 8b 00             	mov    (%rax),%rax
 1c1:	48 83 c0 48          	add    $0x48,%rax
 1c5:	48 8b 10             	mov    (%rax),%rdx
 1c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1cc:	48 89 c7             	mov    %rax,%rdi
 1cf:	ff d2                	call   *%rdx
 1d1:	66 c1 e8 08          	shr    $0x8,%ax
 1d5:	89 c2                	mov    %eax,%edx
 1d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1db:	88 90 cf 00 00 00    	mov    %dl,0xcf(%rax)
 1e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1e5:	48 8b 00             	mov    (%rax),%rax
 1e8:	48 83 c0 48          	add    $0x48,%rax
 1ec:	48 8b 10             	mov    (%rax),%rdx
 1ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1f3:	48 89 c7             	mov    %rax,%rdi
 1f6:	ff d2                	call   *%rdx
 1f8:	89 c2                	mov    %eax,%edx
 1fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1fe:	88 90 d0 00 00 00    	mov    %dl,0xd0(%rax)
 204:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 208:	c6 80 cd 00 00 00 01 	movb   $0x1,0xcd(%rax)
 20f:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
 213:	66 c1 e8 08          	shr    $0x8,%ax
 217:	89 c2                	mov    %eax,%edx
 219:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 21d:	88 90 d1 00 00 00    	mov    %dl,0xd1(%rax)
 223:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
 227:	89 c2                	mov    %eax,%edx
 229:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 22d:	88 90 d2 00 00 00    	mov    %dl,0xd2(%rax)
 233:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 237:	48 05 90 00 00 00    	add    $0x90,%rax
 23d:	48 89 c7             	mov    %rax,%rdi
 240:	e8 00 00 00 00       	call   245 <RDMDeviceResponder::Init()+0x245>
 245:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 249:	88 82 d3 00 00 00    	mov    %al,0xd3(%rdx)
 24f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 253:	48 8d 88 c1 00 00 00 	lea    0xc1(%rax),%rcx
 25a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 25e:	48 05 d4 00 00 00    	add    $0xd4,%rax
 264:	ba 13 00 00 00       	mov    $0x13,%edx
 269:	48 89 ce             	mov    %rcx,%rsi
 26c:	48 89 c7             	mov    %rax,%rdi
 26f:	e8 00 00 00 00       	call   274 <RDMDeviceResponder::Init()+0x274>
 274:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 278:	48 89 c7             	mov    %rax,%rdi
 27b:	e8 00 00 00 00       	call   280 <RDMDeviceResponder::Init()+0x280>
 280:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 284:	66 89 82 ea 00 00 00 	mov    %ax,0xea(%rdx)
 28b:	90                   	nop
 28c:	c9                   	leave  
 28d:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder5PrintEv:

0000000000000000 <RDMDeviceResponder::Print()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  14:	48 83 c0 08          	add    $0x8,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <RDMDeviceResponder::Print()+0x20>
  20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  24:	be 00 00 00 00       	mov    $0x0,%esi
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	call   31 <RDMDeviceResponder::Print()+0x31>
  31:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
  40:	48 8b 00             	mov    (%rax),%rax
  43:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	call   53 <RDMDeviceResponder::Print()+0x53>
  53:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5b:	48 89 c7             	mov    %rax,%rdi
  5e:	e8 00 00 00 00       	call   63 <RDMDeviceResponder::Print()+0x63>
  63:	88 45 e7             	mov    %al,-0x19(%rbp)
  66:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6d <RDMDeviceResponder::Print()+0x6d>
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	call   75 <RDMDeviceResponder::Print()+0x75>
  75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  79:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  7d:	0f b6 d0             	movzbl %al,%edx
  80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  84:	0f b6 00             	movzbl (%rax),%eax
  87:	0f b6 c0             	movzbl %al,%eax
  8a:	89 c6                	mov    %eax,%esi
  8c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 93 <RDMDeviceResponder::Print()+0x93>
  93:	48 89 c7             	mov    %rax,%rdi
  96:	b8 00 00 00 00       	mov    $0x0,%eax
  9b:	e8 00 00 00 00       	call   a0 <RDMDeviceResponder::Print()+0xa0>
  a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a4:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
  a8:	0f b6 c0             	movzbl %al,%eax
  ab:	c1 e0 08             	shl    $0x8,%eax
  ae:	89 c2                	mov    %eax,%edx
  b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b4:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
  b8:	0f b6 c0             	movzbl %al,%eax
  bb:	01 d0                	add    %edx,%eax
  bd:	89 c6                	mov    %eax,%esi
  bf:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # c6 <RDMDeviceResponder::Print()+0xc6>
  c6:	48 89 c7             	mov    %rax,%rdi
  c9:	b8 00 00 00 00       	mov    $0x0,%eax
  ce:	e8 00 00 00 00       	call   d3 <RDMDeviceResponder::Print()+0xd3>
  d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d7:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  db:	0f b6 c0             	movzbl %al,%eax
  de:	c1 e0 08             	shl    $0x8,%eax
  e1:	89 c2                	mov    %eax,%edx
  e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e7:	0f b6 40 0b          	movzbl 0xb(%rax),%eax
  eb:	0f b6 c0             	movzbl %al,%eax
  ee:	01 d0                	add    %edx,%eax
  f0:	89 c6                	mov    %eax,%esi
  f2:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # f9 <RDMDeviceResponder::Print()+0xf9>
  f9:	48 89 c7             	mov    %rax,%rdi
  fc:	b8 00 00 00 00       	mov    $0x0,%eax
 101:	e8 00 00 00 00       	call   106 <RDMDeviceResponder::Print()+0x106>
 106:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
 10a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 10e:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
 112:	0f b6 d0             	movzbl %al,%edx
 115:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 119:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
 11d:	0f b6 c0             	movzbl %al,%eax
 120:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
 124:	49 89 f0             	mov    %rsi,%r8
 127:	89 c6                	mov    %eax,%esi
 129:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 130 <RDMDeviceResponder::Print()+0x130>
 130:	48 89 c7             	mov    %rax,%rdi
 133:	b8 00 00 00 00       	mov    $0x0,%eax
 138:	e8 00 00 00 00       	call   13d <RDMDeviceResponder::Print()+0x13d>
 13d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 141:	0f b6 40 10          	movzbl 0x10(%rax),%eax
 145:	0f b6 c0             	movzbl %al,%eax
 148:	c1 e0 08             	shl    $0x8,%eax
 14b:	89 c2                	mov    %eax,%edx
 14d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 151:	0f b6 40 11          	movzbl 0x11(%rax),%eax
 155:	0f b6 c0             	movzbl %al,%eax
 158:	01 d0                	add    %edx,%eax
 15a:	89 c6                	mov    %eax,%esi
 15c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 163 <RDMDeviceResponder::Print()+0x163>
 163:	48 89 c7             	mov    %rax,%rdi
 166:	b8 00 00 00 00       	mov    $0x0,%eax
 16b:	e8 00 00 00 00       	call   170 <RDMDeviceResponder::Print()+0x170>
 170:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 174:	0f b6 40 12          	movzbl 0x12(%rax),%eax
 178:	0f b6 c0             	movzbl %al,%eax
 17b:	89 c6                	mov    %eax,%esi
 17d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 184 <RDMDeviceResponder::Print()+0x184>
 184:	48 89 c7             	mov    %rax,%rdi
 187:	b8 00 00 00 00       	mov    $0x0,%eax
 18c:	e8 00 00 00 00       	call   191 <RDMDeviceResponder::Print()+0x191>
 191:	90                   	nop
 192:	c9                   	leave  
 193:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder17PersonalityUpdateEP8LightSet:

0000000000000000 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	90                   	nop
  11:	5d                   	pop    %rbp
  12:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder21DmxStartAddressUpdateEv:

0000000000000000 <RDMDeviceResponder::DmxStartAddressUpdate()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZSt3minIhERKT_S2_S2_:

0000000000000000 <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	0f b6 10             	movzbl (%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	0f b6 00             	movzbl (%rax),%eax
  1e:	38 c2                	cmp    %al,%dl
  20:	73 06                	jae    28 <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)+0x28>
  22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  26:	eb 04                	jmp    2c <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)+0x2c>
  28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2c:	5d                   	pop    %rbp
  2d:	c3                   	ret    

rdmhandler.o:     file format elf64-x86-64


Disassembly of section .text._ZN9RDMDevice18SetFactoryDefaultsEv:

0000000000000000 <RDMDevice::SetFactoryDefaults()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	48 83 c0 52          	add    $0x52,%rax
  27:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2f:	0f b6 40 72          	movzbl 0x72(%rax),%eax
  33:	88 45 e8             	mov    %al,-0x18(%rbp)
  36:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  3e:	48 89 d6             	mov    %rdx,%rsi
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <RDMDevice::SetFactoryDefaults()+0x49>
  49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	e8 00 00 00 00       	call   55 <RDMDevice::SetFactoryDefaults()+0x55>
  55:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  59:	66 89 42 74          	mov    %ax,0x74(%rdx)
  5d:	90                   	nop
  5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  62:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  69:	00 00 
  6b:	74 05                	je     72 <RDMDevice::SetFactoryDefaults()+0x72>
  6d:	e8 00 00 00 00       	call   72 <RDMDevice::SetFactoryDefaults()+0x72>
  72:	c9                   	leave  
  73:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice18GetFactoryDefaultsEv:

0000000000000000 <RDMDevice::GetFactoryDefaults()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  15:	0f b7 58 74          	movzwl 0x74(%rax),%ebx
  19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1d:	48 89 c7             	mov    %rax,%rdi
  20:	e8 00 00 00 00       	call   25 <RDMDevice::GetFactoryDefaults()+0x25>
  25:	66 39 c3             	cmp    %ax,%bx
  28:	0f 94 c0             	sete   %al
  2b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  2f:	c9                   	leave  
  30:	c3                   	ret    

Disassembly of section .text._ZNK9RDMDevice6GetUIDEv:

0000000000000000 <RDMDevice::GetUID() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 01          	add    $0x1,%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice19GetManufacturerNameEP18TRDMDeviceInfoData:

0000000000000000 <RDMDevice::GetManufacturerName(TRDMDeviceInfoData*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8d 50 2c          	lea    0x2c(%rax),%rdx
  18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  1c:	48 89 10             	mov    %rdx,(%rax)
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	0f b6 50 4c          	movzbl 0x4c(%rax),%edx
  27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2b:	88 50 08             	mov    %dl,0x8(%rax)
  2e:	90                   	nop
  2f:	5d                   	pop    %rbp
  30:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice8SetLabelEPK18TRDMDeviceInfoData:

0000000000000000 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  27:	48 8d 50 08          	lea    0x8(%rax),%rdx
  2b:	c6 45 f6 20          	movb   $0x20,-0xa(%rbp)
  2f:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  33:	48 89 d6             	mov    %rdx,%rsi
  36:	48 89 c7             	mov    %rax,%rdi
  39:	e8 00 00 00 00       	call   3e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3e>
  3e:	0f b6 00             	movzbl (%rax),%eax
  41:	88 45 f7             	mov    %al,-0x9(%rbp)
  44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  48:	0f b6 00             	movzbl (%rax),%eax
  4b:	84 c0                	test   %al,%al
  4d:	74 6a                	je     b9 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xb9>
  4f:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  57:	48 8b 00             	mov    (%rax),%rax
  5a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  5e:	48 83 c1 0b          	add    $0xb,%rcx
  62:	48 89 c6             	mov    %rax,%rsi
  65:	48 89 cf             	mov    %rcx,%rdi
  68:	e8 00 00 00 00       	call   6d <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x6d>
  6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  71:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  75:	88 50 2b             	mov    %dl,0x2b(%rax)
  78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7c:	48 8b 40 78          	mov    0x78(%rax),%rax
  80:	48 85 c0             	test   %rax,%rax
  83:	74 5d                	je     e2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xe2>
  85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  89:	48 8b 40 78          	mov    0x78(%rax),%rax
  8d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  91:	48 8b 52 78          	mov    0x78(%rdx),%rdx
  95:	48 8b 12             	mov    (%rdx),%rdx
  98:	48 83 c2 10          	add    $0x10,%rdx
  9c:	48 8b 0a             	mov    (%rdx),%rcx
  9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  a3:	0f b6 52 2b          	movzbl 0x2b(%rdx),%edx
  a7:	0f b6 d2             	movzbl %dl,%edx
  aa:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  ae:	48 83 c6 0b          	add    $0xb,%rsi
  b2:	48 89 c7             	mov    %rax,%rdi
  b5:	ff d1                	call   *%rcx
  b7:	eb 29                	jmp    e2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xe2>
  b9:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  c1:	48 8b 00             	mov    (%rax),%rax
  c4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  c8:	48 83 c1 52          	add    $0x52,%rcx
  cc:	48 89 c6             	mov    %rax,%rsi
  cf:	48 89 cf             	mov    %rcx,%rdi
  d2:	e8 00 00 00 00       	call   d7 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xd7>
  d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  db:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  df:	88 50 72             	mov    %dl,0x72(%rax)
  e2:	90                   	nop
  e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  ee:	00 00 
  f0:	74 05                	je     f7 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xf7>
  f2:	e8 00 00 00 00       	call   f7 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0xf7>
  f7:	c9                   	leave  
  f8:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice8GetLabelEP18TRDMDeviceInfoData:

0000000000000000 <RDMDevice::GetLabel(TRDMDeviceInfoData*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8d 50 0b          	lea    0xb(%rax),%rdx
  18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  1c:	48 89 10             	mov    %rdx,(%rax)
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	0f b6 50 2b          	movzbl 0x2b(%rax),%edx
  27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2b:	88 50 08             	mov    %dl,0x8(%rax)
  2e:	90                   	nop
  2f:	5d                   	pop    %rbp
  30:	c3                   	ret    

Disassembly of section .text._ZNK9RDMDevice16GetProductDetailEv:

0000000000000000 <RDMDevice::GetProductDetail() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b7 40 50          	movzwl 0x50(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN9RDMDevice17CalculateChecksumEv:

0000000000000000 <RDMDevice::CalculateChecksum()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	0f b6 40 72          	movzbl 0x72(%rax),%eax
  14:	0f b6 c0             	movzbl %al,%eax
  17:	66 89 45 fa          	mov    %ax,-0x6(%rbp)
  1b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  22:	eb 16                	jmp    3a <RDMDevice::CalculateChecksum()+0x3a>
  24:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  28:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2b:	0f b6 44 02 0b       	movzbl 0xb(%rdx,%rax,1),%eax
  30:	66 98                	cbtw   
  32:	66 01 45 fa          	add    %ax,-0x6(%rbp)
  36:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	0f b6 40 2b          	movzbl 0x2b(%rax),%eax
  42:	0f b6 c0             	movzbl %al,%eax
  45:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  48:	72 da                	jb     24 <RDMDevice::CalculateChecksum()+0x24>
  4a:	0f b7 45 fa          	movzwl -0x6(%rbp),%eax
  4e:	5d                   	pop    %rbp
  4f:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN11RDMIdentify2OnEv:

0000000000000000 <RDMIdentify::On()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	c6 05 00 00 00 00 01 	movb   $0x1,0x0(%rip)        # 17 <RDMIdentify::On()+0x17>
  17:	e8 00 00 00 00       	call   1c <RDMIdentify::On()+0x1c>
  1c:	ba 01 00 00 00       	mov    $0x1,%edx
  21:	be 04 00 00 00       	mov    $0x4,%esi
  26:	48 89 c7             	mov    %rax,%rdi
  29:	e8 00 00 00 00       	call   2e <RDMIdentify::On()+0x2e>
  2e:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 35 <RDMIdentify::On()+0x35>
  35:	84 c0                	test   %al,%al
  37:	74 15                	je     4e <RDMIdentify::On()+0x4e>
  39:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 40 <RDMIdentify::On()+0x40>
  40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44:	89 d6                	mov    %edx,%esi
  46:	48 89 c7             	mov    %rax,%rdi
  49:	e8 00 00 00 00       	call   4e <RDMIdentify::On()+0x4e>
  4e:	90                   	nop
  4f:	c9                   	leave  
  50:	c3                   	ret    

Disassembly of section .text._ZN11RDMIdentify3OffEv:

0000000000000000 <RDMIdentify::Off()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 17 <RDMIdentify::Off()+0x17>
  17:	e8 00 00 00 00       	call   1c <RDMIdentify::Off()+0x1c>
  1c:	ba 00 00 00 00       	mov    $0x0,%edx
  21:	be 02 00 00 00       	mov    $0x2,%esi
  26:	48 89 c7             	mov    %rax,%rdi
  29:	e8 00 00 00 00       	call   2e <RDMIdentify::Off()+0x2e>
  2e:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 35 <RDMIdentify::Off()+0x35>
  35:	84 c0                	test   %al,%al
  37:	74 15                	je     4e <RDMIdentify::Off()+0x4e>
  39:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 40 <RDMIdentify::Off()+0x40>
  40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44:	89 d6                	mov    %edx,%esi
  46:	48 89 c7             	mov    %rax,%rdi
  49:	e8 00 00 00 00       	call   4e <RDMIdentify::Off()+0x4e>
  4e:	90                   	nop
  4f:	c9                   	leave  
  50:	c3                   	ret    

Disassembly of section .text._ZNK11RDMIdentify9IsEnabledEv:

0000000000000000 <RDMIdentify::IsEnabled() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 13 <RDMIdentify::IsEnabled() const+0x13>
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN11RDMIdentify3GetEv:

0000000000000000 <RDMIdentify::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <RDMIdentify::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZNK14RDMPersonality8GetSlotsEv:

0000000000000000 <RDMPersonality::GetSlots() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b7 00             	movzwl (%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK14RDMPersonality11GetLightSetEv:

0000000000000000 <RDMPersonality::GetLightSet() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 40 08          	mov    0x8(%rax),%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN14RDMPersonality17DescriptionCopyToEPcRh:

0000000000000000 <RDMPersonality::DescriptionCopyTo(char*, unsigned char&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  10:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  18:	48 83 c0 10          	add    $0x10,%rax
  1c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  28:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
  2c:	eb 21                	jmp    4f <RDMPersonality::DescriptionCopyTo(char*, unsigned char&)+0x4f>
  2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  32:	0f b6 10             	movzbl (%rax),%edx
  35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  39:	88 10                	mov    %dl,(%rax)
  3b:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  40:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  45:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
  49:	83 c0 01             	add    $0x1,%eax
  4c:	88 45 ef             	mov    %al,-0x11(%rbp)
  4f:	0f b6 55 ef          	movzbl -0x11(%rbp),%edx
  53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  57:	8b 40 30             	mov    0x30(%rax),%eax
  5a:	39 c2                	cmp    %eax,%edx
  5c:	73 0c                	jae    6a <RDMPersonality::DescriptionCopyTo(char*, unsigned char&)+0x6a>
  5e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  62:	0f b6 00             	movzbl (%rax),%eax
  65:	38 45 ef             	cmp    %al,-0x11(%rbp)
  68:	72 c4                	jb     2e <RDMPersonality::DescriptionCopyTo(char*, unsigned char&)+0x2e>
  6a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  6e:	0f b6 55 ef          	movzbl -0x11(%rbp),%edx
  72:	88 10                	mov    %dl,(%rax)
  74:	90                   	nop
  75:	5d                   	pop    %rbp
  76:	c3                   	ret    

Disassembly of section .text._ZNK10RDMSensors8GetCountEv:

0000000000000000 <RDMSensors::GetCount() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN10RDMSensors3GetEv:

0000000000000000 <RDMSensors::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <RDMSensors::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZNK13RDMSubDevices8GetCountEv:

0000000000000000 <RDMSubDevices::GetCount() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN13RDMSubDevices3GetEv:

0000000000000000 <RDMSubDevices::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <RDMSubDevices::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder13GetDeviceInfoEt:

0000000000000000 <RDMDeviceResponder::GetDeviceInfo(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	66 83 7d e4 00       	cmpw   $0x0,-0x1c(%rbp)
  1b:	0f 84 c0 00 00 00    	je     e1 <RDMDeviceResponder::GetDeviceInfo(unsigned short)+0xe1>
  21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  25:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
  2c:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  30:	89 c6                	mov    %eax,%esi
  32:	48 89 d7             	mov    %rdx,%rdi
  35:	e8 00 00 00 00       	call   3a <RDMDeviceResponder::GetDeviceInfo(unsigned short)+0x3a>
  3a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  3e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  43:	0f 84 8c 00 00 00    	je     d5 <RDMDeviceResponder::GetDeviceInfo(unsigned short)+0xd5>
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	0f b7 00             	movzwl (%rax),%eax
  50:	66 c1 e8 08          	shr    $0x8,%ax
  54:	89 c2                	mov    %eax,%edx
  56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5a:	88 90 de 00 00 00    	mov    %dl,0xde(%rax)
  60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  64:	0f b7 00             	movzwl (%rax),%eax
  67:	89 c2                	mov    %eax,%edx
  69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6d:	88 90 df 00 00 00    	mov    %dl,0xdf(%rax)
  73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  77:	0f b6 50 04          	movzbl 0x4(%rax),%edx
  7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7f:	88 90 e0 00 00 00    	mov    %dl,0xe0(%rax)
  85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  89:	0f b6 50 05          	movzbl 0x5(%rax),%edx
  8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  91:	88 90 e1 00 00 00    	mov    %dl,0xe1(%rax)
  97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  9b:	0f b7 40 02          	movzwl 0x2(%rax),%eax
  9f:	66 c1 e8 08          	shr    $0x8,%ax
  a3:	89 c2                	mov    %eax,%edx
  a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a9:	88 90 e2 00 00 00    	mov    %dl,0xe2(%rax)
  af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b3:	0f b7 40 02          	movzwl 0x2(%rax),%eax
  b7:	89 c2                	mov    %eax,%edx
  b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  bd:	88 90 e3 00 00 00    	mov    %dl,0xe3(%rax)
  c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c7:	0f b6 50 27          	movzbl 0x27(%rax),%edx
  cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  cf:	88 90 e6 00 00 00    	mov    %dl,0xe6(%rax)
  d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d9:	48 05 d4 00 00 00    	add    $0xd4,%rax
  df:	eb 0a                	jmp    eb <RDMDeviceResponder::GetDeviceInfo(unsigned short)+0xeb>
  e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e5:	48 05 c1 00 00 00    	add    $0xc1,%rax
  eb:	c9                   	leave  
  ec:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder8SetLabelEtPKch:

0000000000000000 <RDMDeviceResponder::SetLabel(unsigned short, char const*, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  16:	89 ca                	mov    %ecx,%edx
  18:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  1c:	89 d0                	mov    %edx,%eax
  1e:	88 45 d0             	mov    %al,-0x30(%rbp)
  21:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  28:	00 00 
  2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2e:	31 c0                	xor    %eax,%eax
  30:	80 7d d0 20          	cmpb   $0x20,-0x30(%rbp)
  34:	76 04                	jbe    3a <RDMDeviceResponder::SetLabel(unsigned short, char const*, unsigned char)+0x3a>
  36:	c6 45 d0 20          	movb   $0x20,-0x30(%rbp)
  3a:	66 83 7d d4 00       	cmpw   $0x0,-0x2c(%rbp)
  3f:	74 20                	je     61 <RDMDeviceResponder::SetLabel(unsigned short, char const*, unsigned char)+0x61>
  41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  45:	48 8d b8 a0 00 00 00 	lea    0xa0(%rax),%rdi
  4c:	0f b6 4d d0          	movzbl -0x30(%rbp),%ecx
  50:	0f b7 45 d4          	movzwl -0x2c(%rbp),%eax
  54:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  58:	89 c6                	mov    %eax,%esi
  5a:	e8 00 00 00 00       	call   5f <RDMDeviceResponder::SetLabel(unsigned short, char const*, unsigned char)+0x5f>
  5f:	eb 26                	jmp    87 <RDMDeviceResponder::SetLabel(unsigned short, char const*, unsigned char)+0x87>
  61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  65:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  69:	0f b6 45 d0          	movzbl -0x30(%rbp),%eax
  6d:	88 45 e8             	mov    %al,-0x18(%rbp)
  70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  74:	48 8d 50 08          	lea    0x8(%rax),%rdx
  78:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  7c:	48 89 c6             	mov    %rax,%rsi
  7f:	48 89 d7             	mov    %rdx,%rdi
  82:	e8 00 00 00 00       	call   87 <RDMDeviceResponder::SetLabel(unsigned short, char const*, unsigned char)+0x87>
  87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  92:	00 00 
  94:	74 05                	je     9b <RDMDeviceResponder::SetLabel(unsigned short, char const*, unsigned char)+0x9b>
  96:	e8 00 00 00 00       	call   9b <RDMDeviceResponder::SetLabel(unsigned short, char const*, unsigned char)+0x9b>
  9b:	c9                   	leave  
  9c:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder8GetLabelEtP18TRDMDeviceInfoData:

0000000000000000 <RDMDeviceResponder::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  16:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  1a:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%rbp)
  1f:	74 1f                	je     40 <RDMDeviceResponder::GetLabel(unsigned short, TRDMDeviceInfoData*)+0x40>
  21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  25:	48 8d 88 a0 00 00 00 	lea    0xa0(%rax),%rcx
  2c:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  30:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  34:	89 c6                	mov    %eax,%esi
  36:	48 89 cf             	mov    %rcx,%rdi
  39:	e8 00 00 00 00       	call   3e <RDMDeviceResponder::GetLabel(unsigned short, TRDMDeviceInfoData*)+0x3e>
  3e:	eb 17                	jmp    57 <RDMDeviceResponder::GetLabel(unsigned short, TRDMDeviceInfoData*)+0x57>
  40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44:	48 8d 50 08          	lea    0x8(%rax),%rdx
  48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4c:	48 89 c6             	mov    %rax,%rsi
  4f:	48 89 d7             	mov    %rdx,%rdi
  52:	e8 00 00 00 00       	call   57 <RDMDeviceResponder::GetLabel(unsigned short, TRDMDeviceInfoData*)+0x57>
  57:	c9                   	leave  
  58:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder18SetFactoryDefaultsEv:

0000000000000000 <RDMDeviceResponder::SetFactoryDefaults()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 83 c0 08          	add    $0x8,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <RDMDeviceResponder::SetFactoryDefaults()+0x20>
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	ba 01 00 00 00       	mov    $0x1,%edx
  29:	be 00 00 00 00       	mov    $0x0,%esi
  2e:	48 89 c7             	mov    %rax,%rdi
  31:	e8 00 00 00 00       	call   36 <RDMDeviceResponder::SetFactoryDefaults()+0x36>
  36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3a:	0f b7 80 ec 00 00 00 	movzwl 0xec(%rax),%eax
  41:	0f b7 d0             	movzwl %ax,%edx
  44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  48:	be 00 00 00 00       	mov    $0x0,%esi
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	e8 00 00 00 00       	call   55 <RDMDeviceResponder::SetFactoryDefaults()+0x55>
  55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  59:	48 8d 88 c1 00 00 00 	lea    0xc1(%rax),%rcx
  60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  64:	48 05 d4 00 00 00    	add    $0xd4,%rax
  6a:	ba 13 00 00 00       	mov    $0x13,%edx
  6f:	48 89 ce             	mov    %rcx,%rsi
  72:	48 89 c7             	mov    %rax,%rdi
  75:	e8 00 00 00 00       	call   7a <RDMDeviceResponder::SetFactoryDefaults()+0x7a>
  7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7e:	48 05 a0 00 00 00    	add    $0xa0,%rax
  84:	48 89 c7             	mov    %rax,%rdi
  87:	e8 00 00 00 00       	call   8c <RDMDeviceResponder::SetFactoryDefaults()+0x8c>
  8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  90:	48 89 c7             	mov    %rax,%rdi
  93:	e8 00 00 00 00       	call   98 <RDMDeviceResponder::SetFactoryDefaults()+0x98>
  98:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  9c:	66 89 82 ea 00 00 00 	mov    %ax,0xea(%rdx)
  a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a7:	c6 80 e9 00 00 00 01 	movb   $0x1,0xe9(%rax)
  ae:	e8 00 00 00 00       	call   b3 <RDMDeviceResponder::SetFactoryDefaults()+0xb3>
  b3:	90                   	nop
  b4:	c9                   	leave  
  b5:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder18GetFactoryDefaultsEv:

0000000000000000 <RDMDeviceResponder::GetFactoryDefaults()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  15:	0f b6 80 e9 00 00 00 	movzbl 0xe9(%rax),%eax
  1c:	84 c0                	test   %al,%al
  1e:	0f 84 87 00 00 00    	je     ab <RDMDeviceResponder::GetFactoryDefaults()+0xab>
  24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  28:	48 83 c0 08          	add    $0x8,%rax
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	e8 00 00 00 00       	call   34 <RDMDeviceResponder::GetFactoryDefaults()+0x34>
  34:	83 f0 01             	xor    $0x1,%eax
  37:	84 c0                	test   %al,%al
  39:	74 12                	je     4d <RDMDeviceResponder::GetFactoryDefaults()+0x4d>
  3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3f:	c6 80 e9 00 00 00 00 	movb   $0x0,0xe9(%rax)
  46:	b8 00 00 00 00       	mov    $0x0,%eax
  4b:	eb 69                	jmp    b6 <RDMDeviceResponder::GetFactoryDefaults()+0xb6>
  4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  51:	0f b7 98 ea 00 00 00 	movzwl 0xea(%rax),%ebx
  58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	e8 00 00 00 00       	call   64 <RDMDeviceResponder::GetFactoryDefaults()+0x64>
  64:	66 39 c3             	cmp    %ax,%bx
  67:	0f 95 c0             	setne  %al
  6a:	84 c0                	test   %al,%al
  6c:	74 12                	je     80 <RDMDeviceResponder::GetFactoryDefaults()+0x80>
  6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  72:	c6 80 e9 00 00 00 00 	movb   $0x0,0xe9(%rax)
  79:	b8 00 00 00 00       	mov    $0x0,%eax
  7e:	eb 36                	jmp    b6 <RDMDeviceResponder::GetFactoryDefaults()+0xb6>
  80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  84:	48 05 a0 00 00 00    	add    $0xa0,%rax
  8a:	48 89 c7             	mov    %rax,%rdi
  8d:	e8 00 00 00 00       	call   92 <RDMDeviceResponder::GetFactoryDefaults()+0x92>
  92:	83 f0 01             	xor    $0x1,%eax
  95:	84 c0                	test   %al,%al
  97:	74 12                	je     ab <RDMDeviceResponder::GetFactoryDefaults()+0xab>
  99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  9d:	c6 80 e9 00 00 00 00 	movb   $0x0,0xe9(%rax)
  a4:	b8 00 00 00 00       	mov    $0x0,%eax
  a9:	eb 0b                	jmp    b6 <RDMDeviceResponder::GetFactoryDefaults()+0xb6>
  ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  af:	0f b6 80 e9 00 00 00 	movzbl 0xe9(%rax),%eax
  b6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  ba:	c9                   	leave  
  bb:	c3                   	ret    

Disassembly of section .text._ZNK18RDMDeviceResponder11GetLanguageEv:

0000000000000000 <RDMDeviceResponder::GetLanguage() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 05 e7 00 00 00    	add    $0xe7,%rax
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    

Disassembly of section .text._ZNK18RDMDeviceResponder18GetSoftwareVersionEv:

0000000000000000 <RDMDeviceResponder::GetSoftwareVersion() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 8b 80 b8 00 00 00 	mov    0xb8(%rax),%rax
  17:	5d                   	pop    %rbp
  18:	c3                   	ret    

Disassembly of section .text._ZNK18RDMDeviceResponder24GetSoftwareVersionLengthEv:

0000000000000000 <RDMDeviceResponder::GetSoftwareVersionLength() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 80 c0 00 00 00 	movzbl 0xc0(%rax),%eax
  17:	5d                   	pop    %rbp
  18:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder18SetDmxStartAddressEtt:

0000000000000000 <RDMDeviceResponder::SetDmxStartAddress(unsigned short, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	66 89 55 e4          	mov    %dx,-0x1c(%rbp)
  1a:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  1e:	66 83 7d e0 00       	cmpw   $0x0,-0x20(%rbp)
  23:	0f 84 d5 00 00 00    	je     fe <RDMDeviceResponder::SetDmxStartAddress(unsigned short, unsigned short)+0xfe>
  29:	66 81 7d e0 00 02    	cmpw   $0x200,-0x20(%rbp)
  2f:	0f 87 c9 00 00 00    	ja     fe <RDMDeviceResponder::SetDmxStartAddress(unsigned short, unsigned short)+0xfe>
  35:	66 83 7d e4 00       	cmpw   $0x0,-0x1c(%rbp)
  3a:	74 22                	je     5e <RDMDeviceResponder::SetDmxStartAddress(unsigned short, unsigned short)+0x5e>
  3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40:	48 8d 88 a0 00 00 00 	lea    0xa0(%rax),%rcx
  47:	0f b7 55 e0          	movzwl -0x20(%rbp),%edx
  4b:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  4f:	89 c6                	mov    %eax,%esi
  51:	48 89 cf             	mov    %rcx,%rdi
  54:	e8 00 00 00 00       	call   59 <RDMDeviceResponder::SetDmxStartAddress(unsigned short, unsigned short)+0x59>
  59:	e9 a1 00 00 00       	jmp    ff <RDMDeviceResponder::SetDmxStartAddress(unsigned short, unsigned short)+0xff>
  5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  62:	48 8b 90 b0 00 00 00 	mov    0xb0(%rax),%rdx
  69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6d:	0f b6 80 cd 00 00 00 	movzbl 0xcd(%rax),%eax
  74:	0f b6 c0             	movzbl %al,%eax
  77:	48 c1 e0 03          	shl    $0x3,%rax
  7b:	48 83 e8 08          	sub    $0x8,%rax
  7f:	48 01 d0             	add    %rdx,%rax
  82:	48 8b 00             	mov    (%rax),%rax
  85:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  8d:	48 89 c7             	mov    %rax,%rdi
  90:	e8 00 00 00 00       	call   95 <RDMDeviceResponder::SetDmxStartAddress(unsigned short, unsigned short)+0x95>
  95:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  99:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  9e:	74 5f                	je     ff <RDMDeviceResponder::SetDmxStartAddress(unsigned short, unsigned short)+0xff>
  a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a4:	48 8b 00             	mov    (%rax),%rax
  a7:	48 83 c0 40          	add    $0x40,%rax
  ab:	48 8b 08             	mov    (%rax),%rcx
  ae:	0f b7 55 e0          	movzwl -0x20(%rbp),%edx
  b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b6:	89 d6                	mov    %edx,%esi
  b8:	48 89 c7             	mov    %rax,%rdi
  bb:	ff d1                	call   *%rcx
  bd:	84 c0                	test   %al,%al
  bf:	74 24                	je     e5 <RDMDeviceResponder::SetDmxStartAddress(unsigned short, unsigned short)+0xe5>
  c1:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  c5:	66 c1 e8 08          	shr    $0x8,%ax
  c9:	89 c2                	mov    %eax,%edx
  cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  cf:	88 90 cf 00 00 00    	mov    %dl,0xcf(%rax)
  d5:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  d9:	89 c2                	mov    %eax,%edx
  db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  df:	88 90 d0 00 00 00    	mov    %dl,0xd0(%rax)
  e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e9:	48 8b 00             	mov    (%rax),%rax
  ec:	48 83 c0 18          	add    $0x18,%rax
  f0:	48 8b 10             	mov    (%rax),%rdx
  f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f7:	48 89 c7             	mov    %rax,%rdi
  fa:	ff d2                	call   *%rdx
  fc:	eb 01                	jmp    ff <RDMDeviceResponder::SetDmxStartAddress(unsigned short, unsigned short)+0xff>
  fe:	90                   	nop
  ff:	c9                   	leave  
 100:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder18GetDmxStartAddressEt:

0000000000000000 <RDMDeviceResponder::GetDmxStartAddress(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%rbp)
  1b:	74 1b                	je     38 <RDMDeviceResponder::GetDmxStartAddress(unsigned short)+0x38>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
  28:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  2c:	89 c6                	mov    %eax,%esi
  2e:	48 89 d7             	mov    %rdx,%rdi
  31:	e8 00 00 00 00       	call   36 <RDMDeviceResponder::GetDmxStartAddress(unsigned short)+0x36>
  36:	eb 23                	jmp    5b <RDMDeviceResponder::GetDmxStartAddress(unsigned short)+0x5b>
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	0f b6 80 cf 00 00 00 	movzbl 0xcf(%rax),%eax
  43:	0f b6 c0             	movzbl %al,%eax
  46:	c1 e0 08             	shl    $0x8,%eax
  49:	89 c2                	mov    %eax,%edx
  4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4f:	0f b6 80 d0 00 00 00 	movzbl 0xd0(%rax),%eax
  56:	0f b6 c0             	movzbl %al,%eax
  59:	01 d0                	add    %edx,%eax
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder11GetSlotInfoEttRN8lightset8SlotInfoE:

0000000000000000 <RDMDeviceResponder::GetSlotInfo(unsigned short, unsigned short, lightset::SlotInfo&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 d0                	mov    %edx,%eax
  12:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  16:	89 f2                	mov    %esi,%edx
  18:	66 89 55 e4          	mov    %dx,-0x1c(%rbp)
  1c:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  20:	66 83 7d e4 00       	cmpw   $0x0,-0x1c(%rbp)
  25:	74 07                	je     2e <RDMDeviceResponder::GetSlotInfo(unsigned short, unsigned short, lightset::SlotInfo&)+0x2e>
  27:	b8 00 00 00 00       	mov    $0x0,%eax
  2c:	eb 5e                	jmp    8c <RDMDeviceResponder::GetSlotInfo(unsigned short, unsigned short, lightset::SlotInfo&)+0x8c>
  2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  32:	48 8b 90 b0 00 00 00 	mov    0xb0(%rax),%rdx
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	0f b6 80 cd 00 00 00 	movzbl 0xcd(%rax),%eax
  44:	0f b6 c0             	movzbl %al,%eax
  47:	48 c1 e0 03          	shl    $0x3,%rax
  4b:	48 83 e8 08          	sub    $0x8,%rax
  4f:	48 01 d0             	add    %rdx,%rax
  52:	48 8b 00             	mov    (%rax),%rax
  55:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	e8 00 00 00 00       	call   65 <RDMDeviceResponder::GetSlotInfo(unsigned short, unsigned short, lightset::SlotInfo&)+0x65>
  65:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6d:	48 8b 00             	mov    (%rax),%rax
  70:	48 83 c0 58          	add    $0x58,%rax
  74:	4c 8b 00             	mov    (%rax),%r8
  77:	0f b7 4d e0          	movzwl -0x20(%rbp),%ecx
  7b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  83:	89 ce                	mov    %ecx,%esi
  85:	48 89 c7             	mov    %rax,%rdi
  88:	41 ff d0             	call   *%r8
  8b:	90                   	nop
  8c:	c9                   	leave  
  8d:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder15GetDmxFootPrintEt:

0000000000000000 <RDMDeviceResponder::GetDmxFootPrint(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%rbp)
  1b:	74 1b                	je     38 <RDMDeviceResponder::GetDmxFootPrint(unsigned short)+0x38>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
  28:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  2c:	89 c6                	mov    %eax,%esi
  2e:	48 89 d7             	mov    %rdx,%rdi
  31:	e8 00 00 00 00       	call   36 <RDMDeviceResponder::GetDmxFootPrint(unsigned short)+0x36>
  36:	eb 23                	jmp    5b <RDMDeviceResponder::GetDmxFootPrint(unsigned short)+0x5b>
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	0f b6 80 cb 00 00 00 	movzbl 0xcb(%rax),%eax
  43:	0f b6 c0             	movzbl %al,%eax
  46:	c1 e0 08             	shl    $0x8,%eax
  49:	89 c2                	mov    %eax,%edx
  4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4f:	0f b6 80 cc 00 00 00 	movzbl 0xcc(%rax),%eax
  56:	0f b6 c0             	movzbl %al,%eax
  59:	01 d0                	add    %edx,%eax
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder14GetPersonalityEth:

0000000000000000 <RDMDeviceResponder::GetPersonality(unsigned short, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	89 d0                	mov    %edx,%eax
  18:	88 45 f0             	mov    %al,-0x10(%rbp)
  1b:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%rbp)
  20:	74 1f                	je     41 <RDMDeviceResponder::GetPersonality(unsigned short, unsigned char)+0x41>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	48 8d 88 a0 00 00 00 	lea    0xa0(%rax),%rcx
  2d:	0f b6 55 f0          	movzbl -0x10(%rbp),%edx
  31:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  35:	89 c6                	mov    %eax,%esi
  37:	48 89 cf             	mov    %rcx,%rdi
  3a:	e8 00 00 00 00       	call   3f <RDMDeviceResponder::GetPersonality(unsigned short, unsigned char)+0x3f>
  3f:	eb 1d                	jmp    5e <RDMDeviceResponder::GetPersonality(unsigned short, unsigned char)+0x5e>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	48 8b 90 b0 00 00 00 	mov    0xb0(%rax),%rdx
  4c:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
  50:	48 c1 e0 03          	shl    $0x3,%rax
  54:	48 83 e8 08          	sub    $0x8,%rax
  58:	48 01 d0             	add    %rdx,%rax
  5b:	48 8b 00             	mov    (%rax),%rax
  5e:	c9                   	leave  
  5f:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder19GetPersonalityCountEt:

0000000000000000 <RDMDeviceResponder::GetPersonalityCount(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%rbp)
  1b:	74 1b                	je     38 <RDMDeviceResponder::GetPersonalityCount(unsigned short)+0x38>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
  28:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  2c:	89 c6                	mov    %eax,%esi
  2e:	48 89 d7             	mov    %rdx,%rdi
  31:	e8 00 00 00 00       	call   36 <RDMDeviceResponder::GetPersonalityCount(unsigned short)+0x36>
  36:	eb 0b                	jmp    43 <RDMDeviceResponder::GetPersonalityCount(unsigned short)+0x43>
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	0f b6 80 ce 00 00 00 	movzbl 0xce(%rax),%eax
  43:	c9                   	leave  
  44:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder21SetPersonalityCurrentEth:

0000000000000000 <RDMDeviceResponder::SetPersonalityCurrent(unsigned short, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	89 d0                	mov    %edx,%eax
  18:	88 45 e0             	mov    %al,-0x20(%rbp)
  1b:	66 83 7d e4 00       	cmpw   $0x0,-0x1c(%rbp)
  20:	74 22                	je     44 <RDMDeviceResponder::SetPersonalityCurrent(unsigned short, unsigned char)+0x44>
  22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  26:	48 8d 88 a0 00 00 00 	lea    0xa0(%rax),%rcx
  2d:	0f b6 55 e0          	movzbl -0x20(%rbp),%edx
  31:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  35:	89 c6                	mov    %eax,%esi
  37:	48 89 cf             	mov    %rcx,%rdi
  3a:	e8 00 00 00 00       	call   3f <RDMDeviceResponder::SetPersonalityCurrent(unsigned short, unsigned char)+0x3f>
  3f:	e9 fc 00 00 00       	jmp    140 <RDMDeviceResponder::SetPersonalityCurrent(unsigned short, unsigned char)+0x140>
  44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  48:	0f b6 55 e0          	movzbl -0x20(%rbp),%edx
  4c:	88 90 cd 00 00 00    	mov    %dl,0xcd(%rax)
  52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  56:	48 8b 90 b0 00 00 00 	mov    0xb0(%rax),%rdx
  5d:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
  61:	48 c1 e0 03          	shl    $0x3,%rax
  65:	48 83 e8 08          	sub    $0x8,%rax
  69:	48 01 d0             	add    %rdx,%rax
  6c:	48 8b 00             	mov    (%rax),%rax
  6f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  77:	48 89 c7             	mov    %rax,%rdi
  7a:	e8 00 00 00 00       	call   7f <RDMDeviceResponder::SetPersonalityCurrent(unsigned short, unsigned char)+0x7f>
  7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  83:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  88:	0f 84 b2 00 00 00    	je     140 <RDMDeviceResponder::SetPersonalityCurrent(unsigned short, unsigned char)+0x140>
  8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  92:	48 8b 00             	mov    (%rax),%rax
  95:	48 83 c0 50          	add    $0x50,%rax
  99:	48 8b 10             	mov    (%rax),%rdx
  9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a0:	48 89 c7             	mov    %rax,%rdi
  a3:	ff d2                	call   *%rdx
  a5:	66 c1 e8 08          	shr    $0x8,%ax
  a9:	89 c2                	mov    %eax,%edx
  ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  af:	88 90 cb 00 00 00    	mov    %dl,0xcb(%rax)
  b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b9:	48 8b 00             	mov    (%rax),%rax
  bc:	48 83 c0 50          	add    $0x50,%rax
  c0:	48 8b 10             	mov    (%rax),%rdx
  c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c7:	48 89 c7             	mov    %rax,%rdi
  ca:	ff d2                	call   *%rdx
  cc:	89 c2                	mov    %eax,%edx
  ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d2:	88 90 cc 00 00 00    	mov    %dl,0xcc(%rax)
  d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  dc:	48 8b 00             	mov    (%rax),%rax
  df:	48 83 c0 48          	add    $0x48,%rax
  e3:	48 8b 10             	mov    (%rax),%rdx
  e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ea:	48 89 c7             	mov    %rax,%rdi
  ed:	ff d2                	call   *%rdx
  ef:	66 c1 e8 08          	shr    $0x8,%ax
  f3:	89 c2                	mov    %eax,%edx
  f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f9:	88 90 cf 00 00 00    	mov    %dl,0xcf(%rax)
  ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 103:	48 8b 00             	mov    (%rax),%rax
 106:	48 83 c0 48          	add    $0x48,%rax
 10a:	48 8b 10             	mov    (%rax),%rdx
 10d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 111:	48 89 c7             	mov    %rax,%rdi
 114:	ff d2                	call   *%rdx
 116:	89 c2                	mov    %eax,%edx
 118:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 11c:	88 90 d0 00 00 00    	mov    %dl,0xd0(%rax)
 122:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 126:	48 8b 00             	mov    (%rax),%rax
 129:	48 83 c0 10          	add    $0x10,%rax
 12d:	48 8b 08             	mov    (%rax),%rcx
 130:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 138:	48 89 d6             	mov    %rdx,%rsi
 13b:	48 89 c7             	mov    %rax,%rdi
 13e:	ff d1                	call   *%rcx
 140:	c9                   	leave  
 141:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder21GetPersonalityCurrentEt:

0000000000000000 <RDMDeviceResponder::GetPersonalityCurrent(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%rbp)
  1b:	74 1b                	je     38 <RDMDeviceResponder::GetPersonalityCurrent(unsigned short)+0x38>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
  28:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  2c:	89 c6                	mov    %eax,%esi
  2e:	48 89 d7             	mov    %rdx,%rdi
  31:	e8 00 00 00 00       	call   36 <RDMDeviceResponder::GetPersonalityCurrent(unsigned short)+0x36>
  36:	eb 0b                	jmp    43 <RDMDeviceResponder::GetPersonalityCurrent(unsigned short)+0x43>
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	0f b6 80 cd 00 00 00 	movzbl 0xcd(%rax),%eax
  43:	c9                   	leave  
  44:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder3GetEv:

0000000000000000 <RDMDeviceResponder::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <RDMDeviceResponder::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder17CalculateChecksumEv:

0000000000000000 <RDMDeviceResponder::CalculateChecksum()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	0f b6 80 cf 00 00 00 	movzbl 0xcf(%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	c1 f8 08             	sar    $0x8,%eax
  1d:	89 c2                	mov    %eax,%edx
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	0f b6 80 d0 00 00 00 	movzbl 0xd0(%rax),%eax
  2a:	0f b6 c0             	movzbl %al,%eax
  2d:	01 d0                	add    %edx,%eax
  2f:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
  33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  37:	0f b6 80 cd 00 00 00 	movzbl 0xcd(%rax),%eax
  3e:	0f b6 c0             	movzbl %al,%eax
  41:	66 01 45 fe          	add    %ax,-0x2(%rbp)
  45:	0f b7 45 fe          	movzwl -0x2(%rbp),%eax
  49:	5d                   	pop    %rbp
  4a:	c3                   	ret    

Disassembly of section .text._ZNK10DisplaySet11GetContrastEv:

0000000000000000 <DisplaySet::GetContrast() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZNK10DisplaySet17GetFlipVerticallyEv:

0000000000000000 <DisplaySet::GetFlipVertically() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN7Display11SetContrastEh:

0000000000000000 <Display::SetContrast(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8b 40 18          	mov    0x18(%rax),%rax
  1d:	48 85 c0             	test   %rax,%rax
  20:	74 27                	je     49 <Display::SetContrast(unsigned char)+0x49>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	48 8b 40 18          	mov    0x18(%rax),%rax
  2a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2e:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  32:	48 8b 12             	mov    (%rdx),%rdx
  35:	48 83 c2 58          	add    $0x58,%rdx
  39:	48 8b 0a             	mov    (%rdx),%rcx
  3c:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  40:	89 d6                	mov    %edx,%esi
  42:	48 89 c7             	mov    %rax,%rdi
  45:	ff d1                	call   *%rcx
  47:	eb 01                	jmp    4a <Display::SetContrast(unsigned char)+0x4a>
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

Disassembly of section .text._ZN7Display17SetFlipVerticallyEb:

0000000000000000 <Display::SetFlipVertically(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8b 40 18          	mov    0x18(%rax),%rax
  1d:	48 85 c0             	test   %rax,%rax
  20:	74 27                	je     49 <Display::SetFlipVertically(bool)+0x49>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	48 8b 40 18          	mov    0x18(%rax),%rax
  2a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2e:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  32:	48 8b 12             	mov    (%rdx),%rdx
  35:	48 83 c2 60          	add    $0x60,%rdx
  39:	48 8b 0a             	mov    (%rdx),%rcx
  3c:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  40:	89 d6                	mov    %edx,%esi
  42:	48 89 c7             	mov    %rax,%rdi
  45:	ff d1                	call   *%rcx
  47:	eb 01                	jmp    4a <Display::SetFlipVertically(bool)+0x4a>
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

Disassembly of section .text._ZNK7Display17GetFlipVerticallyEv:

0000000000000000 <Display::GetFlipVertically() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 40 18          	mov    0x18(%rax),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	75 07                	jne    24 <Display::GetFlipVertically() const+0x24>
  1d:	b8 00 00 00 00       	mov    $0x0,%eax
  22:	eb 11                	jmp    35 <Display::GetFlipVertically() const+0x35>
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 8b 40 18          	mov    0x18(%rax),%rax
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	e8 00 00 00 00       	call   34 <Display::GetFlipVertically() const+0x34>
  34:	90                   	nop
  35:	c9                   	leave  
  36:	c3                   	ret    

Disassembly of section .text._ZNK7Display11GetContrastEv:

0000000000000000 <Display::GetContrast() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 40 18          	mov    0x18(%rax),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	75 07                	jne    24 <Display::GetContrast() const+0x24>
  1d:	b8 00 00 00 00       	mov    $0x0,%eax
  22:	eb 11                	jmp    35 <Display::GetContrast() const+0x35>
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 8b 40 18          	mov    0x18(%rax),%rax
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	e8 00 00 00 00       	call   34 <Display::GetContrast() const+0x34>
  34:	90                   	nop
  35:	c9                   	leave  
  36:	c3                   	ret    

Disassembly of section .text._ZN7Display8SetSleepEb:

0000000000000000 <Display::SetSleep(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8b 40 18          	mov    0x18(%rax),%rax
  1d:	48 85 c0             	test   %rax,%rax
  20:	74 51                	je     73 <Display::SetSleep(bool)+0x73>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  2a:	88 50 10             	mov    %dl,0x10(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 8b 40 18          	mov    0x18(%rax),%rax
  35:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  39:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  3d:	48 8b 12             	mov    (%rdx),%rdx
  40:	48 83 c2 50          	add    $0x50,%rdx
  44:	48 8b 0a             	mov    (%rdx),%rcx
  47:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  4b:	89 d6                	mov    %edx,%esi
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	ff d1                	call   *%rcx
  52:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  56:	83 f0 01             	xor    $0x1,%eax
  59:	84 c0                	test   %al,%al
  5b:	74 17                	je     74 <Display::SetSleep(bool)+0x74>
  5d:	e8 00 00 00 00       	call   62 <Display::SetSleep(bool)+0x62>
  62:	48 89 c7             	mov    %rax,%rdi
  65:	e8 00 00 00 00       	call   6a <Display::SetSleep(bool)+0x6a>
  6a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  6e:	89 42 04             	mov    %eax,0x4(%rdx)
  71:	eb 01                	jmp    74 <Display::SetSleep(bool)+0x74>
  73:	90                   	nop
  74:	c9                   	leave  
  75:	c3                   	ret    

Disassembly of section .text._ZN7Display3GetEv:

0000000000000000 <Display::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Display::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandlerC2Eb:

0000000000000000 <RDMHandler::RDMHandler(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  15:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  19:	88 10                	mov    %dl,(%rax)
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	c6 40 01 00          	movb   $0x0,0x1(%rax)
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  2e:	00 
  2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  33:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  3a:	00 
  3b:	90                   	nop
  3c:	5d                   	pop    %rbp
  3d:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler12HandleStringEPKcj:

0000000000000000 <RDMHandler::HandleString(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  10:	89 55 dc             	mov    %edx,-0x24(%rbp)
  13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  17:	48 8b 40 10          	mov    0x10(%rax),%rax
  1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1f:	8b 45 dc             	mov    -0x24(%rbp),%eax
  22:	89 c2                	mov    %eax,%edx
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	88 50 17             	mov    %dl,0x17(%rax)
  2b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  32:	eb 1e                	jmp    52 <RDMHandler::HandleString(char const*, unsigned int)+0x52>
  34:	8b 55 f4             	mov    -0xc(%rbp),%edx
  37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  3b:	48 01 d0             	add    %rdx,%rax
  3e:	0f b6 00             	movzbl (%rax),%eax
  41:	89 c1                	mov    %eax,%ecx
  43:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  47:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4a:	88 4c 02 18          	mov    %cl,0x18(%rdx,%rax,1)
  4e:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  52:	8b 45 f4             	mov    -0xc(%rbp),%eax
  55:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  58:	72 da                	jb     34 <RDMHandler::HandleString(char const*, unsigned int)+0x34>
  5a:	90                   	nop
  5b:	90                   	nop
  5c:	5d                   	pop    %rbp
  5d:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler20CreateRespondMessageEht:

0000000000000000 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 d4             	mov    %dl,-0x2c(%rbp)
  19:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
  1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2d:	48 8b 40 10          	mov    0x10(%rax),%rax
  31:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  35:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  39:	c6 00 cc             	movb   $0xcc,(%rax)
  3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40:	0f b6 10             	movzbl (%rax),%edx
  43:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  47:	88 50 01             	mov    %dl,0x1(%rax)
  4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4e:	0f b6 50 0e          	movzbl 0xe(%rax),%edx
  52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  56:	88 50 0f             	mov    %dl,0xf(%rax)
  59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5d:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  65:	0f b6 50 11          	movzbl 0x11(%rax),%edx
  69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  6d:	88 50 12             	mov    %dl,0x12(%rax)
  70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  74:	0f b6 50 12          	movzbl 0x12(%rax),%edx
  78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  7c:	88 50 13             	mov    %dl,0x13(%rax)
  7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  83:	0f b6 40 13          	movzbl 0x13(%rax),%eax
  87:	8d 50 01             	lea    0x1(%rax),%edx
  8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  8e:	88 50 14             	mov    %dl,0x14(%rax)
  91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  95:	0f b6 50 14          	movzbl 0x14(%rax),%edx
  99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  9d:	88 50 15             	mov    %dl,0x15(%rax)
  a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a4:	0f b6 50 15          	movzbl 0x15(%rax),%edx
  a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ac:	88 50 16             	mov    %dl,0x16(%rax)
  af:	0f b6 45 d4          	movzbl -0x2c(%rbp),%eax
  b3:	85 c0                	test   %eax,%eax
  b5:	74 16                	je     cd <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0xcd>
  b7:	85 c0                	test   %eax,%eax
  b9:	0f 88 30 01 00 00    	js     1ef <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x1ef>
  bf:	83 e8 01             	sub    $0x1,%eax
  c2:	83 f8 01             	cmp    $0x1,%eax
  c5:	0f 87 24 01 00 00    	ja     1ef <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x1ef>
  cb:	eb 1c                	jmp    e9 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0xe9>
  cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  d1:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  d5:	8d 50 18             	lea    0x18(%rax),%edx
  d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  dc:	88 50 02             	mov    %dl,0x2(%rax)
  df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  e3:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  e7:	eb 3a                	jmp    123 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x123>
  e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ed:	c6 40 02 1a          	movb   $0x1a,0x2(%rax)
  f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  f5:	0f b6 55 d4          	movzbl -0x2c(%rbp),%edx
  f9:	88 50 10             	mov    %dl,0x10(%rax)
  fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 100:	c6 40 17 02          	movb   $0x2,0x17(%rax)
 104:	0f b7 45 d0          	movzwl -0x30(%rbp),%eax
 108:	66 c1 e8 08          	shr    $0x8,%ax
 10c:	89 c2                	mov    %eax,%edx
 10e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 112:	88 50 18             	mov    %dl,0x18(%rax)
 115:	0f b7 45 d0          	movzwl -0x30(%rbp),%eax
 119:	89 c2                	mov    %eax,%edx
 11b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 11f:	88 50 19             	mov    %dl,0x19(%rax)
 122:	90                   	nop
 123:	e8 00 00 00 00       	call   128 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x128>
 128:	48 83 c0 08          	add    $0x8,%rax
 12c:	48 89 c7             	mov    %rax,%rdi
 12f:	e8 00 00 00 00       	call   134 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x134>
 134:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 138:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 13f:	eb 33                	jmp    174 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x174>
 141:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 145:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 148:	0f b6 4c 02 08       	movzbl 0x8(%rdx,%rax,1),%ecx
 14d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 151:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 154:	88 4c 02 03          	mov    %cl,0x3(%rdx,%rax,1)
 158:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 15b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 15f:	48 01 d0             	add    %rdx,%rax
 162:	0f b6 08             	movzbl (%rax),%ecx
 165:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 169:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 16c:	88 4c 02 09          	mov    %cl,0x9(%rdx,%rax,1)
 170:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 174:	83 7d e4 05          	cmpl   $0x5,-0x1c(%rbp)
 178:	76 c7                	jbe    141 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x141>
 17a:	66 c7 45 e2 00 00    	movw   $0x0,-0x1e(%rbp)
 180:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 187:	eb 1c                	jmp    1a5 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x1a5>
 189:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 18d:	48 8b 50 10          	mov    0x10(%rax),%rdx
 191:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 194:	48 01 d0             	add    %rdx,%rax
 197:	0f b6 00             	movzbl (%rax),%eax
 19a:	0f b6 c0             	movzbl %al,%eax
 19d:	66 01 45 e2          	add    %ax,-0x1e(%rbp)
 1a1:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 1a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1a9:	0f b6 40 02          	movzbl 0x2(%rax),%eax
 1ad:	0f b6 c0             	movzbl %al,%eax
 1b0:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
 1b3:	72 d4                	jb     189 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x189>
 1b5:	0f b7 45 e2          	movzwl -0x1e(%rbp),%eax
 1b9:	66 c1 e8 08          	shr    $0x8,%ax
 1bd:	89 c6                	mov    %eax,%esi
 1bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1c3:	48 8b 48 10          	mov    0x10(%rax),%rcx
 1c7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 1ca:	8d 50 01             	lea    0x1(%rax),%edx
 1cd:	89 55 e4             	mov    %edx,-0x1c(%rbp)
 1d0:	89 c0                	mov    %eax,%eax
 1d2:	48 01 c8             	add    %rcx,%rax
 1d5:	89 f2                	mov    %esi,%edx
 1d7:	88 10                	mov    %dl,(%rax)
 1d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1dd:	48 8b 50 10          	mov    0x10(%rax),%rdx
 1e1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 1e4:	48 01 d0             	add    %rdx,%rax
 1e7:	0f b7 55 e2          	movzwl -0x1e(%rbp),%edx
 1eb:	88 10                	mov    %dl,(%rax)
 1ed:	eb 01                	jmp    1f0 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x1f0>
 1ef:	90                   	nop
 1f0:	c9                   	leave  
 1f1:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler17RespondMessageAckEv:

0000000000000000 <RDMHandler::RespondMessageAck()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	48 8b 40 08          	mov    0x8(%rax),%rax
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  24:	84 c0                	test   %al,%al
  26:	75 08                	jne    30 <RDMHandler::RespondMessageAck()+0x30>
  28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2c:	c6 40 01 18          	movb   $0x18,0x1(%rax)
  30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  34:	ba 00 00 00 00       	mov    $0x0,%edx
  39:	be 00 00 00 00       	mov    $0x0,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::RespondMessageAck()+0x46>
  46:	90                   	nop
  47:	c9                   	leave  
  48:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler18RespondMessageNackEt:

0000000000000000 <RDMHandler::RespondMessageNack(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
  1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1e:	be 02 00 00 00       	mov    $0x2,%esi
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	call   2b <RDMHandler::RespondMessageNack(unsigned short)+0x2b>
  2b:	90                   	nop
  2c:	c9                   	leave  
  2d:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler10HandleDataEPKhPh:

0000000000000000 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 60          	sub    $0x60,%rsp
   c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  10:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  14:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  18:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  1c:	c6 00 ff             	movb   $0xff,(%rax)
  1f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  23:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  27:	48 89 50 08          	mov    %rdx,0x8(%rax)
  2b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  2f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  33:	48 89 50 10          	mov    %rdx,0x10(%rax)
  37:	c6 45 c6 00          	movb   $0x0,-0x3a(%rbp)
  3b:	c6 45 c7 00          	movb   $0x0,-0x39(%rbp)
  3f:	c6 45 c8 00          	movb   $0x0,-0x38(%rbp)
  43:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  47:	48 8b 40 08          	mov    0x8(%rax),%rax
  4b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  53:	0f b6 40 13          	movzbl 0x13(%rax),%eax
  57:	88 45 c9             	mov    %al,-0x37(%rbp)
  5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5e:	0f b6 40 14          	movzbl 0x14(%rax),%eax
  62:	0f b6 c0             	movzbl %al,%eax
  65:	c1 e0 08             	shl    $0x8,%eax
  68:	89 c2                	mov    %eax,%edx
  6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  6e:	0f b6 40 15          	movzbl 0x15(%rax),%eax
  72:	0f b6 c0             	movzbl %al,%eax
  75:	01 d0                	add    %edx,%eax
  77:	66 89 45 cc          	mov    %ax,-0x34(%rbp)
  7b:	e8 00 00 00 00       	call   80 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x80>
  80:	48 83 c0 08          	add    $0x8,%rax
  84:	48 89 c7             	mov    %rax,%rdi
  87:	e8 00 00 00 00       	call   8c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x8c>
  8c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  94:	48 83 c0 02          	add    $0x2,%rax
  98:	ba 06 00 00 00       	mov    $0x6,%edx
  9d:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # a4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xa4>
  a4:	48 89 ce             	mov    %rcx,%rsi
  a7:	48 89 c7             	mov    %rax,%rdi
  aa:	e8 00 00 00 00       	call   af <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xaf>
  af:	85 c0                	test   %eax,%eax
  b1:	75 04                	jne    b7 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xb7>
  b3:	c6 45 c7 01          	movb   $0x1,-0x39(%rbp)
  b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  bb:	48 8d 48 02          	lea    0x2(%rax),%rcx
  bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  c3:	ba 02 00 00 00       	mov    $0x2,%edx
  c8:	48 89 c6             	mov    %rax,%rsi
  cb:	48 89 cf             	mov    %rcx,%rdi
  ce:	e8 00 00 00 00       	call   d3 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xd3>
  d3:	85 c0                	test   %eax,%eax
  d5:	75 2d                	jne    104 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
  d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  db:	48 83 c0 04          	add    $0x4,%rax
  df:	ba 04 00 00 00       	mov    $0x4,%edx
  e4:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # eb <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xeb>
  eb:	48 89 ce             	mov    %rcx,%rsi
  ee:	48 89 c7             	mov    %rax,%rdi
  f1:	e8 00 00 00 00       	call   f6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xf6>
  f6:	85 c0                	test   %eax,%eax
  f8:	75 0a                	jne    104 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
  fa:	c6 45 c8 01          	movb   $0x1,-0x38(%rbp)
  fe:	c6 45 c6 01          	movb   $0x1,-0x3a(%rbp)
 102:	eb 24                	jmp    128 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x128>
 104:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 108:	48 8d 48 02          	lea    0x2(%rax),%rcx
 10c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 110:	ba 06 00 00 00       	mov    $0x6,%edx
 115:	48 89 c6             	mov    %rax,%rsi
 118:	48 89 cf             	mov    %rcx,%rdi
 11b:	e8 00 00 00 00       	call   120 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x120>
 120:	85 c0                	test   %eax,%eax
 122:	75 04                	jne    128 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x128>
 124:	c6 45 c6 01          	movb   $0x1,-0x3a(%rbp)
 128:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 12c:	83 f0 01             	xor    $0x1,%eax
 12f:	84 c0                	test   %al,%al
 131:	74 0f                	je     142 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x142>
 133:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
 137:	83 f0 01             	xor    $0x1,%eax
 13a:	84 c0                	test   %al,%al
 13c:	0f 85 f4 02 00 00    	jne    436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 142:	80 7d c9 10          	cmpb   $0x10,-0x37(%rbp)
 146:	0f 85 7e 02 00 00    	jne    3ca <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x3ca>
 14c:	66 83 7d cc 01       	cmpw   $0x1,-0x34(%rbp)
 151:	0f 85 4d 01 00 00    	jne    2a4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x2a4>
 157:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 15b:	0f b6 40 01          	movzbl 0x1(%rax),%eax
 15f:	83 f0 01             	xor    $0x1,%eax
 162:	84 c0                	test   %al,%al
 164:	0f 84 cc 02 00 00    	je     436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 16a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 16e:	48 8d 48 17          	lea    0x17(%rax),%rcx
 172:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 176:	ba 06 00 00 00       	mov    $0x6,%edx
 17b:	48 89 c6             	mov    %rax,%rsi
 17e:	48 89 cf             	mov    %rcx,%rdi
 181:	e8 00 00 00 00       	call   186 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x186>
 186:	85 c0                	test   %eax,%eax
 188:	0f 8f a8 02 00 00    	jg     436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 18e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 192:	48 83 c0 17          	add    $0x17,%rax
 196:	48 8d 48 06          	lea    0x6(%rax),%rcx
 19a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 19e:	ba 06 00 00 00       	mov    $0x6,%edx
 1a3:	48 89 ce             	mov    %rcx,%rsi
 1a6:	48 89 c7             	mov    %rax,%rdi
 1a9:	e8 00 00 00 00       	call   1ae <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1ae>
 1ae:	85 c0                	test   %eax,%eax
 1b0:	0f 8f 80 02 00 00    	jg     436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 1b6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 1ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 1be:	66 c7 45 ca fa 05    	movw   $0x5fa,-0x36(%rbp)
 1c4:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
 1cb:	eb 0f                	jmp    1dc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1dc>
 1cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 1d1:	8b 45 d0             	mov    -0x30(%rbp),%eax
 1d4:	c6 04 02 fe          	movb   $0xfe,(%rdx,%rax,1)
 1d8:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
 1dc:	83 7d d0 06          	cmpl   $0x6,-0x30(%rbp)
 1e0:	76 eb                	jbe    1cd <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1cd>
 1e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1e6:	c6 40 07 aa          	movb   $0xaa,0x7(%rax)
 1ea:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
 1f1:	eb 5e                	jmp    251 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x251>
 1f3:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 1f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 1fa:	48 01 d0             	add    %rdx,%rax
 1fd:	0f b6 00             	movzbl (%rax),%eax
 200:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 203:	8d 0c 12             	lea    (%rdx,%rdx,1),%ecx
 206:	83 c8 aa             	or     $0xffffffaa,%eax
 209:	89 c2                	mov    %eax,%edx
 20b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 20f:	89 c9                	mov    %ecx,%ecx
 211:	88 54 08 08          	mov    %dl,0x8(%rax,%rcx,1)
 215:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 218:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 21c:	48 01 d0             	add    %rdx,%rax
 21f:	0f b6 00             	movzbl (%rax),%eax
 222:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 225:	01 d2                	add    %edx,%edx
 227:	8d 4a 01             	lea    0x1(%rdx),%ecx
 22a:	83 c8 55             	or     $0x55,%eax
 22d:	89 c2                	mov    %eax,%edx
 22f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 233:	89 c9                	mov    %ecx,%ecx
 235:	88 54 08 08          	mov    %dl,0x8(%rax,%rcx,1)
 239:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 23c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 240:	48 01 d0             	add    %rdx,%rax
 243:	0f b6 00             	movzbl (%rax),%eax
 246:	0f b6 c0             	movzbl %al,%eax
 249:	66 01 45 ca          	add    %ax,-0x36(%rbp)
 24d:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
 251:	83 7d d4 05          	cmpl   $0x5,-0x2c(%rbp)
 255:	76 9c                	jbe    1f3 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x1f3>
 257:	0f b7 45 ca          	movzwl -0x36(%rbp),%eax
 25b:	66 c1 e8 08          	shr    $0x8,%ax
 25f:	83 c8 aa             	or     $0xffffffaa,%eax
 262:	89 c2                	mov    %eax,%edx
 264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 268:	88 50 14             	mov    %dl,0x14(%rax)
 26b:	0f b7 45 ca          	movzwl -0x36(%rbp),%eax
 26f:	66 c1 e8 08          	shr    $0x8,%ax
 273:	83 c8 55             	or     $0x55,%eax
 276:	89 c2                	mov    %eax,%edx
 278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 27c:	88 50 15             	mov    %dl,0x15(%rax)
 27f:	0f b7 45 ca          	movzwl -0x36(%rbp),%eax
 283:	83 c8 aa             	or     $0xffffffaa,%eax
 286:	89 c2                	mov    %eax,%edx
 288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 28c:	88 50 16             	mov    %dl,0x16(%rax)
 28f:	0f b7 45 ca          	movzwl -0x36(%rbp),%eax
 293:	83 c8 55             	or     $0x55,%eax
 296:	89 c2                	mov    %eax,%edx
 298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 29c:	88 50 17             	mov    %dl,0x17(%rax)
 29f:	e9 92 01 00 00       	jmp    436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 2a4:	66 83 7d cc 03       	cmpw   $0x3,-0x34(%rbp)
 2a9:	0f 85 91 00 00 00    	jne    340 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x340>
 2af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 2b3:	0f b6 40 16          	movzbl 0x16(%rax),%eax
 2b7:	84 c0                	test   %al,%al
 2b9:	0f 85 73 01 00 00    	jne    432 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x432>
 2bf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 2c3:	c6 40 01 00          	movb   $0x0,0x1(%rax)
 2c7:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
 2cb:	83 f0 01             	xor    $0x1,%eax
 2ce:	84 c0                	test   %al,%al
 2d0:	0f 84 60 01 00 00    	je     436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 2d6:	80 7d c6 00          	cmpb   $0x0,-0x3a(%rbp)
 2da:	0f 84 56 01 00 00    	je     436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 2e0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 2e4:	48 8b 40 10          	mov    0x10(%rax),%rax
 2e8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 2ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 2f0:	c6 40 17 02          	movb   $0x2,0x17(%rax)
 2f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 2f8:	c6 40 18 00          	movb   $0x0,0x18(%rax)
 2fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 300:	c6 40 19 00          	movb   $0x0,0x19(%rax)
 304:	e8 00 00 00 00       	call   309 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x309>
 309:	48 89 c7             	mov    %rax,%rdi
 30c:	e8 00 00 00 00       	call   311 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x311>
 311:	66 85 c0             	test   %ax,%ax
 314:	0f 95 c0             	setne  %al
 317:	84 c0                	test   %al,%al
 319:	74 14                	je     32f <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x32f>
 31b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 31f:	0f b6 40 19          	movzbl 0x19(%rax),%eax
 323:	83 c8 02             	or     $0x2,%eax
 326:	89 c2                	mov    %eax,%edx
 328:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 32c:	88 50 19             	mov    %dl,0x19(%rax)
 32f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 333:	48 89 c7             	mov    %rax,%rdi
 336:	e8 00 00 00 00       	call   33b <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x33b>
 33b:	e9 f6 00 00 00       	jmp    436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 340:	66 83 7d cc 02       	cmpw   $0x2,-0x34(%rbp)
 345:	0f 85 eb 00 00 00    	jne    436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 34b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 34f:	0f b6 40 16          	movzbl 0x16(%rax),%eax
 353:	84 c0                	test   %al,%al
 355:	0f 85 da 00 00 00    	jne    435 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x435>
 35b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 35f:	c6 40 01 01          	movb   $0x1,0x1(%rax)
 363:	80 7d c6 00          	cmpb   $0x0,-0x3a(%rbp)
 367:	0f 84 c9 00 00 00    	je     436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 36d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 371:	48 8b 40 10          	mov    0x10(%rax),%rax
 375:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 379:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 37d:	c6 40 17 02          	movb   $0x2,0x17(%rax)
 381:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 385:	c6 40 18 00          	movb   $0x0,0x18(%rax)
 389:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 38d:	c6 40 19 00          	movb   $0x0,0x19(%rax)
 391:	e8 00 00 00 00       	call   396 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x396>
 396:	48 89 c7             	mov    %rax,%rdi
 399:	e8 00 00 00 00       	call   39e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x39e>
 39e:	66 85 c0             	test   %ax,%ax
 3a1:	0f 95 c0             	setne  %al
 3a4:	84 c0                	test   %al,%al
 3a6:	74 14                	je     3bc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x3bc>
 3a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3ac:	0f b6 40 19          	movzbl 0x19(%rax),%eax
 3b0:	83 c8 02             	or     $0x2,%eax
 3b3:	89 c2                	mov    %eax,%edx
 3b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3b9:	88 50 19             	mov    %dl,0x19(%rax)
 3bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3c0:	48 89 c7             	mov    %rax,%rdi
 3c3:	e8 00 00 00 00       	call   3c8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x3c8>
 3c8:	eb 6c                	jmp    436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 3ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3ce:	0f b6 40 11          	movzbl 0x11(%rax),%eax
 3d2:	0f b6 c0             	movzbl %al,%eax
 3d5:	c1 e0 08             	shl    $0x8,%eax
 3d8:	89 c2                	mov    %eax,%edx
 3da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3de:	0f b6 40 12          	movzbl 0x12(%rax),%eax
 3e2:	0f b6 c0             	movzbl %al,%eax
 3e5:	01 d0                	add    %edx,%eax
 3e7:	66 89 45 ce          	mov    %ax,-0x32(%rbp)
 3eb:	44 0f b7 45 ce       	movzwl -0x32(%rbp),%r8d
 3f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3f4:	0f b6 40 16          	movzbl 0x16(%rax),%eax
 3f8:	0f b6 f8             	movzbl %al,%edi
 3fb:	0f b7 4d cc          	movzwl -0x34(%rbp),%ecx
 3ff:	0f b6 55 c9          	movzbl -0x37(%rbp),%edx
 403:	80 7d c7 00          	cmpb   $0x0,-0x39(%rbp)
 407:	75 06                	jne    40f <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x40f>
 409:	80 7d c8 00          	cmpb   $0x0,-0x38(%rbp)
 40d:	74 07                	je     416 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x416>
 40f:	b8 01 00 00 00       	mov    $0x1,%eax
 414:	eb 05                	jmp    41b <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x41b>
 416:	b8 00 00 00 00       	mov    $0x0,%eax
 41b:	0f b6 f0             	movzbl %al,%esi
 41e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 422:	45 89 c1             	mov    %r8d,%r9d
 425:	41 89 f8             	mov    %edi,%r8d
 428:	48 89 c7             	mov    %rax,%rdi
 42b:	e8 00 00 00 00       	call   430 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x430>
 430:	eb 04                	jmp    436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 432:	90                   	nop
 433:	eb 01                	jmp    436 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x436>
 435:	90                   	nop
 436:	c9                   	leave  
 437:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler8HandlersEbhtht:

0000000000000000 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f7                	mov    %esi,%edi
  12:	89 d6                	mov    %edx,%esi
  14:	89 c8                	mov    %ecx,%eax
  16:	44 89 ca             	mov    %r9d,%edx
  19:	89 f9                	mov    %edi,%ecx
  1b:	88 4d e4             	mov    %cl,-0x1c(%rbp)
  1e:	89 f1                	mov    %esi,%ecx
  20:	88 4d e0             	mov    %cl,-0x20(%rbp)
  23:	66 89 45 dc          	mov    %ax,-0x24(%rbp)
  27:	44 89 c0             	mov    %r8d,%eax
  2a:	88 45 d8             	mov    %al,-0x28(%rbp)
  2d:	89 d0                	mov    %edx,%eax
  2f:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  33:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  3a:	00 
  3b:	80 7d e0 20          	cmpb   $0x20,-0x20(%rbp)
  3f:	74 1c                	je     5d <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5d>
  41:	80 7d e0 30          	cmpb   $0x30,-0x20(%rbp)
  45:	74 16                	je     5d <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5d>
  47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4b:	be 05 00 00 00       	mov    $0x5,%esi
  50:	48 89 c7             	mov    %rax,%rdi
  53:	e8 00 00 00 00       	call   58 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x58>
  58:	e9 9e 02 00 00       	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
  5d:	e8 00 00 00 00       	call   62 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
  62:	48 89 c7             	mov    %rax,%rdi
  65:	e8 00 00 00 00       	call   6a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6a>
  6a:	66 89 45 f2          	mov    %ax,-0xe(%rbp)
  6e:	0f b7 45 d4          	movzwl -0x2c(%rbp),%eax
  72:	66 3b 45 f2          	cmp    -0xe(%rbp),%ax
  76:	76 1d                	jbe    95 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x95>
  78:	66 83 7d d4 ff       	cmpw   $0xffff,-0x2c(%rbp)
  7d:	74 16                	je     95 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x95>
  7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  83:	be 09 00 00 00       	mov    $0x9,%esi
  88:	48 89 c7             	mov    %rax,%rdi
  8b:	e8 00 00 00 00       	call   90 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x90>
  90:	e9 66 02 00 00       	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
  95:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  9c:	e9 88 00 00 00       	jmp    129 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x129>
  a1:	8b 55 f4             	mov    -0xc(%rbp),%edx
  a4:	48 89 d0             	mov    %rdx,%rax
  a7:	48 01 c0             	add    %rax,%rax
  aa:	48 01 d0             	add    %rdx,%rax
  ad:	48 c1 e0 04          	shl    $0x4,%rax
  b1:	48 89 c2             	mov    %rax,%rdx
  b4:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # bb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xbb>
  bb:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
  bf:	66 39 45 dc          	cmp    %ax,-0x24(%rbp)
  c3:	75 60                	jne    125 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x125>
  c5:	8b 55 f4             	mov    -0xc(%rbp),%edx
  c8:	48 89 d0             	mov    %rdx,%rax
  cb:	48 01 c0             	add    %rax,%rax
  ce:	48 01 d0             	add    %rdx,%rax
  d1:	48 c1 e0 04          	shl    $0x4,%rax
  d5:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # dc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>
  dc:	48 01 d0             	add    %rdx,%rax
  df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  e3:	8b 55 f4             	mov    -0xc(%rbp),%edx
  e6:	48 89 d0             	mov    %rdx,%rax
  e9:	48 01 c0             	add    %rax,%rax
  ec:	48 01 d0             	add    %rdx,%rax
  ef:	48 c1 e0 04          	shl    $0x4,%rax
  f3:	48 89 c2             	mov    %rax,%rdx
  f6:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # fd <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xfd>
  fd:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
 101:	88 45 f0             	mov    %al,-0x10(%rbp)
 104:	8b 55 f4             	mov    -0xc(%rbp),%edx
 107:	48 89 d0             	mov    %rdx,%rax
 10a:	48 01 c0             	add    %rax,%rax
 10d:	48 01 d0             	add    %rdx,%rax
 110:	48 c1 e0 04          	shl    $0x4,%rax
 114:	48 89 c2             	mov    %rax,%rdx
 117:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 11e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x11e>
 11e:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
 122:	88 45 f1             	mov    %al,-0xf(%rbp)
 125:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 129:	83 7d f4 1b          	cmpl   $0x1b,-0xc(%rbp)
 12d:	0f 86 6e ff ff ff    	jbe    a1 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xa1>
 133:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
 138:	75 16                	jne    150 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x150>
 13a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 13e:	be 00 00 00 00       	mov    $0x0,%esi
 143:	48 89 c7             	mov    %rax,%rdi
 146:	e8 00 00 00 00       	call   14b <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x14b>
 14b:	e9 ab 01 00 00       	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
 150:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 154:	0f b6 00             	movzbl (%rax),%eax
 157:	84 c0                	test   %al,%al
 159:	74 21                	je     17c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x17c>
 15b:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
 15f:	83 f0 01             	xor    $0x1,%eax
 162:	84 c0                	test   %al,%al
 164:	74 37                	je     19d <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x19d>
 166:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 16a:	be 00 00 00 00       	mov    $0x0,%esi
 16f:	48 89 c7             	mov    %rax,%rdi
 172:	e8 00 00 00 00       	call   177 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x177>
 177:	e9 7f 01 00 00       	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
 17c:	0f b6 45 f1          	movzbl -0xf(%rbp),%eax
 180:	83 f0 01             	xor    $0x1,%eax
 183:	84 c0                	test   %al,%al
 185:	74 16                	je     19d <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x19d>
 187:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 18b:	be 00 00 00 00       	mov    $0x0,%esi
 190:	48 89 c7             	mov    %rax,%rdi
 193:	e8 00 00 00 00       	call   198 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x198>
 198:	e9 5e 01 00 00       	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
 19d:	80 7d e0 20          	cmpb   $0x20,-0x20(%rbp)
 1a1:	0f 85 d1 00 00 00    	jne    278 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x278>
 1a7:	80 7d e4 00          	cmpb   $0x0,-0x1c(%rbp)
 1ab:	0f 85 49 01 00 00    	jne    2fa <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fa>
 1b1:	66 83 7d d4 ff       	cmpw   $0xffff,-0x2c(%rbp)
 1b6:	75 16                	jne    1ce <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1ce>
 1b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1bc:	be 09 00 00 00       	mov    $0x9,%esi
 1c1:	48 89 c7             	mov    %rax,%rdi
 1c4:	e8 00 00 00 00       	call   1c9 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c9>
 1c9:	e9 2d 01 00 00       	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
 1ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1d2:	48 8b 40 08          	mov    0x8(%rax),%rax
 1d6:	48 85 c0             	test   %rax,%rax
 1d9:	75 16                	jne    1f1 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1f1>
 1db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1df:	be 05 00 00 00       	mov    $0x5,%esi
 1e4:	48 89 c7             	mov    %rax,%rdi
 1e7:	e8 00 00 00 00       	call   1ec <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1ec>
 1ec:	e9 0a 01 00 00       	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
 1f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1f5:	0f b6 40 28          	movzbl 0x28(%rax),%eax
 1f9:	38 45 d8             	cmp    %al,-0x28(%rbp)
 1fc:	74 16                	je     214 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x214>
 1fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 202:	be 01 00 00 00       	mov    $0x1,%esi
 207:	48 89 c7             	mov    %rax,%rdi
 20a:	e8 00 00 00 00       	call   20f <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x20f>
 20f:	e9 e7 00 00 00       	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
 214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 218:	48 8b 40 10          	mov    0x10(%rax),%rax
 21c:	48 89 c2             	mov    %rax,%rdx
 21f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 223:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 22b:	48 8b 40 08          	mov    0x8(%rax),%rax
 22f:	83 e0 01             	and    $0x1,%eax
 232:	48 85 c0             	test   %rax,%rax
 235:	74 29                	je     260 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x260>
 237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 23b:	48 8b 40 10          	mov    0x10(%rax),%rax
 23f:	48 89 c2             	mov    %rax,%rdx
 242:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 246:	48 01 d0             	add    %rdx,%rax
 249:	48 8b 10             	mov    (%rax),%rdx
 24c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 250:	48 8b 40 08          	mov    0x8(%rax),%rax
 254:	48 83 e8 01          	sub    $0x1,%rax
 258:	48 01 d0             	add    %rdx,%rax
 25b:	48 8b 00             	mov    (%rax),%rax
 25e:	eb 08                	jmp    268 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x268>
 260:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 264:	48 8b 40 08          	mov    0x8(%rax),%rax
 268:	0f b7 55 d4          	movzwl -0x2c(%rbp),%edx
 26c:	89 d6                	mov    %edx,%esi
 26e:	48 89 cf             	mov    %rcx,%rdi
 271:	ff d0                	call   *%rax
 273:	e9 83 00 00 00       	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
 278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 27c:	48 8b 40 18          	mov    0x18(%rax),%rax
 280:	48 85 c0             	test   %rax,%rax
 283:	75 13                	jne    298 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x298>
 285:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 289:	be 05 00 00 00       	mov    $0x5,%esi
 28e:	48 89 c7             	mov    %rax,%rdi
 291:	e8 00 00 00 00       	call   296 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x296>
 296:	eb 63                	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
 298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 29c:	48 8b 40 20          	mov    0x20(%rax),%rax
 2a0:	48 89 c2             	mov    %rax,%rdx
 2a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 2a7:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
 2ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 2af:	48 8b 40 18          	mov    0x18(%rax),%rax
 2b3:	83 e0 01             	and    $0x1,%eax
 2b6:	48 85 c0             	test   %rax,%rax
 2b9:	74 29                	je     2e4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2e4>
 2bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 2bf:	48 8b 40 20          	mov    0x20(%rax),%rax
 2c3:	48 89 c2             	mov    %rax,%rdx
 2c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 2ca:	48 01 d0             	add    %rdx,%rax
 2cd:	48 8b 10             	mov    (%rax),%rdx
 2d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 2d4:	48 8b 40 18          	mov    0x18(%rax),%rax
 2d8:	48 83 e8 01          	sub    $0x1,%rax
 2dc:	48 01 d0             	add    %rdx,%rax
 2df:	48 8b 00             	mov    (%rax),%rax
 2e2:	eb 08                	jmp    2ec <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2ec>
 2e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 2e8:	48 8b 40 18          	mov    0x18(%rax),%rax
 2ec:	0f b7 55 d4          	movzwl -0x2c(%rbp),%edx
 2f0:	0f b6 4d e4          	movzbl -0x1c(%rbp),%ecx
 2f4:	89 ce                	mov    %ecx,%esi
 2f6:	ff d0                	call   *%rax
 2f8:	eb 01                	jmp    2fb <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x2fb>
 2fa:	90                   	nop
 2fb:	c9                   	leave  
 2fc:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler22GetSupportedParametersEt:

0000000000000000 <RDMHandler::GetSupportedParameters(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 c4          	mov    %ax,-0x3c(%rbp)
  16:	c6 45 df 00          	movb   $0x0,-0x21(%rbp)
  1a:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  21:	66 83 7d c4 00       	cmpw   $0x0,-0x3c(%rbp)
  26:	74 14                	je     3c <RDMHandler::GetSupportedParameters(unsigned short)+0x3c>
  28:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2f <RDMHandler::GetSupportedParameters(unsigned short)+0x2f>
  2f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  33:	c7 45 e0 08 00 00 00 	movl   $0x8,-0x20(%rbp)
  3a:	eb 12                	jmp    4e <RDMHandler::GetSupportedParameters(unsigned short)+0x4e>
  3c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 43 <RDMHandler::GetSupportedParameters(unsigned short)+0x43>
  43:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  47:	c7 45 e0 1c 00 00 00 	movl   $0x1c,-0x20(%rbp)
  4e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  55:	eb 30                	jmp    87 <RDMHandler::GetSupportedParameters(unsigned short)+0x87>
  57:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  5a:	48 89 d0             	mov    %rdx,%rax
  5d:	48 01 c0             	add    %rax,%rax
  60:	48 01 d0             	add    %rdx,%rax
  63:	48 c1 e0 04          	shl    $0x4,%rax
  67:	48 89 c2             	mov    %rax,%rdx
  6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  6e:	48 01 d0             	add    %rdx,%rax
  71:	0f b6 40 29          	movzbl 0x29(%rax),%eax
  75:	84 c0                	test   %al,%al
  77:	74 0a                	je     83 <RDMHandler::GetSupportedParameters(unsigned short)+0x83>
  79:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
  7d:	83 c0 01             	add    $0x1,%eax
  80:	88 45 df             	mov    %al,-0x21(%rbp)
  83:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  87:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  8a:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  8d:	72 c8                	jb     57 <RDMHandler::GetSupportedParameters(unsigned short)+0x57>
  8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  93:	48 8b 40 10          	mov    0x10(%rax),%rax
  97:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  9b:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
  9f:	8d 14 00             	lea    (%rax,%rax,1),%edx
  a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a6:	88 50 17             	mov    %dl,0x17(%rax)
  a9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  b0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  b7:	e9 8e 00 00 00       	jmp    14a <RDMHandler::GetSupportedParameters(unsigned short)+0x14a>
  bc:	8b 55 ec             	mov    -0x14(%rbp),%edx
  bf:	48 89 d0             	mov    %rdx,%rax
  c2:	48 01 c0             	add    %rax,%rax
  c5:	48 01 d0             	add    %rdx,%rax
  c8:	48 c1 e0 04          	shl    $0x4,%rax
  cc:	48 89 c2             	mov    %rax,%rdx
  cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  d3:	48 01 d0             	add    %rdx,%rax
  d6:	0f b6 40 29          	movzbl 0x29(%rax),%eax
  da:	84 c0                	test   %al,%al
  dc:	74 68                	je     146 <RDMHandler::GetSupportedParameters(unsigned short)+0x146>
  de:	8b 55 ec             	mov    -0x14(%rbp),%edx
  e1:	48 89 d0             	mov    %rdx,%rax
  e4:	48 01 c0             	add    %rax,%rax
  e7:	48 01 d0             	add    %rdx,%rax
  ea:	48 c1 e0 04          	shl    $0x4,%rax
  ee:	48 89 c2             	mov    %rax,%rdx
  f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  f5:	48 01 d0             	add    %rdx,%rax
  f8:	0f b7 00             	movzwl (%rax),%eax
  fb:	66 c1 e8 08          	shr    $0x8,%ax
  ff:	89 c1                	mov    %eax,%ecx
 101:	8b 45 e8             	mov    -0x18(%rbp),%eax
 104:	8d 14 00             	lea    (%rax,%rax,1),%edx
 107:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 10b:	89 d2                	mov    %edx,%edx
 10d:	88 4c 10 18          	mov    %cl,0x18(%rax,%rdx,1)
 111:	8b 55 ec             	mov    -0x14(%rbp),%edx
 114:	48 89 d0             	mov    %rdx,%rax
 117:	48 01 c0             	add    %rax,%rax
 11a:	48 01 d0             	add    %rdx,%rax
 11d:	48 c1 e0 04          	shl    $0x4,%rax
 121:	48 89 c2             	mov    %rax,%rdx
 124:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 128:	48 01 d0             	add    %rdx,%rax
 12b:	0f b7 10             	movzwl (%rax),%edx
 12e:	8b 45 e8             	mov    -0x18(%rbp),%eax
 131:	01 c0                	add    %eax,%eax
 133:	8d 70 01             	lea    0x1(%rax),%esi
 136:	89 d1                	mov    %edx,%ecx
 138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 13c:	89 f2                	mov    %esi,%edx
 13e:	88 4c 10 18          	mov    %cl,0x18(%rax,%rdx,1)
 142:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 146:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 14a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 14d:	3b 45 e0             	cmp    -0x20(%rbp),%eax
 150:	0f 82 66 ff ff ff    	jb     bc <RDMHandler::GetSupportedParameters(unsigned short)+0xbc>
 156:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 15a:	48 89 c7             	mov    %rax,%rdi
 15d:	e8 00 00 00 00       	call   162 <RDMHandler::GetSupportedParameters(unsigned short)+0x162>
 162:	90                   	nop
 163:	c9                   	leave  
 164:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler13GetDeviceInfoEt:

0000000000000000 <RDMHandler::GetDeviceInfo(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  16:	e8 00 00 00 00       	call   1b <RDMHandler::GetDeviceInfo(unsigned short)+0x1b>
  1b:	48 89 c2             	mov    %rax,%rdx
  1e:	0f b7 45 d4          	movzwl -0x2c(%rbp),%eax
  22:	89 c6                	mov    %eax,%esi
  24:	48 89 d7             	mov    %rdx,%rdi
  27:	e8 00 00 00 00       	call   2c <RDMHandler::GetDeviceInfo(unsigned short)+0x2c>
  2c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  34:	48 8b 40 10          	mov    0x10(%rax),%rax
  38:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40:	48 83 c0 18          	add    $0x18,%rax
  44:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4c:	c6 40 17 13          	movb   $0x13,0x17(%rax)
  50:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  58:	ba 13 00 00 00       	mov    $0x13,%edx
  5d:	48 89 ce             	mov    %rcx,%rsi
  60:	48 89 c7             	mov    %rax,%rdi
  63:	e8 00 00 00 00       	call   68 <RDMHandler::GetDeviceInfo(unsigned short)+0x68>
  68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  6c:	48 89 c7             	mov    %rax,%rdi
  6f:	e8 00 00 00 00       	call   74 <RDMHandler::GetDeviceInfo(unsigned short)+0x74>
  74:	90                   	nop
  75:	c9                   	leave  
  76:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler18GetFactoryDefaultsEt:

0000000000000000 <RDMHandler::GetFactoryDefaults(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1a:	48 8b 40 10          	mov    0x10(%rax),%rax
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	c6 40 17 01          	movb   $0x1,0x17(%rax)
  2a:	e8 00 00 00 00       	call   2f <RDMHandler::GetFactoryDefaults(unsigned short)+0x2f>
  2f:	48 89 c7             	mov    %rax,%rdi
  32:	e8 00 00 00 00       	call   37 <RDMHandler::GetFactoryDefaults(unsigned short)+0x37>
  37:	84 c0                	test   %al,%al
  39:	74 07                	je     42 <RDMHandler::GetFactoryDefaults(unsigned short)+0x42>
  3b:	ba 01 00 00 00       	mov    $0x1,%edx
  40:	eb 05                	jmp    47 <RDMHandler::GetFactoryDefaults(unsigned short)+0x47>
  42:	ba 00 00 00 00       	mov    $0x0,%edx
  47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4b:	88 50 18             	mov    %dl,0x18(%rax)
  4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	call   5a <RDMHandler::GetFactoryDefaults(unsigned short)+0x5a>
  5a:	90                   	nop
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler18SetFactoryDefaultsEbt:

0000000000000000 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	84 c0                	test   %al,%al
  33:	74 13                	je     48 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x48>
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x46>
  46:	eb 36                	jmp    7e <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x7e>
  48:	e8 00 00 00 00       	call   4d <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x4d>
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	e8 00 00 00 00       	call   55 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x55>
  55:	80 7d e4 00          	cmpb   $0x0,-0x1c(%rbp)
  59:	75 22                	jne    7d <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x7d>
  5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5f:	48 8b 40 10          	mov    0x10(%rax),%rax
  63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6b:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  73:	48 89 c7             	mov    %rax,%rdi
  76:	e8 00 00 00 00       	call   7b <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x7b>
  7b:	eb 01                	jmp    7e <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x7e>
  7d:	90                   	nop
  7e:	c9                   	leave  
  7f:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler22GetProductDetailIdListEt:

0000000000000000 <RDMHandler::GetProductDetailIdList(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	e8 00 00 00 00       	call   1b <RDMHandler::GetProductDetailIdList(unsigned short)+0x1b>
  1b:	48 83 c0 08          	add    $0x8,%rax
  1f:	48 89 c7             	mov    %rax,%rdi
  22:	e8 00 00 00 00       	call   27 <RDMHandler::GetProductDetailIdList(unsigned short)+0x27>
  27:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
  2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2f:	48 8b 40 10          	mov    0x10(%rax),%rax
  33:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3b:	c6 40 17 02          	movb   $0x2,0x17(%rax)
  3f:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax
  43:	66 c1 e8 08          	shr    $0x8,%ax
  47:	89 c2                	mov    %eax,%edx
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	88 50 18             	mov    %dl,0x18(%rax)
  50:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax
  54:	89 c2                	mov    %eax,%edx
  56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5a:	88 50 19             	mov    %dl,0x19(%rax)
  5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <RDMHandler::GetProductDetailIdList(unsigned short)+0x69>
  69:	90                   	nop
  6a:	c9                   	leave  
  6b:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler25GetDeviceModelDescriptionEt:

0000000000000000 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	e8 00 00 00 00       	call   2a <RDMHandler::GetDeviceModelDescription(unsigned short)+0x2a>
  2a:	48 89 c2             	mov    %rax,%rdx
  2d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
  31:	48 89 c6             	mov    %rax,%rsi
  34:	48 89 d7             	mov    %rdx,%rdi
  37:	e8 00 00 00 00       	call   3c <RDMHandler::GetDeviceModelDescription(unsigned short)+0x3c>
  3c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
  44:	0f b6 d0             	movzbl %al,%edx
  47:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4f:	48 89 ce             	mov    %rcx,%rsi
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	call   5a <RDMHandler::GetDeviceModelDescription(unsigned short)+0x5a>
  5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5e:	48 89 c7             	mov    %rax,%rdi
  61:	e8 00 00 00 00       	call   66 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x66>
  66:	90                   	nop
  67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  72:	00 00 
  74:	74 05                	je     7b <RDMHandler::GetDeviceModelDescription(unsigned short)+0x7b>
  76:	e8 00 00 00 00       	call   7b <RDMHandler::GetDeviceModelDescription(unsigned short)+0x7b>
  7b:	c9                   	leave  
  7c:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler20GetManufacturerLabelEt:

0000000000000000 <RDMHandler::GetManufacturerLabel(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	e8 00 00 00 00       	call   2a <RDMHandler::GetManufacturerLabel(unsigned short)+0x2a>
  2a:	48 8d 50 08          	lea    0x8(%rax),%rdx
  2e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  32:	48 89 c6             	mov    %rax,%rsi
  35:	48 89 d7             	mov    %rdx,%rdi
  38:	e8 00 00 00 00       	call   3d <RDMHandler::GetManufacturerLabel(unsigned short)+0x3d>
  3d:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
  41:	0f b6 d0             	movzbl %al,%edx
  44:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4c:	48 89 ce             	mov    %rcx,%rsi
  4f:	48 89 c7             	mov    %rax,%rdi
  52:	e8 00 00 00 00       	call   57 <RDMHandler::GetManufacturerLabel(unsigned short)+0x57>
  57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5b:	48 89 c7             	mov    %rax,%rdi
  5e:	e8 00 00 00 00       	call   63 <RDMHandler::GetManufacturerLabel(unsigned short)+0x63>
  63:	90                   	nop
  64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  68:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  6f:	00 00 
  71:	74 05                	je     78 <RDMHandler::GetManufacturerLabel(unsigned short)+0x78>
  73:	e8 00 00 00 00       	call   78 <RDMHandler::GetManufacturerLabel(unsigned short)+0x78>
  78:	c9                   	leave  
  79:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler14GetDeviceLabelEt:

0000000000000000 <RDMHandler::GetDeviceLabel(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	e8 00 00 00 00       	call   2a <RDMHandler::GetDeviceLabel(unsigned short)+0x2a>
  2a:	48 89 c1             	mov    %rax,%rcx
  2d:	0f b7 45 d4          	movzwl -0x2c(%rbp),%eax
  31:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
  35:	89 c6                	mov    %eax,%esi
  37:	48 89 cf             	mov    %rcx,%rdi
  3a:	e8 00 00 00 00       	call   3f <RDMHandler::GetDeviceLabel(unsigned short)+0x3f>
  3f:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
  43:	0f b6 d0             	movzbl %al,%edx
  46:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4e:	48 89 ce             	mov    %rcx,%rsi
  51:	48 89 c7             	mov    %rax,%rdi
  54:	e8 00 00 00 00       	call   59 <RDMHandler::GetDeviceLabel(unsigned short)+0x59>
  59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	e8 00 00 00 00       	call   65 <RDMHandler::GetDeviceLabel(unsigned short)+0x65>
  65:	90                   	nop
  66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  71:	00 00 
  73:	74 05                	je     7a <RDMHandler::GetDeviceLabel(unsigned short)+0x7a>
  75:	e8 00 00 00 00       	call   7a <RDMHandler::GetDeviceLabel(unsigned short)+0x7a>
  7a:	c9                   	leave  
  7b:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler14SetDeviceLabelEbt:

0000000000000000 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 20                	cmp    $0x20,%al
  33:	76 13                	jbe    48 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x48>
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x46>
  46:	eb 54                	jmp    9c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x9c>
  48:	e8 00 00 00 00       	call   4d <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4d>
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  54:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  58:	0f b6 d0             	movzbl %al,%edx
  5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5f:	48 8d 70 17          	lea    0x17(%rax),%rsi
  63:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  67:	89 d1                	mov    %edx,%ecx
  69:	48 89 f2             	mov    %rsi,%rdx
  6c:	89 c6                	mov    %eax,%esi
  6e:	e8 00 00 00 00       	call   73 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x73>
  73:	80 7d e4 00          	cmpb   $0x0,-0x1c(%rbp)
  77:	75 22                	jne    9b <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x9b>
  79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7d:	48 8b 40 10          	mov    0x10(%rax),%rax
  81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  89:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  91:	48 89 c7             	mov    %rax,%rdi
  94:	e8 00 00 00 00       	call   99 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x99>
  99:	eb 01                	jmp    9c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x9c>
  9b:	90                   	nop
  9c:	c9                   	leave  
  9d:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler23GetSoftwareVersionLabelEt:

0000000000000000 <RDMHandler::GetSoftwareVersionLabel(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	e8 00 00 00 00       	call   1b <RDMHandler::GetSoftwareVersionLabel(unsigned short)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <RDMHandler::GetSoftwareVersionLabel(unsigned short)+0x23>
  23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  27:	e8 00 00 00 00       	call   2c <RDMHandler::GetSoftwareVersionLabel(unsigned short)+0x2c>
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	e8 00 00 00 00       	call   34 <RDMHandler::GetSoftwareVersionLabel(unsigned short)+0x34>
  34:	88 45 f7             	mov    %al,-0x9(%rbp)
  37:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  3b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43:	48 89 ce             	mov    %rcx,%rsi
  46:	48 89 c7             	mov    %rax,%rdi
  49:	e8 00 00 00 00       	call   4e <RDMHandler::GetSoftwareVersionLabel(unsigned short)+0x4e>
  4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	call   5a <RDMHandler::GetSoftwareVersionLabel(unsigned short)+0x5a>
  5a:	90                   	nop
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler14SetResetDeviceEbt:

0000000000000000 <RDMHandler::SetResetDevice(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 d4             	mov    %dl,-0x2c(%rbp)
  19:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
  1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 01                	cmp    $0x1,%al
  33:	74 13                	je     48 <RDMHandler::SetResetDevice(bool, unsigned short)+0x48>
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetResetDevice(bool, unsigned short)+0x46>
  46:	eb 7c                	jmp    c4 <RDMHandler::SetResetDevice(bool, unsigned short)+0xc4>
  48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4c:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  50:	88 45 ef             	mov    %al,-0x11(%rbp)
  53:	80 7d ef 01          	cmpb   $0x1,-0x11(%rbp)
  57:	74 19                	je     72 <RDMHandler::SetResetDevice(bool, unsigned short)+0x72>
  59:	80 7d ef ff          	cmpb   $0xff,-0x11(%rbp)
  5d:	74 13                	je     72 <RDMHandler::SetResetDevice(bool, unsigned short)+0x72>
  5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  63:	be 06 00 00 00       	mov    $0x6,%esi
  68:	48 89 c7             	mov    %rax,%rdi
  6b:	e8 00 00 00 00       	call   70 <RDMHandler::SetResetDevice(bool, unsigned short)+0x70>
  70:	eb 52                	jmp    c4 <RDMHandler::SetResetDevice(bool, unsigned short)+0xc4>
  72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  76:	48 8b 40 10          	mov    0x10(%rax),%rax
  7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  82:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  86:	80 7d ef ff          	cmpb   $0xff,-0x11(%rbp)
  8a:	75 13                	jne    9f <RDMHandler::SetResetDevice(bool, unsigned short)+0x9f>
  8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  90:	be 04 00 00 00       	mov    $0x4,%esi
  95:	48 89 c7             	mov    %rax,%rdi
  98:	e8 00 00 00 00       	call   9d <RDMHandler::SetResetDevice(bool, unsigned short)+0x9d>
  9d:	eb 25                	jmp    c4 <RDMHandler::SetResetDevice(bool, unsigned short)+0xc4>
  9f:	e8 00 00 00 00       	call   a4 <RDMHandler::SetResetDevice(bool, unsigned short)+0xa4>
  a4:	48 89 c7             	mov    %rax,%rdi
  a7:	e8 00 00 00 00       	call   ac <RDMHandler::SetResetDevice(bool, unsigned short)+0xac>
  ac:	83 f0 01             	xor    $0x1,%eax
  af:	84 c0                	test   %al,%al
  b1:	74 11                	je     c4 <RDMHandler::SetResetDevice(bool, unsigned short)+0xc4>
  b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b7:	be 04 00 00 00       	mov    $0x4,%esi
  bc:	48 89 c7             	mov    %rax,%rdi
  bf:	e8 00 00 00 00       	call   c4 <RDMHandler::SetResetDevice(bool, unsigned short)+0xc4>
  c4:	c9                   	leave  
  c5:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler17GetIdentifyDeviceEt:

0000000000000000 <RDMHandler::GetIdentifyDevice(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1a:	48 8b 40 10          	mov    0x10(%rax),%rax
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	c6 40 17 01          	movb   $0x1,0x17(%rax)
  2a:	e8 00 00 00 00       	call   2f <RDMHandler::GetIdentifyDevice(unsigned short)+0x2f>
  2f:	48 89 c7             	mov    %rax,%rdi
  32:	e8 00 00 00 00       	call   37 <RDMHandler::GetIdentifyDevice(unsigned short)+0x37>
  37:	84 c0                	test   %al,%al
  39:	74 07                	je     42 <RDMHandler::GetIdentifyDevice(unsigned short)+0x42>
  3b:	ba 01 00 00 00       	mov    $0x1,%edx
  40:	eb 05                	jmp    47 <RDMHandler::GetIdentifyDevice(unsigned short)+0x47>
  42:	ba 00 00 00 00       	mov    $0x0,%edx
  47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4b:	88 50 18             	mov    %dl,0x18(%rax)
  4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	call   5a <RDMHandler::GetIdentifyDevice(unsigned short)+0x5a>
  5a:	90                   	nop
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler17SetIdentifyDeviceEbt:

0000000000000000 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 01                	cmp    $0x1,%al
  33:	74 13                	je     48 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x48>
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x46>
  46:	eb 7c                	jmp    c4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0xc4>
  48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4c:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  50:	84 c0                	test   %al,%al
  52:	74 1f                	je     73 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x73>
  54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  58:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  5c:	3c 01                	cmp    $0x1,%al
  5e:	74 13                	je     73 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x73>
  60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  64:	be 06 00 00 00       	mov    $0x6,%esi
  69:	48 89 c7             	mov    %rax,%rdi
  6c:	e8 00 00 00 00       	call   71 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x71>
  71:	eb 51                	jmp    c4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0xc4>
  73:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  77:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  7b:	84 c0                	test   %al,%al
  7d:	75 0f                	jne    8e <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x8e>
  7f:	e8 00 00 00 00       	call   84 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x84>
  84:	48 89 c7             	mov    %rax,%rdi
  87:	e8 00 00 00 00       	call   8c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x8c>
  8c:	eb 0d                	jmp    9b <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x9b>
  8e:	e8 00 00 00 00       	call   93 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x93>
  93:	48 89 c7             	mov    %rax,%rdi
  96:	e8 00 00 00 00       	call   9b <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x9b>
  9b:	80 7d e4 00          	cmpb   $0x0,-0x1c(%rbp)
  9f:	75 22                	jne    c3 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0xc3>
  a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a5:	48 8b 40 10          	mov    0x10(%rax),%rax
  a9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b1:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b9:	48 89 c7             	mov    %rax,%rdi
  bc:	e8 00 00 00 00       	call   c1 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0xc1>
  c1:	eb 01                	jmp    c4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0xc4>
  c3:	90                   	nop
  c4:	c9                   	leave  
  c5:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler11GetLanguageEt:

0000000000000000 <RDMHandler::GetLanguage(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	e8 00 00 00 00       	call   1b <RDMHandler::GetLanguage(unsigned short)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <RDMHandler::GetLanguage(unsigned short)+0x23>
  23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  27:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2f:	ba 02 00 00 00       	mov    $0x2,%edx
  34:	48 89 ce             	mov    %rcx,%rsi
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	e8 00 00 00 00       	call   3f <RDMHandler::GetLanguage(unsigned short)+0x3f>
  3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43:	48 89 c7             	mov    %rax,%rdi
  46:	e8 00 00 00 00       	call   4b <RDMHandler::GetLanguage(unsigned short)+0x4b>
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler11SetLanguageEbt:

0000000000000000 <RDMHandler::SetLanguage(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 d4             	mov    %dl,-0x2c(%rbp)
  19:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
  1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 02                	cmp    $0x2,%al
  33:	74 16                	je     4b <RDMHandler::SetLanguage(bool, unsigned short)+0x4b>
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetLanguage(bool, unsigned short)+0x46>
  46:	e9 83 00 00 00       	jmp    ce <RDMHandler::SetLanguage(bool, unsigned short)+0xce>
  4b:	e8 00 00 00 00       	call   50 <RDMHandler::SetLanguage(bool, unsigned short)+0x50>
  50:	48 89 c7             	mov    %rax,%rdi
  53:	e8 00 00 00 00       	call   58 <RDMHandler::SetLanguage(bool, unsigned short)+0x58>
  58:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  60:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  64:	0f b6 d0             	movzbl %al,%edx
  67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  6b:	0f b6 00             	movzbl (%rax),%eax
  6e:	0f be c0             	movsbl %al,%eax
  71:	39 c2                	cmp    %eax,%edx
  73:	75 1d                	jne    92 <RDMHandler::SetLanguage(bool, unsigned short)+0x92>
  75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  79:	0f b6 40 18          	movzbl 0x18(%rax),%eax
  7d:	0f b6 d0             	movzbl %al,%edx
  80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  84:	48 83 c0 01          	add    $0x1,%rax
  88:	0f b6 00             	movzbl (%rax),%eax
  8b:	0f be c0             	movsbl %al,%eax
  8e:	39 c2                	cmp    %eax,%edx
  90:	74 13                	je     a5 <RDMHandler::SetLanguage(bool, unsigned short)+0xa5>
  92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  96:	be 06 00 00 00       	mov    $0x6,%esi
  9b:	48 89 c7             	mov    %rax,%rdi
  9e:	e8 00 00 00 00       	call   a3 <RDMHandler::SetLanguage(bool, unsigned short)+0xa3>
  a3:	eb 29                	jmp    ce <RDMHandler::SetLanguage(bool, unsigned short)+0xce>
  a5:	80 7d d4 00          	cmpb   $0x0,-0x2c(%rbp)
  a9:	75 22                	jne    cd <RDMHandler::SetLanguage(bool, unsigned short)+0xcd>
  ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  af:	48 8b 40 10          	mov    0x10(%rax),%rax
  b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bb:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c3:	48 89 c7             	mov    %rax,%rdi
  c6:	e8 00 00 00 00       	call   cb <RDMHandler::SetLanguage(bool, unsigned short)+0xcb>
  cb:	eb 01                	jmp    ce <RDMHandler::SetLanguage(bool, unsigned short)+0xce>
  cd:	90                   	nop
  ce:	c9                   	leave  
  cf:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler24GetBootSoftwareVersionIdEt:

0000000000000000 <RDMHandler::GetBootSoftwareVersionId(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  1a:	48 8b 40 08          	mov    0x8(%rax),%rax
  1e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  26:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  2a:	84 c0                	test   %al,%al
  2c:	74 13                	je     41 <RDMHandler::GetBootSoftwareVersionId(unsigned short)+0x41>
  2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  32:	be 01 00 00 00       	mov    $0x1,%esi
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	e8 00 00 00 00       	call   3f <RDMHandler::GetBootSoftwareVersionId(unsigned short)+0x3f>
  3f:	eb 69                	jmp    aa <RDMHandler::GetBootSoftwareVersionId(unsigned short)+0xaa>
  41:	e8 00 00 00 00       	call   46 <RDMHandler::GetBootSoftwareVersionId(unsigned short)+0x46>
  46:	48 89 c7             	mov    %rax,%rdi
  49:	e8 00 00 00 00       	call   4e <RDMHandler::GetBootSoftwareVersionId(unsigned short)+0x4e>
  4e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  55:	48 8b 40 10          	mov    0x10(%rax),%rax
  59:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  61:	c6 40 17 04          	movb   $0x4,0x17(%rax)
  65:	8b 45 ec             	mov    -0x14(%rbp),%eax
  68:	c1 e8 18             	shr    $0x18,%eax
  6b:	89 c2                	mov    %eax,%edx
  6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  71:	88 50 18             	mov    %dl,0x18(%rax)
  74:	8b 45 ec             	mov    -0x14(%rbp),%eax
  77:	c1 e8 10             	shr    $0x10,%eax
  7a:	89 c2                	mov    %eax,%edx
  7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  80:	88 50 19             	mov    %dl,0x19(%rax)
  83:	8b 45 ec             	mov    -0x14(%rbp),%eax
  86:	c1 e8 08             	shr    $0x8,%eax
  89:	89 c2                	mov    %eax,%edx
  8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8f:	88 50 1a             	mov    %dl,0x1a(%rax)
  92:	8b 45 ec             	mov    -0x14(%rbp),%eax
  95:	89 c2                	mov    %eax,%edx
  97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  9b:	88 50 1b             	mov    %dl,0x1b(%rax)
  9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a2:	48 89 c7             	mov    %rax,%rdi
  a5:	e8 00 00 00 00       	call   aa <RDMHandler::GetBootSoftwareVersionId(unsigned short)+0xaa>
  aa:	c9                   	leave  
  ab:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler27GetBootSoftwareVersionLabelEt:

0000000000000000 <RDMHandler::GetBootSoftwareVersionLabel(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	e8 00 00 00 00       	call   2a <RDMHandler::GetBootSoftwareVersionLabel(unsigned short)+0x2a>
  2a:	48 89 c2             	mov    %rax,%rdx
  2d:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
  31:	48 89 c6             	mov    %rax,%rsi
  34:	48 89 d7             	mov    %rdx,%rdi
  37:	e8 00 00 00 00       	call   3c <RDMHandler::GetBootSoftwareVersionLabel(unsigned short)+0x3c>
  3c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40:	c6 45 ef 20          	movb   $0x20,-0x11(%rbp)
  44:	48 8d 55 ee          	lea    -0x12(%rbp),%rdx
  48:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
  4c:	48 89 d6             	mov    %rdx,%rsi
  4f:	48 89 c7             	mov    %rax,%rdi
  52:	e8 00 00 00 00       	call   57 <RDMHandler::GetBootSoftwareVersionLabel(unsigned short)+0x57>
  57:	0f b6 00             	movzbl (%rax),%eax
  5a:	0f b6 d0             	movzbl %al,%edx
  5d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  65:	48 89 ce             	mov    %rcx,%rsi
  68:	48 89 c7             	mov    %rax,%rdi
  6b:	e8 00 00 00 00       	call   70 <RDMHandler::GetBootSoftwareVersionLabel(unsigned short)+0x70>
  70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  74:	48 89 c7             	mov    %rax,%rdi
  77:	e8 00 00 00 00       	call   7c <RDMHandler::GetBootSoftwareVersionLabel(unsigned short)+0x7c>
  7c:	90                   	nop
  7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  81:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  88:	00 00 
  8a:	74 05                	je     91 <RDMHandler::GetBootSoftwareVersionLabel(unsigned short)+0x91>
  8c:	e8 00 00 00 00       	call   91 <RDMHandler::GetBootSoftwareVersionLabel(unsigned short)+0x91>
  91:	c9                   	leave  
  92:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler14GetPersonalityEt:

0000000000000000 <RDMHandler::GetPersonality(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	e8 00 00 00 00       	call   1b <RDMHandler::GetPersonality(unsigned short)+0x1b>
  1b:	48 89 c2             	mov    %rax,%rdx
  1e:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  22:	89 c6                	mov    %eax,%esi
  24:	48 89 d7             	mov    %rdx,%rdi
  27:	e8 00 00 00 00       	call   2c <RDMHandler::GetPersonality(unsigned short)+0x2c>
  2c:	88 45 f6             	mov    %al,-0xa(%rbp)
  2f:	e8 00 00 00 00       	call   34 <RDMHandler::GetPersonality(unsigned short)+0x34>
  34:	48 89 c2             	mov    %rax,%rdx
  37:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  3b:	89 c6                	mov    %eax,%esi
  3d:	48 89 d7             	mov    %rdx,%rdi
  40:	e8 00 00 00 00       	call   45 <RDMHandler::GetPersonality(unsigned short)+0x45>
  45:	88 45 f7             	mov    %al,-0x9(%rbp)
  48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4c:	48 8b 40 10          	mov    0x10(%rax),%rax
  50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  58:	c6 40 17 02          	movb   $0x2,0x17(%rax)
  5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  60:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
  64:	88 50 18             	mov    %dl,0x18(%rax)
  67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6b:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  6f:	88 50 19             	mov    %dl,0x19(%rax)
  72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  76:	48 89 c7             	mov    %rax,%rdi
  79:	e8 00 00 00 00       	call   7e <RDMHandler::GetPersonality(unsigned short)+0x7e>
  7e:	90                   	nop
  7f:	c9                   	leave  
  80:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler14SetPersonalityEbt:

0000000000000000 <RDMHandler::SetPersonality(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 d4             	mov    %dl,-0x2c(%rbp)
  19:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
  1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 01                	cmp    $0x1,%al
  33:	74 16                	je     4b <RDMHandler::SetPersonality(bool, unsigned short)+0x4b>
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetPersonality(bool, unsigned short)+0x46>
  46:	e9 80 00 00 00       	jmp    cb <RDMHandler::SetPersonality(bool, unsigned short)+0xcb>
  4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4f:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  53:	88 45 ee             	mov    %al,-0x12(%rbp)
  56:	e8 00 00 00 00       	call   5b <RDMHandler::SetPersonality(bool, unsigned short)+0x5b>
  5b:	48 89 c2             	mov    %rax,%rdx
  5e:	0f b7 45 d0          	movzwl -0x30(%rbp),%eax
  62:	89 c6                	mov    %eax,%esi
  64:	48 89 d7             	mov    %rdx,%rdi
  67:	e8 00 00 00 00       	call   6c <RDMHandler::SetPersonality(bool, unsigned short)+0x6c>
  6c:	88 45 ef             	mov    %al,-0x11(%rbp)
  6f:	80 7d ee 00          	cmpb   $0x0,-0x12(%rbp)
  73:	74 09                	je     7e <RDMHandler::SetPersonality(bool, unsigned short)+0x7e>
  75:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
  79:	3a 45 ef             	cmp    -0x11(%rbp),%al
  7c:	76 13                	jbe    91 <RDMHandler::SetPersonality(bool, unsigned short)+0x91>
  7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  82:	be 06 00 00 00       	mov    $0x6,%esi
  87:	48 89 c7             	mov    %rax,%rdi
  8a:	e8 00 00 00 00       	call   8f <RDMHandler::SetPersonality(bool, unsigned short)+0x8f>
  8f:	eb 3a                	jmp    cb <RDMHandler::SetPersonality(bool, unsigned short)+0xcb>
  91:	e8 00 00 00 00       	call   96 <RDMHandler::SetPersonality(bool, unsigned short)+0x96>
  96:	48 89 c1             	mov    %rax,%rcx
  99:	0f b6 55 ee          	movzbl -0x12(%rbp),%edx
  9d:	0f b7 45 d0          	movzwl -0x30(%rbp),%eax
  a1:	89 c6                	mov    %eax,%esi
  a3:	48 89 cf             	mov    %rcx,%rdi
  a6:	e8 00 00 00 00       	call   ab <RDMHandler::SetPersonality(bool, unsigned short)+0xab>
  ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  af:	48 8b 40 10          	mov    0x10(%rax),%rax
  b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bb:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c3:	48 89 c7             	mov    %rax,%rdi
  c6:	e8 00 00 00 00       	call   cb <RDMHandler::SetPersonality(bool, unsigned short)+0xcb>
  cb:	c9                   	leave  
  cc:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler25GetPersonalityDescriptionEt:

0000000000000000 <RDMHandler::GetPersonalityDescription(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 c4          	mov    %ax,-0x3c(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  29:	48 8b 40 08          	mov    0x8(%rax),%rax
  2d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  35:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  39:	88 45 dc             	mov    %al,-0x24(%rbp)
  3c:	e8 00 00 00 00       	call   41 <RDMHandler::GetPersonalityDescription(unsigned short)+0x41>
  41:	48 89 c2             	mov    %rax,%rdx
  44:	0f b7 45 c4          	movzwl -0x3c(%rbp),%eax
  48:	89 c6                	mov    %eax,%esi
  4a:	48 89 d7             	mov    %rdx,%rdi
  4d:	e8 00 00 00 00       	call   52 <RDMHandler::GetPersonalityDescription(unsigned short)+0x52>
  52:	88 45 dd             	mov    %al,-0x23(%rbp)
  55:	80 7d dc 00          	cmpb   $0x0,-0x24(%rbp)
  59:	74 09                	je     64 <RDMHandler::GetPersonalityDescription(unsigned short)+0x64>
  5b:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
  5f:	3a 45 dd             	cmp    -0x23(%rbp),%al
  62:	76 16                	jbe    7a <RDMHandler::GetPersonalityDescription(unsigned short)+0x7a>
  64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  68:	be 06 00 00 00       	mov    $0x6,%esi
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	call   75 <RDMHandler::GetPersonalityDescription(unsigned short)+0x75>
  75:	e9 b5 00 00 00       	jmp    12f <RDMHandler::GetPersonalityDescription(unsigned short)+0x12f>
  7a:	e8 00 00 00 00       	call   7f <RDMHandler::GetPersonalityDescription(unsigned short)+0x7f>
  7f:	48 89 c1             	mov    %rax,%rcx
  82:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
  86:	0f b7 45 c4          	movzwl -0x3c(%rbp),%eax
  8a:	89 c6                	mov    %eax,%esi
  8c:	48 89 cf             	mov    %rcx,%rdi
  8f:	e8 00 00 00 00       	call   94 <RDMHandler::GetPersonalityDescription(unsigned short)+0x94>
  94:	48 89 c7             	mov    %rax,%rdi
  97:	e8 00 00 00 00       	call   9c <RDMHandler::GetPersonalityDescription(unsigned short)+0x9c>
  9c:	66 89 45 de          	mov    %ax,-0x22(%rbp)
  a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  a4:	48 8b 40 10          	mov    0x10(%rax),%rax
  a8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b0:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
  b4:	88 50 18             	mov    %dl,0x18(%rax)
  b7:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
  bb:	66 c1 e8 08          	shr    $0x8,%ax
  bf:	89 c2                	mov    %eax,%edx
  c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c5:	88 50 19             	mov    %dl,0x19(%rax)
  c8:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
  cc:	89 c2                	mov    %eax,%edx
  ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d2:	88 50 1a             	mov    %dl,0x1a(%rax)
  d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d9:	48 83 c0 1b          	add    $0x1b,%rax
  dd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  e1:	c6 45 db 20          	movb   $0x20,-0x25(%rbp)
  e5:	e8 00 00 00 00       	call   ea <RDMHandler::GetPersonalityDescription(unsigned short)+0xea>
  ea:	48 89 c1             	mov    %rax,%rcx
  ed:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
  f1:	0f b7 45 c4          	movzwl -0x3c(%rbp),%eax
  f5:	89 c6                	mov    %eax,%esi
  f7:	48 89 cf             	mov    %rcx,%rdi
  fa:	e8 00 00 00 00       	call   ff <RDMHandler::GetPersonalityDescription(unsigned short)+0xff>
  ff:	48 89 c1             	mov    %rax,%rcx
 102:	48 8d 55 db          	lea    -0x25(%rbp),%rdx
 106:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 10a:	48 89 c6             	mov    %rax,%rsi
 10d:	48 89 cf             	mov    %rcx,%rdi
 110:	e8 00 00 00 00       	call   115 <RDMHandler::GetPersonalityDescription(unsigned short)+0x115>
 115:	0f b6 45 db          	movzbl -0x25(%rbp),%eax
 119:	8d 50 03             	lea    0x3(%rax),%edx
 11c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 120:	88 50 17             	mov    %dl,0x17(%rax)
 123:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 127:	48 89 c7             	mov    %rax,%rdi
 12a:	e8 00 00 00 00       	call   12f <RDMHandler::GetPersonalityDescription(unsigned short)+0x12f>
 12f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 133:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 13a:	00 00 
 13c:	74 05                	je     143 <RDMHandler::GetPersonalityDescription(unsigned short)+0x143>
 13e:	e8 00 00 00 00       	call   143 <RDMHandler::GetPersonalityDescription(unsigned short)+0x143>
 143:	c9                   	leave  
 144:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler18GetDmxStartAddressEt:

0000000000000000 <RDMHandler::GetDmxStartAddress(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	e8 00 00 00 00       	call   1b <RDMHandler::GetDmxStartAddress(unsigned short)+0x1b>
  1b:	48 89 c2             	mov    %rax,%rdx
  1e:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  22:	89 c6                	mov    %eax,%esi
  24:	48 89 d7             	mov    %rdx,%rdi
  27:	e8 00 00 00 00       	call   2c <RDMHandler::GetDmxStartAddress(unsigned short)+0x2c>
  2c:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
  30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  34:	48 8b 40 10          	mov    0x10(%rax),%rax
  38:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40:	c6 40 17 02          	movb   $0x2,0x17(%rax)
  44:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax
  48:	66 c1 e8 08          	shr    $0x8,%ax
  4c:	89 c2                	mov    %eax,%edx
  4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  52:	88 50 18             	mov    %dl,0x18(%rax)
  55:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax
  59:	89 c2                	mov    %eax,%edx
  5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5f:	88 50 19             	mov    %dl,0x19(%rax)
  62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  66:	48 89 c7             	mov    %rax,%rdi
  69:	e8 00 00 00 00       	call   6e <RDMHandler::GetDmxStartAddress(unsigned short)+0x6e>
  6e:	90                   	nop
  6f:	c9                   	leave  
  70:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler18SetDmxStartAddressEbt:

0000000000000000 <RDMHandler::SetDmxStartAddress(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 d4             	mov    %dl,-0x2c(%rbp)
  19:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
  1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 02                	cmp    $0x2,%al
  33:	74 16                	je     4b <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0x4b>
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0x46>
  46:	e9 86 00 00 00       	jmp    d1 <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0xd1>
  4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4f:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  53:	0f b6 c0             	movzbl %al,%eax
  56:	c1 e0 08             	shl    $0x8,%eax
  59:	89 c2                	mov    %eax,%edx
  5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5f:	0f b6 40 18          	movzbl 0x18(%rax),%eax
  63:	0f b6 c0             	movzbl %al,%eax
  66:	01 d0                	add    %edx,%eax
  68:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
  6c:	66 83 7d ee 00       	cmpw   $0x0,-0x12(%rbp)
  71:	74 08                	je     7b <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0x7b>
  73:	66 81 7d ee 00 02    	cmpw   $0x200,-0x12(%rbp)
  79:	76 13                	jbe    8e <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0x8e>
  7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  7f:	be 06 00 00 00       	mov    $0x6,%esi
  84:	48 89 c7             	mov    %rax,%rdi
  87:	e8 00 00 00 00       	call   8c <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0x8c>
  8c:	eb 43                	jmp    d1 <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0xd1>
  8e:	e8 00 00 00 00       	call   93 <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0x93>
  93:	48 89 c1             	mov    %rax,%rcx
  96:	0f b7 55 ee          	movzwl -0x12(%rbp),%edx
  9a:	0f b7 45 d0          	movzwl -0x30(%rbp),%eax
  9e:	89 c6                	mov    %eax,%esi
  a0:	48 89 cf             	mov    %rcx,%rdi
  a3:	e8 00 00 00 00       	call   a8 <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0xa8>
  a8:	80 7d d4 00          	cmpb   $0x0,-0x2c(%rbp)
  ac:	75 22                	jne    d0 <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0xd0>
  ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b2:	48 8b 40 10          	mov    0x10(%rax),%rax
  b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  be:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c6:	48 89 c7             	mov    %rax,%rdi
  c9:	e8 00 00 00 00       	call   ce <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0xce>
  ce:	eb 01                	jmp    d1 <RDMHandler::SetDmxStartAddress(bool, unsigned short)+0xd1>
  d0:	90                   	nop
  d1:	c9                   	leave  
  d2:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler19GetSensorDefinitionEt:

0000000000000000 <RDMHandler::GetSensorDefinition(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 c4          	mov    %ax,-0x3c(%rbp)
  16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  1a:	48 8b 40 08          	mov    0x8(%rax),%rax
  1e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  26:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  2a:	88 45 df             	mov    %al,-0x21(%rbp)
  2d:	80 7d df ff          	cmpb   $0xff,-0x21(%rbp)
  31:	74 12                	je     45 <RDMHandler::GetSensorDefinition(unsigned short)+0x45>
  33:	e8 00 00 00 00       	call   38 <RDMHandler::GetSensorDefinition(unsigned short)+0x38>
  38:	48 89 c7             	mov    %rax,%rdi
  3b:	e8 00 00 00 00       	call   40 <RDMHandler::GetSensorDefinition(unsigned short)+0x40>
  40:	38 45 df             	cmp    %al,-0x21(%rbp)
  43:	72 07                	jb     4c <RDMHandler::GetSensorDefinition(unsigned short)+0x4c>
  45:	b8 01 00 00 00       	mov    $0x1,%eax
  4a:	eb 05                	jmp    51 <RDMHandler::GetSensorDefinition(unsigned short)+0x51>
  4c:	b8 00 00 00 00       	mov    $0x0,%eax
  51:	84 c0                	test   %al,%al
  53:	74 16                	je     6b <RDMHandler::GetSensorDefinition(unsigned short)+0x6b>
  55:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  59:	be 06 00 00 00       	mov    $0x6,%esi
  5e:	48 89 c7             	mov    %rax,%rdi
  61:	e8 00 00 00 00       	call   66 <RDMHandler::GetSensorDefinition(unsigned short)+0x66>
  66:	e9 84 01 00 00       	jmp    1ef <RDMHandler::GetSensorDefinition(unsigned short)+0x1ef>
  6b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  6f:	48 8b 40 10          	mov    0x10(%rax),%rax
  73:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  77:	e8 00 00 00 00       	call   7c <RDMHandler::GetSensorDefinition(unsigned short)+0x7c>
  7c:	48 89 c2             	mov    %rax,%rdx
  7f:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
  83:	89 c6                	mov    %eax,%esi
  85:	48 89 d7             	mov    %rdx,%rdi
  88:	e8 00 00 00 00       	call   8d <RDMHandler::GetSensorDefinition(unsigned short)+0x8d>
  8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  95:	0f b6 00             	movzbl (%rax),%eax
  98:	38 45 df             	cmp    %al,-0x21(%rbp)
  9b:	74 16                	je     b3 <RDMHandler::GetSensorDefinition(unsigned short)+0xb3>
  9d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  a1:	be 06 00 00 00       	mov    $0x6,%esi
  a6:	48 89 c7             	mov    %rax,%rdi
  a9:	e8 00 00 00 00       	call   ae <RDMHandler::GetSensorDefinition(unsigned short)+0xae>
  ae:	e9 3c 01 00 00       	jmp    1ef <RDMHandler::GetSensorDefinition(unsigned short)+0x1ef>
  b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  b7:	0f b6 55 df          	movzbl -0x21(%rbp),%edx
  bb:	88 50 18             	mov    %dl,0x18(%rax)
  be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c2:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ca:	88 50 19             	mov    %dl,0x19(%rax)
  cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d1:	0f b6 50 02          	movzbl 0x2(%rax),%edx
  d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  d9:	88 50 1a             	mov    %dl,0x1a(%rax)
  dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e0:	0f b6 50 03          	movzbl 0x3(%rax),%edx
  e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  e8:	88 50 1b             	mov    %dl,0x1b(%rax)
  eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ef:	0f b7 40 04          	movzwl 0x4(%rax),%eax
  f3:	66 c1 f8 08          	sar    $0x8,%ax
  f7:	89 c2                	mov    %eax,%edx
  f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  fd:	88 50 1c             	mov    %dl,0x1c(%rax)
 100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 104:	0f b7 40 04          	movzwl 0x4(%rax),%eax
 108:	89 c2                	mov    %eax,%edx
 10a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 10e:	88 50 1d             	mov    %dl,0x1d(%rax)
 111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 115:	0f b7 40 06          	movzwl 0x6(%rax),%eax
 119:	66 c1 f8 08          	sar    $0x8,%ax
 11d:	89 c2                	mov    %eax,%edx
 11f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 123:	88 50 1e             	mov    %dl,0x1e(%rax)
 126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 12a:	0f b7 40 06          	movzwl 0x6(%rax),%eax
 12e:	89 c2                	mov    %eax,%edx
 130:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 134:	88 50 1f             	mov    %dl,0x1f(%rax)
 137:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 13b:	0f b7 40 08          	movzwl 0x8(%rax),%eax
 13f:	66 c1 f8 08          	sar    $0x8,%ax
 143:	89 c2                	mov    %eax,%edx
 145:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 149:	88 50 20             	mov    %dl,0x20(%rax)
 14c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 150:	0f b7 40 08          	movzwl 0x8(%rax),%eax
 154:	89 c2                	mov    %eax,%edx
 156:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 15a:	88 50 21             	mov    %dl,0x21(%rax)
 15d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 161:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
 165:	66 c1 f8 08          	sar    $0x8,%ax
 169:	89 c2                	mov    %eax,%edx
 16b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 16f:	88 50 22             	mov    %dl,0x22(%rax)
 172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 176:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
 17a:	89 c2                	mov    %eax,%edx
 17c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 180:	88 50 23             	mov    %dl,0x23(%rax)
 183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 187:	0f b6 50 2d          	movzbl 0x2d(%rax),%edx
 18b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 18f:	88 50 24             	mov    %dl,0x24(%rax)
 192:	c7 45 e0 0d 00 00 00 	movl   $0xd,-0x20(%rbp)
 199:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 1a0:	eb 25                	jmp    1c7 <RDMHandler::GetSensorDefinition(unsigned short)+0x1c7>
 1a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 1a6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 1a9:	48 98                	cltq   
 1ab:	0f b6 4c 02 0c       	movzbl 0xc(%rdx,%rax,1),%ecx
 1b0:	8b 45 e0             	mov    -0x20(%rbp),%eax
 1b3:	8d 50 01             	lea    0x1(%rax),%edx
 1b6:	89 55 e0             	mov    %edx,-0x20(%rbp)
 1b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 1bd:	48 98                	cltq   
 1bf:	88 4c 02 18          	mov    %cl,0x18(%rdx,%rax,1)
 1c3:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 1c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1cb:	0f b6 40 2c          	movzbl 0x2c(%rax),%eax
 1cf:	0f b6 c0             	movzbl %al,%eax
 1d2:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
 1d5:	7c cb                	jl     1a2 <RDMHandler::GetSensorDefinition(unsigned short)+0x1a2>
 1d7:	8b 45 e0             	mov    -0x20(%rbp),%eax
 1da:	89 c2                	mov    %eax,%edx
 1dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1e0:	88 50 17             	mov    %dl,0x17(%rax)
 1e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1e7:	48 89 c7             	mov    %rax,%rdi
 1ea:	e8 00 00 00 00       	call   1ef <RDMHandler::GetSensorDefinition(unsigned short)+0x1ef>
 1ef:	c9                   	leave  
 1f0:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler14GetSensorValueEt:

0000000000000000 <RDMHandler::GetSensorValue(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  1a:	48 8b 40 08          	mov    0x8(%rax),%rax
  1e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  26:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  2a:	3c 01                	cmp    $0x1,%al
  2c:	74 16                	je     44 <RDMHandler::GetSensorValue(unsigned short)+0x44>
  2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  32:	be 01 00 00 00       	mov    $0x1,%esi
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	e8 00 00 00 00       	call   3f <RDMHandler::GetSensorValue(unsigned short)+0x3f>
  3f:	e9 53 01 00 00       	jmp    197 <RDMHandler::GetSensorValue(unsigned short)+0x197>
  44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  48:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  4c:	88 45 e7             	mov    %al,-0x19(%rbp)
  4f:	80 7d e7 ff          	cmpb   $0xff,-0x19(%rbp)
  53:	74 12                	je     67 <RDMHandler::GetSensorValue(unsigned short)+0x67>
  55:	e8 00 00 00 00       	call   5a <RDMHandler::GetSensorValue(unsigned short)+0x5a>
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	call   62 <RDMHandler::GetSensorValue(unsigned short)+0x62>
  62:	38 45 e7             	cmp    %al,-0x19(%rbp)
  65:	72 07                	jb     6e <RDMHandler::GetSensorValue(unsigned short)+0x6e>
  67:	b8 01 00 00 00       	mov    $0x1,%eax
  6c:	eb 05                	jmp    73 <RDMHandler::GetSensorValue(unsigned short)+0x73>
  6e:	b8 00 00 00 00       	mov    $0x0,%eax
  73:	84 c0                	test   %al,%al
  75:	74 16                	je     8d <RDMHandler::GetSensorValue(unsigned short)+0x8d>
  77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  7b:	be 06 00 00 00       	mov    $0x6,%esi
  80:	48 89 c7             	mov    %rax,%rdi
  83:	e8 00 00 00 00       	call   88 <RDMHandler::GetSensorValue(unsigned short)+0x88>
  88:	e9 0a 01 00 00       	jmp    197 <RDMHandler::GetSensorValue(unsigned short)+0x197>
  8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  91:	48 8b 40 10          	mov    0x10(%rax),%rax
  95:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  99:	e8 00 00 00 00       	call   9e <RDMHandler::GetSensorValue(unsigned short)+0x9e>
  9e:	48 89 c2             	mov    %rax,%rdx
  a1:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  a5:	89 c6                	mov    %eax,%esi
  a7:	48 89 d7             	mov    %rdx,%rdi
  aa:	e8 00 00 00 00       	call   af <RDMHandler::GetSensorValue(unsigned short)+0xaf>
  af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b7:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  bb:	38 45 e7             	cmp    %al,-0x19(%rbp)
  be:	74 16                	je     d6 <RDMHandler::GetSensorValue(unsigned short)+0xd6>
  c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c4:	be 06 00 00 00       	mov    $0x6,%esi
  c9:	48 89 c7             	mov    %rax,%rdi
  cc:	e8 00 00 00 00       	call   d1 <RDMHandler::GetSensorValue(unsigned short)+0xd1>
  d1:	e9 c1 00 00 00       	jmp    197 <RDMHandler::GetSensorValue(unsigned short)+0x197>
  d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  da:	c6 40 17 09          	movb   $0x9,0x17(%rax)
  de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  e2:	c6 40 02 21          	movb   $0x21,0x2(%rax)
  e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ea:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  f2:	88 50 18             	mov    %dl,0x18(%rax)
  f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  f9:	0f b7 00             	movzwl (%rax),%eax
  fc:	66 c1 f8 08          	sar    $0x8,%ax
 100:	89 c2                	mov    %eax,%edx
 102:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 106:	88 50 19             	mov    %dl,0x19(%rax)
 109:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 10d:	0f b7 00             	movzwl (%rax),%eax
 110:	89 c2                	mov    %eax,%edx
 112:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 116:	88 50 1a             	mov    %dl,0x1a(%rax)
 119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 11d:	0f b7 40 02          	movzwl 0x2(%rax),%eax
 121:	66 c1 f8 08          	sar    $0x8,%ax
 125:	89 c2                	mov    %eax,%edx
 127:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 12b:	88 50 1b             	mov    %dl,0x1b(%rax)
 12e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 132:	0f b7 40 02          	movzwl 0x2(%rax),%eax
 136:	89 c2                	mov    %eax,%edx
 138:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 13c:	88 50 1c             	mov    %dl,0x1c(%rax)
 13f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 143:	0f b7 40 04          	movzwl 0x4(%rax),%eax
 147:	66 c1 f8 08          	sar    $0x8,%ax
 14b:	89 c2                	mov    %eax,%edx
 14d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 151:	88 50 1d             	mov    %dl,0x1d(%rax)
 154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 158:	0f b7 40 04          	movzwl 0x4(%rax),%eax
 15c:	89 c2                	mov    %eax,%edx
 15e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 162:	88 50 1e             	mov    %dl,0x1e(%rax)
 165:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 169:	0f b7 40 06          	movzwl 0x6(%rax),%eax
 16d:	66 c1 f8 08          	sar    $0x8,%ax
 171:	89 c2                	mov    %eax,%edx
 173:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 177:	88 50 1f             	mov    %dl,0x1f(%rax)
 17a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 17e:	0f b7 40 06          	movzwl 0x6(%rax),%eax
 182:	89 c2                	mov    %eax,%edx
 184:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 188:	88 50 20             	mov    %dl,0x20(%rax)
 18b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 18f:	48 89 c7             	mov    %rax,%rdi
 192:	e8 00 00 00 00       	call   197 <RDMHandler::GetSensorValue(unsigned short)+0x197>
 197:	c9                   	leave  
 198:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler14SetSensorValueEbt:

0000000000000000 <RDMHandler::SetSensorValue(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 d4             	mov    %dl,-0x2c(%rbp)
  19:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
  1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 01                	cmp    $0x1,%al
  33:	74 16                	je     4b <RDMHandler::SetSensorValue(bool, unsigned short)+0x4b>
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetSensorValue(bool, unsigned short)+0x46>
  46:	e9 c2 01 00 00       	jmp    20d <RDMHandler::SetSensorValue(bool, unsigned short)+0x20d>
  4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4f:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  53:	88 45 e7             	mov    %al,-0x19(%rbp)
  56:	80 7d e7 ff          	cmpb   $0xff,-0x19(%rbp)
  5a:	74 19                	je     75 <RDMHandler::SetSensorValue(bool, unsigned short)+0x75>
  5c:	e8 00 00 00 00       	call   61 <RDMHandler::SetSensorValue(bool, unsigned short)+0x61>
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <RDMHandler::SetSensorValue(bool, unsigned short)+0x69>
  69:	38 45 e7             	cmp    %al,-0x19(%rbp)
  6c:	72 07                	jb     75 <RDMHandler::SetSensorValue(bool, unsigned short)+0x75>
  6e:	b8 01 00 00 00       	mov    $0x1,%eax
  73:	eb 05                	jmp    7a <RDMHandler::SetSensorValue(bool, unsigned short)+0x7a>
  75:	b8 00 00 00 00       	mov    $0x0,%eax
  7a:	84 c0                	test   %al,%al
  7c:	74 16                	je     94 <RDMHandler::SetSensorValue(bool, unsigned short)+0x94>
  7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  82:	be 06 00 00 00       	mov    $0x6,%esi
  87:	48 89 c7             	mov    %rax,%rdi
  8a:	e8 00 00 00 00       	call   8f <RDMHandler::SetSensorValue(bool, unsigned short)+0x8f>
  8f:	e9 79 01 00 00       	jmp    20d <RDMHandler::SetSensorValue(bool, unsigned short)+0x20d>
  94:	e8 00 00 00 00       	call   99 <RDMHandler::SetSensorValue(bool, unsigned short)+0x99>
  99:	48 89 c2             	mov    %rax,%rdx
  9c:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  a0:	89 c6                	mov    %eax,%esi
  a2:	48 89 d7             	mov    %rdx,%rdi
  a5:	e8 00 00 00 00       	call   aa <RDMHandler::SetSensorValue(bool, unsigned short)+0xaa>
  aa:	80 7d d4 00          	cmpb   $0x0,-0x2c(%rbp)
  ae:	0f 85 58 01 00 00    	jne    20c <RDMHandler::SetSensorValue(bool, unsigned short)+0x20c>
  b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b8:	48 8b 40 10          	mov    0x10(%rax),%rax
  bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  c0:	80 7d e7 ff          	cmpb   $0xff,-0x19(%rbp)
  c4:	75 69                	jne    12f <RDMHandler::SetSensorValue(bool, unsigned short)+0x12f>
  c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ca:	c6 40 17 09          	movb   $0x9,0x17(%rax)
  ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  d2:	c6 40 02 21          	movb   $0x21,0x2(%rax)
  d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  da:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  e2:	c6 40 19 00          	movb   $0x0,0x19(%rax)
  e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ea:	c6 40 1a 00          	movb   $0x0,0x1a(%rax)
  ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  f2:	c6 40 1b 00          	movb   $0x0,0x1b(%rax)
  f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  fa:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
  fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 102:	c6 40 1d 00          	movb   $0x0,0x1d(%rax)
 106:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 10a:	c6 40 1e 00          	movb   $0x0,0x1e(%rax)
 10e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 112:	c6 40 1f 00          	movb   $0x0,0x1f(%rax)
 116:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 11a:	c6 40 20 00          	movb   $0x0,0x20(%rax)
 11e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 122:	48 89 c7             	mov    %rax,%rdi
 125:	e8 00 00 00 00       	call   12a <RDMHandler::SetSensorValue(bool, unsigned short)+0x12a>
 12a:	e9 de 00 00 00       	jmp    20d <RDMHandler::SetSensorValue(bool, unsigned short)+0x20d>
 12f:	e8 00 00 00 00       	call   134 <RDMHandler::SetSensorValue(bool, unsigned short)+0x134>
 134:	48 89 c2             	mov    %rax,%rdx
 137:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
 13b:	89 c6                	mov    %eax,%esi
 13d:	48 89 d7             	mov    %rdx,%rdi
 140:	e8 00 00 00 00       	call   145 <RDMHandler::SetSensorValue(bool, unsigned short)+0x145>
 145:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 149:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 14d:	c6 40 17 09          	movb   $0x9,0x17(%rax)
 151:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 155:	c6 40 02 21          	movb   $0x21,0x2(%rax)
 159:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 15d:	0f b6 50 08          	movzbl 0x8(%rax),%edx
 161:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 165:	88 50 18             	mov    %dl,0x18(%rax)
 168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 16c:	0f b7 00             	movzwl (%rax),%eax
 16f:	66 c1 f8 08          	sar    $0x8,%ax
 173:	89 c2                	mov    %eax,%edx
 175:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 179:	88 50 19             	mov    %dl,0x19(%rax)
 17c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 180:	0f b7 00             	movzwl (%rax),%eax
 183:	89 c2                	mov    %eax,%edx
 185:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 189:	88 50 1a             	mov    %dl,0x1a(%rax)
 18c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 190:	0f b7 40 02          	movzwl 0x2(%rax),%eax
 194:	66 c1 f8 08          	sar    $0x8,%ax
 198:	89 c2                	mov    %eax,%edx
 19a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 19e:	88 50 1b             	mov    %dl,0x1b(%rax)
 1a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1a5:	0f b7 40 02          	movzwl 0x2(%rax),%eax
 1a9:	89 c2                	mov    %eax,%edx
 1ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1af:	88 50 1c             	mov    %dl,0x1c(%rax)
 1b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1b6:	0f b7 40 04          	movzwl 0x4(%rax),%eax
 1ba:	66 c1 f8 08          	sar    $0x8,%ax
 1be:	89 c2                	mov    %eax,%edx
 1c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1c4:	88 50 1d             	mov    %dl,0x1d(%rax)
 1c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1cb:	0f b7 40 04          	movzwl 0x4(%rax),%eax
 1cf:	89 c2                	mov    %eax,%edx
 1d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1d5:	88 50 1e             	mov    %dl,0x1e(%rax)
 1d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1dc:	0f b7 40 06          	movzwl 0x6(%rax),%eax
 1e0:	66 c1 f8 08          	sar    $0x8,%ax
 1e4:	89 c2                	mov    %eax,%edx
 1e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1ea:	88 50 1f             	mov    %dl,0x1f(%rax)
 1ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1f1:	0f b7 40 06          	movzwl 0x6(%rax),%eax
 1f5:	89 c2                	mov    %eax,%edx
 1f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1fb:	88 50 20             	mov    %dl,0x20(%rax)
 1fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 202:	48 89 c7             	mov    %rax,%rdi
 205:	e8 00 00 00 00       	call   20a <RDMHandler::SetSensorValue(bool, unsigned short)+0x20a>
 20a:	eb 01                	jmp    20d <RDMHandler::SetSensorValue(bool, unsigned short)+0x20d>
 20c:	90                   	nop
 20d:	c9                   	leave  
 20e:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler16SetRecordSensorsEbt:

0000000000000000 <RDMHandler::SetRecordSensors(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 d4             	mov    %dl,-0x2c(%rbp)
  19:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
  1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 01                	cmp    $0x1,%al
  33:	74 16                	je     4b <RDMHandler::SetRecordSensors(bool, unsigned short)+0x4b>
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetRecordSensors(bool, unsigned short)+0x46>
  46:	e9 bf 00 00 00       	jmp    10a <RDMHandler::SetRecordSensors(bool, unsigned short)+0x10a>
  4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4f:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  53:	88 45 ef             	mov    %al,-0x11(%rbp)
  56:	80 7d ef ff          	cmpb   $0xff,-0x11(%rbp)
  5a:	75 18                	jne    74 <RDMHandler::SetRecordSensors(bool, unsigned short)+0x74>
  5c:	e8 00 00 00 00       	call   61 <RDMHandler::SetRecordSensors(bool, unsigned short)+0x61>
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <RDMHandler::SetRecordSensors(bool, unsigned short)+0x69>
  69:	84 c0                	test   %al,%al
  6b:	75 07                	jne    74 <RDMHandler::SetRecordSensors(bool, unsigned short)+0x74>
  6d:	b8 01 00 00 00       	mov    $0x1,%eax
  72:	eb 05                	jmp    79 <RDMHandler::SetRecordSensors(bool, unsigned short)+0x79>
  74:	b8 00 00 00 00       	mov    $0x0,%eax
  79:	84 c0                	test   %al,%al
  7b:	74 13                	je     90 <RDMHandler::SetRecordSensors(bool, unsigned short)+0x90>
  7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  81:	be 06 00 00 00       	mov    $0x6,%esi
  86:	48 89 c7             	mov    %rax,%rdi
  89:	e8 00 00 00 00       	call   8e <RDMHandler::SetRecordSensors(bool, unsigned short)+0x8e>
  8e:	eb 7a                	jmp    10a <RDMHandler::SetRecordSensors(bool, unsigned short)+0x10a>
  90:	80 7d ef ff          	cmpb   $0xff,-0x11(%rbp)
  94:	74 19                	je     af <RDMHandler::SetRecordSensors(bool, unsigned short)+0xaf>
  96:	e8 00 00 00 00       	call   9b <RDMHandler::SetRecordSensors(bool, unsigned short)+0x9b>
  9b:	48 89 c7             	mov    %rax,%rdi
  9e:	e8 00 00 00 00       	call   a3 <RDMHandler::SetRecordSensors(bool, unsigned short)+0xa3>
  a3:	38 45 ef             	cmp    %al,-0x11(%rbp)
  a6:	72 07                	jb     af <RDMHandler::SetRecordSensors(bool, unsigned short)+0xaf>
  a8:	b8 01 00 00 00       	mov    $0x1,%eax
  ad:	eb 05                	jmp    b4 <RDMHandler::SetRecordSensors(bool, unsigned short)+0xb4>
  af:	b8 00 00 00 00       	mov    $0x0,%eax
  b4:	84 c0                	test   %al,%al
  b6:	74 13                	je     cb <RDMHandler::SetRecordSensors(bool, unsigned short)+0xcb>
  b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  bc:	be 06 00 00 00       	mov    $0x6,%esi
  c1:	48 89 c7             	mov    %rax,%rdi
  c4:	e8 00 00 00 00       	call   c9 <RDMHandler::SetRecordSensors(bool, unsigned short)+0xc9>
  c9:	eb 3f                	jmp    10a <RDMHandler::SetRecordSensors(bool, unsigned short)+0x10a>
  cb:	e8 00 00 00 00       	call   d0 <RDMHandler::SetRecordSensors(bool, unsigned short)+0xd0>
  d0:	48 89 c2             	mov    %rax,%rdx
  d3:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
  d7:	89 c6                	mov    %eax,%esi
  d9:	48 89 d7             	mov    %rdx,%rdi
  dc:	e8 00 00 00 00       	call   e1 <RDMHandler::SetRecordSensors(bool, unsigned short)+0xe1>
  e1:	80 7d d4 00          	cmpb   $0x0,-0x2c(%rbp)
  e5:	75 22                	jne    109 <RDMHandler::SetRecordSensors(bool, unsigned short)+0x109>
  e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  eb:	48 8b 40 10          	mov    0x10(%rax),%rax
  ef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  f7:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ff:	48 89 c7             	mov    %rax,%rdi
 102:	e8 00 00 00 00       	call   107 <RDMHandler::SetRecordSensors(bool, unsigned short)+0x107>
 107:	eb 01                	jmp    10a <RDMHandler::SetRecordSensors(bool, unsigned short)+0x10a>
 109:	90                   	nop
 10a:	c9                   	leave  
 10b:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler14GetDeviceHoursEt:

0000000000000000 <RDMHandler::GetDeviceHours(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	e8 00 00 00 00       	call   1b <RDMHandler::GetDeviceHours(unsigned short)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <RDMHandler::GetDeviceHours(unsigned short)+0x23>
  23:	89 c2                	mov    %eax,%edx
  25:	b8 c5 b3 a2 91       	mov    $0x91a2b3c5,%eax
  2a:	48 0f af c2          	imul   %rdx,%rax
  2e:	48 c1 e8 20          	shr    $0x20,%rax
  32:	c1 e8 0b             	shr    $0xb,%eax
  35:	89 c0                	mov    %eax,%eax
  37:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  3b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  44:	76 09                	jbe    4f <RDMHandler::GetDeviceHours(unsigned short)+0x4f>
  46:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  53:	48 8b 40 10          	mov    0x10(%rax),%rax
  57:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5f:	c6 40 17 04          	movb   $0x4,0x17(%rax)
  63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  67:	48 c1 e8 18          	shr    $0x18,%rax
  6b:	89 c2                	mov    %eax,%edx
  6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  71:	88 50 18             	mov    %dl,0x18(%rax)
  74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  78:	48 c1 e8 10          	shr    $0x10,%rax
  7c:	89 c2                	mov    %eax,%edx
  7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  82:	88 50 19             	mov    %dl,0x19(%rax)
  85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  89:	48 c1 e8 08          	shr    $0x8,%rax
  8d:	89 c2                	mov    %eax,%edx
  8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  93:	88 50 1a             	mov    %dl,0x1a(%rax)
  96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  9a:	89 c2                	mov    %eax,%edx
  9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a0:	88 50 1b             	mov    %dl,0x1b(%rax)
  a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a7:	48 89 c7             	mov    %rax,%rdi
  aa:	e8 00 00 00 00       	call   af <RDMHandler::GetDeviceHours(unsigned short)+0xaf>
  af:	90                   	nop
  b0:	c9                   	leave  
  b1:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler14SetDeviceHoursEbt:

0000000000000000 <RDMHandler::SetDeviceHours(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 f4             	mov    %dl,-0xc(%rbp)
  19:	66 89 45 f0          	mov    %ax,-0x10(%rbp)
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	be 04 00 00 00       	mov    $0x4,%esi
  26:	48 89 c7             	mov    %rax,%rdi
  29:	e8 00 00 00 00       	call   2e <RDMHandler::SetDeviceHours(bool, unsigned short)+0x2e>
  2e:	90                   	nop
  2f:	c9                   	leave  
  30:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler16GetDisplayInvertEt:

0000000000000000 <RDMHandler::GetDisplayInvert(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1a:	48 8b 40 10          	mov    0x10(%rax),%rax
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	c6 40 17 01          	movb   $0x1,0x17(%rax)
  2a:	e8 00 00 00 00       	call   2f <RDMHandler::GetDisplayInvert(unsigned short)+0x2f>
  2f:	48 89 c7             	mov    %rax,%rdi
  32:	e8 00 00 00 00       	call   37 <RDMHandler::GetDisplayInvert(unsigned short)+0x37>
  37:	84 c0                	test   %al,%al
  39:	74 07                	je     42 <RDMHandler::GetDisplayInvert(unsigned short)+0x42>
  3b:	ba 01 00 00 00       	mov    $0x1,%edx
  40:	eb 05                	jmp    47 <RDMHandler::GetDisplayInvert(unsigned short)+0x47>
  42:	ba 00 00 00 00       	mov    $0x0,%edx
  47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4b:	88 50 18             	mov    %dl,0x18(%rax)
  4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	call   5a <RDMHandler::GetDisplayInvert(unsigned short)+0x5a>
  5a:	90                   	nop
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler16SetDisplayInvertEbt:

0000000000000000 <RDMHandler::SetDisplayInvert(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 d4             	mov    %dl,-0x2c(%rbp)
  19:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
  1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 01                	cmp    $0x1,%al
  33:	74 13                	je     48 <RDMHandler::SetDisplayInvert(bool, unsigned short)+0x48>
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetDisplayInvert(bool, unsigned short)+0x46>
  46:	eb 5e                	jmp    a6 <RDMHandler::SetDisplayInvert(bool, unsigned short)+0xa6>
  48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4c:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  50:	88 45 ef             	mov    %al,-0x11(%rbp)
  53:	80 7d ef 02          	cmpb   $0x2,-0x11(%rbp)
  57:	75 11                	jne    6a <RDMHandler::SetDisplayInvert(bool, unsigned short)+0x6a>
  59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5d:	be 06 00 00 00       	mov    $0x6,%esi
  62:	48 89 c7             	mov    %rax,%rdi
  65:	e8 00 00 00 00       	call   6a <RDMHandler::SetDisplayInvert(bool, unsigned short)+0x6a>
  6a:	e8 00 00 00 00       	call   6f <RDMHandler::SetDisplayInvert(bool, unsigned short)+0x6f>
  6f:	48 89 c2             	mov    %rax,%rdx
  72:	80 7d ef 01          	cmpb   $0x1,-0x11(%rbp)
  76:	0f 94 c0             	sete   %al
  79:	0f b6 c0             	movzbl %al,%eax
  7c:	89 c6                	mov    %eax,%esi
  7e:	48 89 d7             	mov    %rdx,%rdi
  81:	e8 00 00 00 00       	call   86 <RDMHandler::SetDisplayInvert(bool, unsigned short)+0x86>
  86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  8a:	48 8b 40 10          	mov    0x10(%rax),%rax
  8e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  96:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9e:	48 89 c7             	mov    %rax,%rdi
  a1:	e8 00 00 00 00       	call   a6 <RDMHandler::SetDisplayInvert(bool, unsigned short)+0xa6>
  a6:	c9                   	leave  
  a7:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler15GetDisplayLevelEt:

0000000000000000 <RDMHandler::GetDisplayLevel(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1a:	48 8b 40 10          	mov    0x10(%rax),%rax
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	c6 40 17 01          	movb   $0x1,0x17(%rax)
  2a:	e8 00 00 00 00       	call   2f <RDMHandler::GetDisplayLevel(unsigned short)+0x2f>
  2f:	48 89 c7             	mov    %rax,%rdi
  32:	e8 00 00 00 00       	call   37 <RDMHandler::GetDisplayLevel(unsigned short)+0x37>
  37:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  3b:	88 42 18             	mov    %al,0x18(%rdx)
  3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42:	48 89 c7             	mov    %rax,%rdi
  45:	e8 00 00 00 00       	call   4a <RDMHandler::GetDisplayLevel(unsigned short)+0x4a>
  4a:	90                   	nop
  4b:	c9                   	leave  
  4c:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler15SetDisplayLevelEbt:

0000000000000000 <RDMHandler::SetDisplayLevel(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 d4             	mov    %dl,-0x2c(%rbp)
  19:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
  1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 01                	cmp    $0x1,%al
  33:	74 13                	je     48 <RDMHandler::SetDisplayLevel(bool, unsigned short)+0x48>
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetDisplayLevel(bool, unsigned short)+0x46>
  46:	eb 6d                	jmp    b5 <RDMHandler::SetDisplayLevel(bool, unsigned short)+0xb5>
  48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4c:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  50:	88 45 ef             	mov    %al,-0x11(%rbp)
  53:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
  57:	74 14                	je     6d <RDMHandler::SetDisplayLevel(bool, unsigned short)+0x6d>
  59:	e8 00 00 00 00       	call   5e <RDMHandler::SetDisplayLevel(bool, unsigned short)+0x5e>
  5e:	be 00 00 00 00       	mov    $0x0,%esi
  63:	48 89 c7             	mov    %rax,%rdi
  66:	e8 00 00 00 00       	call   6b <RDMHandler::SetDisplayLevel(bool, unsigned short)+0x6b>
  6b:	eb 12                	jmp    7f <RDMHandler::SetDisplayLevel(bool, unsigned short)+0x7f>
  6d:	e8 00 00 00 00       	call   72 <RDMHandler::SetDisplayLevel(bool, unsigned short)+0x72>
  72:	be 01 00 00 00       	mov    $0x1,%esi
  77:	48 89 c7             	mov    %rax,%rdi
  7a:	e8 00 00 00 00       	call   7f <RDMHandler::SetDisplayLevel(bool, unsigned short)+0x7f>
  7f:	e8 00 00 00 00       	call   84 <RDMHandler::SetDisplayLevel(bool, unsigned short)+0x84>
  84:	48 89 c2             	mov    %rax,%rdx
  87:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
  8b:	89 c6                	mov    %eax,%esi
  8d:	48 89 d7             	mov    %rdx,%rdi
  90:	e8 00 00 00 00       	call   95 <RDMHandler::SetDisplayLevel(bool, unsigned short)+0x95>
  95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  99:	48 8b 40 10          	mov    0x10(%rax),%rax
  9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a5:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ad:	48 89 c7             	mov    %rax,%rdi
  b0:	e8 00 00 00 00       	call   b5 <RDMHandler::SetDisplayLevel(bool, unsigned short)+0xb5>
  b5:	c9                   	leave  
  b6:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler16GetRealTimeClockEt:

0000000000000000 <RDMHandler::GetRealTimeClock(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 60          	sub    $0x60,%rsp
   c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 a4          	mov    %ax,-0x5c(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	e8 00 00 00 00       	call   2a <RDMHandler::GetRealTimeClock(unsigned short)+0x2a>
  2a:	48 89 c2             	mov    %rax,%rdx
  2d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  31:	48 89 c6             	mov    %rax,%rsi
  34:	48 89 d7             	mov    %rdx,%rdi
  37:	e8 00 00 00 00       	call   3c <RDMHandler::GetRealTimeClock(unsigned short)+0x3c>
  3c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  3f:	66 05 6c 07          	add    $0x76c,%ax
  43:	66 89 45 b6          	mov    %ax,-0x4a(%rbp)
  47:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4b:	48 8b 40 10          	mov    0x10(%rax),%rax
  4f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  53:	0f b7 45 b6          	movzwl -0x4a(%rbp),%eax
  57:	66 c1 e8 08          	shr    $0x8,%ax
  5b:	89 c2                	mov    %eax,%edx
  5d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  61:	88 50 18             	mov    %dl,0x18(%rax)
  64:	0f b7 45 b6          	movzwl -0x4a(%rbp),%eax
  68:	89 c2                	mov    %eax,%edx
  6a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  6e:	88 50 19             	mov    %dl,0x19(%rax)
  71:	8b 45 d0             	mov    -0x30(%rbp),%eax
  74:	8d 50 01             	lea    0x1(%rax),%edx
  77:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  7b:	88 50 1a             	mov    %dl,0x1a(%rax)
  7e:	8b 45 cc             	mov    -0x34(%rbp),%eax
  81:	89 c2                	mov    %eax,%edx
  83:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  87:	88 50 1b             	mov    %dl,0x1b(%rax)
  8a:	8b 45 c8             	mov    -0x38(%rbp),%eax
  8d:	89 c2                	mov    %eax,%edx
  8f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  93:	88 50 1c             	mov    %dl,0x1c(%rax)
  96:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  99:	89 c2                	mov    %eax,%edx
  9b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  9f:	88 50 1d             	mov    %dl,0x1d(%rax)
  a2:	8b 45 c0             	mov    -0x40(%rbp),%eax
  a5:	89 c2                	mov    %eax,%edx
  a7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  ab:	88 50 1e             	mov    %dl,0x1e(%rax)
  ae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  b2:	c6 40 17 07          	movb   $0x7,0x17(%rax)
  b6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  ba:	48 89 c7             	mov    %rax,%rdi
  bd:	e8 00 00 00 00       	call   c2 <RDMHandler::GetRealTimeClock(unsigned short)+0xc2>
  c2:	90                   	nop
  c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  ce:	00 00 
  d0:	74 05                	je     d7 <RDMHandler::GetRealTimeClock(unsigned short)+0xd7>
  d2:	e8 00 00 00 00       	call   d7 <RDMHandler::GetRealTimeClock(unsigned short)+0xd7>
  d7:	c9                   	leave  
  d8:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler16SetRealTimeClockEbt:

0000000000000000 <RDMHandler::SetRealTimeClock(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 60          	sub    $0x60,%rsp
   c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 a4             	mov    %dl,-0x5c(%rbp)
  19:	66 89 45 a0          	mov    %ax,-0x60(%rbp)
  1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  24:	00 00 
  26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2a:	31 c0                	xor    %eax,%eax
  2c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  30:	48 8b 40 08          	mov    0x8(%rax),%rax
  34:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  38:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  3c:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  40:	3c 07                	cmp    $0x7,%al
  42:	74 16                	je     5a <RDMHandler::SetRealTimeClock(bool, unsigned short)+0x5a>
  44:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  48:	be 01 00 00 00       	mov    $0x1,%esi
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	e8 00 00 00 00       	call   55 <RDMHandler::SetRealTimeClock(bool, unsigned short)+0x55>
  55:	e9 e1 00 00 00       	jmp    13b <RDMHandler::SetRealTimeClock(bool, unsigned short)+0x13b>
  5a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  5e:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  62:	0f b6 c0             	movzbl %al,%eax
  65:	c1 e0 08             	shl    $0x8,%eax
  68:	89 c2                	mov    %eax,%edx
  6a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  6e:	0f b6 40 18          	movzbl 0x18(%rax),%eax
  72:	0f b6 c0             	movzbl %al,%eax
  75:	01 d0                	add    %edx,%eax
  77:	2d 6c 07 00 00       	sub    $0x76c,%eax
  7c:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  7f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  83:	0f b6 40 19          	movzbl 0x19(%rax),%eax
  87:	0f b6 c0             	movzbl %al,%eax
  8a:	83 e8 01             	sub    $0x1,%eax
  8d:	89 45 d0             	mov    %eax,-0x30(%rbp)
  90:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  94:	0f b6 40 1a          	movzbl 0x1a(%rax),%eax
  98:	0f b6 c0             	movzbl %al,%eax
  9b:	89 45 cc             	mov    %eax,-0x34(%rbp)
  9e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  a2:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  a6:	0f b6 c0             	movzbl %al,%eax
  a9:	89 45 c8             	mov    %eax,-0x38(%rbp)
  ac:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  b0:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
  b4:	0f b6 c0             	movzbl %al,%eax
  b7:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  ba:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  be:	0f b6 40 1d          	movzbl 0x1d(%rax),%eax
  c2:	0f b6 c0             	movzbl %al,%eax
  c5:	89 45 c0             	mov    %eax,-0x40(%rbp)
  c8:	0f b6 45 a4          	movzbl -0x5c(%rbp),%eax
  cc:	83 f0 01             	xor    $0x1,%eax
  cf:	84 c0                	test   %al,%al
  d1:	74 25                	je     f8 <RDMHandler::SetRealTimeClock(bool, unsigned short)+0xf8>
  d3:	e8 00 00 00 00       	call   d8 <RDMHandler::SetRealTimeClock(bool, unsigned short)+0xd8>
  d8:	48 89 c2             	mov    %rax,%rdx
  db:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
  df:	48 89 c6             	mov    %rax,%rsi
  e2:	48 89 d7             	mov    %rdx,%rdi
  e5:	e8 00 00 00 00       	call   ea <RDMHandler::SetRealTimeClock(bool, unsigned short)+0xea>
  ea:	83 f0 01             	xor    $0x1,%eax
  ed:	84 c0                	test   %al,%al
  ef:	74 07                	je     f8 <RDMHandler::SetRealTimeClock(bool, unsigned short)+0xf8>
  f1:	b8 01 00 00 00       	mov    $0x1,%eax
  f6:	eb 05                	jmp    fd <RDMHandler::SetRealTimeClock(bool, unsigned short)+0xfd>
  f8:	b8 00 00 00 00       	mov    $0x0,%eax
  fd:	84 c0                	test   %al,%al
  ff:	74 11                	je     112 <RDMHandler::SetRealTimeClock(bool, unsigned short)+0x112>
 101:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 105:	be 04 00 00 00       	mov    $0x4,%esi
 10a:	48 89 c7             	mov    %rax,%rdi
 10d:	e8 00 00 00 00       	call   112 <RDMHandler::SetRealTimeClock(bool, unsigned short)+0x112>
 112:	80 7d a4 00          	cmpb   $0x0,-0x5c(%rbp)
 116:	75 22                	jne    13a <RDMHandler::SetRealTimeClock(bool, unsigned short)+0x13a>
 118:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 11c:	48 8b 40 10          	mov    0x10(%rax),%rax
 120:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 124:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 128:	c6 40 17 00          	movb   $0x0,0x17(%rax)
 12c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 130:	48 89 c7             	mov    %rax,%rdi
 133:	e8 00 00 00 00       	call   138 <RDMHandler::SetRealTimeClock(bool, unsigned short)+0x138>
 138:	eb 01                	jmp    13b <RDMHandler::SetRealTimeClock(bool, unsigned short)+0x13b>
 13a:	90                   	nop
 13b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 13f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 146:	00 00 
 148:	74 05                	je     14f <RDMHandler::SetRealTimeClock(bool, unsigned short)+0x14f>
 14a:	e8 00 00 00 00       	call   14f <RDMHandler::SetRealTimeClock(bool, unsigned short)+0x14f>
 14f:	c9                   	leave  
 150:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler13GetPowerStateEt:

0000000000000000 <RDMHandler::GetPowerState(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1a:	48 8b 40 10          	mov    0x10(%rax),%rax
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	c6 40 17 01          	movb   $0x1,0x17(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	c6 40 18 ff          	movb   $0xff,0x18(%rax)
  32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  36:	48 89 c7             	mov    %rax,%rdi
  39:	e8 00 00 00 00       	call   3e <RDMHandler::GetPowerState(unsigned short)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler13SetPowerStateEbt:

0000000000000000 <RDMHandler::SetPowerState(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 d4             	mov    %dl,-0x2c(%rbp)
  19:	66 89 45 d0          	mov    %ax,-0x30(%rbp)
  1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 01                	cmp    $0x1,%al
  33:	74 13                	je     48 <RDMHandler::SetPowerState(bool, unsigned short)+0x48>
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetPowerState(bool, unsigned short)+0x46>
  46:	eb 63                	jmp    ab <RDMHandler::SetPowerState(bool, unsigned short)+0xab>
  48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4c:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  50:	88 45 ef             	mov    %al,-0x11(%rbp)
  53:	80 7d ef ff          	cmpb   $0xff,-0x11(%rbp)
  57:	74 19                	je     72 <RDMHandler::SetPowerState(bool, unsigned short)+0x72>
  59:	80 7d ef 02          	cmpb   $0x2,-0x11(%rbp)
  5d:	76 13                	jbe    72 <RDMHandler::SetPowerState(bool, unsigned short)+0x72>
  5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  63:	be 06 00 00 00       	mov    $0x6,%esi
  68:	48 89 c7             	mov    %rax,%rdi
  6b:	e8 00 00 00 00       	call   70 <RDMHandler::SetPowerState(bool, unsigned short)+0x70>
  70:	eb 39                	jmp    ab <RDMHandler::SetPowerState(bool, unsigned short)+0xab>
  72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  76:	48 8b 40 10          	mov    0x10(%rax),%rax
  7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  7e:	80 7d ef ff          	cmpb   $0xff,-0x11(%rbp)
  82:	75 16                	jne    9a <RDMHandler::SetPowerState(bool, unsigned short)+0x9a>
  84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  88:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  90:	48 89 c7             	mov    %rax,%rdi
  93:	e8 00 00 00 00       	call   98 <RDMHandler::SetPowerState(bool, unsigned short)+0x98>
  98:	eb 11                	jmp    ab <RDMHandler::SetPowerState(bool, unsigned short)+0xab>
  9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9e:	be 04 00 00 00       	mov    $0x4,%esi
  a3:	48 89 c7             	mov    %rax,%rdi
  a6:	e8 00 00 00 00       	call   ab <RDMHandler::SetPowerState(bool, unsigned short)+0xab>
  ab:	c9                   	leave  
  ac:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler11GetSlotInfoEt:

0000000000000000 <RDMHandler::GetSlotInfo(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  29:	48 8b 40 10          	mov    0x10(%rax),%rax
  2d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  31:	e8 00 00 00 00       	call   36 <RDMHandler::GetSlotInfo(unsigned short)+0x36>
  36:	48 89 c2             	mov    %rax,%rdx
  39:	0f b7 45 d4          	movzwl -0x2c(%rbp),%eax
  3d:	89 c6                	mov    %eax,%esi
  3f:	48 89 d7             	mov    %rdx,%rdi
  42:	e8 00 00 00 00       	call   47 <RDMHandler::GetSlotInfo(unsigned short)+0x47>
  47:	66 89 45 e2          	mov    %ax,-0x1e(%rbp)
  4b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  52:	66 c7 45 e6 00 00    	movw   $0x0,-0x1a(%rbp)
  58:	e9 af 00 00 00       	jmp    10c <RDMHandler::GetSlotInfo(unsigned short)+0x10c>
  5d:	e8 00 00 00 00       	call   62 <RDMHandler::GetSlotInfo(unsigned short)+0x62>
  62:	48 89 c7             	mov    %rax,%rdi
  65:	0f b7 55 e6          	movzwl -0x1a(%rbp),%edx
  69:	0f b7 45 d4          	movzwl -0x2c(%rbp),%eax
  6d:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
  71:	89 c6                	mov    %eax,%esi
  73:	e8 00 00 00 00       	call   78 <RDMHandler::GetSlotInfo(unsigned short)+0x78>
  78:	84 c0                	test   %al,%al
  7a:	0f 84 81 00 00 00    	je     101 <RDMHandler::GetSlotInfo(unsigned short)+0x101>
  80:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
  84:	66 c1 e8 08          	shr    $0x8,%ax
  88:	89 c1                	mov    %eax,%ecx
  8a:	8b 55 e8             	mov    -0x18(%rbp),%edx
  8d:	8d 42 01             	lea    0x1(%rdx),%eax
  90:	89 45 e8             	mov    %eax,-0x18(%rbp)
  93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  97:	89 d2                	mov    %edx,%edx
  99:	88 4c 10 18          	mov    %cl,0x18(%rax,%rdx,1)
  9d:	8b 55 e8             	mov    -0x18(%rbp),%edx
  a0:	8d 42 01             	lea    0x1(%rdx),%eax
  a3:	89 45 e8             	mov    %eax,-0x18(%rbp)
  a6:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
  aa:	89 c1                	mov    %eax,%ecx
  ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  b0:	89 d2                	mov    %edx,%edx
  b2:	88 4c 10 18          	mov    %cl,0x18(%rax,%rdx,1)
  b6:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  b9:	8d 41 01             	lea    0x1(%rcx),%eax
  bc:	89 45 e8             	mov    %eax,-0x18(%rbp)
  bf:	0f b6 55 ee          	movzbl -0x12(%rbp),%edx
  c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  c7:	89 c9                	mov    %ecx,%ecx
  c9:	88 54 08 18          	mov    %dl,0x18(%rax,%rcx,1)
  cd:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
  d1:	66 c1 e8 08          	shr    $0x8,%ax
  d5:	89 c1                	mov    %eax,%ecx
  d7:	8b 55 e8             	mov    -0x18(%rbp),%edx
  da:	8d 42 01             	lea    0x1(%rdx),%eax
  dd:	89 45 e8             	mov    %eax,-0x18(%rbp)
  e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  e4:	89 d2                	mov    %edx,%edx
  e6:	88 4c 10 18          	mov    %cl,0x18(%rax,%rdx,1)
  ea:	0f b7 4d ec          	movzwl -0x14(%rbp),%ecx
  ee:	8b 55 e8             	mov    -0x18(%rbp),%edx
  f1:	8d 42 01             	lea    0x1(%rdx),%eax
  f4:	89 45 e8             	mov    %eax,-0x18(%rbp)
  f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  fb:	89 d2                	mov    %edx,%edx
  fd:	88 4c 10 18          	mov    %cl,0x18(%rax,%rdx,1)
 101:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
 105:	83 c0 01             	add    $0x1,%eax
 108:	66 89 45 e6          	mov    %ax,-0x1a(%rbp)
 10c:	66 c7 45 e4 2e 00    	movw   $0x2e,-0x1c(%rbp)
 112:	48 8d 55 e4          	lea    -0x1c(%rbp),%rdx
 116:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
 11a:	48 89 d6             	mov    %rdx,%rsi
 11d:	48 89 c7             	mov    %rax,%rdi
 120:	e8 00 00 00 00       	call   125 <RDMHandler::GetSlotInfo(unsigned short)+0x125>
 125:	0f b7 00             	movzwl (%rax),%eax
 128:	66 39 45 e6          	cmp    %ax,-0x1a(%rbp)
 12c:	0f 92 c0             	setb   %al
 12f:	84 c0                	test   %al,%al
 131:	0f 85 26 ff ff ff    	jne    5d <RDMHandler::GetSlotInfo(unsigned short)+0x5d>
 137:	8b 45 e8             	mov    -0x18(%rbp),%eax
 13a:	89 c2                	mov    %eax,%edx
 13c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 140:	88 50 17             	mov    %dl,0x17(%rax)
 143:	8b 45 e8             	mov    -0x18(%rbp),%eax
 146:	8d 50 18             	lea    0x18(%rax),%edx
 149:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 14d:	88 50 02             	mov    %dl,0x2(%rax)
 150:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 154:	48 89 c7             	mov    %rax,%rdi
 157:	e8 00 00 00 00       	call   15c <RDMHandler::GetSlotInfo(unsigned short)+0x15c>
 15c:	90                   	nop
 15d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 161:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 168:	00 00 
 16a:	74 05                	je     171 <RDMHandler::GetSlotInfo(unsigned short)+0x171>
 16c:	e8 00 00 00 00       	call   171 <RDMHandler::GetSlotInfo(unsigned short)+0x171>
 171:	c9                   	leave  
 172:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler18GetSlotDescriptionEt:

0000000000000000 <RDMHandler::GetSlotDescription(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 c4          	mov    %ax,-0x3c(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  29:	48 8b 40 08          	mov    0x8(%rax),%rax
  2d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  31:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  35:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  39:	0f b6 c0             	movzbl %al,%eax
  3c:	c1 e0 08             	shl    $0x8,%eax
  3f:	89 c2                	mov    %eax,%edx
  41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  45:	0f b6 40 18          	movzbl 0x18(%rax),%eax
  49:	0f b6 c0             	movzbl %al,%eax
  4c:	01 d0                	add    %edx,%eax
  4e:	66 89 45 d2          	mov    %ax,-0x2e(%rbp)
  52:	e8 00 00 00 00       	call   57 <RDMHandler::GetSlotDescription(unsigned short)+0x57>
  57:	48 89 c7             	mov    %rax,%rdi
  5a:	0f b7 55 d2          	movzwl -0x2e(%rbp),%edx
  5e:	0f b7 45 c4          	movzwl -0x3c(%rbp),%eax
  62:	48 8d 4d dc          	lea    -0x24(%rbp),%rcx
  66:	89 c6                	mov    %eax,%esi
  68:	e8 00 00 00 00       	call   6d <RDMHandler::GetSlotDescription(unsigned short)+0x6d>
  6d:	83 f0 01             	xor    $0x1,%eax
  70:	84 c0                	test   %al,%al
  72:	74 16                	je     8a <RDMHandler::GetSlotDescription(unsigned short)+0x8a>
  74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  78:	be 06 00 00 00       	mov    $0x6,%esi
  7d:	48 89 c7             	mov    %rax,%rdi
  80:	e8 00 00 00 00       	call   85 <RDMHandler::GetSlotDescription(unsigned short)+0x85>
  85:	e9 bf 00 00 00       	jmp    149 <RDMHandler::GetSlotDescription(unsigned short)+0x149>
  8a:	0f b7 45 dc          	movzwl -0x24(%rbp),%eax
  8e:	0f b7 c8             	movzwl %ax,%ecx
  91:	0f b7 45 d2          	movzwl -0x2e(%rbp),%eax
  95:	48 8d 55 d4          	lea    -0x2c(%rbp),%rdx
  99:	89 ce                	mov    %ecx,%esi
  9b:	89 c7                	mov    %eax,%edi
  9d:	e8 00 00 00 00       	call   a2 <RDMHandler::GetSlotDescription(unsigned short)+0xa2>
  a2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  a6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  ab:	75 16                	jne    c3 <RDMHandler::GetSlotDescription(unsigned short)+0xc3>
  ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  b1:	be 06 00 00 00       	mov    $0x6,%esi
  b6:	48 89 c7             	mov    %rax,%rdi
  b9:	e8 00 00 00 00       	call   be <RDMHandler::GetSlotDescription(unsigned short)+0xbe>
  be:	e9 86 00 00 00       	jmp    149 <RDMHandler::GetSlotDescription(unsigned short)+0x149>
  c3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  c6:	83 f8 20             	cmp    $0x20,%eax
  c9:	76 07                	jbe    d2 <RDMHandler::GetSlotDescription(unsigned short)+0xd2>
  cb:	c7 45 d4 20 00 00 00 	movl   $0x20,-0x2c(%rbp)
  d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  d6:	48 8b 40 10          	mov    0x10(%rax),%rax
  da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  de:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  e1:	8d 50 02             	lea    0x2(%rax),%edx
  e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  e8:	88 50 17             	mov    %dl,0x17(%rax)
  eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  ef:	0f b6 50 17          	movzbl 0x17(%rax),%edx
  f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  f7:	88 50 18             	mov    %dl,0x18(%rax)
  fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  fe:	0f b6 50 18          	movzbl 0x18(%rax),%edx
 102:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 106:	88 50 19             	mov    %dl,0x19(%rax)
 109:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
 110:	eb 23                	jmp    135 <RDMHandler::GetSlotDescription(unsigned short)+0x135>
 112:	8b 55 d8             	mov    -0x28(%rbp),%edx
 115:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 119:	48 01 d0             	add    %rdx,%rax
 11c:	0f b6 10             	movzbl (%rax),%edx
 11f:	8b 45 d8             	mov    -0x28(%rbp),%eax
 122:	8d 70 02             	lea    0x2(%rax),%esi
 125:	89 d1                	mov    %edx,%ecx
 127:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 12b:	89 f2                	mov    %esi,%edx
 12d:	88 4c 10 18          	mov    %cl,0x18(%rax,%rdx,1)
 131:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
 135:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 138:	39 45 d8             	cmp    %eax,-0x28(%rbp)
 13b:	72 d5                	jb     112 <RDMHandler::GetSlotDescription(unsigned short)+0x112>
 13d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 141:	48 89 c7             	mov    %rax,%rdi
 144:	e8 00 00 00 00       	call   149 <RDMHandler::GetSlotDescription(unsigned short)+0x149>
 149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 14d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 154:	00 00 
 156:	74 05                	je     15d <RDMHandler::GetSlotDescription(unsigned short)+0x15d>
 158:	e8 00 00 00 00       	call   15d <RDMHandler::GetSlotDescription(unsigned short)+0x15d>
 15d:	c9                   	leave  
 15e:	c3                   	ret    

Disassembly of section .text._ZSt3minIhERKT_S2_S2_:

0000000000000000 <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	0f b6 10             	movzbl (%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	0f b6 00             	movzbl (%rax),%eax
  1e:	38 c2                	cmp    %al,%dl
  20:	73 06                	jae    28 <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)+0x28>
  22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  26:	eb 04                	jmp    2c <unsigned char const& std::min<unsigned char>(unsigned char const&, unsigned char const&)+0x2c>
  28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2c:	5d                   	pop    %rbp
  2d:	c3                   	ret    

Disassembly of section .text._ZSt3minItERKT_S2_S2_:

0000000000000000 <unsigned short const& std::min<unsigned short>(unsigned short const&, unsigned short const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	0f b7 10             	movzwl (%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	0f b7 00             	movzwl (%rax),%eax
  1e:	66 39 c2             	cmp    %ax,%dx
  21:	73 06                	jae    29 <unsigned short const& std::min<unsigned short>(unsigned short const&, unsigned short const&)+0x29>
  23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  27:	eb 04                	jmp    2d <unsigned short const& std::min<unsigned short>(unsigned short const&, unsigned short const&)+0x2d>
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	5d                   	pop    %rbp
  2e:	c3                   	ret    

rdmhandlere1371.o:     file format elf64-x86-64


Disassembly of section .text._ZN11RDMIdentify7SetModeEN3rdm8identify4ModeE:

0000000000000000 <RDMIdentify::SetMode(rdm::identify::Mode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
  19:	74 06                	je     21 <RDMIdentify::SetMode(rdm::identify::Mode)+0x21>
  1b:	80 7d f4 ff          	cmpb   $0xff,-0xc(%rbp)
  1f:	75 5e                	jne    7f <RDMIdentify::SetMode(rdm::identify::Mode)+0x7f>
  21:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  25:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 2b <RDMIdentify::SetMode(rdm::identify::Mode)+0x2b>
  2b:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 32 <RDMIdentify::SetMode(rdm::identify::Mode)+0x32>
  32:	84 c0                	test   %al,%al
  34:	74 34                	je     6a <RDMIdentify::SetMode(rdm::identify::Mode)+0x6a>
  36:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
  3a:	74 17                	je     53 <RDMIdentify::SetMode(rdm::identify::Mode)+0x53>
  3c:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 43 <RDMIdentify::SetMode(rdm::identify::Mode)+0x43>
  43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  47:	89 d6                	mov    %edx,%esi
  49:	48 89 c7             	mov    %rax,%rdi
  4c:	e8 00 00 00 00       	call   51 <RDMIdentify::SetMode(rdm::identify::Mode)+0x51>
  51:	eb 2c                	jmp    7f <RDMIdentify::SetMode(rdm::identify::Mode)+0x7f>
  53:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 5a <RDMIdentify::SetMode(rdm::identify::Mode)+0x5a>
  5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5e:	89 d6                	mov    %edx,%esi
  60:	48 89 c7             	mov    %rax,%rdi
  63:	e8 00 00 00 00       	call   68 <RDMIdentify::SetMode(rdm::identify::Mode)+0x68>
  68:	eb 15                	jmp    7f <RDMIdentify::SetMode(rdm::identify::Mode)+0x7f>
  6a:	0f b6 15 00 00 00 00 	movzbl 0x0(%rip),%edx        # 71 <RDMIdentify::SetMode(rdm::identify::Mode)+0x71>
  71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  75:	89 d6                	mov    %edx,%esi
  77:	48 89 c7             	mov    %rax,%rdi
  7a:	e8 00 00 00 00       	call   7f <RDMIdentify::SetMode(rdm::identify::Mode)+0x7f>
  7f:	90                   	nop
  80:	c9                   	leave  
  81:	c3                   	ret    

Disassembly of section .text._ZNK11RDMIdentify7GetModeEv:

0000000000000000 <RDMIdentify::GetMode() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 13 <RDMIdentify::GetMode() const+0x13>
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN11RDMIdentify3GetEv:

0000000000000000 <RDMIdentify::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <RDMIdentify::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler15GetIdentifyModeEt:

0000000000000000 <RDMHandler::GetIdentifyMode(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1a:	48 8b 40 10          	mov    0x10(%rax),%rax
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	c6 40 17 01          	movb   $0x1,0x17(%rax)
  2a:	e8 00 00 00 00       	call   2f <RDMHandler::GetIdentifyMode(unsigned short)+0x2f>
  2f:	48 89 c7             	mov    %rax,%rdi
  32:	e8 00 00 00 00       	call   37 <RDMHandler::GetIdentifyMode(unsigned short)+0x37>
  37:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  3b:	88 42 18             	mov    %al,0x18(%rdx)
  3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42:	48 89 c7             	mov    %rax,%rdi
  45:	e8 00 00 00 00       	call   4a <RDMHandler::GetIdentifyMode(unsigned short)+0x4a>
  4a:	90                   	nop
  4b:	c9                   	leave  
  4c:	c3                   	ret    

Disassembly of section .text._ZN10RDMHandler15SetIdentifyModeEbt:

0000000000000000 <RDMHandler::SetIdentifyMode(bool, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2d:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  31:	3c 01                	cmp    $0x1,%al
  33:	74 13                	je     48 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0x48>
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	be 01 00 00 00       	mov    $0x1,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0x46>
  46:	eb 6e                	jmp    b6 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0xb6>
  48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4c:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  50:	84 c0                	test   %al,%al
  52:	74 1f                	je     73 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0x73>
  54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  58:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  5c:	3c ff                	cmp    $0xff,%al
  5e:	74 13                	je     73 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0x73>
  60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  64:	be 06 00 00 00       	mov    $0x6,%esi
  69:	48 89 c7             	mov    %rax,%rdi
  6c:	e8 00 00 00 00       	call   71 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0x71>
  71:	eb 43                	jmp    b6 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0xb6>
  73:	e8 00 00 00 00       	call   78 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0x78>
  78:	48 89 c2             	mov    %rax,%rdx
  7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  7f:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  83:	89 c6                	mov    %eax,%esi
  85:	48 89 d7             	mov    %rdx,%rdi
  88:	e8 00 00 00 00       	call   8d <RDMHandler::SetIdentifyMode(bool, unsigned short)+0x8d>
  8d:	80 7d e4 00          	cmpb   $0x0,-0x1c(%rbp)
  91:	75 22                	jne    b5 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0xb5>
  93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  97:	48 8b 40 10          	mov    0x10(%rax),%rax
  9b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a3:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ab:	48 89 c7             	mov    %rax,%rdi
  ae:	e8 00 00 00 00       	call   b3 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0xb3>
  b3:	eb 01                	jmp    b6 <RDMHandler::SetIdentifyMode(bool, unsigned short)+0xb6>
  b5:	90                   	nop
  b6:	c9                   	leave  
  b7:	c3                   	ret    

rdmidentify.o:     file format elf64-x86-64


Disassembly of section .text._ZN11RDMIdentifyC2Ev:

0000000000000000 <RDMIdentify::RDMIdentify()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 17 <RDMIdentify::RDMIdentify()+0x17>
  17:	90                   	nop
  18:	5d                   	pop    %rbp
  19:	c3                   	ret    

Disassembly of section .text._ZN11RDMIdentify2OnEN3rdm8identify4ModeE:

0000000000000000 <RDMIdentify::On(rdm::identify::Mode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN11RDMIdentify3OffEN3rdm8identify4ModeE:

0000000000000000 <RDMIdentify::Off(rdm::identify::Mode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

rdmmessage.o:     file format elf64-x86-64


Disassembly of section .text._ZN10RDMMessageC2Ev:

0000000000000000 <RDMMessage::RDMMessage()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	c6 00 cc             	movb   $0xcc,(%rax)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	c6 40 01 01          	movb   $0x1,0x1(%rax)
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	c6 40 02 18          	movb   $0x18,0x2(%rax)
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 83 c0 09          	add    $0x9,%rax
  2b:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 31 <RDMMessage::RDMMessage()+0x31>
  31:	89 10                	mov    %edx,(%rax)
  33:	0f b7 15 00 00 00 00 	movzwl 0x0(%rip),%edx        # 3a <RDMMessage::RDMMessage()+0x3a>
  3a:	66 89 50 04          	mov    %dx,0x4(%rax)
  3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42:	48 83 c0 03          	add    $0x3,%rax
  46:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 4c <RDMMessage::RDMMessage()+0x4c>
  4c:	89 10                	mov    %edx,(%rax)
  4e:	0f b7 15 00 00 00 00 	movzwl 0x0(%rip),%edx        # 55 <RDMMessage::RDMMessage()+0x55>
  55:	66 89 50 04          	mov    %dx,0x4(%rax)
  59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5d:	c6 40 10 01          	movb   $0x1,0x10(%rax)
  61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  65:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6d:	c6 40 12 00          	movb   $0x0,0x12(%rax)
  71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  75:	c6 40 13 00          	movb   $0x0,0x13(%rax)
  79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7d:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  81:	90                   	nop
  82:	5d                   	pop    %rbp
  83:	c3                   	ret    

Disassembly of section .text._ZN10RDMMessage9SetSrcUidEPKh:

0000000000000000 <RDMMessage::SetSrcUid(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 8d 48 09          	lea    0x9(%rax),%rcx
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	ba 06 00 00 00       	mov    $0x6,%edx
  25:	48 89 c6             	mov    %rax,%rsi
  28:	48 89 cf             	mov    %rcx,%rdi
  2b:	e8 00 00 00 00       	call   30 <RDMMessage::SetSrcUid(unsigned char const*)+0x30>
  30:	90                   	nop
  31:	c9                   	leave  
  32:	c3                   	ret    

Disassembly of section .text._ZN10RDMMessage9SetDstUidEPKh:

0000000000000000 <RDMMessage::SetDstUid(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 8d 48 03          	lea    0x3(%rax),%rcx
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	ba 06 00 00 00       	mov    $0x6,%edx
  25:	48 89 c6             	mov    %rax,%rsi
  28:	48 89 cf             	mov    %rcx,%rdi
  2b:	e8 00 00 00 00       	call   30 <RDMMessage::SetDstUid(unsigned char const*)+0x30>
  30:	90                   	nop
  31:	c9                   	leave  
  32:	c3                   	ret    

Disassembly of section .text._ZN10RDMMessage12SetSubDeviceEt:

0000000000000000 <RDMMessage::SetSubDevice(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  12:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  16:	66 c1 e8 08          	shr    $0x8,%ax
  1a:	89 c2                	mov    %eax,%edx
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	88 50 12             	mov    %dl,0x12(%rax)
  23:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  27:	89 c2                	mov    %eax,%edx
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	88 50 13             	mov    %dl,0x13(%rax)
  30:	90                   	nop
  31:	5d                   	pop    %rbp
  32:	c3                   	ret    

Disassembly of section .text._ZN10RDMMessage5SetCcEh:

0000000000000000 <RDMMessage::SetCc(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  15:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  19:	88 50 14             	mov    %dl,0x14(%rax)
  1c:	90                   	nop
  1d:	5d                   	pop    %rbp
  1e:	c3                   	ret    

Disassembly of section .text._ZN10RDMMessage6SetPidEt:

0000000000000000 <RDMMessage::SetPid(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  12:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  16:	66 c1 e8 08          	shr    $0x8,%ax
  1a:	89 c2                	mov    %eax,%edx
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	88 50 15             	mov    %dl,0x15(%rax)
  23:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  27:	89 c2                	mov    %eax,%edx
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	88 50 16             	mov    %dl,0x16(%rax)
  30:	90                   	nop
  31:	5d                   	pop    %rbp
  32:	c3                   	ret    

Disassembly of section .text._ZN10RDMMessage5SetPdEPKhh:

0000000000000000 <RDMMessage::SetPd(unsigned char const*, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 d0                	mov    %edx,%eax
  16:	88 45 ec             	mov    %al,-0x14(%rbp)
  19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1d:	0f b6 50 02          	movzbl 0x2(%rax),%edx
  21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  25:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  29:	29 c2                	sub    %eax,%edx
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	88 50 02             	mov    %dl,0x2(%rax)
  32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  36:	0f b6 55 ec          	movzbl -0x14(%rbp),%edx
  3a:	88 50 17             	mov    %dl,0x17(%rax)
  3d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  42:	74 21                	je     65 <RDMMessage::SetPd(unsigned char const*, unsigned char)+0x65>
  44:	80 7d ec 00          	cmpb   $0x0,-0x14(%rbp)
  48:	74 1b                	je     65 <RDMMessage::SetPd(unsigned char const*, unsigned char)+0x65>
  4a:	0f b6 55 ec          	movzbl -0x14(%rbp),%edx
  4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  52:	48 8d 48 18          	lea    0x18(%rax),%rcx
  56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5a:	48 89 c6             	mov    %rax,%rsi
  5d:	48 89 cf             	mov    %rcx,%rdi
  60:	e8 00 00 00 00       	call   65 <RDMMessage::SetPd(unsigned char const*, unsigned char)+0x65>
  65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  69:	0f b6 50 02          	movzbl 0x2(%rax),%edx
  6d:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  71:	01 c2                	add    %eax,%edx
  73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  77:	88 50 02             	mov    %dl,0x2(%rax)
  7a:	90                   	nop
  7b:	c9                   	leave  
  7c:	c3                   	ret    

Disassembly of section .text._ZN10RDMMessage4SendEjj:

0000000000000000 <RDMMessage::Send(unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  1a:	8b 55 f0             	mov    -0x10(%rbp),%edx
  1d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  20:	48 89 ce             	mov    %rcx,%rsi
  23:	89 c7                	mov    %eax,%edi
  25:	e8 00 00 00 00       	call   2a <RDMMessage::Send(unsigned int, unsigned int)+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

rdmmessageprint.o:     file format elf64-x86-64


Disassembly of section .text._ZN10RDMMessage9PrintNoScEPKh:

0000000000000000 <RDMMessage::PrintNoSc(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
   f:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  2c:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  33:	c6 85 f0 fe ff ff cc 	movb   $0xcc,-0x110(%rbp)
  3a:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  41:	0f b6 40 02          	movzbl 0x2(%rax),%eax
  45:	0f b6 c0             	movzbl %al,%eax
  48:	83 e8 01             	sub    $0x1,%eax
  4b:	89 c6                	mov    %eax,%esi
  4d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  54:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
  5b:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
  5f:	48 89 f2             	mov    %rsi,%rdx
  62:	48 89 c6             	mov    %rax,%rsi
  65:	48 89 cf             	mov    %rcx,%rdi
  68:	e8 00 00 00 00       	call   6d <RDMMessage::PrintNoSc(unsigned char const*)+0x6d>
  6d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
  74:	48 89 c7             	mov    %rax,%rdi
  77:	e8 00 00 00 00       	call   7c <RDMMessage::PrintNoSc(unsigned char const*)+0x7c>
  7c:	90                   	nop
  7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  81:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  88:	00 00 
  8a:	74 05                	je     91 <RDMMessage::PrintNoSc(unsigned char const*)+0x91>
  8c:	e8 00 00 00 00       	call   91 <RDMMessage::PrintNoSc(unsigned char const*)+0x91>
  91:	c9                   	leave  
  92:	c3                   	ret    

Disassembly of section .text._ZN10RDMMessage5PrintEPKh:

0000000000000000 <RDMMessage::Print(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  15:	0f 84 0f 03 00 00    	je     32a <RDMMessage::Print(unsigned char const*)+0x32a>
  1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  1f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  27:	0f b6 00             	movzbl (%rax),%eax
  2a:	3c cc                	cmp    $0xcc,%al
  2c:	0f 85 59 02 00 00    	jne    28b <RDMMessage::Print(unsigned char const*)+0x28b>
  32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  36:	48 83 c0 09          	add    $0x9,%rax
  3a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  42:	48 83 c0 05          	add    $0x5,%rax
  46:	0f b6 00             	movzbl (%rax),%eax
  49:	0f b6 f0             	movzbl %al,%esi
  4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  50:	48 83 c0 04          	add    $0x4,%rax
  54:	0f b6 00             	movzbl (%rax),%eax
  57:	44 0f b6 c0          	movzbl %al,%r8d
  5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5f:	48 83 c0 03          	add    $0x3,%rax
  63:	0f b6 00             	movzbl (%rax),%eax
  66:	0f b6 f8             	movzbl %al,%edi
  69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  6d:	48 83 c0 02          	add    $0x2,%rax
  71:	0f b6 00             	movzbl (%rax),%eax
  74:	0f b6 c8             	movzbl %al,%ecx
  77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  7b:	48 83 c0 01          	add    $0x1,%rax
  7f:	0f b6 00             	movzbl (%rax),%eax
  82:	0f b6 d0             	movzbl %al,%edx
  85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  89:	0f b6 00             	movzbl (%rax),%eax
  8c:	0f b6 c0             	movzbl %al,%eax
  8f:	48 83 ec 08          	sub    $0x8,%rsp
  93:	56                   	push   %rsi
  94:	45 89 c1             	mov    %r8d,%r9d
  97:	41 89 f8             	mov    %edi,%r8d
  9a:	89 c6                	mov    %eax,%esi
  9c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a3 <RDMMessage::Print(unsigned char const*)+0xa3>
  a3:	48 89 c7             	mov    %rax,%rdi
  a6:	b8 00 00 00 00       	mov    $0x0,%eax
  ab:	e8 00 00 00 00       	call   b0 <RDMMessage::Print(unsigned char const*)+0xb0>
  b0:	48 83 c4 10          	add    $0x10,%rsp
  b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b8:	48 83 c0 03          	add    $0x3,%rax
  bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c4:	48 83 c0 05          	add    $0x5,%rax
  c8:	0f b6 00             	movzbl (%rax),%eax
  cb:	0f b6 f0             	movzbl %al,%esi
  ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d2:	48 83 c0 04          	add    $0x4,%rax
  d6:	0f b6 00             	movzbl (%rax),%eax
  d9:	44 0f b6 c0          	movzbl %al,%r8d
  dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e1:	48 83 c0 03          	add    $0x3,%rax
  e5:	0f b6 00             	movzbl (%rax),%eax
  e8:	0f b6 f8             	movzbl %al,%edi
  eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ef:	48 83 c0 02          	add    $0x2,%rax
  f3:	0f b6 00             	movzbl (%rax),%eax
  f6:	0f b6 c8             	movzbl %al,%ecx
  f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  fd:	48 83 c0 01          	add    $0x1,%rax
 101:	0f b6 00             	movzbl (%rax),%eax
 104:	0f b6 d0             	movzbl %al,%edx
 107:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 10b:	0f b6 00             	movzbl (%rax),%eax
 10e:	0f b6 c0             	movzbl %al,%eax
 111:	48 83 ec 08          	sub    $0x8,%rsp
 115:	56                   	push   %rsi
 116:	45 89 c1             	mov    %r8d,%r9d
 119:	41 89 f8             	mov    %edi,%r8d
 11c:	89 c6                	mov    %eax,%esi
 11e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 125 <RDMMessage::Print(unsigned char const*)+0x125>
 125:	48 89 c7             	mov    %rax,%rdi
 128:	b8 00 00 00 00       	mov    $0x0,%eax
 12d:	e8 00 00 00 00       	call   132 <RDMMessage::Print(unsigned char const*)+0x132>
 132:	48 83 c4 10          	add    $0x10,%rsp
 136:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 13a:	0f b6 40 14          	movzbl 0x14(%rax),%eax
 13e:	0f b6 c0             	movzbl %al,%eax
 141:	83 e8 10             	sub    $0x10,%eax
 144:	83 f8 21             	cmp    $0x21,%eax
 147:	0f 87 aa 00 00 00    	ja     1f7 <RDMMessage::Print(unsigned char const*)+0x1f7>
 14d:	89 c0                	mov    %eax,%eax
 14f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 156:	00 
 157:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 15e <RDMMessage::Print(unsigned char const*)+0x15e>
 15e:	8b 04 02             	mov    (%rdx,%rax,1),%eax
 161:	48 98                	cltq   
 163:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 16a <RDMMessage::Print(unsigned char const*)+0x16a>
 16a:	48 01 d0             	add    %rdx,%rax
 16d:	3e ff e0             	notrack jmp *%rax
 170:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 177 <RDMMessage::Print(unsigned char const*)+0x177>
 177:	48 89 c7             	mov    %rax,%rdi
 17a:	b8 00 00 00 00       	mov    $0x0,%eax
 17f:	e8 00 00 00 00       	call   184 <RDMMessage::Print(unsigned char const*)+0x184>
 184:	e9 90 00 00 00       	jmp    219 <RDMMessage::Print(unsigned char const*)+0x219>
 189:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 190 <RDMMessage::Print(unsigned char const*)+0x190>
 190:	48 89 c7             	mov    %rax,%rdi
 193:	b8 00 00 00 00       	mov    $0x0,%eax
 198:	e8 00 00 00 00       	call   19d <RDMMessage::Print(unsigned char const*)+0x19d>
 19d:	eb 7a                	jmp    219 <RDMMessage::Print(unsigned char const*)+0x219>
 19f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1a6 <RDMMessage::Print(unsigned char const*)+0x1a6>
 1a6:	48 89 c7             	mov    %rax,%rdi
 1a9:	b8 00 00 00 00       	mov    $0x0,%eax
 1ae:	e8 00 00 00 00       	call   1b3 <RDMMessage::Print(unsigned char const*)+0x1b3>
 1b3:	eb 64                	jmp    219 <RDMMessage::Print(unsigned char const*)+0x219>
 1b5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1bc <RDMMessage::Print(unsigned char const*)+0x1bc>
 1bc:	48 89 c7             	mov    %rax,%rdi
 1bf:	b8 00 00 00 00       	mov    $0x0,%eax
 1c4:	e8 00 00 00 00       	call   1c9 <RDMMessage::Print(unsigned char const*)+0x1c9>
 1c9:	eb 4e                	jmp    219 <RDMMessage::Print(unsigned char const*)+0x219>
 1cb:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1d2 <RDMMessage::Print(unsigned char const*)+0x1d2>
 1d2:	48 89 c7             	mov    %rax,%rdi
 1d5:	b8 00 00 00 00       	mov    $0x0,%eax
 1da:	e8 00 00 00 00       	call   1df <RDMMessage::Print(unsigned char const*)+0x1df>
 1df:	eb 38                	jmp    219 <RDMMessage::Print(unsigned char const*)+0x219>
 1e1:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1e8 <RDMMessage::Print(unsigned char const*)+0x1e8>
 1e8:	48 89 c7             	mov    %rax,%rdi
 1eb:	b8 00 00 00 00       	mov    $0x0,%eax
 1f0:	e8 00 00 00 00       	call   1f5 <RDMMessage::Print(unsigned char const*)+0x1f5>
 1f5:	eb 22                	jmp    219 <RDMMessage::Print(unsigned char const*)+0x219>
 1f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1fb:	0f b6 40 14          	movzbl 0x14(%rax),%eax
 1ff:	0f b6 c0             	movzbl %al,%eax
 202:	89 c6                	mov    %eax,%esi
 204:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 20b <RDMMessage::Print(unsigned char const*)+0x20b>
 20b:	48 89 c7             	mov    %rax,%rdi
 20e:	b8 00 00 00 00       	mov    $0x0,%eax
 213:	e8 00 00 00 00       	call   218 <RDMMessage::Print(unsigned char const*)+0x218>
 218:	90                   	nop
 219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 21d:	0f b6 40 12          	movzbl 0x12(%rax),%eax
 221:	0f b6 c0             	movzbl %al,%eax
 224:	c1 e0 08             	shl    $0x8,%eax
 227:	89 c2                	mov    %eax,%edx
 229:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 22d:	0f b6 40 13          	movzbl 0x13(%rax),%eax
 231:	0f b6 c0             	movzbl %al,%eax
 234:	01 d0                	add    %edx,%eax
 236:	66 89 45 e2          	mov    %ax,-0x1e(%rbp)
 23a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 23e:	0f b6 40 17          	movzbl 0x17(%rax),%eax
 242:	0f b6 f8             	movzbl %al,%edi
 245:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 249:	0f b6 40 16          	movzbl 0x16(%rax),%eax
 24d:	0f b6 f0             	movzbl %al,%esi
 250:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 254:	0f b6 40 15          	movzbl 0x15(%rax),%eax
 258:	0f b6 c8             	movzbl %al,%ecx
 25b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 25f:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
 263:	0f b6 d0             	movzbl %al,%edx
 266:	0f b7 45 e2          	movzwl -0x1e(%rbp),%eax
 26a:	41 89 f9             	mov    %edi,%r9d
 26d:	41 89 f0             	mov    %esi,%r8d
 270:	89 c6                	mov    %eax,%esi
 272:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 279 <RDMMessage::Print(unsigned char const*)+0x279>
 279:	48 89 c7             	mov    %rax,%rdi
 27c:	b8 00 00 00 00       	mov    $0x0,%eax
 281:	e8 00 00 00 00       	call   286 <RDMMessage::Print(unsigned char const*)+0x286>
 286:	e9 a0 00 00 00       	jmp    32b <RDMMessage::Print(unsigned char const*)+0x32b>
 28b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 28f:	0f b6 00             	movzbl (%rax),%eax
 292:	3c fe                	cmp    $0xfe,%al
 294:	75 45                	jne    2db <RDMMessage::Print(unsigned char const*)+0x2db>
 296:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 29d:	eb 2a                	jmp    2c9 <RDMMessage::Print(unsigned char const*)+0x2c9>
 29f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 2a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 2a6:	48 01 d0             	add    %rdx,%rax
 2a9:	0f b6 00             	movzbl (%rax),%eax
 2ac:	0f b6 c0             	movzbl %al,%eax
 2af:	89 c6                	mov    %eax,%esi
 2b1:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2b8 <RDMMessage::Print(unsigned char const*)+0x2b8>
 2b8:	48 89 c7             	mov    %rax,%rdi
 2bb:	b8 00 00 00 00       	mov    $0x0,%eax
 2c0:	e8 00 00 00 00       	call   2c5 <RDMMessage::Print(unsigned char const*)+0x2c5>
 2c5:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 2c9:	83 7d e4 17          	cmpl   $0x17,-0x1c(%rbp)
 2cd:	76 d0                	jbe    29f <RDMMessage::Print(unsigned char const*)+0x29f>
 2cf:	bf 0a 00 00 00       	mov    $0xa,%edi
 2d4:	e8 00 00 00 00       	call   2d9 <RDMMessage::Print(unsigned char const*)+0x2d9>
 2d9:	eb 50                	jmp    32b <RDMMessage::Print(unsigned char const*)+0x32b>
 2db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 2df:	48 83 c0 03          	add    $0x3,%rax
 2e3:	0f b6 00             	movzbl (%rax),%eax
 2e6:	0f b6 f0             	movzbl %al,%esi
 2e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 2ed:	48 83 c0 02          	add    $0x2,%rax
 2f1:	0f b6 00             	movzbl (%rax),%eax
 2f4:	0f b6 c8             	movzbl %al,%ecx
 2f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 2fb:	48 83 c0 01          	add    $0x1,%rax
 2ff:	0f b6 00             	movzbl (%rax),%eax
 302:	0f b6 d0             	movzbl %al,%edx
 305:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 309:	0f b6 00             	movzbl (%rax),%eax
 30c:	0f b6 c0             	movzbl %al,%eax
 30f:	41 89 f0             	mov    %esi,%r8d
 312:	89 c6                	mov    %eax,%esi
 314:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 31b <RDMMessage::Print(unsigned char const*)+0x31b>
 31b:	48 89 c7             	mov    %rax,%rdi
 31e:	b8 00 00 00 00       	mov    $0x0,%eax
 323:	e8 00 00 00 00       	call   328 <RDMMessage::Print(unsigned char const*)+0x328>
 328:	eb 01                	jmp    32b <RDMMessage::Print(unsigned char const*)+0x32b>
 32a:	90                   	nop
 32b:	c9                   	leave  
 32c:	c3                   	ret    

rdmqueuedmessage.o:     file format elf64-x86-64


Disassembly of section .text._ZN16RDMQueuedMessageC2Ev:

0000000000000000 <RDMQueuedMessage::RDMQueuedMessage()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	c6 00 00             	movb   $0x0,(%rax)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	c6 40 01 01          	movb   $0x1,0x1(%rax)
  1f:	bf 15 ea 00 00       	mov    $0xea15,%edi
  24:	e8 00 00 00 00       	call   29 <RDMQueuedMessage::RDMQueuedMessage()+0x29>
  29:	48 89 c2             	mov    %rax,%rdx
  2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  30:	48 89 50 08          	mov    %rdx,0x8(%rax)
  34:	90                   	nop
  35:	c9                   	leave  
  36:	c3                   	ret    

Disassembly of section .text._ZN16RDMQueuedMessageD2Ev:

0000000000000000 <RDMQueuedMessage::~RDMQueuedMessage()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 40 08          	mov    0x8(%rax),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	74 10                	je     2d <RDMQueuedMessage::~RDMQueuedMessage()+0x2d>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8b 40 08          	mov    0x8(%rax),%rax
  25:	48 89 c7             	mov    %rax,%rdi
  28:	e8 00 00 00 00       	call   2d <RDMQueuedMessage::~RDMQueuedMessage()+0x2d>
  2d:	90                   	nop
  2e:	c9                   	leave  
  2f:	c3                   	ret    

Disassembly of section .text._ZN16RDMQueuedMessage4CopyEP11TRdmMessagej:

0000000000000000 <RDMQueuedMessage::Copy(TRdmMessage*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  10:	89 55 dc             	mov    %edx,-0x24(%rbp)
  13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  17:	48 8b 50 08          	mov    0x8(%rax),%rdx
  1b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  1e:	48 69 c0 eb 00 00 00 	imul   $0xeb,%rax,%rax
  25:	48 01 d0             	add    %rdx,%rax
  28:	0f b6 10             	movzbl (%rax),%edx
  2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  2f:	88 50 14             	mov    %dl,0x14(%rax)
  32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  36:	48 8b 50 08          	mov    0x8(%rax),%rdx
  3a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  3d:	48 69 c0 eb 00 00 00 	imul   $0xeb,%rax,%rax
  44:	48 01 d0             	add    %rdx,%rax
  47:	0f b6 50 01          	movzbl 0x1(%rax),%edx
  4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4f:	88 50 15             	mov    %dl,0x15(%rax)
  52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  56:	48 8b 50 08          	mov    0x8(%rax),%rdx
  5a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  5d:	48 69 c0 eb 00 00 00 	imul   $0xeb,%rax,%rax
  64:	48 01 d0             	add    %rdx,%rax
  67:	0f b6 50 02          	movzbl 0x2(%rax),%edx
  6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  6f:	88 50 16             	mov    %dl,0x16(%rax)
  72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  76:	48 8b 50 08          	mov    0x8(%rax),%rdx
  7a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  7d:	48 69 c0 eb 00 00 00 	imul   $0xeb,%rax,%rax
  84:	48 01 d0             	add    %rdx,%rax
  87:	0f b6 50 03          	movzbl 0x3(%rax),%edx
  8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  8f:	88 50 17             	mov    %dl,0x17(%rax)
  92:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  99:	eb 2c                	jmp    c7 <RDMQueuedMessage::Copy(TRdmMessage*, unsigned int)+0xc7>
  9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  9f:	48 8b 50 08          	mov    0x8(%rax),%rdx
  a3:	8b 45 dc             	mov    -0x24(%rbp),%eax
  a6:	48 69 c0 eb 00 00 00 	imul   $0xeb,%rax,%rax
  ad:	48 01 c2             	add    %rax,%rdx
  b0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  b3:	0f b6 4c 02 04       	movzbl 0x4(%rdx,%rax,1),%ecx
  b8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  bc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  bf:	88 4c 02 18          	mov    %cl,0x18(%rdx,%rax,1)
  c3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  cb:	0f b6 40 17          	movzbl 0x17(%rax),%eax
  cf:	0f b6 c0             	movzbl %al,%eax
  d2:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  d5:	72 c4                	jb     9b <RDMQueuedMessage::Copy(TRdmMessage*, unsigned int)+0x9b>
  d7:	90                   	nop
  d8:	90                   	nop
  d9:	5d                   	pop    %rbp
  da:	c3                   	ret    

Disassembly of section .text._ZNK16RDMQueuedMessage15GetMessageCountEv:

0000000000000000 <RDMQueuedMessage::GetMessageCount() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 00             	movzbl (%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN16RDMQueuedMessage7HandlerEPh:

0000000000000000 <RDMQueuedMessage::Handler(unsigned char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  20:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  24:	84 c0                	test   %al,%al
  26:	74 12                	je     3a <RDMQueuedMessage::Handler(unsigned char*)+0x3a>
  28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2c:	c6 40 10 30          	movb   $0x30,0x10(%rax)
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  38:	eb 75                	jmp    af <RDMQueuedMessage::Handler(unsigned char*)+0xaf>
  3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3e:	0f b6 40 18          	movzbl 0x18(%rax),%eax
  42:	3c 01                	cmp    $0x1,%al
  44:	75 1f                	jne    65 <RDMQueuedMessage::Handler(unsigned char*)+0x65>
  46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4a:	0f b6 00             	movzbl (%rax),%eax
  4d:	0f b6 d0             	movzbl %al,%edx
  50:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  58:	48 89 ce             	mov    %rcx,%rsi
  5b:	48 89 c7             	mov    %rax,%rdi
  5e:	e8 00 00 00 00       	call   63 <RDMQueuedMessage::Handler(unsigned char*)+0x63>
  63:	eb 4a                	jmp    af <RDMQueuedMessage::Handler(unsigned char*)+0xaf>
  65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  69:	0f b6 00             	movzbl (%rax),%eax
  6c:	84 c0                	test   %al,%al
  6e:	74 2f                	je     9f <RDMQueuedMessage::Handler(unsigned char*)+0x9f>
  70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  74:	0f b6 00             	movzbl (%rax),%eax
  77:	8d 50 ff             	lea    -0x1(%rax),%edx
  7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7e:	88 10                	mov    %dl,(%rax)
  80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  84:	0f b6 00             	movzbl (%rax),%eax
  87:	0f b6 d0             	movzbl %al,%edx
  8a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  92:	48 89 ce             	mov    %rcx,%rsi
  95:	48 89 c7             	mov    %rax,%rdi
  98:	e8 00 00 00 00       	call   9d <RDMQueuedMessage::Handler(unsigned char*)+0x9d>
  9d:	eb 10                	jmp    af <RDMQueuedMessage::Handler(unsigned char*)+0xaf>
  9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a3:	c6 40 10 30          	movb   $0x30,0x10(%rax)
  a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ab:	c6 40 17 00          	movb   $0x0,0x17(%rax)
  af:	90                   	nop
  b0:	c9                   	leave  
  b1:	c3                   	ret    

Disassembly of section .text._ZN16RDMQueuedMessage3AddEPK17TRdmQueuedMessage:

0000000000000000 <RDMQueuedMessage::Add(TRdmQueuedMessage const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	c6 40 01 00          	movb   $0x0,0x1(%rax)
  18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1c:	0f b6 00             	movzbl (%rax),%eax
  1f:	3c ff                	cmp    $0xff,%al
  21:	0f 84 fe 00 00 00    	je     125 <RDMQueuedMessage::Add(TRdmQueuedMessage const*)+0x125>
  27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2b:	48 8b 50 08          	mov    0x8(%rax),%rdx
  2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  33:	0f b6 00             	movzbl (%rax),%eax
  36:	0f b6 c0             	movzbl %al,%eax
  39:	48 69 c0 eb 00 00 00 	imul   $0xeb,%rax,%rax
  40:	48 01 c2             	add    %rax,%rdx
  43:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  47:	0f b6 00             	movzbl (%rax),%eax
  4a:	88 02                	mov    %al,(%rdx)
  4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  50:	48 8b 50 08          	mov    0x8(%rax),%rdx
  54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  58:	0f b6 00             	movzbl (%rax),%eax
  5b:	0f b6 c0             	movzbl %al,%eax
  5e:	48 69 c0 eb 00 00 00 	imul   $0xeb,%rax,%rax
  65:	48 01 c2             	add    %rax,%rdx
  68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  6c:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  70:	88 42 01             	mov    %al,0x1(%rdx)
  73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  77:	48 8b 50 08          	mov    0x8(%rax),%rdx
  7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7f:	0f b6 00             	movzbl (%rax),%eax
  82:	0f b6 c0             	movzbl %al,%eax
  85:	48 69 c0 eb 00 00 00 	imul   $0xeb,%rax,%rax
  8c:	48 01 c2             	add    %rax,%rdx
  8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  93:	0f b6 40 02          	movzbl 0x2(%rax),%eax
  97:	88 42 02             	mov    %al,0x2(%rdx)
  9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  9e:	48 8b 50 08          	mov    0x8(%rax),%rdx
  a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a6:	0f b6 00             	movzbl (%rax),%eax
  a9:	0f b6 c0             	movzbl %al,%eax
  ac:	48 69 c0 eb 00 00 00 	imul   $0xeb,%rax,%rax
  b3:	48 01 c2             	add    %rax,%rdx
  b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  ba:	0f b6 40 03          	movzbl 0x3(%rax),%eax
  be:	88 42 03             	mov    %al,0x3(%rdx)
  c1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  c8:	eb 34                	jmp    fe <RDMQueuedMessage::Add(TRdmQueuedMessage const*)+0xfe>
  ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ce:	48 8b 50 08          	mov    0x8(%rax),%rdx
  d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d6:	0f b6 00             	movzbl (%rax),%eax
  d9:	0f b6 c0             	movzbl %al,%eax
  dc:	48 69 c0 eb 00 00 00 	imul   $0xeb,%rax,%rax
  e3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
  e7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  eb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  ee:	0f b6 54 02 04       	movzbl 0x4(%rdx,%rax,1),%edx
  f3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  f6:	88 54 01 04          	mov    %dl,0x4(%rcx,%rax,1)
  fa:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 102:	0f b6 40 03          	movzbl 0x3(%rax),%eax
 106:	0f b6 c0             	movzbl %al,%eax
 109:	39 45 fc             	cmp    %eax,-0x4(%rbp)
 10c:	72 bc                	jb     ca <RDMQueuedMessage::Add(TRdmQueuedMessage const*)+0xca>
 10e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 112:	0f b6 00             	movzbl (%rax),%eax
 115:	8d 50 01             	lea    0x1(%rax),%edx
 118:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 11c:	88 10                	mov    %dl,(%rax)
 11e:	b8 01 00 00 00       	mov    $0x1,%eax
 123:	eb 05                	jmp    12a <RDMQueuedMessage::Add(TRdmQueuedMessage const*)+0x12a>
 125:	b8 00 00 00 00       	mov    $0x0,%eax
 12a:	5d                   	pop    %rbp
 12b:	c3                   	ret    

rdmslotinfo.o:     file format elf64-x86-64


Disassembly of section .text._ZN11RDMSlotInfo11GetTypeTextEhRj:

0000000000000000 <RDMSlotInfo::GetTypeText(unsigned char, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 f8                	mov    %edi,%eax
   e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  12:	88 45 ec             	mov    %al,-0x14(%rbp)
  15:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  1c:	eb 5f                	jmp    7d <RDMSlotInfo::GetTypeText(unsigned char, unsigned int&)+0x7d>
  1e:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  22:	8b 55 fc             	mov    -0x4(%rbp),%edx
  25:	48 89 d1             	mov    %rdx,%rcx
  28:	48 c1 e1 04          	shl    $0x4,%rcx
  2c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 33 <RDMSlotInfo::GetTypeText(unsigned char, unsigned int&)+0x33>
  33:	8b 14 11             	mov    (%rcx,%rdx,1),%edx
  36:	39 d0                	cmp    %edx,%eax
  38:	75 3f                	jne    79 <RDMSlotInfo::GetTypeText(unsigned char, unsigned int&)+0x79>
  3a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  3d:	48 c1 e0 04          	shl    $0x4,%rax
  41:	48 89 c2             	mov    %rax,%rdx
  44:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4b <RDMSlotInfo::GetTypeText(unsigned char, unsigned int&)+0x4b>
  4b:	48 8b 44 02 08       	mov    0x8(%rdx,%rax,1),%rax
  50:	48 89 c7             	mov    %rax,%rdi
  53:	e8 00 00 00 00       	call   58 <RDMSlotInfo::GetTypeText(unsigned char, unsigned int&)+0x58>
  58:	0f b7 d0             	movzwl %ax,%edx
  5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  5f:	89 10                	mov    %edx,(%rax)
  61:	8b 45 fc             	mov    -0x4(%rbp),%eax
  64:	48 c1 e0 04          	shl    $0x4,%rax
  68:	48 89 c2             	mov    %rax,%rdx
  6b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 72 <RDMSlotInfo::GetTypeText(unsigned char, unsigned int&)+0x72>
  72:	48 8b 44 02 08       	mov    0x8(%rdx,%rax,1),%rax
  77:	eb 1f                	jmp    98 <RDMSlotInfo::GetTypeText(unsigned char, unsigned int&)+0x98>
  79:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  7d:	83 7d fc 08          	cmpl   $0x8,-0x4(%rbp)
  81:	76 9b                	jbe    1e <RDMSlotInfo::GetTypeText(unsigned char, unsigned int&)+0x1e>
  83:	b8 18 00 00 00       	mov    $0x18,%eax
  88:	0f b7 d0             	movzwl %ax,%edx
  8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  8f:	89 10                	mov    %edx,(%rax)
  91:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 98 <RDMSlotInfo::GetTypeText(unsigned char, unsigned int&)+0x98>
  98:	c9                   	leave  
  99:	c3                   	ret    

Disassembly of section .text._ZN11RDMSlotInfo15GetCategoryTextEttRj:

0000000000000000 <RDMSlotInfo::GetCategoryText(unsigned short, unsigned short, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 f9                	mov    %edi,%ecx
   e:	89 f0                	mov    %esi,%eax
  10:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  14:	89 ca                	mov    %ecx,%edx
  16:	66 89 55 ec          	mov    %dx,-0x14(%rbp)
  1a:	66 89 45 e8          	mov    %ax,-0x18(%rbp)
  1e:	66 83 7d e8 ff       	cmpw   $0xffff,-0x18(%rbp)
  23:	75 14                	jne    39 <RDMSlotInfo::GetCategoryText(unsigned short, unsigned short, unsigned int&)+0x39>
  25:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
  29:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  2d:	48 89 d6             	mov    %rdx,%rsi
  30:	89 c7                	mov    %eax,%edi
  32:	e8 00 00 00 00       	call   37 <RDMSlotInfo::GetCategoryText(unsigned short, unsigned short, unsigned int&)+0x37>
  37:	eb 66                	jmp    9f <RDMSlotInfo::GetCategoryText(unsigned short, unsigned short, unsigned int&)+0x9f>
  39:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
  3d:	89 c7                	mov    %eax,%edi
  3f:	e8 00 00 00 00       	call   44 <RDMSlotInfo::GetCategoryText(unsigned short, unsigned short, unsigned int&)+0x44>
  44:	89 45 fc             	mov    %eax,-0x4(%rbp)
  47:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4b:	79 11                	jns    5e <RDMSlotInfo::GetCategoryText(unsigned short, unsigned short, unsigned int&)+0x5e>
  4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  51:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  57:	b8 00 00 00 00       	mov    $0x0,%eax
  5c:	eb 41                	jmp    9f <RDMSlotInfo::GetCategoryText(unsigned short, unsigned short, unsigned int&)+0x9f>
  5e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  61:	48 98                	cltq   
  63:	48 c1 e0 04          	shl    $0x4,%rax
  67:	48 89 c2             	mov    %rax,%rdx
  6a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 71 <RDMSlotInfo::GetCategoryText(unsigned short, unsigned short, unsigned int&)+0x71>
  71:	48 8b 44 02 08       	mov    0x8(%rdx,%rax,1),%rax
  76:	48 89 c7             	mov    %rax,%rdi
  79:	e8 00 00 00 00       	call   7e <RDMSlotInfo::GetCategoryText(unsigned short, unsigned short, unsigned int&)+0x7e>
  7e:	0f b7 d0             	movzwl %ax,%edx
  81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  85:	89 10                	mov    %edx,(%rax)
  87:	8b 45 fc             	mov    -0x4(%rbp),%eax
  8a:	48 98                	cltq   
  8c:	48 c1 e0 04          	shl    $0x4,%rax
  90:	48 89 c2             	mov    %rax,%rdx
  93:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9a <RDMSlotInfo::GetCategoryText(unsigned short, unsigned short, unsigned int&)+0x9a>
  9a:	48 8b 44 02 08       	mov    0x8(%rdx,%rax,1),%rax
  9f:	c9                   	leave  
  a0:	c3                   	ret    

Disassembly of section .text._ZN11RDMSlotInfo24GetCategoryTextUndefinedEtRj:

0000000000000000 <RDMSlotInfo::GetCategoryTextUndefined(unsigned short, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 f8                	mov    %edi,%eax
   a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   e:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
  12:	c7 45 fc 27 00 00 00 	movl   $0x27,-0x4(%rbp)
  19:	b8 0d 00 00 00       	mov    $0xd,%eax
  1e:	0f b7 d0             	movzwl %ax,%edx
  21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  25:	89 10                	mov    %edx,(%rax)
  27:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2e <RDMSlotInfo::GetCategoryTextUndefined(unsigned short, unsigned int&)+0x2e>
  2e:	5d                   	pop    %rbp
  2f:	c3                   	ret    

Disassembly of section .text._ZN11RDMSlotInfo7bsearchEt:

0000000000000000 <RDMSlotInfo::bsearch(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 f8                	mov    %edi,%eax
   a:	66 89 45 ec          	mov    %ax,-0x14(%rbp)
   e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  15:	c7 45 f4 28 00 00 00 	movl   $0x28,-0xc(%rbp)
  1c:	eb 5f                	jmp    7d <RDMSlotInfo::bsearch(unsigned short)+0x7d>
  1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
  21:	2b 45 f0             	sub    -0x10(%rbp),%eax
  24:	89 c2                	mov    %eax,%edx
  26:	c1 ea 1f             	shr    $0x1f,%edx
  29:	01 d0                	add    %edx,%eax
  2b:	d1 f8                	sar    %eax
  2d:	89 c2                	mov    %eax,%edx
  2f:	8b 45 f0             	mov    -0x10(%rbp),%eax
  32:	01 d0                	add    %edx,%eax
  34:	89 45 f8             	mov    %eax,-0x8(%rbp)
  37:	8b 45 f8             	mov    -0x8(%rbp),%eax
  3a:	48 98                	cltq   
  3c:	48 c1 e0 04          	shl    $0x4,%rax
  40:	48 89 c2             	mov    %rax,%rdx
  43:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4a <RDMSlotInfo::bsearch(unsigned short)+0x4a>
  4a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  4d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  50:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
  54:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  57:	7d 0b                	jge    64 <RDMSlotInfo::bsearch(unsigned short)+0x64>
  59:	8b 45 f8             	mov    -0x8(%rbp),%eax
  5c:	83 c0 01             	add    $0x1,%eax
  5f:	89 45 f0             	mov    %eax,-0x10(%rbp)
  62:	eb 19                	jmp    7d <RDMSlotInfo::bsearch(unsigned short)+0x7d>
  64:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
  68:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  6b:	7e 0b                	jle    78 <RDMSlotInfo::bsearch(unsigned short)+0x78>
  6d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  70:	83 e8 01             	sub    $0x1,%eax
  73:	89 45 f4             	mov    %eax,-0xc(%rbp)
  76:	eb 05                	jmp    7d <RDMSlotInfo::bsearch(unsigned short)+0x7d>
  78:	8b 45 f8             	mov    -0x8(%rbp),%eax
  7b:	eb 0d                	jmp    8a <RDMSlotInfo::bsearch(unsigned short)+0x8a>
  7d:	8b 45 f0             	mov    -0x10(%rbp),%eax
  80:	3b 45 f4             	cmp    -0xc(%rbp),%eax
  83:	7e 99                	jle    1e <RDMSlotInfo::bsearch(unsigned short)+0x1e>
  85:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  8a:	5d                   	pop    %rbp
  8b:	c3                   	ret    
