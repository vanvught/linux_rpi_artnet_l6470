In archive lib/libpca9685.a:

pca9685servo.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <PCA9685Servo::PCA9685Servo(unsigned char)>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <PCA9685::PCA9685(unsigned char)>
   c:	e3a02ffa 	mov	r2, #1000	; 0x3e8
  10:	e3a03e7d 	mov	r3, #2000	; 0x7d0
  14:	e59f00b8 	ldr	r0, [pc, #184]	; d4 <PCA9685Servo::PCA9685Servo(unsigned char)+0xd4>
  18:	e1c430b4 	strh	r3, [r4, #4]
  1c:	e1c420b2 	strh	r2, [r4, #2]
  20:	e1c400b6 	strh	r0, [r4, #6]
  24:	e3a01000 	mov	r1, #0
  28:	e1a00004 	mov	r0, r4
  2c:	ebfffffe 	bl	0 <PCA9685::SetInvert(bool)>
  30:	e1a00004 	mov	r0, r4
  34:	e3a01001 	mov	r1, #1
  38:	ebfffffe 	bl	0 <PCA9685::SetOutDriver(bool)>
  3c:	e1a00004 	mov	r0, r4
  40:	e3a01032 	mov	r1, #50	; 0x32
  44:	ebfffffe 	bl	0 <PCA9685::SetFrequency(unsigned short)>
  48:	e1d430b2 	ldrh	r3, [r4, #2]
  4c:	eddf7a1d 	vldr	s15, [pc, #116]	; c8 <PCA9685Servo::PCA9685Servo(unsigned char)+0xc8>
  50:	ee073a10 	vmov	s14, r3
  54:	e1d430b4 	ldrh	r3, [r4, #4]
  58:	eeb87ac7 	vcvt.f32.s32	s14, s14
  5c:	ee053a90 	vmov	s11, r3
  60:	e1d430b6 	ldrh	r3, [r4, #6]
  64:	eddf4a18 	vldr	s9, [pc, #96]	; cc <PCA9685Servo::PCA9685Servo(unsigned char)+0xcc>
  68:	ee277a27 	vmul.f32	s14, s14, s15
  6c:	ee063a10 	vmov	s12, r3
  70:	eef85ae5 	vcvt.f32.s32	s11, s11
  74:	ed9f5a15 	vldr	s10, [pc, #84]	; d0 <PCA9685Servo::PCA9685Servo(unsigned char)+0xd0>
  78:	ee655aa7 	vmul.f32	s11, s11, s15
  7c:	eec76a24 	vdiv.f32	s13, s14, s9
  80:	eeb86ac6 	vcvt.f32.s32	s12, s12
  84:	ee857aa4 	vdiv.f32	s14, s11, s9
  88:	ee266a27 	vmul.f32	s12, s12, s15
  8c:	ee766a85 	vadd.f32	s13, s13, s10
  90:	eec67a24 	vdiv.f32	s15, s12, s9
  94:	ee377a05 	vadd.f32	s14, s14, s10
  98:	eefc6ae6 	vcvt.u32.f32	s13, s13
  9c:	ee777a85 	vadd.f32	s15, s15, s10
  a0:	ee163a90 	vmov	r3, s13
  a4:	eebc7ac7 	vcvt.u32.f32	s14, s14
  a8:	eefc7ae7 	vcvt.u32.f32	s15, s15
  ac:	e1c430b8 	strh	r3, [r4, #8]
  b0:	ee173a10 	vmov	r3, s14
  b4:	e1c430ba 	strh	r3, [r4, #10]
  b8:	ee173a90 	vmov	r3, s15
  bc:	e1a00004 	mov	r0, r4
  c0:	e1c430bc 	strh	r3, [r4, #12]
  c4:	e8bd8010 	pop	{r4, pc}
  c8:	434ccccd 	movtmi	ip, #52429	; 0xcccd
  cc:	447a0000 	ldrbtmi	r0, [sl], #-0
  d0:	3f000000 	svccc	0x00000000
  d4:	000005dc 	ldrdeq	r0, [r0], -ip

000000d8 <PCA9685Servo::SetLeftUs(unsigned short)>:
  d8:	ee071a10 	vmov	s14, r1
  dc:	eddf7a0a 	vldr	s15, [pc, #40]	; 10c <PCA9685Servo::SetLeftUs(unsigned short)+0x34>
  e0:	eeb87ac7 	vcvt.f32.s32	s14, s14
  e4:	ed9f6a09 	vldr	s12, [pc, #36]	; 110 <PCA9685Servo::SetLeftUs(unsigned short)+0x38>
  e8:	ee277a27 	vmul.f32	s14, s14, s15
  ec:	eddf6a08 	vldr	s13, [pc, #32]	; 114 <PCA9685Servo::SetLeftUs(unsigned short)+0x3c>
  f0:	eec77a06 	vdiv.f32	s15, s14, s12
  f4:	ee777aa6 	vadd.f32	s15, s15, s13
  f8:	eefc7ae7 	vcvt.u32.f32	s15, s15
  fc:	ee173a90 	vmov	r3, s15
 100:	e1c010b2 	strh	r1, [r0, #2]
 104:	e1c030b8 	strh	r3, [r0, #8]
 108:	e12fff1e 	bx	lr
 10c:	434ccccd 	movtmi	ip, #52429	; 0xcccd
 110:	447a0000 	ldrbtmi	r0, [sl], #-0
 114:	3f000000 	svccc	0x00000000

00000118 <PCA9685Servo::GetLeftUs() const>:
 118:	e1d000b2 	ldrh	r0, [r0, #2]
 11c:	e12fff1e 	bx	lr

00000120 <PCA9685Servo::SetRightUs(unsigned short)>:
 120:	ee071a10 	vmov	s14, r1
 124:	eddf7a0a 	vldr	s15, [pc, #40]	; 154 <PCA9685Servo::SetRightUs(unsigned short)+0x34>
 128:	eeb87ac7 	vcvt.f32.s32	s14, s14
 12c:	ed9f6a09 	vldr	s12, [pc, #36]	; 158 <PCA9685Servo::SetRightUs(unsigned short)+0x38>
 130:	ee277a27 	vmul.f32	s14, s14, s15
 134:	eddf6a08 	vldr	s13, [pc, #32]	; 15c <PCA9685Servo::SetRightUs(unsigned short)+0x3c>
 138:	eec77a06 	vdiv.f32	s15, s14, s12
 13c:	ee777aa6 	vadd.f32	s15, s15, s13
 140:	eefc7ae7 	vcvt.u32.f32	s15, s15
 144:	ee173a90 	vmov	r3, s15
 148:	e1c010b4 	strh	r1, [r0, #4]
 14c:	e1c030ba 	strh	r3, [r0, #10]
 150:	e12fff1e 	bx	lr
 154:	434ccccd 	movtmi	ip, #52429	; 0xcccd
 158:	447a0000 	ldrbtmi	r0, [sl], #-0
 15c:	3f000000 	svccc	0x00000000

00000160 <PCA9685Servo::GetRightUs() const>:
 160:	e1d000b4 	ldrh	r0, [r0, #4]
 164:	e12fff1e 	bx	lr

00000168 <PCA9685Servo::SetCenterUs(unsigned short)>:
 168:	ee071a10 	vmov	s14, r1
 16c:	eddf7a0a 	vldr	s15, [pc, #40]	; 19c <PCA9685Servo::SetCenterUs(unsigned short)+0x34>
 170:	eeb87ac7 	vcvt.f32.s32	s14, s14
 174:	ed9f6a09 	vldr	s12, [pc, #36]	; 1a0 <PCA9685Servo::SetCenterUs(unsigned short)+0x38>
 178:	ee277a27 	vmul.f32	s14, s14, s15
 17c:	eddf6a08 	vldr	s13, [pc, #32]	; 1a4 <PCA9685Servo::SetCenterUs(unsigned short)+0x3c>
 180:	eec77a06 	vdiv.f32	s15, s14, s12
 184:	ee777aa6 	vadd.f32	s15, s15, s13
 188:	eefc7ae7 	vcvt.u32.f32	s15, s15
 18c:	ee173a90 	vmov	r3, s15
 190:	e1c010b6 	strh	r1, [r0, #6]
 194:	e1c030bc 	strh	r3, [r0, #12]
 198:	e12fff1e 	bx	lr
 19c:	434ccccd 	movtmi	ip, #52429	; 0xcccd
 1a0:	447a0000 	ldrbtmi	r0, [sl], #-0
 1a4:	3f000000 	svccc	0x00000000

000001a8 <PCA9685Servo::GetCenterUs() const>:
 1a8:	e1d000b6 	ldrh	r0, [r0, #6]
 1ac:	e12fff1e 	bx	lr

000001b0 <PCA9685Servo::CalcLeftCount()>:
 1b0:	e1d030b2 	ldrh	r3, [r0, #2]
 1b4:	eddf7a0a 	vldr	s15, [pc, #40]	; 1e4 <PCA9685Servo::CalcLeftCount()+0x34>
 1b8:	ee073a10 	vmov	s14, r3
 1bc:	eeb87ac7 	vcvt.f32.s32	s14, s14
 1c0:	ed9f6a08 	vldr	s12, [pc, #32]	; 1e8 <PCA9685Servo::CalcLeftCount()+0x38>
 1c4:	ee277a27 	vmul.f32	s14, s14, s15
 1c8:	eddf6a07 	vldr	s13, [pc, #28]	; 1ec <PCA9685Servo::CalcLeftCount()+0x3c>
 1cc:	eec77a06 	vdiv.f32	s15, s14, s12
 1d0:	ee777aa6 	vadd.f32	s15, s15, s13
 1d4:	eefc7ae7 	vcvt.u32.f32	s15, s15
 1d8:	ee173a90 	vmov	r3, s15
 1dc:	e1c030b8 	strh	r3, [r0, #8]
 1e0:	e12fff1e 	bx	lr
 1e4:	434ccccd 	movtmi	ip, #52429	; 0xcccd
 1e8:	447a0000 	ldrbtmi	r0, [sl], #-0
 1ec:	3f000000 	svccc	0x00000000

000001f0 <PCA9685Servo::CalcRightCount()>:
 1f0:	e1d030b4 	ldrh	r3, [r0, #4]
 1f4:	eddf7a0a 	vldr	s15, [pc, #40]	; 224 <PCA9685Servo::CalcRightCount()+0x34>
 1f8:	ee073a10 	vmov	s14, r3
 1fc:	eeb87ac7 	vcvt.f32.s32	s14, s14
 200:	ed9f6a08 	vldr	s12, [pc, #32]	; 228 <PCA9685Servo::CalcRightCount()+0x38>
 204:	ee277a27 	vmul.f32	s14, s14, s15
 208:	eddf6a07 	vldr	s13, [pc, #28]	; 22c <PCA9685Servo::CalcRightCount()+0x3c>
 20c:	eec77a06 	vdiv.f32	s15, s14, s12
 210:	ee777aa6 	vadd.f32	s15, s15, s13
 214:	eefc7ae7 	vcvt.u32.f32	s15, s15
 218:	ee173a90 	vmov	r3, s15
 21c:	e1c030ba 	strh	r3, [r0, #10]
 220:	e12fff1e 	bx	lr
 224:	434ccccd 	movtmi	ip, #52429	; 0xcccd
 228:	447a0000 	ldrbtmi	r0, [sl], #-0
 22c:	3f000000 	svccc	0x00000000

00000230 <PCA9685Servo::CalcCenterCount()>:
 230:	e1d030b6 	ldrh	r3, [r0, #6]
 234:	eddf7a0a 	vldr	s15, [pc, #40]	; 264 <PCA9685Servo::CalcCenterCount()+0x34>
 238:	ee073a10 	vmov	s14, r3
 23c:	eeb87ac7 	vcvt.f32.s32	s14, s14
 240:	ed9f6a08 	vldr	s12, [pc, #32]	; 268 <PCA9685Servo::CalcCenterCount()+0x38>
 244:	ee277a27 	vmul.f32	s14, s14, s15
 248:	eddf6a07 	vldr	s13, [pc, #28]	; 26c <PCA9685Servo::CalcCenterCount()+0x3c>
 24c:	eec77a06 	vdiv.f32	s15, s14, s12
 250:	ee777aa6 	vadd.f32	s15, s15, s13
 254:	eefc7ae7 	vcvt.u32.f32	s15, s15
 258:	ee173a90 	vmov	r3, s15
 25c:	e1c030bc 	strh	r3, [r0, #12]
 260:	e12fff1e 	bx	lr
 264:	434ccccd 	movtmi	ip, #52429	; 0xcccd
 268:	447a0000 	ldrbtmi	r0, [sl], #-0
 26c:	3f000000 	svccc	0x00000000

00000270 <PCA9685Servo::Set(unsigned char, unsigned short)>:
 270:	e1a0c002 	mov	ip, r2
 274:	e1d020ba 	ldrh	r2, [r0, #10]
 278:	e152000c 	cmp	r2, ip
 27c:	3a000003 	bcc	290 <PCA9685Servo::Set(unsigned char, unsigned short)+0x20>
 280:	e1d030b8 	ldrh	r3, [r0, #8]
 284:	e153000c 	cmp	r3, ip
 288:	21a02003 	movcs	r2, r3
 28c:	31a0200c 	movcc	r2, ip
 290:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>

00000294 <PCA9685Servo::Set(unsigned char, unsigned char)>:
 294:	e2523000 	subs	r3, r2, #0
 298:	0a000015 	beq	2f4 <PCA9685Servo::Set(unsigned char, unsigned char)+0x60>
 29c:	e3530080 	cmp	r3, #128	; 0x80
 2a0:	0a000015 	beq	2fc <PCA9685Servo::Set(unsigned char, unsigned char)+0x68>
 2a4:	e35300ff 	cmp	r3, #255	; 0xff
 2a8:	e1d020ba 	ldrh	r2, [r0, #10]
 2ac:	0a00000f 	beq	2f0 <PCA9685Servo::Set(unsigned char, unsigned char)+0x5c>
 2b0:	e1d0c0b8 	ldrh	ip, [r0, #8]
 2b4:	ed9f5a12 	vldr	s10, [pc, #72]	; 304 <PCA9685Servo::Set(unsigned char, unsigned char)+0x70>
 2b8:	e042200c 	sub	r2, r2, ip
 2bc:	ee072a90 	vmov	s15, r2
 2c0:	eef86ae7 	vcvt.f32.s32	s13, s15
 2c4:	ee073a90 	vmov	s15, r3
 2c8:	ed9f7a0e 	vldr	s14, [pc, #56]	; 308 <PCA9685Servo::Set(unsigned char, unsigned char)+0x74>
 2cc:	eef87ae7 	vcvt.f32.s32	s15, s15
 2d0:	ee06ca10 	vmov	s12, ip
 2d4:	eec65a85 	vdiv.f32	s11, s13, s10
 2d8:	eeb86ac6 	vcvt.f32.s32	s12, s12
 2dc:	ee057aa7 	vmla.f32	s14, s11, s15
 2e0:	ee777a06 	vadd.f32	s15, s14, s12
 2e4:	eefc7ae7 	vcvt.u32.f32	s15, s15
 2e8:	ee173a90 	vmov	r3, s15
 2ec:	e6ff2073 	uxth	r2, r3
 2f0:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>
 2f4:	e1d020b8 	ldrh	r2, [r0, #8]
 2f8:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>
 2fc:	e1d020bc 	ldrh	r2, [r0, #12]
 300:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>
 304:	437f0000 	cmnmi	pc, #0
 308:	3f000000 	svccc	0x00000000

0000030c <PCA9685Servo::SetAngle(unsigned char, unsigned char)>:
 30c:	e3520000 	cmp	r2, #0
 310:	0a000018 	beq	378 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0x6c>
 314:	e352005a 	cmp	r2, #90	; 0x5a
 318:	0a00002d 	beq	3d4 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0xc8>
 31c:	e35200b3 	cmp	r2, #179	; 0xb3
 320:	8a000029 	bhi	3cc <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0xc0>
 324:	ee072a90 	vmov	s15, r2
 328:	e3520059 	cmp	r2, #89	; 0x59
 32c:	eef87ae7 	vcvt.f32.s32	s15, s15
 330:	e1d020bc 	ldrh	r2, [r0, #12]
 334:	8a000011 	bhi	380 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0x74>
 338:	e1d030b8 	ldrh	r3, [r0, #8]
 33c:	ed9f5a26 	vldr	s10, [pc, #152]	; 3dc <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0xd0>
 340:	e0422003 	sub	r2, r2, r3
 344:	ee072a10 	vmov	s14, r2
 348:	eddf6a24 	vldr	s13, [pc, #144]	; 3e0 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0xd4>
 34c:	eeb87ac7 	vcvt.f32.s32	s14, s14
 350:	ee063a10 	vmov	s12, r3
 354:	eec75a05 	vdiv.f32	s11, s14, s10
 358:	eeb07a66 	vmov.f32	s14, s13
 35c:	eeb86ac6 	vcvt.f32.s32	s12, s12
 360:	ee057aa7 	vmla.f32	s14, s11, s15
 364:	ee777a06 	vadd.f32	s15, s14, s12
 368:	eefc7ae7 	vcvt.u32.f32	s15, s15
 36c:	ee173a90 	vmov	r3, s15
 370:	e6ff2073 	uxth	r2, r3
 374:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>
 378:	e1d020b8 	ldrh	r2, [r0, #8]
 37c:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>
 380:	e1d030ba 	ldrh	r3, [r0, #10]
 384:	ee072a10 	vmov	s14, r2
 388:	e043c002 	sub	ip, r3, r2
 38c:	ee05ca90 	vmov	s11, ip
 390:	ee063a10 	vmov	s12, r3
 394:	eddf4a10 	vldr	s9, [pc, #64]	; 3dc <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0xd0>
 398:	eef85ae5 	vcvt.f32.s32	s11, s11
 39c:	eeb87ac7 	vcvt.f32.s32	s14, s14
 3a0:	eddf6a0e 	vldr	s13, [pc, #56]	; 3e0 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0xd4>
 3a4:	eeb86ac6 	vcvt.f32.s32	s12, s12
 3a8:	ee855aa4 	vdiv.f32	s10, s11, s9
 3ac:	ee377a07 	vadd.f32	s14, s14, s14
 3b0:	ee456a27 	vmla.f32	s13, s10, s15
 3b4:	ee377a46 	vsub.f32	s14, s14, s12
 3b8:	ee367a87 	vadd.f32	s14, s13, s14
 3bc:	eebc7ac7 	vcvt.u32.f32	s14, s14
 3c0:	ee173a10 	vmov	r3, s14
 3c4:	e6ff2073 	uxth	r2, r3
 3c8:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>
 3cc:	e1d020ba 	ldrh	r2, [r0, #10]
 3d0:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>
 3d4:	e1d020bc 	ldrh	r2, [r0, #12]
 3d8:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>
 3dc:	42b40000 	adcsmi	r0, r4, #0
 3e0:	3f000000 	svccc	0x00000000

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0x168d520>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <PCA9685Servo::SetAngle(unsigned char, unsigned char)+0x42118>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


pca9685pwmled.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <PCA9685PWMLed::PCA9685PWMLed(unsigned char)>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <PCA9685::PCA9685(unsigned char)>
   c:	e1a00004 	mov	r0, r4
  10:	e3a01078 	mov	r1, #120	; 0x78
  14:	ebfffffe 	bl	0 <PCA9685::SetFrequency(unsigned short)>
  18:	e1a00004 	mov	r0, r4
  1c:	e8bd8010 	pop	{r4, pc}

00000020 <PCA9685PWMLed::Set(unsigned char, unsigned short)>:
  20:	e59fc020 	ldr	ip, [pc, #32]	; 48 <PCA9685PWMLed::Set(unsigned char, unsigned short)+0x28>
  24:	e152000c 	cmp	r2, ip
  28:	2a000004 	bcs	40 <PCA9685PWMLed::Set(unsigned char, unsigned short)+0x20>
  2c:	e3520000 	cmp	r2, #0
  30:	1a000001 	bne	3c <PCA9685PWMLed::Set(unsigned char, unsigned short)+0x1c>
  34:	e3a02001 	mov	r2, #1
  38:	eafffffe 	b	0 <PCA9685::SetFullOff(unsigned char, bool)>
  3c:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>
  40:	e3a02001 	mov	r2, #1
  44:	eafffffe 	b	0 <PCA9685::SetFullOn(unsigned char, bool)>
  48:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

0000004c <PCA9685PWMLed::Set(unsigned char, unsigned char)>:
  4c:	e35200ff 	cmp	r2, #255	; 0xff
  50:	0a000006 	beq	70 <PCA9685PWMLed::Set(unsigned char, unsigned char)+0x24>
  54:	e3520000 	cmp	r2, #0
  58:	1a000001 	bne	64 <PCA9685PWMLed::Set(unsigned char, unsigned char)+0x18>
  5c:	e3a02001 	mov	r2, #1
  60:	eafffffe 	b	0 <PCA9685::SetFullOff(unsigned char, bool)>
  64:	e1a03222 	lsr	r3, r2, #4
  68:	e1832202 	orr	r2, r3, r2, lsl #4
  6c:	eafffffe 	b	0 <PCA9685::Write(unsigned char, unsigned short)>
  70:	e3a02001 	mov	r2, #1
  74:	eafffffe 	b	0 <PCA9685::SetFullOn(unsigned char, bool)>

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <PCA9685PWMLed::Set(unsigned char, unsigned char)+0x168d7e0>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <PCA9685PWMLed::Set(unsigned char, unsigned char)+0x423d8>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


pca9685.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <PCA9685::Sleep(bool)>:
   0:	e92d4070 	push	{r4, r5, r6, lr}
   4:	e3a02000 	mov	r2, #0
   8:	e1a05000 	mov	r5, r0
   c:	e24dd008 	sub	sp, sp, #8
  10:	e59f3088 	ldr	r3, [pc, #136]	; a0 <PCA9685::Sleep(bool)+0xa0>
  14:	e5cd2004 	strb	r2, [sp, #4]
  18:	e5d52000 	ldrb	r2, [r5]
  1c:	e59f0080 	ldr	r0, [pc, #128]	; a4 <PCA9685::Sleep(bool)+0xa4>
  20:	e583200c 	str	r2, [r3, #12]
  24:	e1a06001 	mov	r6, r1
  28:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  2c:	e3a01001 	mov	r1, #1
  30:	e28d0004 	add	r0, sp, #4
  34:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  38:	e3a01001 	mov	r1, #1
  3c:	e28d0004 	add	r0, sp, #4
  40:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  44:	e3a01000 	mov	r1, #0
  48:	e5dd4004 	ldrb	r4, [sp, #4]
  4c:	e3560000 	cmp	r6, #0
  50:	e5d52000 	ldrb	r2, [r5]
  54:	e59f3044 	ldr	r3, [pc, #68]	; a0 <PCA9685::Sleep(bool)+0xa0>
  58:	e20440ef 	and	r4, r4, #239	; 0xef
  5c:	13844010 	orrne	r4, r4, #16
  60:	e5cd1004 	strb	r1, [sp, #4]
  64:	e59f0038 	ldr	r0, [pc, #56]	; a4 <PCA9685::Sleep(bool)+0xa4>
  68:	e5cd4005 	strb	r4, [sp, #5]
  6c:	e583200c 	str	r2, [r3, #12]
  70:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  74:	e3a01002 	mov	r1, #2
  78:	e28d0004 	add	r0, sp, #4
  7c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  80:	e314007f 	tst	r4, #127	; 0x7f
  84:	1a000001 	bne	90 <PCA9685::Sleep(bool)+0x90>
  88:	e28dd008 	add	sp, sp, #8
  8c:	e8bd8070 	pop	{r4, r5, r6, pc}
  90:	e3a00f7d 	mov	r0, #500	; 0x1f4
  94:	e28dd008 	add	sp, sp, #8
  98:	e8bd4070 	pop	{r4, r5, r6, lr}
  9c:	eafffffe 	b	0 <udelay>
  a0:	20804000 	addcs	r4, r0, r0
  a4:	00061a80 	andeq	r1, r6, r0, lsl #21

000000a8 <PCA9685::PCA9685(unsigned char)>:
  a8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  ac:	e1a06000 	mov	r6, r0
  b0:	e3a05000 	mov	r5, #0
  b4:	e24dd008 	sub	sp, sp, #8
  b8:	e5c01000 	strb	r1, [r0]
  bc:	ebfffffe 	bl	0 <bcm2835_i2c_begin>
  c0:	e59f70bc 	ldr	r7, [pc, #188]	; 184 <PCA9685::PCA9685(unsigned char)+0xdc>
  c4:	e5d63000 	ldrb	r3, [r6]
  c8:	e59f80b8 	ldr	r8, [pc, #184]	; 188 <PCA9685::PCA9685(unsigned char)+0xe0>
  cc:	e5cd5000 	strb	r5, [sp]
  d0:	e1a00008 	mov	r0, r8
  d4:	e587300c 	str	r3, [r7, #12]
  d8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  dc:	e3a01001 	mov	r1, #1
  e0:	e1a0000d 	mov	r0, sp
  e4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  e8:	e3a01001 	mov	r1, #1
  ec:	e1a0000d 	mov	r0, sp
  f0:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  f4:	e5dd3000 	ldrb	r3, [sp]
  f8:	e1a00008 	mov	r0, r8
  fc:	e20330df 	and	r3, r3, #223	; 0xdf
 100:	e3833020 	orr	r3, r3, #32
 104:	e5cd3001 	strb	r3, [sp, #1]
 108:	e5d63000 	ldrb	r3, [r6]
 10c:	e5cd5000 	strb	r5, [sp]
 110:	e587300c 	str	r3, [r7, #12]
 114:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 118:	e3a01002 	mov	r1, #2
 11c:	e1a0000d 	mov	r0, sp
 120:	e3a04006 	mov	r4, #6
 124:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 128:	e3a02010 	mov	r2, #16
 12c:	e5d63000 	ldrb	r3, [r6]
 130:	e5cd4000 	strb	r4, [sp]
 134:	e5cd2004 	strb	r2, [sp, #4]
 138:	e1a00008 	mov	r0, r8
 13c:	e5cd5001 	strb	r5, [sp, #1]
 140:	e5cd5002 	strb	r5, [sp, #2]
 144:	e5cd5003 	strb	r5, [sp, #3]
 148:	e2844004 	add	r4, r4, #4
 14c:	e587300c 	str	r3, [r7, #12]
 150:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 154:	e6ef4074 	uxtb	r4, r4
 158:	e3a01005 	mov	r1, #5
 15c:	e1a0000d 	mov	r0, sp
 160:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 164:	e3540046 	cmp	r4, #70	; 0x46
 168:	1affffee 	bne	128 <PCA9685::PCA9685(unsigned char)+0x80>
 16c:	e1a00006 	mov	r0, r6
 170:	e3a01000 	mov	r1, #0
 174:	ebfffffe 	bl	0 <PCA9685::Sleep(bool)>
 178:	e1a00006 	mov	r0, r6
 17c:	e28dd008 	add	sp, sp, #8
 180:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 184:	20804000 	addcs	r4, r0, r0
 188:	00061a80 	andeq	r1, r6, r0, lsl #21

0000018c <PCA9685::SetPreScaller(unsigned char)>:
 18c:	e92d4030 	push	{r4, r5, lr}
 190:	e1a04001 	mov	r4, r1
 194:	e24dd00c 	sub	sp, sp, #12
 198:	e1a05000 	mov	r5, r0
 19c:	e3a01001 	mov	r1, #1
 1a0:	ebfffffe 	bl	0 <PCA9685::Sleep(bool)>
 1a4:	e3540003 	cmp	r4, #3
 1a8:	33a04003 	movcc	r4, #3
 1ac:	e3e01001 	mvn	r1, #1
 1b0:	e59f3034 	ldr	r3, [pc, #52]	; 1ec <PCA9685::SetPreScaller(unsigned char)+0x60>
 1b4:	e5d52000 	ldrb	r2, [r5]
 1b8:	e5cd1004 	strb	r1, [sp, #4]
 1bc:	e5cd4005 	strb	r4, [sp, #5]
 1c0:	e59f0028 	ldr	r0, [pc, #40]	; 1f0 <PCA9685::SetPreScaller(unsigned char)+0x64>
 1c4:	e583200c 	str	r2, [r3, #12]
 1c8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1cc:	e3a01002 	mov	r1, #2
 1d0:	e28d0004 	add	r0, sp, #4
 1d4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1d8:	e3a01000 	mov	r1, #0
 1dc:	e1a00005 	mov	r0, r5
 1e0:	e28dd00c 	add	sp, sp, #12
 1e4:	e8bd4030 	pop	{r4, r5, lr}
 1e8:	eafffffe 	b	0 <PCA9685::Sleep(bool)>
 1ec:	20804000 	addcs	r4, r0, r0
 1f0:	00061a80 	andeq	r1, r6, r0, lsl #21

000001f4 <PCA9685::GetPreScaller()>:
 1f4:	e1a02000 	mov	r2, r0
 1f8:	e3e01001 	mvn	r1, #1
 1fc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 200:	e59f3038 	ldr	r3, [pc, #56]	; 240 <PCA9685::GetPreScaller()+0x4c>
 204:	e5d22000 	ldrb	r2, [r2]
 208:	e24dd00c 	sub	sp, sp, #12
 20c:	e5cd1007 	strb	r1, [sp, #7]
 210:	e59f002c 	ldr	r0, [pc, #44]	; 244 <PCA9685::GetPreScaller()+0x50>
 214:	e583200c 	str	r2, [r3, #12]
 218:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 21c:	e3a01001 	mov	r1, #1
 220:	e28d0007 	add	r0, sp, #7
 224:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 228:	e3a01001 	mov	r1, #1
 22c:	e28d0007 	add	r0, sp, #7
 230:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 234:	e5dd0007 	ldrb	r0, [sp, #7]
 238:	e28dd00c 	add	sp, sp, #12
 23c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 240:	20804000 	addcs	r4, r0, r0
 244:	00061a80 	andeq	r1, r6, r0, lsl #21

00000248 <PCA9685::SetFrequency(unsigned short)>:
 248:	e1a03001 	mov	r3, r1
 24c:	e3530018 	cmp	r3, #24
 250:	33a03018 	movcc	r3, #24
 254:	e59f209c 	ldr	r2, [pc, #156]	; 2f8 <PCA9685::SetFrequency(unsigned short)+0xb0>
 258:	e92d4010 	push	{r4, lr}
 25c:	e1530002 	cmp	r3, r2
 260:	21a03002 	movcs	r3, r2
 264:	ed2d8b02 	vpush	{d8}
 268:	ee073a90 	vmov	s15, r3
 26c:	e24dd010 	sub	sp, sp, #16
 270:	e3a01001 	mov	r1, #1
 274:	e1a04000 	mov	r4, r0
 278:	eeb88a67 	vcvt.f32.u32	s16, s15
 27c:	ebfffffe 	bl	0 <PCA9685::Sleep(bool)>
 280:	eddf7a1a 	vldr	s15, [pc, #104]	; 2f0 <PCA9685::SetFrequency(unsigned short)+0xa8>
 284:	eddf6a1a 	vldr	s13, [pc, #104]	; 2f4 <PCA9685::SetFrequency(unsigned short)+0xac>
 288:	ee787a27 	vadd.f32	s15, s16, s15
 28c:	ee777ae6 	vsub.f32	s15, s15, s13
 290:	ee877a88 	vdiv.f32	s14, s15, s16
 294:	ee777a66 	vsub.f32	s15, s14, s13
 298:	eefc7ae7 	vcvt.u32.f32	s15, s15
 29c:	e3e03001 	mvn	r3, #1
 2a0:	edcd7a01 	vstr	s15, [sp, #4]
 2a4:	e5cd300c 	strb	r3, [sp, #12]
 2a8:	e5dd3004 	ldrb	r3, [sp, #4]
 2ac:	e5d41000 	ldrb	r1, [r4]
 2b0:	e3530003 	cmp	r3, #3
 2b4:	33a03003 	movcc	r3, #3
 2b8:	e59f203c 	ldr	r2, [pc, #60]	; 2fc <PCA9685::SetFrequency(unsigned short)+0xb4>
 2bc:	e5cd300d 	strb	r3, [sp, #13]
 2c0:	e59f0038 	ldr	r0, [pc, #56]	; 300 <PCA9685::SetFrequency(unsigned short)+0xb8>
 2c4:	e582100c 	str	r1, [r2, #12]
 2c8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2cc:	e3a01002 	mov	r1, #2
 2d0:	e28d000c 	add	r0, sp, #12
 2d4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 2d8:	e3a01000 	mov	r1, #0
 2dc:	e1a00004 	mov	r0, r4
 2e0:	e28dd010 	add	sp, sp, #16
 2e4:	ecbd8b02 	vpop	{d8}
 2e8:	e8bd4010 	pop	{r4, lr}
 2ec:	eafffffe 	b	0 <PCA9685::Sleep(bool)>
 2f0:	45bebc20 	ldrmi	fp, [lr, #3104]!	; 0xc20
 2f4:	3f800000 	svccc	0x00800000
 2f8:	000005f6 	strdeq	r0, [r0], -r6
 2fc:	20804000 	addcs	r4, r0, r0
 300:	00061a80 	andeq	r1, r6, r0, lsl #21

00000304 <PCA9685::SetOCH(TPCA9685Och)>:
 304:	e92d4070 	push	{r4, r5, r6, lr}
 308:	e1a04000 	mov	r4, r0
 30c:	e3a06001 	mov	r6, #1
 310:	e5d42000 	ldrb	r2, [r4]
 314:	e59f3070 	ldr	r3, [pc, #112]	; 38c <PCA9685::SetOCH(TPCA9685Och)+0x88>
 318:	e24dd008 	sub	sp, sp, #8
 31c:	e5cd6004 	strb	r6, [sp, #4]
 320:	e59f0068 	ldr	r0, [pc, #104]	; 390 <PCA9685::SetOCH(TPCA9685Och)+0x8c>
 324:	e583200c 	str	r2, [r3, #12]
 328:	e1a05001 	mov	r5, r1
 32c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 330:	e1a01006 	mov	r1, r6
 334:	e28d0004 	add	r0, sp, #4
 338:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 33c:	e1a01006 	mov	r1, r6
 340:	e28d0004 	add	r0, sp, #4
 344:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 348:	e3a0c001 	mov	ip, #1
 34c:	e5dd3004 	ldrb	r3, [sp, #4]
 350:	e5d41000 	ldrb	r1, [r4]
 354:	e20330f7 	and	r3, r3, #247	; 0xf7
 358:	e59f202c 	ldr	r2, [pc, #44]	; 38c <PCA9685::SetOCH(TPCA9685Och)+0x88>
 35c:	e3550008 	cmp	r5, #8
 360:	03833008 	orreq	r3, r3, #8
 364:	e5cd3005 	strb	r3, [sp, #5]
 368:	e5cdc004 	strb	ip, [sp, #4]
 36c:	e59f001c 	ldr	r0, [pc, #28]	; 390 <PCA9685::SetOCH(TPCA9685Och)+0x8c>
 370:	e582100c 	str	r1, [r2, #12]
 374:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 378:	e3a01002 	mov	r1, #2
 37c:	e28d0004 	add	r0, sp, #4
 380:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 384:	e28dd008 	add	sp, sp, #8
 388:	e8bd8070 	pop	{r4, r5, r6, pc}
 38c:	20804000 	addcs	r4, r0, r0
 390:	00061a80 	andeq	r1, r6, r0, lsl #21

00000394 <PCA9685::GetOCH()>:
 394:	e1a02000 	mov	r2, r0
 398:	e92d4010 	push	{r4, lr}
 39c:	e3a04001 	mov	r4, #1
 3a0:	e59f303c 	ldr	r3, [pc, #60]	; 3e4 <PCA9685::GetOCH()+0x50>
 3a4:	e5d22000 	ldrb	r2, [r2]
 3a8:	e24dd008 	sub	sp, sp, #8
 3ac:	e5cd4007 	strb	r4, [sp, #7]
 3b0:	e59f0030 	ldr	r0, [pc, #48]	; 3e8 <PCA9685::GetOCH()+0x54>
 3b4:	e583200c 	str	r2, [r3, #12]
 3b8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3bc:	e1a01004 	mov	r1, r4
 3c0:	e28d0007 	add	r0, sp, #7
 3c4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3c8:	e1a01004 	mov	r1, r4
 3cc:	e28d0007 	add	r0, sp, #7
 3d0:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 3d4:	e5dd0007 	ldrb	r0, [sp, #7]
 3d8:	e2000008 	and	r0, r0, #8
 3dc:	e28dd008 	add	sp, sp, #8
 3e0:	e8bd8010 	pop	{r4, pc}
 3e4:	20804000 	addcs	r4, r0, r0
 3e8:	00061a80 	andeq	r1, r6, r0, lsl #21

000003ec <PCA9685::SetInvert(bool)>:
 3ec:	e92d4070 	push	{r4, r5, r6, lr}
 3f0:	e1a04000 	mov	r4, r0
 3f4:	e3a06001 	mov	r6, #1
 3f8:	e5d42000 	ldrb	r2, [r4]
 3fc:	e59f3070 	ldr	r3, [pc, #112]	; 474 <PCA9685::SetInvert(bool)+0x88>
 400:	e24dd008 	sub	sp, sp, #8
 404:	e5cd6004 	strb	r6, [sp, #4]
 408:	e59f0068 	ldr	r0, [pc, #104]	; 478 <PCA9685::SetInvert(bool)+0x8c>
 40c:	e583200c 	str	r2, [r3, #12]
 410:	e1a05001 	mov	r5, r1
 414:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 418:	e1a01006 	mov	r1, r6
 41c:	e28d0004 	add	r0, sp, #4
 420:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 424:	e1a01006 	mov	r1, r6
 428:	e28d0004 	add	r0, sp, #4
 42c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 430:	e3a0c001 	mov	ip, #1
 434:	e5dd3004 	ldrb	r3, [sp, #4]
 438:	e5d41000 	ldrb	r1, [r4]
 43c:	e20330ef 	and	r3, r3, #239	; 0xef
 440:	e59f202c 	ldr	r2, [pc, #44]	; 474 <PCA9685::SetInvert(bool)+0x88>
 444:	e3550000 	cmp	r5, #0
 448:	13833010 	orrne	r3, r3, #16
 44c:	e5cd3005 	strb	r3, [sp, #5]
 450:	e5cdc004 	strb	ip, [sp, #4]
 454:	e59f001c 	ldr	r0, [pc, #28]	; 478 <PCA9685::SetInvert(bool)+0x8c>
 458:	e582100c 	str	r1, [r2, #12]
 45c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 460:	e3a01002 	mov	r1, #2
 464:	e28d0004 	add	r0, sp, #4
 468:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 46c:	e28dd008 	add	sp, sp, #8
 470:	e8bd8070 	pop	{r4, r5, r6, pc}
 474:	20804000 	addcs	r4, r0, r0
 478:	00061a80 	andeq	r1, r6, r0, lsl #21

0000047c <PCA9685::GetInvert()>:
 47c:	e1a02000 	mov	r2, r0
 480:	e92d4010 	push	{r4, lr}
 484:	e3a04001 	mov	r4, #1
 488:	e59f3040 	ldr	r3, [pc, #64]	; 4d0 <PCA9685::GetInvert()+0x54>
 48c:	e5d22000 	ldrb	r2, [r2]
 490:	e24dd008 	sub	sp, sp, #8
 494:	e5cd4007 	strb	r4, [sp, #7]
 498:	e59f0034 	ldr	r0, [pc, #52]	; 4d4 <PCA9685::GetInvert()+0x58>
 49c:	e583200c 	str	r2, [r3, #12]
 4a0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4a4:	e1a01004 	mov	r1, r4
 4a8:	e28d0007 	add	r0, sp, #7
 4ac:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4b0:	e1a01004 	mov	r1, r4
 4b4:	e28d0007 	add	r0, sp, #7
 4b8:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 4bc:	e5dd0007 	ldrb	r0, [sp, #7]
 4c0:	e1a00220 	lsr	r0, r0, #4
 4c4:	e0000004 	and	r0, r0, r4
 4c8:	e28dd008 	add	sp, sp, #8
 4cc:	e8bd8010 	pop	{r4, pc}
 4d0:	20804000 	addcs	r4, r0, r0
 4d4:	00061a80 	andeq	r1, r6, r0, lsl #21

000004d8 <PCA9685::SetOutDriver(bool)>:
 4d8:	e92d4070 	push	{r4, r5, r6, lr}
 4dc:	e1a04000 	mov	r4, r0
 4e0:	e3a06001 	mov	r6, #1
 4e4:	e5d42000 	ldrb	r2, [r4]
 4e8:	e59f3070 	ldr	r3, [pc, #112]	; 560 <PCA9685::SetOutDriver(bool)+0x88>
 4ec:	e24dd008 	sub	sp, sp, #8
 4f0:	e5cd6004 	strb	r6, [sp, #4]
 4f4:	e59f0068 	ldr	r0, [pc, #104]	; 564 <PCA9685::SetOutDriver(bool)+0x8c>
 4f8:	e583200c 	str	r2, [r3, #12]
 4fc:	e1a05001 	mov	r5, r1
 500:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 504:	e1a01006 	mov	r1, r6
 508:	e28d0004 	add	r0, sp, #4
 50c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 510:	e1a01006 	mov	r1, r6
 514:	e28d0004 	add	r0, sp, #4
 518:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 51c:	e3a0c001 	mov	ip, #1
 520:	e5dd3004 	ldrb	r3, [sp, #4]
 524:	e5d41000 	ldrb	r1, [r4]
 528:	e20330fb 	and	r3, r3, #251	; 0xfb
 52c:	e59f202c 	ldr	r2, [pc, #44]	; 560 <PCA9685::SetOutDriver(bool)+0x88>
 530:	e3550000 	cmp	r5, #0
 534:	13833004 	orrne	r3, r3, #4
 538:	e5cd3005 	strb	r3, [sp, #5]
 53c:	e5cdc004 	strb	ip, [sp, #4]
 540:	e59f001c 	ldr	r0, [pc, #28]	; 564 <PCA9685::SetOutDriver(bool)+0x8c>
 544:	e582100c 	str	r1, [r2, #12]
 548:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 54c:	e3a01002 	mov	r1, #2
 550:	e28d0004 	add	r0, sp, #4
 554:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 558:	e28dd008 	add	sp, sp, #8
 55c:	e8bd8070 	pop	{r4, r5, r6, pc}
 560:	20804000 	addcs	r4, r0, r0
 564:	00061a80 	andeq	r1, r6, r0, lsl #21

00000568 <PCA9685::GetOutDriver()>:
 568:	e1a02000 	mov	r2, r0
 56c:	e92d4010 	push	{r4, lr}
 570:	e3a04001 	mov	r4, #1
 574:	e59f3040 	ldr	r3, [pc, #64]	; 5bc <PCA9685::GetOutDriver()+0x54>
 578:	e5d22000 	ldrb	r2, [r2]
 57c:	e24dd008 	sub	sp, sp, #8
 580:	e5cd4007 	strb	r4, [sp, #7]
 584:	e59f0034 	ldr	r0, [pc, #52]	; 5c0 <PCA9685::GetOutDriver()+0x58>
 588:	e583200c 	str	r2, [r3, #12]
 58c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 590:	e1a01004 	mov	r1, r4
 594:	e28d0007 	add	r0, sp, #7
 598:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 59c:	e1a01004 	mov	r1, r4
 5a0:	e28d0007 	add	r0, sp, #7
 5a4:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 5a8:	e5dd0007 	ldrb	r0, [sp, #7]
 5ac:	e1a00120 	lsr	r0, r0, #2
 5b0:	e0000004 	and	r0, r0, r4
 5b4:	e28dd008 	add	sp, sp, #8
 5b8:	e8bd8010 	pop	{r4, pc}
 5bc:	20804000 	addcs	r4, r0, r0
 5c0:	00061a80 	andeq	r1, r6, r0, lsl #21

000005c4 <PCA9685::Write(unsigned char, unsigned short, unsigned short)>:
 5c4:	e351000f 	cmp	r1, #15
 5c8:	83a010fa 	movhi	r1, #250	; 0xfa
 5cc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 5d0:	91a01101 	lslls	r1, r1, #2
 5d4:	e24dd00c 	sub	sp, sp, #12
 5d8:	92811006 	addls	r1, r1, #6
 5dc:	e5d0e000 	ldrb	lr, [r0]
 5e0:	e59fc03c 	ldr	ip, [pc, #60]	; 624 <PCA9685::Write(unsigned char, unsigned short, unsigned short)+0x60>
 5e4:	96ef1071 	uxtbls	r1, r1
 5e8:	e5cd2001 	strb	r2, [sp, #1]
 5ec:	e1a00422 	lsr	r0, r2, #8
 5f0:	e1a02423 	lsr	r2, r3, #8
 5f4:	e5cd0002 	strb	r0, [sp, #2]
 5f8:	e5cd1000 	strb	r1, [sp]
 5fc:	e5cd3003 	strb	r3, [sp, #3]
 600:	e5cd2004 	strb	r2, [sp, #4]
 604:	e59f001c 	ldr	r0, [pc, #28]	; 628 <PCA9685::Write(unsigned char, unsigned short, unsigned short)+0x64>
 608:	e58ce00c 	str	lr, [ip, #12]
 60c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 610:	e3a01005 	mov	r1, #5
 614:	e1a0000d 	mov	r0, sp
 618:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 61c:	e28dd00c 	add	sp, sp, #12
 620:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 624:	20804000 	addcs	r4, r0, r0
 628:	00061a80 	andeq	r1, r6, r0, lsl #21

0000062c <PCA9685::Write(unsigned char, unsigned short)>:
 62c:	e351000f 	cmp	r1, #15
 630:	83a010fa 	movhi	r1, #250	; 0xfa
 634:	e3a03000 	mov	r3, #0
 638:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 63c:	91a01101 	lslls	r1, r1, #2
 640:	e24dd00c 	sub	sp, sp, #12
 644:	92811006 	addls	r1, r1, #6
 648:	e5d0c000 	ldrb	ip, [r0]
 64c:	e1a0e422 	lsr	lr, r2, #8
 650:	e5cd2003 	strb	r2, [sp, #3]
 654:	e59f2030 	ldr	r2, [pc, #48]	; 68c <PCA9685::Write(unsigned char, unsigned short)+0x60>
 658:	96ef1071 	uxtbls	r1, r1
 65c:	e5cd1000 	strb	r1, [sp]
 660:	e5cde004 	strb	lr, [sp, #4]
 664:	e5cd3001 	strb	r3, [sp, #1]
 668:	e5cd3002 	strb	r3, [sp, #2]
 66c:	e59f001c 	ldr	r0, [pc, #28]	; 690 <PCA9685::Write(unsigned char, unsigned short)+0x64>
 670:	e582c00c 	str	ip, [r2, #12]
 674:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 678:	e3a01005 	mov	r1, #5
 67c:	e1a0000d 	mov	r0, sp
 680:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 684:	e28dd00c 	add	sp, sp, #12
 688:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 68c:	20804000 	addcs	r4, r0, r0
 690:	00061a80 	andeq	r1, r6, r0, lsl #21

00000694 <PCA9685::Write(unsigned short, unsigned short)>:
 694:	e1a0c000 	mov	ip, r0
 698:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 69c:	e3e0e005 	mvn	lr, #5
 6a0:	e24dd00c 	sub	sp, sp, #12
 6a4:	e59f303c 	ldr	r3, [pc, #60]	; 6e8 <PCA9685::Write(unsigned short, unsigned short)+0x54>
 6a8:	e5dcc000 	ldrb	ip, [ip]
 6ac:	e5cd1001 	strb	r1, [sp, #1]
 6b0:	e1a01421 	lsr	r1, r1, #8
 6b4:	e5cd1002 	strb	r1, [sp, #2]
 6b8:	e1a01422 	lsr	r1, r2, #8
 6bc:	e5cde000 	strb	lr, [sp]
 6c0:	e5cd2003 	strb	r2, [sp, #3]
 6c4:	e5cd1004 	strb	r1, [sp, #4]
 6c8:	e59f001c 	ldr	r0, [pc, #28]	; 6ec <PCA9685::Write(unsigned short, unsigned short)+0x58>
 6cc:	e583c00c 	str	ip, [r3, #12]
 6d0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 6d4:	e3a01005 	mov	r1, #5
 6d8:	e1a0000d 	mov	r0, sp
 6dc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 6e0:	e28dd00c 	add	sp, sp, #12
 6e4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 6e8:	20804000 	addcs	r4, r0, r0
 6ec:	00061a80 	andeq	r1, r6, r0, lsl #21

000006f0 <PCA9685::Write(unsigned short)>:
 6f0:	e1a0c000 	mov	ip, r0
 6f4:	e3a03000 	mov	r3, #0
 6f8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 6fc:	e3e0e005 	mvn	lr, #5
 700:	e24dd00c 	sub	sp, sp, #12
 704:	e59f2038 	ldr	r2, [pc, #56]	; 744 <PCA9685::Write(unsigned short)+0x54>
 708:	e5dcc000 	ldrb	ip, [ip]
 70c:	e5cd3001 	strb	r3, [sp, #1]
 710:	e5cd3002 	strb	r3, [sp, #2]
 714:	e1a03421 	lsr	r3, r1, #8
 718:	e5cde000 	strb	lr, [sp]
 71c:	e5cd1003 	strb	r1, [sp, #3]
 720:	e5cd3004 	strb	r3, [sp, #4]
 724:	e59f001c 	ldr	r0, [pc, #28]	; 748 <PCA9685::Write(unsigned short)+0x58>
 728:	e582c00c 	str	ip, [r2, #12]
 72c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 730:	e3a01005 	mov	r1, #5
 734:	e1a0000d 	mov	r0, sp
 738:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 73c:	e28dd00c 	add	sp, sp, #12
 740:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 744:	20804000 	addcs	r4, r0, r0
 748:	00061a80 	andeq	r1, r6, r0, lsl #21

0000074c <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)>:
 74c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 750:	e351000f 	cmp	r1, #15
 754:	91a04101 	lslls	r4, r1, #2
 758:	92844006 	addls	r4, r4, #6
 75c:	83a040fa 	movhi	r4, #250	; 0xfa
 760:	96ef4074 	uxtbls	r4, r4
 764:	e3520000 	cmp	r2, #0
 768:	e1a07000 	mov	r7, r0
 76c:	e1a06002 	mov	r6, r2
 770:	e1a05003 	mov	r5, r3
 774:	e24dd00c 	sub	sp, sp, #12
 778:	0a00000f 	beq	7bc <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)+0x70>
 77c:	e3a01000 	mov	r1, #0
 780:	e5d02000 	ldrb	r2, [r0]
 784:	e59f3084 	ldr	r3, [pc, #132]	; 810 <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)+0xc4>
 788:	e1cd10b4 	strh	r1, [sp, #4]
 78c:	e59f0080 	ldr	r0, [pc, #128]	; 814 <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)+0xc8>
 790:	e5cd4003 	strb	r4, [sp, #3]
 794:	e583200c 	str	r2, [r3, #12]
 798:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 79c:	e3a01001 	mov	r1, #1
 7a0:	e28d0003 	add	r0, sp, #3
 7a4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7a8:	e3a01002 	mov	r1, #2
 7ac:	e28d0004 	add	r0, sp, #4
 7b0:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 7b4:	e1dd30b4 	ldrh	r3, [sp, #4]
 7b8:	e1c630b0 	strh	r3, [r6]
 7bc:	e3550000 	cmp	r5, #0
 7c0:	0a000010 	beq	808 <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)+0xbc>
 7c4:	e3a01000 	mov	r1, #0
 7c8:	e59f3040 	ldr	r3, [pc, #64]	; 810 <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)+0xc4>
 7cc:	e5d72000 	ldrb	r2, [r7]
 7d0:	e2844002 	add	r4, r4, #2
 7d4:	e1cd10b4 	strh	r1, [sp, #4]
 7d8:	e59f0034 	ldr	r0, [pc, #52]	; 814 <PCA9685::Read(unsigned char, unsigned short*, unsigned short*)+0xc8>
 7dc:	e5cd4003 	strb	r4, [sp, #3]
 7e0:	e583200c 	str	r2, [r3, #12]
 7e4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7e8:	e3a01001 	mov	r1, #1
 7ec:	e28d0003 	add	r0, sp, #3
 7f0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7f4:	e3a01002 	mov	r1, #2
 7f8:	e28d0004 	add	r0, sp, #4
 7fc:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 800:	e1dd30b4 	ldrh	r3, [sp, #4]
 804:	e1c530b0 	strh	r3, [r5]
 808:	e28dd00c 	add	sp, sp, #12
 80c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 810:	20804000 	addcs	r4, r0, r0
 814:	00061a80 	andeq	r1, r6, r0, lsl #21

00000818 <PCA9685::Read(unsigned short*, unsigned short*)>:
 818:	e92d4070 	push	{r4, r5, r6, lr}
 81c:	e2515000 	subs	r5, r1, #0
 820:	e1a06000 	mov	r6, r0
 824:	e1a04002 	mov	r4, r2
 828:	e24dd008 	sub	sp, sp, #8
 82c:	0a000010 	beq	874 <PCA9685::Read(unsigned short*, unsigned short*)+0x5c>
 830:	e3e0c005 	mvn	ip, #5
 834:	e3a01000 	mov	r1, #0
 838:	e5d02000 	ldrb	r2, [r0]
 83c:	e59f3084 	ldr	r3, [pc, #132]	; 8c8 <PCA9685::Read(unsigned short*, unsigned short*)+0xb0>
 840:	e5cdc003 	strb	ip, [sp, #3]
 844:	e1cd10b4 	strh	r1, [sp, #4]
 848:	e59f007c 	ldr	r0, [pc, #124]	; 8cc <PCA9685::Read(unsigned short*, unsigned short*)+0xb4>
 84c:	e583200c 	str	r2, [r3, #12]
 850:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 854:	e3a01001 	mov	r1, #1
 858:	e28d0003 	add	r0, sp, #3
 85c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 860:	e3a01002 	mov	r1, #2
 864:	e28d0004 	add	r0, sp, #4
 868:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 86c:	e1dd30b4 	ldrh	r3, [sp, #4]
 870:	e1c530b0 	strh	r3, [r5]
 874:	e3540000 	cmp	r4, #0
 878:	0a000010 	beq	8c0 <PCA9685::Read(unsigned short*, unsigned short*)+0xa8>
 87c:	e3e0c003 	mvn	ip, #3
 880:	e3a01000 	mov	r1, #0
 884:	e59f303c 	ldr	r3, [pc, #60]	; 8c8 <PCA9685::Read(unsigned short*, unsigned short*)+0xb0>
 888:	e5d62000 	ldrb	r2, [r6]
 88c:	e5cdc003 	strb	ip, [sp, #3]
 890:	e1cd10b4 	strh	r1, [sp, #4]
 894:	e59f0030 	ldr	r0, [pc, #48]	; 8cc <PCA9685::Read(unsigned short*, unsigned short*)+0xb4>
 898:	e583200c 	str	r2, [r3, #12]
 89c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 8a0:	e3a01001 	mov	r1, #1
 8a4:	e28d0003 	add	r0, sp, #3
 8a8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 8ac:	e3a01002 	mov	r1, #2
 8b0:	e28d0004 	add	r0, sp, #4
 8b4:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 8b8:	e1dd30b4 	ldrh	r3, [sp, #4]
 8bc:	e1c430b0 	strh	r3, [r4]
 8c0:	e28dd008 	add	sp, sp, #8
 8c4:	e8bd8070 	pop	{r4, r5, r6, pc}
 8c8:	20804000 	addcs	r4, r0, r0
 8cc:	00061a80 	andeq	r1, r6, r0, lsl #21

000008d0 <PCA9685::SetFullOn(unsigned char, bool)>:
 8d0:	e351000f 	cmp	r1, #15
 8d4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 8d8:	83a050fb 	movhi	r5, #251	; 0xfb
 8dc:	e1a07002 	mov	r7, r2
 8e0:	91a05101 	lslls	r5, r1, #2
 8e4:	e5d03000 	ldrb	r3, [r0]
 8e8:	92855007 	addls	r5, r5, #7
 8ec:	e59f8118 	ldr	r8, [pc, #280]	; a0c <PCA9685::SetFullOn(unsigned char, bool)+0x13c>
 8f0:	e24dd008 	sub	sp, sp, #8
 8f4:	96ef5075 	uxtbls	r5, r5
 8f8:	e5cd5004 	strb	r5, [sp, #4]
 8fc:	e1a06000 	mov	r6, r0
 900:	e588300c 	str	r3, [r8, #12]
 904:	e59f0104 	ldr	r0, [pc, #260]	; a10 <PCA9685::SetFullOn(unsigned char, bool)+0x140>
 908:	e1a04001 	mov	r4, r1
 90c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 910:	e3a01001 	mov	r1, #1
 914:	e28d0004 	add	r0, sp, #4
 918:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 91c:	e3a01001 	mov	r1, #1
 920:	e28d0004 	add	r0, sp, #4
 924:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 928:	e3570000 	cmp	r7, #0
 92c:	e5dd3004 	ldrb	r3, [sp, #4]
 930:	0a000025 	beq	9cc <PCA9685::SetFullOn(unsigned char, bool)+0xfc>
 934:	e3833010 	orr	r3, r3, #16
 938:	e5cd3005 	strb	r3, [sp, #5]
 93c:	e5d63000 	ldrb	r3, [r6]
 940:	e59f00c8 	ldr	r0, [pc, #200]	; a10 <PCA9685::SetFullOn(unsigned char, bool)+0x140>
 944:	e5cd5004 	strb	r5, [sp, #4]
 948:	e588300c 	str	r3, [r8, #12]
 94c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 950:	e3a01002 	mov	r1, #2
 954:	e28d0004 	add	r0, sp, #4
 958:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 95c:	e354000f 	cmp	r4, #15
 960:	83a040fd 	movhi	r4, #253	; 0xfd
 964:	9a000024 	bls	9fc <PCA9685::SetFullOn(unsigned char, bool)+0x12c>
 968:	e5d63000 	ldrb	r3, [r6]
 96c:	e59f5098 	ldr	r5, [pc, #152]	; a0c <PCA9685::SetFullOn(unsigned char, bool)+0x13c>
 970:	e5cd4004 	strb	r4, [sp, #4]
 974:	e59f0094 	ldr	r0, [pc, #148]	; a10 <PCA9685::SetFullOn(unsigned char, bool)+0x140>
 978:	e585300c 	str	r3, [r5, #12]
 97c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 980:	e3a01001 	mov	r1, #1
 984:	e28d0004 	add	r0, sp, #4
 988:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 98c:	e3a01001 	mov	r1, #1
 990:	e28d0004 	add	r0, sp, #4
 994:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 998:	e5dd3004 	ldrb	r3, [sp, #4]
 99c:	e5d62000 	ldrb	r2, [r6]
 9a0:	e3c33010 	bic	r3, r3, #16
 9a4:	e5cd3005 	strb	r3, [sp, #5]
 9a8:	e5cd4004 	strb	r4, [sp, #4]
 9ac:	e59f005c 	ldr	r0, [pc, #92]	; a10 <PCA9685::SetFullOn(unsigned char, bool)+0x140>
 9b0:	e585200c 	str	r2, [r5, #12]
 9b4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 9b8:	e3a01002 	mov	r1, #2
 9bc:	e28d0004 	add	r0, sp, #4
 9c0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 9c4:	e28dd008 	add	sp, sp, #8
 9c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 9cc:	e5d62000 	ldrb	r2, [r6]
 9d0:	e3c33010 	bic	r3, r3, #16
 9d4:	e5cd3005 	strb	r3, [sp, #5]
 9d8:	e5cd5004 	strb	r5, [sp, #4]
 9dc:	e59f002c 	ldr	r0, [pc, #44]	; a10 <PCA9685::SetFullOn(unsigned char, bool)+0x140>
 9e0:	e588200c 	str	r2, [r8, #12]
 9e4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 9e8:	e3a01002 	mov	r1, #2
 9ec:	e28d0004 	add	r0, sp, #4
 9f0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 9f4:	e28dd008 	add	sp, sp, #8
 9f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 9fc:	e1a04104 	lsl	r4, r4, #2
 a00:	e2844009 	add	r4, r4, #9
 a04:	e6ef4074 	uxtb	r4, r4
 a08:	eaffffd6 	b	968 <PCA9685::SetFullOn(unsigned char, bool)+0x98>
 a0c:	20804000 	addcs	r4, r0, r0
 a10:	00061a80 	andeq	r1, r6, r0, lsl #21

00000a14 <PCA9685::SetFullOff(unsigned char, bool)>:
 a14:	e351000f 	cmp	r1, #15
 a18:	e92d4070 	push	{r4, r5, r6, lr}
 a1c:	83a040fd 	movhi	r4, #253	; 0xfd
 a20:	e1a05000 	mov	r5, r0
 a24:	e1a06002 	mov	r6, r2
 a28:	91a04101 	lslls	r4, r1, #2
 a2c:	92844009 	addls	r4, r4, #9
 a30:	e5d02000 	ldrb	r2, [r0]
 a34:	e59f306c 	ldr	r3, [pc, #108]	; aa8 <PCA9685::SetFullOff(unsigned char, bool)+0x94>
 a38:	e24dd008 	sub	sp, sp, #8
 a3c:	96ef4074 	uxtbls	r4, r4
 a40:	e5cd4004 	strb	r4, [sp, #4]
 a44:	e59f0060 	ldr	r0, [pc, #96]	; aac <PCA9685::SetFullOff(unsigned char, bool)+0x98>
 a48:	e583200c 	str	r2, [r3, #12]
 a4c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 a50:	e3a01001 	mov	r1, #1
 a54:	e28d0004 	add	r0, sp, #4
 a58:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 a5c:	e3a01001 	mov	r1, #1
 a60:	e28d0004 	add	r0, sp, #4
 a64:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 a68:	e5dd3004 	ldrb	r3, [sp, #4]
 a6c:	e3560000 	cmp	r6, #0
 a70:	e5d51000 	ldrb	r1, [r5]
 a74:	e59f202c 	ldr	r2, [pc, #44]	; aa8 <PCA9685::SetFullOff(unsigned char, bool)+0x94>
 a78:	13833010 	orrne	r3, r3, #16
 a7c:	020330ef 	andeq	r3, r3, #239	; 0xef
 a80:	e5cd3005 	strb	r3, [sp, #5]
 a84:	e5cd4004 	strb	r4, [sp, #4]
 a88:	e59f001c 	ldr	r0, [pc, #28]	; aac <PCA9685::SetFullOff(unsigned char, bool)+0x98>
 a8c:	e582100c 	str	r1, [r2, #12]
 a90:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 a94:	e3a01002 	mov	r1, #2
 a98:	e28d0004 	add	r0, sp, #4
 a9c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 aa0:	e28dd008 	add	sp, sp, #8
 aa4:	e8bd8070 	pop	{r4, r5, r6, pc}
 aa8:	20804000 	addcs	r4, r0, r0
 aac:	00061a80 	andeq	r1, r6, r0, lsl #21

00000ab0 <PCA9685::CalcPresScale(unsigned short)>:
 ab0:	e3510018 	cmp	r1, #24
 ab4:	33a01018 	movcc	r1, #24
 ab8:	e59f3044 	ldr	r3, [pc, #68]	; b04 <PCA9685::CalcPresScale(unsigned short)+0x54>
 abc:	ed9f7a0e 	vldr	s14, [pc, #56]	; afc <PCA9685::CalcPresScale(unsigned short)+0x4c>
 ac0:	e1510003 	cmp	r1, r3
 ac4:	21a01003 	movcs	r1, r3
 ac8:	ee071a90 	vmov	s15, r1
 acc:	eef87a67 	vcvt.f32.u32	s15, s15
 ad0:	ed9f6a0a 	vldr	s12, [pc, #40]	; b00 <PCA9685::CalcPresScale(unsigned short)+0x50>
 ad4:	ee377a87 	vadd.f32	s14, s15, s14
 ad8:	ee377a46 	vsub.f32	s14, s14, s12
 adc:	eec76a27 	vdiv.f32	s13, s14, s15
 ae0:	ee767ac6 	vsub.f32	s15, s13, s12
 ae4:	eefc7ae7 	vcvt.u32.f32	s15, s15
 ae8:	e24dd008 	sub	sp, sp, #8
 aec:	edcd7a01 	vstr	s15, [sp, #4]
 af0:	e5dd0004 	ldrb	r0, [sp, #4]
 af4:	e28dd008 	add	sp, sp, #8
 af8:	e12fff1e 	bx	lr
 afc:	45bebc20 	ldrmi	fp, [lr, #3104]!	; 0xc20
 b00:	3f800000 	svccc	0x00800000
 b04:	000005f6 	strdeq	r0, [r0], -r6

00000b08 <PCA9685::CalcFrequency(unsigned char)>:
 b08:	e2813001 	add	r3, r1, #1
 b0c:	ee073a90 	vmov	s15, r3
 b10:	eddf5a5c 	vldr	s11, [pc, #368]	; c88 <PCA9685::CalcFrequency(unsigned char)+0x180>
 b14:	eef87ae7 	vcvt.f32.s32	s15, s15
 b18:	ed9f6a5b 	vldr	s12, [pc, #364]	; c8c <PCA9685::CalcFrequency(unsigned char)+0x184>
 b1c:	ee776aa5 	vadd.f32	s13, s15, s11
 b20:	ee766ac6 	vsub.f32	s13, s13, s12
 b24:	ee867aa7 	vdiv.f32	s14, s13, s15
 b28:	eefc7ac7 	vcvt.u32.f32	s15, s14
 b2c:	ee173a90 	vmov	r3, s15
 b30:	e6ff0073 	uxth	r0, r3
 b34:	e3500018 	cmp	r0, #24
 b38:	e24dd008 	sub	sp, sp, #8
 b3c:	9a00004f 	bls	c80 <PCA9685::CalcFrequency(unsigned char)+0x178>
 b40:	e59fc148 	ldr	ip, [pc, #328]	; c90 <PCA9685::CalcFrequency(unsigned char)+0x188>
 b44:	e150000c 	cmp	r0, ip
 b48:	31a03000 	movcc	r3, r0
 b4c:	21a0300c 	movcs	r3, ip
 b50:	ee073a90 	vmov	s15, r3
 b54:	eef87a67 	vcvt.f32.u32	s15, s15
 b58:	ee776aa5 	vadd.f32	s13, s15, s11
 b5c:	ee766ac6 	vsub.f32	s13, s13, s12
 b60:	ee867aa7 	vdiv.f32	s14, s13, s15
 b64:	ee777a46 	vsub.f32	s15, s14, s12
 b68:	eefc7ae7 	vcvt.u32.f32	s15, s15
 b6c:	edcd7a01 	vstr	s15, [sp, #4]
 b70:	e5dd3004 	ldrb	r3, [sp, #4]
 b74:	e1530001 	cmp	r3, r1
 b78:	e1a03000 	mov	r3, r0
 b7c:	0a00000f 	beq	bc0 <PCA9685::CalcFrequency(unsigned char)+0xb8>
 b80:	ea000012 	b	bd0 <PCA9685::CalcFrequency(unsigned char)+0xc8>
 b84:	e153000c 	cmp	r3, ip
 b88:	31a02003 	movcc	r2, r3
 b8c:	21a0200c 	movcs	r2, ip
 b90:	e6ff2072 	uxth	r2, r2
 b94:	ee072a90 	vmov	s15, r2
 b98:	eef87a67 	vcvt.f32.u32	s15, s15
 b9c:	ee776aa5 	vadd.f32	s13, s15, s11
 ba0:	ee766ac6 	vsub.f32	s13, s13, s12
 ba4:	ee867aa7 	vdiv.f32	s14, s13, s15
 ba8:	ee777a46 	vsub.f32	s15, s14, s12
 bac:	eefc7ae7 	vcvt.u32.f32	s15, s15
 bb0:	edcd7a01 	vstr	s15, [sp, #4]
 bb4:	e5dd2004 	ldrb	r2, [sp, #4]
 bb8:	e1520001 	cmp	r2, r1
 bbc:	1a000003 	bne	bd0 <PCA9685::CalcFrequency(unsigned char)+0xc8>
 bc0:	e2433001 	sub	r3, r3, #1
 bc4:	e6ff3073 	uxth	r3, r3
 bc8:	e3530018 	cmp	r3, #24
 bcc:	1affffec 	bne	b84 <PCA9685::CalcFrequency(unsigned char)+0x7c>
 bd0:	e59f20bc 	ldr	r2, [pc, #188]	; c94 <PCA9685::CalcFrequency(unsigned char)+0x18c>
 bd4:	e1500002 	cmp	r0, r2
 bd8:	8a000023 	bhi	c6c <PCA9685::CalcFrequency(unsigned char)+0x164>
 bdc:	e3500018 	cmp	r0, #24
 be0:	21a02000 	movcs	r2, r0
 be4:	33a02018 	movcc	r2, #24
 be8:	ee072a90 	vmov	s15, r2
 bec:	eddf5a25 	vldr	s11, [pc, #148]	; c88 <PCA9685::CalcFrequency(unsigned char)+0x180>
 bf0:	eef87a67 	vcvt.f32.u32	s15, s15
 bf4:	ed9f6a24 	vldr	s12, [pc, #144]	; c8c <PCA9685::CalcFrequency(unsigned char)+0x184>
 bf8:	ee776aa5 	vadd.f32	s13, s15, s11
 bfc:	ee766ac6 	vsub.f32	s13, s13, s12
 c00:	ee867aa7 	vdiv.f32	s14, s13, s15
 c04:	ee777a46 	vsub.f32	s15, s14, s12
 c08:	eefc7ae7 	vcvt.u32.f32	s15, s15
 c0c:	edcd7a01 	vstr	s15, [sp, #4]
 c10:	e5dd2004 	ldrb	r2, [sp, #4]
 c14:	e1520001 	cmp	r2, r1
 c18:	1a000013 	bne	c6c <PCA9685::CalcFrequency(unsigned char)+0x164>
 c1c:	e59fc06c 	ldr	ip, [pc, #108]	; c90 <PCA9685::CalcFrequency(unsigned char)+0x188>
 c20:	ea00000d 	b	c5c <PCA9685::CalcFrequency(unsigned char)+0x154>
 c24:	e3500018 	cmp	r0, #24
 c28:	21a02000 	movcs	r2, r0
 c2c:	33a02018 	movcc	r2, #24
 c30:	ee072a90 	vmov	s15, r2
 c34:	eef87a67 	vcvt.f32.u32	s15, s15
 c38:	ee776aa5 	vadd.f32	s13, s15, s11
 c3c:	ee766ac6 	vsub.f32	s13, s13, s12
 c40:	ee867aa7 	vdiv.f32	s14, s13, s15
 c44:	ee777a46 	vsub.f32	s15, s14, s12
 c48:	eefc7ae7 	vcvt.u32.f32	s15, s15
 c4c:	edcd7a01 	vstr	s15, [sp, #4]
 c50:	e5dd2004 	ldrb	r2, [sp, #4]
 c54:	e1520001 	cmp	r2, r1
 c58:	1a000003 	bne	c6c <PCA9685::CalcFrequency(unsigned char)+0x164>
 c5c:	e2800001 	add	r0, r0, #1
 c60:	e6ff0070 	uxth	r0, r0
 c64:	e150000c 	cmp	r0, ip
 c68:	1affffed 	bne	c24 <PCA9685::CalcFrequency(unsigned char)+0x11c>
 c6c:	e0800003 	add	r0, r0, r3
 c70:	e6ff0070 	uxth	r0, r0
 c74:	e1a000a0 	lsr	r0, r0, #1
 c78:	e28dd008 	add	sp, sp, #8
 c7c:	e12fff1e 	bx	lr
 c80:	e1a03000 	mov	r3, r0
 c84:	eaffffd4 	b	bdc <PCA9685::CalcFrequency(unsigned char)+0xd4>
 c88:	45bebc20 	ldrmi	fp, [lr, #3104]!	; 0xc20
 c8c:	3f800000 	svccc	0x00800000
 c90:	000005f6 	strdeq	r0, [r0], -r6
 c94:	000005f5 	strdeq	r0, [r0], -r5

00000c98 <PCA9685::GetFrequency()>:
 c98:	e92d4010 	push	{r4, lr}
 c9c:	e3e02001 	mvn	r2, #1
 ca0:	e1a04000 	mov	r4, r0
 ca4:	e24dd008 	sub	sp, sp, #8
 ca8:	e59f303c 	ldr	r3, [pc, #60]	; cec <PCA9685::GetFrequency()+0x54>
 cac:	e5cd2007 	strb	r2, [sp, #7]
 cb0:	e5d42000 	ldrb	r2, [r4]
 cb4:	e59f0034 	ldr	r0, [pc, #52]	; cf0 <PCA9685::GetFrequency()+0x58>
 cb8:	e583200c 	str	r2, [r3, #12]
 cbc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 cc0:	e3a01001 	mov	r1, #1
 cc4:	e28d0007 	add	r0, sp, #7
 cc8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 ccc:	e3a01001 	mov	r1, #1
 cd0:	e28d0007 	add	r0, sp, #7
 cd4:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 cd8:	e1a00004 	mov	r0, r4
 cdc:	e5dd1007 	ldrb	r1, [sp, #7]
 ce0:	e28dd008 	add	sp, sp, #8
 ce4:	e8bd4010 	pop	{r4, lr}
 ce8:	eafffffe 	b	b08 <PCA9685::CalcFrequency(unsigned char)>
 cec:	20804000 	addcs	r4, r0, r0
 cf0:	00061a80 	andeq	r1, r6, r0, lsl #21

00000cf4 <PCA9685::Dump()>:
 cf4:	e12fff1e 	bx	lr

00000cf8 <PCA9685::AutoIncrement(bool)>:
 cf8:	e92d4030 	push	{r4, r5, lr}
 cfc:	e3a02000 	mov	r2, #0
 d00:	e1a04000 	mov	r4, r0
 d04:	e24dd00c 	sub	sp, sp, #12
 d08:	e59f3070 	ldr	r3, [pc, #112]	; d80 <PCA9685::AutoIncrement(bool)+0x88>
 d0c:	e5cd2004 	strb	r2, [sp, #4]
 d10:	e5d42000 	ldrb	r2, [r4]
 d14:	e59f0068 	ldr	r0, [pc, #104]	; d84 <PCA9685::AutoIncrement(bool)+0x8c>
 d18:	e583200c 	str	r2, [r3, #12]
 d1c:	e1a05001 	mov	r5, r1
 d20:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 d24:	e3a01001 	mov	r1, #1
 d28:	e28d0004 	add	r0, sp, #4
 d2c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 d30:	e3a01001 	mov	r1, #1
 d34:	e28d0004 	add	r0, sp, #4
 d38:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 d3c:	e3a0c000 	mov	ip, #0
 d40:	e5dd3004 	ldrb	r3, [sp, #4]
 d44:	e5d41000 	ldrb	r1, [r4]
 d48:	e20330df 	and	r3, r3, #223	; 0xdf
 d4c:	e59f202c 	ldr	r2, [pc, #44]	; d80 <PCA9685::AutoIncrement(bool)+0x88>
 d50:	e3550000 	cmp	r5, #0
 d54:	13833020 	orrne	r3, r3, #32
 d58:	e5cd3005 	strb	r3, [sp, #5]
 d5c:	e5cdc004 	strb	ip, [sp, #4]
 d60:	e59f001c 	ldr	r0, [pc, #28]	; d84 <PCA9685::AutoIncrement(bool)+0x8c>
 d64:	e582100c 	str	r1, [r2, #12]
 d68:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 d6c:	e3a01002 	mov	r1, #2
 d70:	e28d0004 	add	r0, sp, #4
 d74:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 d78:	e28dd00c 	add	sp, sp, #12
 d7c:	e8bd8030 	pop	{r4, r5, pc}
 d80:	20804000 	addcs	r4, r0, r0
 d84:	00061a80 	andeq	r1, r6, r0, lsl #21

00000d88 <PCA9685::I2cSetup()>:
 d88:	e1a02000 	mov	r2, r0
 d8c:	e59f300c 	ldr	r3, [pc, #12]	; da0 <PCA9685::I2cSetup()+0x18>
 d90:	e5d22000 	ldrb	r2, [r2]
 d94:	e59f0008 	ldr	r0, [pc, #8]	; da4 <PCA9685::I2cSetup()+0x1c>
 d98:	e583200c 	str	r2, [r3, #12]
 d9c:	eafffffe 	b	0 <bcm2835_i2c_set_baudrate>
 da0:	20804000 	addcs	r4, r0, r0
 da4:	00061a80 	andeq	r1, r6, r0, lsl #21

00000da8 <PCA9685::I2cWriteReg(unsigned char, unsigned char)>:
 da8:	e1a0c000 	mov	ip, r0
 dac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 db0:	e59f302c 	ldr	r3, [pc, #44]	; de4 <PCA9685::I2cWriteReg(unsigned char, unsigned char)+0x3c>
 db4:	e5dcc000 	ldrb	ip, [ip]
 db8:	e24dd00c 	sub	sp, sp, #12
 dbc:	e5cd1004 	strb	r1, [sp, #4]
 dc0:	e5cd2005 	strb	r2, [sp, #5]
 dc4:	e59f001c 	ldr	r0, [pc, #28]	; de8 <PCA9685::I2cWriteReg(unsigned char, unsigned char)+0x40>
 dc8:	e583c00c 	str	ip, [r3, #12]
 dcc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 dd0:	e3a01002 	mov	r1, #2
 dd4:	e28d0004 	add	r0, sp, #4
 dd8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 ddc:	e28dd00c 	add	sp, sp, #12
 de0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 de4:	20804000 	addcs	r4, r0, r0
 de8:	00061a80 	andeq	r1, r6, r0, lsl #21

00000dec <PCA9685::I2cReadReg(unsigned char)>:
 dec:	e1a02000 	mov	r2, r0
 df0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 df4:	e59f3038 	ldr	r3, [pc, #56]	; e34 <PCA9685::I2cReadReg(unsigned char)+0x48>
 df8:	e5d22000 	ldrb	r2, [r2]
 dfc:	e24dd00c 	sub	sp, sp, #12
 e00:	e5cd1007 	strb	r1, [sp, #7]
 e04:	e59f002c 	ldr	r0, [pc, #44]	; e38 <PCA9685::I2cReadReg(unsigned char)+0x4c>
 e08:	e583200c 	str	r2, [r3, #12]
 e0c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 e10:	e3a01001 	mov	r1, #1
 e14:	e28d0007 	add	r0, sp, #7
 e18:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 e1c:	e3a01001 	mov	r1, #1
 e20:	e28d0007 	add	r0, sp, #7
 e24:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 e28:	e5dd0007 	ldrb	r0, [sp, #7]
 e2c:	e28dd00c 	add	sp, sp, #12
 e30:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 e34:	20804000 	addcs	r4, r0, r0
 e38:	00061a80 	andeq	r1, r6, r0, lsl #21

00000e3c <PCA9685::I2cWriteReg(unsigned char, unsigned short)>:
 e3c:	e1a0c000 	mov	ip, r0
 e40:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 e44:	e59f3034 	ldr	r3, [pc, #52]	; e80 <PCA9685::I2cWriteReg(unsigned char, unsigned short)+0x44>
 e48:	e24dd00c 	sub	sp, sp, #12
 e4c:	e5dcc000 	ldrb	ip, [ip]
 e50:	e5cd1004 	strb	r1, [sp, #4]
 e54:	e1a01422 	lsr	r1, r2, #8
 e58:	e5cd2005 	strb	r2, [sp, #5]
 e5c:	e5cd1006 	strb	r1, [sp, #6]
 e60:	e59f001c 	ldr	r0, [pc, #28]	; e84 <PCA9685::I2cWriteReg(unsigned char, unsigned short)+0x48>
 e64:	e583c00c 	str	ip, [r3, #12]
 e68:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 e6c:	e3a01003 	mov	r1, #3
 e70:	e28d0004 	add	r0, sp, #4
 e74:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 e78:	e28dd00c 	add	sp, sp, #12
 e7c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 e80:	20804000 	addcs	r4, r0, r0
 e84:	00061a80 	andeq	r1, r6, r0, lsl #21

00000e88 <PCA9685::I2cReadReg16(unsigned char)>:
 e88:	e1a02000 	mov	r2, r0
 e8c:	e3a0c000 	mov	ip, #0
 e90:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 e94:	e59f303c 	ldr	r3, [pc, #60]	; ed8 <PCA9685::I2cReadReg16(unsigned char)+0x50>
 e98:	e5d22000 	ldrb	r2, [r2]
 e9c:	e24dd00c 	sub	sp, sp, #12
 ea0:	e1cdc0b4 	strh	ip, [sp, #4]
 ea4:	e5cd1003 	strb	r1, [sp, #3]
 ea8:	e59f002c 	ldr	r0, [pc, #44]	; edc <PCA9685::I2cReadReg16(unsigned char)+0x54>
 eac:	e583200c 	str	r2, [r3, #12]
 eb0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 eb4:	e3a01001 	mov	r1, #1
 eb8:	e28d0003 	add	r0, sp, #3
 ebc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 ec0:	e3a01002 	mov	r1, #2
 ec4:	e28d0004 	add	r0, sp, #4
 ec8:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 ecc:	e1dd00b4 	ldrh	r0, [sp, #4]
 ed0:	e28dd00c 	add	sp, sp, #12
 ed4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 ed8:	20804000 	addcs	r4, r0, r0
 edc:	00061a80 	andeq	r1, r6, r0, lsl #21

00000ee0 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)>:
 ee0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 ee4:	e1a0e000 	mov	lr, r0
 ee8:	e24dd00c 	sub	sp, sp, #12
 eec:	e59fc03c 	ldr	ip, [pc, #60]	; f30 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)+0x50>
 ef0:	e5dee000 	ldrb	lr, [lr]
 ef4:	e5cd2001 	strb	r2, [sp, #1]
 ef8:	e1a02422 	lsr	r2, r2, #8
 efc:	e5cd2002 	strb	r2, [sp, #2]
 f00:	e1a02423 	lsr	r2, r3, #8
 f04:	e5cd1000 	strb	r1, [sp]
 f08:	e5cd3003 	strb	r3, [sp, #3]
 f0c:	e5cd2004 	strb	r2, [sp, #4]
 f10:	e59f001c 	ldr	r0, [pc, #28]	; f34 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)+0x54>
 f14:	e58ce00c 	str	lr, [ip, #12]
 f18:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 f1c:	e3a01005 	mov	r1, #5
 f20:	e1a0000d 	mov	r0, sp
 f24:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 f28:	e28dd00c 	add	sp, sp, #12
 f2c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 f30:	20804000 	addcs	r4, r0, r0
 f34:	00061a80 	andeq	r1, r6, r0, lsl #21

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)+0x168c94c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <PCA9685::I2cWriteReg(unsigned char, unsigned short, unsigned short)+0x41544>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.

