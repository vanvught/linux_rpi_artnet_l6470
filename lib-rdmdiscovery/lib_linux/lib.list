In archive lib_linux/librdmdiscovery.a:

artnetrdmcontroller.o:     file format elf64-x86-64


Disassembly of section .text._ZN8Hardware12WatchdogFeedEv:

0000000000000000 <Hardware::WatchdogFeed()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN9ArtNetRdmD2Ev:

0000000000000000 <ArtNetRdm::~ArtNetRdm()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ArtNetRdm::~ArtNetRdm()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN9ArtNetRdmD0Ev:

0000000000000000 <ArtNetRdm::~ArtNetRdm()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ArtNetRdm::~ArtNetRdm()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ArtNetRdm::~ArtNetRdm()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN10RDMMessageD2Ev:

0000000000000000 <RDMMessage::~RDMMessage()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN6RDMTodC2Ev:

0000000000000000 <RDMTod::RDMTod()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1a:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%rax)
  21:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  28:	eb 35                	jmp    5f <RDMTod::RDMTod()+0x5f>
  2a:	8b 55 f8             	mov    -0x8(%rbp),%edx
  2d:	48 89 d0             	mov    %rdx,%rax
  30:	48 01 c0             	add    %rax,%rax
  33:	48 01 d0             	add    %rdx,%rax
  36:	48 01 c0             	add    %rax,%rax
  39:	48 8d 50 20          	lea    0x20(%rax),%rdx
  3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41:	48 01 d0             	add    %rdx,%rax
  44:	48 83 c0 04          	add    $0x4,%rax
  48:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 4e <RDMTod::RDMTod()+0x4e>
  4e:	89 10                	mov    %edx,(%rax)
  50:	0f b7 15 00 00 00 00 	movzwl 0x0(%rip),%edx        # 57 <RDMTod::RDMTod()+0x57>
  57:	66 89 50 04          	mov    %dx,0x4(%rax)
  5b:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  5f:	81 7d f8 c7 00 00 00 	cmpl   $0xc7,-0x8(%rbp)
  66:	76 c2                	jbe    2a <RDMTod::RDMTod()+0x2a>
  68:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  6f:	eb 13                	jmp    84 <RDMTod::RDMTod()+0x84>
  71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  75:	8b 55 fc             	mov    -0x4(%rbp),%edx
  78:	c7 44 90 08 00 00 00 	movl   $0x0,0x8(%rax,%rdx,4)
  7f:	00 
  80:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  84:	83 7d fc 06          	cmpl   $0x6,-0x4(%rbp)
  88:	76 e7                	jbe    71 <RDMTod::RDMTod()+0x71>
  8a:	90                   	nop
  8b:	90                   	nop
  8c:	5d                   	pop    %rbp
  8d:	c3                   	ret    

Disassembly of section .text._ZN6RDMTodD2Ev:

0000000000000000 <RDMTod::~RDMTod()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod5ResetEv:

0000000000000000 <RDMTod::Reset()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  13:	eb 35                	jmp    4a <RDMTod::Reset()+0x4a>
  15:	8b 55 f8             	mov    -0x8(%rbp),%edx
  18:	48 89 d0             	mov    %rdx,%rax
  1b:	48 01 c0             	add    %rax,%rax
  1e:	48 01 d0             	add    %rdx,%rax
  21:	48 01 c0             	add    %rax,%rax
  24:	48 8d 50 20          	lea    0x20(%rax),%rdx
  28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2c:	48 01 d0             	add    %rdx,%rax
  2f:	48 83 c0 04          	add    $0x4,%rax
  33:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 39 <RDMTod::Reset()+0x39>
  39:	89 10                	mov    %edx,(%rax)
  3b:	0f b7 15 00 00 00 00 	movzwl 0x0(%rip),%edx        # 42 <RDMTod::Reset()+0x42>
  42:	66 89 50 04          	mov    %dx,0x4(%rax)
  46:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4e:	8b 00                	mov    (%rax),%eax
  50:	39 45 f8             	cmp    %eax,-0x8(%rbp)
  53:	72 c0                	jb     15 <RDMTod::Reset()+0x15>
  55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  59:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  5f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  66:	eb 13                	jmp    7b <RDMTod::Reset()+0x7b>
  68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  6f:	c7 44 90 08 00 00 00 	movl   $0x0,0x8(%rax,%rdx,4)
  76:	00 
  77:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  7b:	83 7d fc 06          	cmpl   $0x6,-0x4(%rbp)
  7f:	76 e7                	jbe    68 <RDMTod::Reset()+0x68>
  81:	90                   	nop
  82:	90                   	nop
  83:	5d                   	pop    %rbp
  84:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod6AddUidEPKh:

0000000000000000 <RDMTod::AddUid(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	8b 00                	mov    (%rax),%eax
  1a:	3d c8 00 00 00       	cmp    $0xc8,%eax
  1f:	75 07                	jne    28 <RDMTod::AddUid(unsigned char const*)+0x28>
  21:	b8 00 00 00 00       	mov    $0x0,%eax
  26:	eb 63                	jmp    8b <RDMTod::AddUid(unsigned char const*)+0x8b>
  28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  30:	48 89 d6             	mov    %rdx,%rsi
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	call   3b <RDMTod::AddUid(unsigned char const*)+0x3b>
  3b:	84 c0                	test   %al,%al
  3d:	74 07                	je     46 <RDMTod::AddUid(unsigned char const*)+0x46>
  3f:	b8 00 00 00 00       	mov    $0x0,%eax
  44:	eb 45                	jmp    8b <RDMTod::AddUid(unsigned char const*)+0x8b>
  46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4a:	8b 00                	mov    (%rax),%eax
  4c:	8d 48 01             	lea    0x1(%rax),%ecx
  4f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  53:	89 0a                	mov    %ecx,(%rdx)
  55:	89 c2                	mov    %eax,%edx
  57:	48 89 d0             	mov    %rdx,%rax
  5a:	48 01 c0             	add    %rax,%rax
  5d:	48 01 d0             	add    %rdx,%rax
  60:	48 01 c0             	add    %rax,%rax
  63:	48 8d 50 20          	lea    0x20(%rax),%rdx
  67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6b:	48 01 d0             	add    %rdx,%rax
  6e:	48 8d 48 04          	lea    0x4(%rax),%rcx
  72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  76:	ba 06 00 00 00       	mov    $0x6,%edx
  7b:	48 89 c6             	mov    %rax,%rsi
  7e:	48 89 cf             	mov    %rcx,%rdi
  81:	e8 00 00 00 00       	call   86 <RDMTod::AddUid(unsigned char const*)+0x86>
  86:	b8 01 00 00 00       	mov    $0x1,%eax
  8b:	c9                   	leave  
  8c:	c3                   	ret    

Disassembly of section .text._ZNK6RDMTod11GetUidCountEv:

0000000000000000 <RDMTod::GetUidCount() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 00                	mov    (%rax),%eax
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod4CopyEPh:

0000000000000000 <RDMTod::Copy(unsigned char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  14:	48 83 c0 24          	add    $0x24,%rax
  18:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  24:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  2b:	eb 21                	jmp    4e <RDMTod::Copy(unsigned char*)+0x4e>
  2d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  31:	48 8d 42 01          	lea    0x1(%rdx),%rax
  35:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3d:	48 8d 48 01          	lea    0x1(%rax),%rcx
  41:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  45:	0f b6 12             	movzbl (%rdx),%edx
  48:	88 10                	mov    %dl,(%rax)
  4a:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  52:	8b 10                	mov    (%rax),%edx
  54:	89 d0                	mov    %edx,%eax
  56:	01 c0                	add    %eax,%eax
  58:	01 d0                	add    %edx,%eax
  5a:	01 c0                	add    %eax,%eax
  5c:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  5f:	72 cc                	jb     2d <RDMTod::Copy(unsigned char*)+0x2d>
  61:	90                   	nop
  62:	90                   	nop
  63:	5d                   	pop    %rbp
  64:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod5ExistEPKh:

0000000000000000 <RDMTod::Exist(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  1b:	eb 4b                	jmp    68 <RDMTod::Exist(unsigned char const*)+0x68>
  1d:	8b 55 fc             	mov    -0x4(%rbp),%edx
  20:	48 89 d0             	mov    %rdx,%rax
  23:	48 01 c0             	add    %rax,%rax
  26:	48 01 d0             	add    %rdx,%rax
  29:	48 01 c0             	add    %rax,%rax
  2c:	48 8d 50 20          	lea    0x20(%rax),%rdx
  30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  34:	48 01 d0             	add    %rdx,%rax
  37:	48 8d 48 04          	lea    0x4(%rax),%rcx
  3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  3f:	ba 06 00 00 00       	mov    $0x6,%edx
  44:	48 89 c6             	mov    %rax,%rsi
  47:	48 89 cf             	mov    %rcx,%rdi
  4a:	e8 00 00 00 00       	call   4f <RDMTod::Exist(unsigned char const*)+0x4f>
  4f:	85 c0                	test   %eax,%eax
  51:	75 11                	jne    64 <RDMTod::Exist(unsigned char const*)+0x64>
  53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  57:	8b 55 fc             	mov    -0x4(%rbp),%edx
  5a:	89 50 04             	mov    %edx,0x4(%rax)
  5d:	b8 01 00 00 00       	mov    $0x1,%eax
  62:	eb 1f                	jmp    83 <RDMTod::Exist(unsigned char const*)+0x83>
  64:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6c:	8b 00                	mov    (%rax),%eax
  6e:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  71:	72 aa                	jb     1d <RDMTod::Exist(unsigned char const*)+0x1d>
  73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  77:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%rax)
  7e:	b8 00 00 00 00       	mov    $0x0,%eax
  83:	c9                   	leave  
  84:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod4NextEv:

0000000000000000 <RDMTod::Next()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 04             	mov    0x4(%rax),%eax
  13:	8d 50 01             	lea    0x1(%rax),%edx
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	89 50 04             	mov    %edx,0x4(%rax)
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	8b 50 04             	mov    0x4(%rax),%edx
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	8b 00                	mov    (%rax),%eax
  2a:	39 c2                	cmp    %eax,%edx
  2c:	75 0b                	jne    39 <RDMTod::Next()+0x39>
  2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  32:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3d:	8b 40 04             	mov    0x4(%rax),%eax
  40:	89 c2                	mov    %eax,%edx
  42:	48 89 d0             	mov    %rdx,%rax
  45:	48 01 c0             	add    %rax,%rax
  48:	48 01 d0             	add    %rdx,%rax
  4b:	48 01 c0             	add    %rax,%rax
  4e:	48 8d 50 20          	lea    0x20(%rax),%rdx
  52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  56:	48 01 d0             	add    %rdx,%rax
  59:	48 83 c0 04          	add    $0x4,%rax
  5d:	5d                   	pop    %rbp
  5e:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod4MuteEv:

0000000000000000 <RDMTod::Mute()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	8b 40 04             	mov    0x4(%rax),%eax
  13:	83 f8 ff             	cmp    $0xffffffff,%eax
  16:	74 49                	je     61 <RDMTod::Mute()+0x61>
  18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1c:	8b 40 04             	mov    0x4(%rax),%eax
  1f:	c1 e8 05             	shr    $0x5,%eax
  22:	89 45 f8             	mov    %eax,-0x8(%rbp)
  25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  29:	8b 40 04             	mov    0x4(%rax),%eax
  2c:	8b 55 f8             	mov    -0x8(%rbp),%edx
  2f:	c1 e2 05             	shl    $0x5,%edx
  32:	29 d0                	sub    %edx,%eax
  34:	89 45 fc             	mov    %eax,-0x4(%rbp)
  37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3b:	8b 55 f8             	mov    -0x8(%rbp),%edx
  3e:	8b 54 90 08          	mov    0x8(%rax,%rdx,4),%edx
  42:	8b 45 fc             	mov    -0x4(%rbp),%eax
  45:	be 01 00 00 00       	mov    $0x1,%esi
  4a:	89 c1                	mov    %eax,%ecx
  4c:	d3 e6                	shl    %cl,%esi
  4e:	89 f0                	mov    %esi,%eax
  50:	89 d1                	mov    %edx,%ecx
  52:	09 c1                	or     %eax,%ecx
  54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  58:	8b 55 f8             	mov    -0x8(%rbp),%edx
  5b:	89 4c 90 08          	mov    %ecx,0x8(%rax,%rdx,4)
  5f:	eb 01                	jmp    62 <RDMTod::Mute()+0x62>
  61:	90                   	nop
  62:	5d                   	pop    %rbp
  63:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod6UnMuteEv:

0000000000000000 <RDMTod::UnMute()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	8b 40 04             	mov    0x4(%rax),%eax
  13:	83 f8 ff             	cmp    $0xffffffff,%eax
  16:	74 4b                	je     63 <RDMTod::UnMute()+0x63>
  18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1c:	8b 40 04             	mov    0x4(%rax),%eax
  1f:	c1 e8 05             	shr    $0x5,%eax
  22:	89 45 f8             	mov    %eax,-0x8(%rbp)
  25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  29:	8b 40 04             	mov    0x4(%rax),%eax
  2c:	8b 55 f8             	mov    -0x8(%rbp),%edx
  2f:	c1 e2 05             	shl    $0x5,%edx
  32:	29 d0                	sub    %edx,%eax
  34:	89 45 fc             	mov    %eax,-0x4(%rbp)
  37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3b:	8b 55 f8             	mov    -0x8(%rbp),%edx
  3e:	8b 54 90 08          	mov    0x8(%rax,%rdx,4),%edx
  42:	8b 45 fc             	mov    -0x4(%rbp),%eax
  45:	be 01 00 00 00       	mov    $0x1,%esi
  4a:	89 c1                	mov    %eax,%ecx
  4c:	d3 e6                	shl    %cl,%esi
  4e:	89 f0                	mov    %esi,%eax
  50:	f7 d0                	not    %eax
  52:	89 d1                	mov    %edx,%ecx
  54:	21 c1                	and    %eax,%ecx
  56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5a:	8b 55 f8             	mov    -0x8(%rbp),%edx
  5d:	89 4c 90 08          	mov    %ecx,0x8(%rax,%rdx,4)
  61:	eb 01                	jmp    64 <RDMTod::UnMute()+0x64>
  63:	90                   	nop
  64:	5d                   	pop    %rbp
  65:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod9UnMuteAllEv:

0000000000000000 <RDMTod::UnMuteAll()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  13:	eb 13                	jmp    28 <RDMTod::UnMuteAll()+0x28>
  15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  19:	8b 55 fc             	mov    -0x4(%rbp),%edx
  1c:	c7 44 90 08 00 00 00 	movl   $0x0,0x8(%rax,%rdx,4)
  23:	00 
  24:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  28:	83 7d fc 06          	cmpl   $0x6,-0x4(%rbp)
  2c:	76 e7                	jbe    15 <RDMTod::UnMuteAll()+0x15>
  2e:	90                   	nop
  2f:	90                   	nop
  30:	5d                   	pop    %rbp
  31:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod7IsMutedEv:

0000000000000000 <RDMTod::IsMuted()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  10:	8b 40 04             	mov    0x4(%rax),%eax
  13:	83 f8 ff             	cmp    $0xffffffff,%eax
  16:	75 07                	jne    1f <RDMTod::IsMuted()+0x1f>
  18:	b8 01 00 00 00       	mov    $0x1,%eax
  1d:	eb 53                	jmp    72 <RDMTod::IsMuted()+0x72>
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	8b 40 04             	mov    0x4(%rax),%eax
  26:	c1 e8 05             	shr    $0x5,%eax
  29:	89 45 f4             	mov    %eax,-0xc(%rbp)
  2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  30:	8b 55 f4             	mov    -0xc(%rbp),%edx
  33:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
  37:	89 45 f8             	mov    %eax,-0x8(%rbp)
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	8b 40 04             	mov    0x4(%rax),%eax
  41:	8b 55 f4             	mov    -0xc(%rbp),%edx
  44:	c1 e2 05             	shl    $0x5,%edx
  47:	29 d0                	sub    %edx,%eax
  49:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4f:	ba 01 00 00 00       	mov    $0x1,%edx
  54:	89 c1                	mov    %eax,%ecx
  56:	d3 e2                	shl    %cl,%edx
  58:	89 d0                	mov    %edx,%eax
  5a:	23 45 f8             	and    -0x8(%rbp),%eax
  5d:	89 c2                	mov    %eax,%edx
  5f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  62:	be 01 00 00 00       	mov    $0x1,%esi
  67:	89 c1                	mov    %eax,%ecx
  69:	d3 e6                	shl    %cl,%esi
  6b:	89 f0                	mov    %esi,%eax
  6d:	39 c2                	cmp    %eax,%edx
  6f:	0f 94 c0             	sete   %al
  72:	5d                   	pop    %rbp
  73:	c3                   	ret    

Disassembly of section .text._ZNK9RDMDevice6GetUIDEv:

0000000000000000 <RDMDevice::GetUID() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 01          	add    $0x1,%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN19RDMDeviceControllerC2Ev:

0000000000000000 <RDMDeviceController::RDMDeviceController()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RDMDeviceController::RDMDeviceController()+0x1c>
  1c:	b9 24 00 00 00       	mov    $0x24,%ecx
  21:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 28 <RDMDeviceController::RDMDeviceController()+0x28>
  28:	48 89 c2             	mov    %rax,%rdx
  2b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 32 <RDMDeviceController::RDMDeviceController()+0x32>
  32:	48 89 c6             	mov    %rax,%rsi
  35:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3c <RDMDeviceController::RDMDeviceController()+0x3c>
  3c:	48 89 c7             	mov    %rax,%rdi
  3f:	b8 00 00 00 00       	mov    $0x0,%eax
  44:	e8 00 00 00 00       	call   49 <RDMDeviceController::RDMDeviceController()+0x49>
  49:	b9 25 00 00 00       	mov    $0x25,%ecx
  4e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 55 <RDMDeviceController::RDMDeviceController()+0x55>
  55:	48 89 c2             	mov    %rax,%rdx
  58:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5f <RDMDeviceController::RDMDeviceController()+0x5f>
  5f:	48 89 c6             	mov    %rax,%rsi
  62:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 69 <RDMDeviceController::RDMDeviceController()+0x69>
  69:	48 89 c7             	mov    %rax,%rdi
  6c:	b8 00 00 00 00       	mov    $0x0,%eax
  71:	e8 00 00 00 00       	call   76 <RDMDeviceController::RDMDeviceController()+0x76>
  76:	90                   	nop
  77:	c9                   	leave  
  78:	c3                   	ret    

Disassembly of section .text._ZN19RDMDeviceControllerD2Ev:

0000000000000000 <RDMDeviceController::~RDMDeviceController()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 29 00 00 00       	mov    $0x29,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <RDMDeviceController::~RDMDeviceController()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <RDMDeviceController::~RDMDeviceController()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <RDMDeviceController::~RDMDeviceController()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <RDMDeviceController::~RDMDeviceController()+0x3d>
  3d:	b9 2a 00 00 00       	mov    $0x2a,%ecx
  42:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 49 <RDMDeviceController::~RDMDeviceController()+0x49>
  49:	48 89 c2             	mov    %rax,%rdx
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <RDMDeviceController::~RDMDeviceController()+0x53>
  53:	48 89 c6             	mov    %rax,%rsi
  56:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5d <RDMDeviceController::~RDMDeviceController()+0x5d>
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	b8 00 00 00 00       	mov    $0x0,%eax
  65:	e8 00 00 00 00       	call   6a <RDMDeviceController::~RDMDeviceController()+0x6a>
  6a:	90                   	nop
  6b:	c9                   	leave  
  6c:	c3                   	ret    

Disassembly of section .text._ZN12RDMDiscoveryD2Ev:

0000000000000000 <RDMDiscovery::~RDMDiscovery()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RDMDiscovery::~RDMDiscovery()+0x1c>
  1c:	90                   	nop
  1d:	c9                   	leave  
  1e:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmControllerD2Ev:

0000000000000000 <ArtNetRdmController::~ArtNetRdmController()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 28          	sub    $0x28,%rsp
   d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  11:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 18 <ArtNetRdmController::~ArtNetRdmController()+0x18>
  18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  1c:	48 89 10             	mov    %rdx,(%rax)
  1f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  26:	eb 2f                	jmp    57 <ArtNetRdmController::~ArtNetRdmController()+0x57>
  28:	8b 45 ec             	mov    -0x14(%rbp),%eax
  2b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  32:	00 
  33:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3a <ArtNetRdmController::~ArtNetRdmController()+0x3a>
  3a:	48 8b 1c 02          	mov    (%rdx,%rax,1),%rbx
  3e:	48 85 db             	test   %rbx,%rbx
  41:	74 10                	je     53 <ArtNetRdmController::~ArtNetRdmController()+0x53>
  43:	48 89 df             	mov    %rbx,%rdi
  46:	e8 00 00 00 00       	call   4b <ArtNetRdmController::~ArtNetRdmController()+0x4b>
  4b:	48 89 df             	mov    %rbx,%rdi
  4e:	e8 00 00 00 00       	call   53 <ArtNetRdmController::~ArtNetRdmController()+0x53>
  53:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  57:	83 7d ec 07          	cmpl   $0x7,-0x14(%rbp)
  5b:	76 cb                	jbe    28 <ArtNetRdmController::~ArtNetRdmController()+0x28>
  5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  61:	48 05 88 00 00 00    	add    $0x88,%rax
  67:	48 89 c7             	mov    %rax,%rdi
  6a:	e8 00 00 00 00       	call   6f <ArtNetRdmController::~ArtNetRdmController()+0x6f>
  6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  73:	48 89 c7             	mov    %rax,%rdi
  76:	e8 00 00 00 00       	call   7b <ArtNetRdmController::~ArtNetRdmController()+0x7b>
  7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  7f:	48 83 c0 08          	add    $0x8,%rax
  83:	48 89 c7             	mov    %rax,%rdi
  86:	e8 00 00 00 00       	call   8b <ArtNetRdmController::~ArtNetRdmController()+0x8b>
  8b:	90                   	nop
  8c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  90:	c9                   	leave  
  91:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmControllerD0Ev:

0000000000000000 <ArtNetRdmController::~ArtNetRdmController()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ArtNetRdmController::~ArtNetRdmController()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ArtNetRdmController::~ArtNetRdmController()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmController4FullEj:

0000000000000000 <ArtNetRdmController::Full(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
  17:	76 28                	jbe    41 <ArtNetRdmController::Full(unsigned int)+0x41>
  19:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 20 <ArtNetRdmController::Full(unsigned int)+0x20>
  20:	48 89 c1             	mov    %rax,%rcx
  23:	ba 3a 00 00 00       	mov    $0x3a,%edx
  28:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2f <ArtNetRdmController::Full(unsigned int)+0x2f>
  2f:	48 89 c6             	mov    %rax,%rsi
  32:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 39 <ArtNetRdmController::Full(unsigned int)+0x39>
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	call   41 <ArtNetRdmController::Full(unsigned int)+0x41>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	48 8d 88 88 00 00 00 	lea    0x88(%rax),%rcx
  4c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  56:	00 
  57:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5e <ArtNetRdmController::Full(unsigned int)+0x5e>
  5e:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
  62:	8b 45 f4             	mov    -0xc(%rbp),%eax
  65:	89 c6                	mov    %eax,%esi
  67:	48 89 cf             	mov    %rcx,%rdi
  6a:	e8 00 00 00 00       	call   6f <ArtNetRdmController::Full(unsigned int)+0x6f>
  6f:	90                   	nop
  70:	c9                   	leave  
  71:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmController11GetUidCountEj:

0000000000000000 <ArtNetRdmController::GetUidCount(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
  17:	76 28                	jbe    41 <ArtNetRdmController::GetUidCount(unsigned int)+0x41>
  19:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 20 <ArtNetRdmController::GetUidCount(unsigned int)+0x20>
  20:	48 89 c1             	mov    %rax,%rcx
  23:	ba 3f 00 00 00       	mov    $0x3f,%edx
  28:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2f <ArtNetRdmController::GetUidCount(unsigned int)+0x2f>
  2f:	48 89 c6             	mov    %rax,%rsi
  32:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 39 <ArtNetRdmController::GetUidCount(unsigned int)+0x39>
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	call   41 <ArtNetRdmController::GetUidCount(unsigned int)+0x41>
  41:	8b 45 f4             	mov    -0xc(%rbp),%eax
  44:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4b:	00 
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <ArtNetRdmController::GetUidCount(unsigned int)+0x53>
  53:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  57:	48 89 c7             	mov    %rax,%rdi
  5a:	e8 00 00 00 00       	call   5f <ArtNetRdmController::GetUidCount(unsigned int)+0x5f>
  5f:	c9                   	leave  
  60:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmController7TodCopyEjPh:

0000000000000000 <ArtNetRdmController::TodCopy(unsigned int, unsigned char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
  1b:	76 28                	jbe    45 <ArtNetRdmController::TodCopy(unsigned int, unsigned char*)+0x45>
  1d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 24 <ArtNetRdmController::TodCopy(unsigned int, unsigned char*)+0x24>
  24:	48 89 c1             	mov    %rax,%rcx
  27:	ba 44 00 00 00       	mov    $0x44,%edx
  2c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 33 <ArtNetRdmController::TodCopy(unsigned int, unsigned char*)+0x33>
  33:	48 89 c6             	mov    %rax,%rsi
  36:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3d <ArtNetRdmController::TodCopy(unsigned int, unsigned char*)+0x3d>
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	call   45 <ArtNetRdmController::TodCopy(unsigned int, unsigned char*)+0x45>
  45:	8b 45 f4             	mov    -0xc(%rbp),%eax
  48:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4f:	00 
  50:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 57 <ArtNetRdmController::TodCopy(unsigned int, unsigned char*)+0x57>
  57:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  5b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  5f:	48 89 d6             	mov    %rdx,%rsi
  62:	48 89 c7             	mov    %rax,%rdi
  65:	e8 00 00 00 00       	call   6a <ArtNetRdmController::TodCopy(unsigned int, unsigned char*)+0x6a>
  6a:	90                   	nop
  6b:	c9                   	leave  
  6c:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmController8TodResetEj:

0000000000000000 <ArtNetRdmController::TodReset(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	83 7d f4 07          	cmpl   $0x7,-0xc(%rbp)
  17:	76 28                	jbe    41 <ArtNetRdmController::TodReset(unsigned int)+0x41>
  19:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 20 <ArtNetRdmController::TodReset(unsigned int)+0x20>
  20:	48 89 c1             	mov    %rax,%rcx
  23:	ba 4d 00 00 00       	mov    $0x4d,%edx
  28:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2f <ArtNetRdmController::TodReset(unsigned int)+0x2f>
  2f:	48 89 c6             	mov    %rax,%rsi
  32:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 39 <ArtNetRdmController::TodReset(unsigned int)+0x39>
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	call   41 <ArtNetRdmController::TodReset(unsigned int)+0x41>
  41:	8b 45 f4             	mov    -0xc(%rbp),%eax
  44:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4b:	00 
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <ArtNetRdmController::TodReset(unsigned int)+0x53>
  53:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  57:	48 89 c7             	mov    %rax,%rdi
  5a:	e8 00 00 00 00       	call   5f <ArtNetRdmController::TodReset(unsigned int)+0x5f>
  5f:	90                   	nop
  60:	c9                   	leave  
  61:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmController9TodAddUidEjPKh:

0000000000000000 <ArtNetRdmController::TodAddUid(unsigned int, unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	8b 45 f4             	mov    -0xc(%rbp),%eax
  1a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  21:	00 
  22:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 29 <ArtNetRdmController::TodAddUid(unsigned int, unsigned char const*)+0x29>
  29:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  31:	48 89 d6             	mov    %rdx,%rsi
  34:	48 89 c7             	mov    %rax,%rdi
  37:	e8 00 00 00 00       	call   3c <ArtNetRdmController::TodAddUid(unsigned int, unsigned char const*)+0x3c>
  3c:	c9                   	leave  
  3d:	c3                   	ret    

Disassembly of section .text._ZN9ArtNetRdmC2Ev:

0000000000000000 <ArtNetRdm::ArtNetRdm()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ArtNetRdm::ArtNetRdm()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmControllerC2Ev:

0000000000000000 <ArtNetRdmController::ArtNetRdmController()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 28          	sub    $0x28,%rsp
   d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  15:	48 83 c0 08          	add    $0x8,%rax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <ArtNetRdmController::ArtNetRdmController()+0x21>
  21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  25:	48 89 c7             	mov    %rax,%rdi
  28:	e8 00 00 00 00       	call   2d <ArtNetRdmController::ArtNetRdmController()+0x2d>
  2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  31:	48 8d 98 88 00 00 00 	lea    0x88(%rax),%rbx
  38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  3c:	48 83 c0 08          	add    $0x8,%rax
  40:	48 89 c7             	mov    %rax,%rdi
  43:	e8 00 00 00 00       	call   48 <ArtNetRdmController::ArtNetRdmController()+0x48>
  48:	48 89 c6             	mov    %rax,%rsi
  4b:	48 89 df             	mov    %rbx,%rdi
  4e:	e8 00 00 00 00       	call   53 <ArtNetRdmController::ArtNetRdmController()+0x53>
  53:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5a <ArtNetRdmController::ArtNetRdmController()+0x5a>
  5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5e:	48 89 10             	mov    %rdx,(%rax)
  61:	b9 2e 00 00 00       	mov    $0x2e,%ecx
  66:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6d <ArtNetRdmController::ArtNetRdmController()+0x6d>
  6d:	48 89 c2             	mov    %rax,%rdx
  70:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 77 <ArtNetRdmController::ArtNetRdmController()+0x77>
  77:	48 89 c6             	mov    %rax,%rsi
  7a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 81 <ArtNetRdmController::ArtNetRdmController()+0x81>
  81:	48 89 c7             	mov    %rax,%rdi
  84:	b8 00 00 00 00       	mov    $0x0,%eax
  89:	e8 00 00 00 00       	call   8e <ArtNetRdmController::ArtNetRdmController()+0x8e>
  8e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  95:	eb 72                	jmp    109 <ArtNetRdmController::ArtNetRdmController()+0x109>
  97:	bf d4 04 00 00       	mov    $0x4d4,%edi
  9c:	e8 00 00 00 00       	call   a1 <ArtNetRdmController::ArtNetRdmController()+0xa1>
  a1:	48 89 c3             	mov    %rax,%rbx
  a4:	48 89 df             	mov    %rbx,%rdi
  a7:	e8 00 00 00 00       	call   ac <ArtNetRdmController::ArtNetRdmController()+0xac>
  ac:	8b 45 ec             	mov    -0x14(%rbp),%eax
  af:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  b6:	00 
  b7:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # be <ArtNetRdmController::ArtNetRdmController()+0xbe>
  be:	48 89 1c 02          	mov    %rbx,(%rdx,%rax,1)
  c2:	8b 45 ec             	mov    -0x14(%rbp),%eax
  c5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  cc:	00 
  cd:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # d4 <ArtNetRdmController::ArtNetRdmController()+0xd4>
  d4:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  d8:	48 85 c0             	test   %rax,%rax
  db:	75 28                	jne    105 <ArtNetRdmController::ArtNetRdmController()+0x105>
  dd:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # e4 <ArtNetRdmController::ArtNetRdmController()+0xe4>
  e4:	48 89 c1             	mov    %rax,%rcx
  e7:	ba 32 00 00 00       	mov    $0x32,%edx
  ec:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # f3 <ArtNetRdmController::ArtNetRdmController()+0xf3>
  f3:	48 89 c6             	mov    %rax,%rsi
  f6:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # fd <ArtNetRdmController::ArtNetRdmController()+0xfd>
  fd:	48 89 c7             	mov    %rax,%rdi
 100:	e8 00 00 00 00       	call   105 <ArtNetRdmController::ArtNetRdmController()+0x105>
 105:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 109:	83 7d ec 07          	cmpl   $0x7,-0x14(%rbp)
 10d:	76 88                	jbe    97 <ArtNetRdmController::ArtNetRdmController()+0x97>
 10f:	c6 05 00 00 00 00 cc 	movb   $0xcc,0x0(%rip)        # 116 <ArtNetRdmController::ArtNetRdmController()+0x116>
 116:	b9 36 00 00 00       	mov    $0x36,%ecx
 11b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 122 <ArtNetRdmController::ArtNetRdmController()+0x122>
 122:	48 89 c2             	mov    %rax,%rdx
 125:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 12c <ArtNetRdmController::ArtNetRdmController()+0x12c>
 12c:	48 89 c6             	mov    %rax,%rsi
 12f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 136 <ArtNetRdmController::ArtNetRdmController()+0x136>
 136:	48 89 c7             	mov    %rax,%rdi
 139:	b8 00 00 00 00       	mov    $0x0,%eax
 13e:	e8 00 00 00 00       	call   143 <ArtNetRdmController::ArtNetRdmController()+0x143>
 143:	90                   	nop
 144:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 148:	c9                   	leave  
 149:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmController7HandlerEjPKh:

0000000000000000 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  13:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  17:	83 7d d4 07          	cmpl   $0x7,-0x2c(%rbp)
  1b:	76 28                	jbe    45 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x45>
  1d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 24 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x24>
  24:	48 89 c1             	mov    %rax,%rcx
  27:	ba 3a 00 00 00       	mov    $0x3a,%edx
  2c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 33 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x33>
  33:	48 89 c6             	mov    %rax,%rsi
  36:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3d <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x3d>
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	call   45 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x45>
  45:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  4a:	75 0a                	jne    56 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x56>
  4c:	b8 00 00 00 00       	mov    $0x0,%eax
  51:	e9 b9 00 00 00       	jmp    10f <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x10f>
  56:	e8 00 00 00 00       	call   5b <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x5b>
  5b:	48 89 c7             	mov    %rax,%rdi
  5e:	e8 00 00 00 00       	call   63 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x63>
  63:	eb 0d                	jmp    72 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x72>
  65:	e8 00 00 00 00       	call   6a <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x6a>
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	e8 00 00 00 00       	call   72 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x72>
  72:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  75:	89 c7                	mov    %eax,%edi
  77:	e8 00 00 00 00       	call   7c <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x7c>
  7c:	48 85 c0             	test   %rax,%rax
  7f:	0f 95 c0             	setne  %al
  82:	84 c0                	test   %al,%al
  84:	75 df                	jne    65 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x65>
  86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  8a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  8e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 95 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x95>
  95:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  9d:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  a1:	0f b6 c0             	movzbl %al,%eax
  a4:	83 c0 02             	add    $0x2,%eax
  a7:	48 63 d0             	movslq %eax,%rdx
  aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ae:	48 8d 48 01          	lea    0x1(%rax),%rcx
  b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  b6:	48 89 c6             	mov    %rax,%rsi
  b9:	48 89 cf             	mov    %rcx,%rdi
  bc:	e8 00 00 00 00       	call   c1 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0xc1>
  c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  c5:	48 89 c7             	mov    %rax,%rdi
  c8:	e8 00 00 00 00       	call   cd <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0xcd>
  cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d1:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  d5:	0f b6 c0             	movzbl %al,%eax
  d8:	8d 50 02             	lea    0x2(%rax),%edx
  db:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  df:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  e2:	48 89 ce             	mov    %rcx,%rsi
  e5:	89 c7                	mov    %eax,%edi
  e7:	e8 00 00 00 00       	call   ec <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0xec>
  ec:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  ef:	be 60 ea 00 00       	mov    $0xea60,%esi
  f4:	89 c7                	mov    %eax,%edi
  f6:	e8 00 00 00 00       	call   fb <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0xfb>
  fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 103:	48 89 c7             	mov    %rax,%rdi
 106:	e8 00 00 00 00       	call   10b <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x10b>
 10b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 10f:	c9                   	leave  
 110:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmController10RdmReceiveEjPh:

0000000000000000 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 50          	sub    $0x50,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  13:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  17:	83 7d c4 07          	cmpl   $0x7,-0x3c(%rbp)
  1b:	76 28                	jbe    45 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x45>
  1d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 24 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x24>
  24:	48 89 c1             	mov    %rax,%rcx
  27:	ba 5b 00 00 00       	mov    $0x5b,%edx
  2c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 33 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x33>
  33:	48 89 c6             	mov    %rax,%rsi
  36:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3d <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3d>
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	call   45 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x45>
  45:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  4a:	75 28                	jne    74 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x74>
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x53>
  53:	48 89 c1             	mov    %rax,%rcx
  56:	ba 5c 00 00 00       	mov    $0x5c,%edx
  5b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 62 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x62>
  62:	48 89 c6             	mov    %rax,%rsi
  65:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6c <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x6c>
  6c:	48 89 c7             	mov    %rax,%rdi
  6f:	e8 00 00 00 00       	call   74 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x74>
  74:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  77:	89 c7                	mov    %eax,%edi
  79:	e8 00 00 00 00       	call   7e <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x7e>
  7e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  82:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  87:	75 0a                	jne    93 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x93>
  89:	b8 00 00 00 00       	mov    $0x0,%eax
  8e:	e9 d0 03 00 00       	jmp    463 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x463>
  93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  97:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  9f:	48 83 c0 03          	add    $0x3,%rax
  a3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  ab:	ba 06 00 00 00       	mov    $0x6,%edx
  b0:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # b7 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0xb7>
  b7:	48 89 ce             	mov    %rcx,%rsi
  ba:	48 89 c7             	mov    %rax,%rdi
  bd:	e8 00 00 00 00       	call   c2 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0xc2>
  c2:	85 c0                	test   %eax,%eax
  c4:	0f 94 c0             	sete   %al
  c7:	88 45 d3             	mov    %al,-0x2d(%rbp)
  ca:	c6 45 d2 00          	movb   $0x0,-0x2e(%rbp)
  ce:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  d2:	83 f0 01             	xor    $0x1,%eax
  d5:	84 c0                	test   %al,%al
  d7:	74 28                	je     101 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x101>
  d9:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  dc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  e3:	00 
  e4:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # eb <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0xeb>
  eb:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  ef:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  f3:	48 89 d6             	mov    %rdx,%rsi
  f6:	48 89 c7             	mov    %rax,%rdi
  f9:	e8 00 00 00 00       	call   fe <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0xfe>
  fe:	88 45 d2             	mov    %al,-0x2e(%rbp)
 101:	0f b6 45 d2          	movzbl -0x2e(%rbp),%eax
 105:	83 f0 01             	xor    $0x1,%eax
 108:	84 c0                	test   %al,%al
 10a:	74 15                	je     121 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x121>
 10c:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
 110:	83 f0 01             	xor    $0x1,%eax
 113:	84 c0                	test   %al,%al
 115:	74 0a                	je     121 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x121>
 117:	b8 00 00 00 00       	mov    $0x0,%eax
 11c:	e9 42 03 00 00       	jmp    463 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x463>
 121:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 125:	0f b6 40 14          	movzbl 0x14(%rax),%eax
 129:	3c 20                	cmp    $0x20,%al
 12b:	74 0c                	je     139 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x139>
 12d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 131:	0f b6 40 14          	movzbl 0x14(%rax),%eax
 135:	3c 30                	cmp    $0x30,%al
 137:	75 2c                	jne    165 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x165>
 139:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 13d:	0f b6 40 02          	movzbl 0x2(%rax),%eax
 141:	0f b6 d0             	movzbl %al,%edx
 144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 148:	48 8d 48 01          	lea    0x1(%rax),%rcx
 14c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 150:	48 89 ce             	mov    %rcx,%rsi
 153:	48 89 c7             	mov    %rax,%rdi
 156:	e8 00 00 00 00       	call   15b <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x15b>
 15b:	b8 01 00 00 00       	mov    $0x1,%eax
 160:	e9 fe 02 00 00       	jmp    463 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x463>
 165:	80 7d d3 00          	cmpb   $0x0,-0x2d(%rbp)
 169:	74 22                	je     18d <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x18d>
 16b:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 16e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 175:	00 
 176:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 17d <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x17d>
 17d:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
 181:	48 89 c7             	mov    %rax,%rdi
 184:	e8 00 00 00 00       	call   189 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x189>
 189:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 18d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 191:	0f b6 40 14          	movzbl 0x14(%rax),%eax
 195:	3c 10                	cmp    $0x10,%al
 197:	0f 85 c1 02 00 00    	jne    45e <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x45e>
 19d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1a1:	0f b6 40 15          	movzbl 0x15(%rax),%eax
 1a5:	0f b6 c0             	movzbl %al,%eax
 1a8:	c1 e0 08             	shl    $0x8,%eax
 1ab:	89 c2                	mov    %eax,%edx
 1ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1b1:	0f b6 40 16          	movzbl 0x16(%rax),%eax
 1b5:	0f b6 c0             	movzbl %al,%eax
 1b8:	01 d0                	add    %edx,%eax
 1ba:	66 89 45 d6          	mov    %ax,-0x2a(%rbp)
 1be:	66 83 7d d6 01       	cmpw   $0x1,-0x2a(%rbp)
 1c3:	0f 85 81 01 00 00    	jne    34a <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x34a>
 1c9:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 1cc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 1d3:	00 
 1d4:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1db <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x1db>
 1db:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
 1df:	48 89 c7             	mov    %rax,%rdi
 1e2:	e8 00 00 00 00       	call   1e7 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x1e7>
 1e7:	83 f0 01             	xor    $0x1,%eax
 1ea:	84 c0                	test   %al,%al
 1ec:	0f 84 6c 02 00 00    	je     45e <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x45e>
 1f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 1f6:	48 8d 48 18          	lea    0x18(%rax),%rcx
 1fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 1fe:	ba 06 00 00 00       	mov    $0x6,%edx
 203:	48 89 c6             	mov    %rax,%rsi
 206:	48 89 cf             	mov    %rcx,%rdi
 209:	e8 00 00 00 00       	call   20e <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x20e>
 20e:	85 c0                	test   %eax,%eax
 210:	0f 8f 48 02 00 00    	jg     45e <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x45e>
 216:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 21a:	48 83 c0 18          	add    $0x18,%rax
 21e:	48 8d 48 06          	lea    0x6(%rax),%rcx
 222:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 226:	ba 06 00 00 00       	mov    $0x6,%edx
 22b:	48 89 ce             	mov    %rcx,%rsi
 22e:	48 89 c7             	mov    %rax,%rdi
 231:	e8 00 00 00 00       	call   236 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x236>
 236:	85 c0                	test   %eax,%eax
 238:	0f 8f 20 02 00 00    	jg     45e <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x45e>
 23e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 245 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x245>
 245:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 249:	66 c7 45 d4 fa 05    	movw   $0x5fa,-0x2c(%rbp)
 24f:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
 256:	eb 0f                	jmp    267 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x267>
 258:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 25c:	8b 45 d8             	mov    -0x28(%rbp),%eax
 25f:	c6 04 02 fe          	movb   $0xfe,(%rdx,%rax,1)
 263:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
 267:	83 7d d8 06          	cmpl   $0x6,-0x28(%rbp)
 26b:	76 eb                	jbe    258 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x258>
 26d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 271:	c6 40 07 aa          	movb   $0xaa,0x7(%rax)
 275:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
 27c:	eb 5e                	jmp    2dc <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x2dc>
 27e:	8b 55 dc             	mov    -0x24(%rbp),%edx
 281:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 285:	48 01 d0             	add    %rdx,%rax
 288:	0f b6 00             	movzbl (%rax),%eax
 28b:	8b 55 dc             	mov    -0x24(%rbp),%edx
 28e:	8d 0c 12             	lea    (%rdx,%rdx,1),%ecx
 291:	83 c8 aa             	or     $0xffffffaa,%eax
 294:	89 c2                	mov    %eax,%edx
 296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 29a:	89 c9                	mov    %ecx,%ecx
 29c:	88 54 08 08          	mov    %dl,0x8(%rax,%rcx,1)
 2a0:	8b 55 dc             	mov    -0x24(%rbp),%edx
 2a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 2a7:	48 01 d0             	add    %rdx,%rax
 2aa:	0f b6 00             	movzbl (%rax),%eax
 2ad:	8b 55 dc             	mov    -0x24(%rbp),%edx
 2b0:	01 d2                	add    %edx,%edx
 2b2:	8d 4a 01             	lea    0x1(%rdx),%ecx
 2b5:	83 c8 55             	or     $0x55,%eax
 2b8:	89 c2                	mov    %eax,%edx
 2ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 2be:	89 c9                	mov    %ecx,%ecx
 2c0:	88 54 08 08          	mov    %dl,0x8(%rax,%rcx,1)
 2c4:	8b 55 dc             	mov    -0x24(%rbp),%edx
 2c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 2cb:	48 01 d0             	add    %rdx,%rax
 2ce:	0f b6 00             	movzbl (%rax),%eax
 2d1:	0f b6 c0             	movzbl %al,%eax
 2d4:	66 01 45 d4          	add    %ax,-0x2c(%rbp)
 2d8:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
 2dc:	83 7d dc 05          	cmpl   $0x5,-0x24(%rbp)
 2e0:	76 9c                	jbe    27e <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x27e>
 2e2:	0f b7 45 d4          	movzwl -0x2c(%rbp),%eax
 2e6:	66 c1 e8 08          	shr    $0x8,%ax
 2ea:	83 c8 aa             	or     $0xffffffaa,%eax
 2ed:	89 c2                	mov    %eax,%edx
 2ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 2f3:	88 50 14             	mov    %dl,0x14(%rax)
 2f6:	0f b7 45 d4          	movzwl -0x2c(%rbp),%eax
 2fa:	66 c1 e8 08          	shr    $0x8,%ax
 2fe:	83 c8 55             	or     $0x55,%eax
 301:	89 c2                	mov    %eax,%edx
 303:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 307:	88 50 15             	mov    %dl,0x15(%rax)
 30a:	0f b7 45 d4          	movzwl -0x2c(%rbp),%eax
 30e:	83 c8 aa             	or     $0xffffffaa,%eax
 311:	89 c2                	mov    %eax,%edx
 313:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 317:	88 50 16             	mov    %dl,0x16(%rax)
 31a:	0f b7 45 d4          	movzwl -0x2c(%rbp),%eax
 31e:	83 c8 55             	or     $0x55,%eax
 321:	89 c2                	mov    %eax,%edx
 323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 327:	88 50 17             	mov    %dl,0x17(%rax)
 32a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 32e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 331:	ba 18 00 00 00       	mov    $0x18,%edx
 336:	48 89 ce             	mov    %rcx,%rsi
 339:	89 c7                	mov    %eax,%edi
 33b:	e8 00 00 00 00       	call   340 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x340>
 340:	b8 00 00 00 00       	mov    $0x0,%eax
 345:	e9 19 01 00 00       	jmp    463 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x463>
 34a:	66 83 7d d6 03       	cmpw   $0x3,-0x2a(%rbp)
 34f:	0f 85 98 00 00 00    	jne    3ed <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3ed>
 355:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 359:	0f b6 40 17          	movzbl 0x17(%rax),%eax
 35d:	84 c0                	test   %al,%al
 35f:	74 0a                	je     36b <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x36b>
 361:	b8 00 00 00 00       	mov    $0x0,%eax
 366:	e9 f8 00 00 00       	jmp    463 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x463>
 36b:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
 36f:	83 f0 01             	xor    $0x1,%eax
 372:	84 c0                	test   %al,%al
 374:	74 52                	je     3c8 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3c8>
 376:	80 7d d2 00          	cmpb   $0x0,-0x2e(%rbp)
 37a:	74 4c                	je     3c8 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3c8>
 37c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 37f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 386:	00 
 387:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 38e <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x38e>
 38e:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
 392:	48 89 c7             	mov    %rax,%rdi
 395:	e8 00 00 00 00       	call   39a <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x39a>
 39a:	c6 05 00 00 00 00 02 	movb   $0x2,0x0(%rip)        # 3a1 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3a1>
 3a1:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 3a8 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3a8>
 3a8:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 3af <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3af>
 3af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 3b3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3b7:	8b 75 c4             	mov    -0x3c(%rbp),%esi
 3ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3be:	48 89 c7             	mov    %rax,%rdi
 3c1:	e8 00 00 00 00       	call   3c6 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3c6>
 3c6:	eb 1e                	jmp    3e6 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3e6>
 3c8:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 3cb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 3d2:	00 
 3d3:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3da <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3da>
 3da:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
 3de:	48 89 c7             	mov    %rax,%rdi
 3e1:	e8 00 00 00 00       	call   3e6 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x3e6>
 3e6:	b8 00 00 00 00       	mov    $0x0,%eax
 3eb:	eb 76                	jmp    463 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x463>
 3ed:	66 83 7d d6 02       	cmpw   $0x2,-0x2a(%rbp)
 3f2:	75 6a                	jne    45e <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x45e>
 3f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3f8:	0f b6 40 17          	movzbl 0x17(%rax),%eax
 3fc:	84 c0                	test   %al,%al
 3fe:	74 07                	je     407 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x407>
 400:	b8 00 00 00 00       	mov    $0x0,%eax
 405:	eb 5c                	jmp    463 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x463>
 407:	80 7d d2 00          	cmpb   $0x0,-0x2e(%rbp)
 40b:	74 51                	je     45e <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x45e>
 40d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 410:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 417:	00 
 418:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 41f <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x41f>
 41f:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
 423:	48 89 c7             	mov    %rax,%rdi
 426:	e8 00 00 00 00       	call   42b <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x42b>
 42b:	c6 05 00 00 00 00 02 	movb   $0x2,0x0(%rip)        # 432 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x432>
 432:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 439 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x439>
 439:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 440 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x440>
 440:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 444:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 448:	8b 75 c4             	mov    -0x3c(%rbp),%esi
 44b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 44f:	48 89 c7             	mov    %rax,%rdi
 452:	e8 00 00 00 00       	call   457 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x457>
 457:	b8 00 00 00 00       	mov    $0x0,%eax
 45c:	eb 05                	jmp    463 <ArtNetRdmController::RdmReceive(unsigned int, unsigned char*)+0x463>
 45e:	b8 00 00 00 00       	mov    $0x0,%eax
 463:	c9                   	leave  
 464:	c3                   	ret    

Disassembly of section .text._ZN19ArtNetRdmController17RespondMessageAckEjPKhPK11TRdmMessage:

0000000000000000 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  13:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  17:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  1b:	c6 05 00 00 00 00 cc 	movb   $0xcc,0x0(%rip)        # 22 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x22>
  22:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  26:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  2a:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 30 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x30>
  30:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  34:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
  38:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 3e <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x3e>
  3e:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 45 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x45>
  45:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  49:	0f b6 40 12          	movzbl 0x12(%rax),%eax
  4d:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 53 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x53>
  53:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  57:	0f b6 40 13          	movzbl 0x13(%rax),%eax
  5b:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 61 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x61>
  61:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  65:	0f b6 40 14          	movzbl 0x14(%rax),%eax
  69:	83 c0 01             	add    $0x1,%eax
  6c:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 72 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x72>
  72:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  76:	0f b6 40 15          	movzbl 0x15(%rax),%eax
  7a:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 80 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x80>
  80:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  84:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  88:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 8e <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x8e>
  8e:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 95 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x95>
  95:	83 c0 18             	add    $0x18,%eax
  98:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 9e <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x9e>
  9e:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # a5 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0xa5>
  a5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  ac:	eb 37                	jmp    e5 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0xe5>
  ae:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  b2:	8b 45 f0             	mov    -0x10(%rbp),%eax
  b5:	0f b6 54 02 09       	movzbl 0x9(%rdx,%rax,1),%edx
  ba:	8b 45 f0             	mov    -0x10(%rbp),%eax
  bd:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # c4 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0xc4>
  c4:	88 14 08             	mov    %dl,(%rax,%rcx,1)
  c7:	8b 55 f0             	mov    -0x10(%rbp),%edx
  ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  ce:	48 01 d0             	add    %rdx,%rax
  d1:	0f b6 10             	movzbl (%rax),%edx
  d4:	8b 45 f0             	mov    -0x10(%rbp),%eax
  d7:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # de <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0xde>
  de:	88 14 08             	mov    %dl,(%rax,%rcx,1)
  e1:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  e5:	83 7d f0 05          	cmpl   $0x5,-0x10(%rbp)
  e9:	76 c3                	jbe    ae <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0xae>
  eb:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # f2 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0xf2>
  f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  f6:	66 c7 45 ec 00 00    	movw   $0x0,-0x14(%rbp)
  fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 103:	eb 18                	jmp    11d <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x11d>
 105:	8b 55 f4             	mov    -0xc(%rbp),%edx
 108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 10c:	48 01 d0             	add    %rdx,%rax
 10f:	0f b6 00             	movzbl (%rax),%eax
 112:	0f b6 c0             	movzbl %al,%eax
 115:	66 01 45 ec          	add    %ax,-0x14(%rbp)
 119:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 11d:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 124 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x124>
 124:	0f b6 c0             	movzbl %al,%eax
 127:	39 45 f4             	cmp    %eax,-0xc(%rbp)
 12a:	72 d9                	jb     105 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x105>
 12c:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
 130:	66 c1 e8 08          	shr    $0x8,%ax
 134:	89 c1                	mov    %eax,%ecx
 136:	8b 45 f4             	mov    -0xc(%rbp),%eax
 139:	8d 50 01             	lea    0x1(%rax),%edx
 13c:	89 55 f4             	mov    %edx,-0xc(%rbp)
 13f:	89 c2                	mov    %eax,%edx
 141:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 145:	48 01 d0             	add    %rdx,%rax
 148:	89 ca                	mov    %ecx,%edx
 14a:	88 10                	mov    %dl,(%rax)
 14c:	8b 55 f4             	mov    -0xc(%rbp),%edx
 14f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 153:	48 01 d0             	add    %rdx,%rax
 156:	0f b7 55 ec          	movzwl -0x14(%rbp),%edx
 15a:	88 10                	mov    %dl,(%rax)
 15c:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 163 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x163>
 163:	0f b6 c0             	movzbl %al,%eax
 166:	83 c0 02             	add    $0x2,%eax
 169:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
 16d:	0f b7 55 ee          	movzwl -0x12(%rbp),%edx
 171:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 175:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 178:	48 89 ce             	mov    %rcx,%rsi
 17b:	89 c7                	mov    %eax,%edi
 17d:	e8 00 00 00 00       	call   182 <ArtNetRdmController::RespondMessageAck(unsigned int, unsigned char const*, TRdmMessage const*)+0x182>
 182:	90                   	nop
 183:	c9                   	leave  
 184:	c3                   	ret    

rdm_send.o:     file format elf64-x86-64


Disassembly of section .text._ZN6artnet8rdm_sendEjPKh:

0000000000000000 <artnet::rdm_send(unsigned int, unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
   f:	89 bd cc fe ff ff    	mov    %edi,-0x134(%rbp)
  15:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  1c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  23:	00 00 
  25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  29:	31 c0                	xor    %eax,%eax
  2b:	48 83 bd c0 fe ff ff 	cmpq   $0x0,-0x140(%rbp)
  32:	00 
  33:	75 28                	jne    5d <artnet::rdm_send(unsigned int, unsigned char const*)+0x5d>
  35:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3c <artnet::rdm_send(unsigned int, unsigned char const*)+0x3c>
  3c:	48 89 c1             	mov    %rax,%rcx
  3f:	ba 29 00 00 00       	mov    $0x29,%edx
  44:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4b <artnet::rdm_send(unsigned int, unsigned char const*)+0x4b>
  4b:	48 89 c6             	mov    %rax,%rsi
  4e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 55 <artnet::rdm_send(unsigned int, unsigned char const*)+0x55>
  55:	48 89 c7             	mov    %rax,%rdi
  58:	e8 00 00 00 00       	call   5d <artnet::rdm_send(unsigned int, unsigned char const*)+0x5d>
  5d:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  64:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  6b:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  72:	0f b6 40 13          	movzbl 0x13(%rax),%eax
  76:	3c 21                	cmp    $0x21,%al
  78:	74 13                	je     8d <artnet::rdm_send(unsigned int, unsigned char const*)+0x8d>
  7a:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  81:	0f b6 40 13          	movzbl 0x13(%rax),%eax
  85:	3c 31                	cmp    $0x31,%al
  87:	0f 85 08 01 00 00    	jne    195 <artnet::rdm_send(unsigned int, unsigned char const*)+0x195>
  8d:	c6 85 f0 fe ff ff cc 	movb   $0xcc,-0x110(%rbp)
  94:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
  9b:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  a2:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
  a9:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  ad:	0f b6 c0             	movzbl %al,%eax
  b0:	83 e8 01             	sub    $0x1,%eax
  b3:	89 c2                	mov    %eax,%edx
  b5:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  bc:	48 8d 48 01          	lea    0x1(%rax),%rcx
  c0:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  c7:	48 89 c6             	mov    %rax,%rsi
  ca:	48 89 cf             	mov    %rcx,%rdi
  cd:	e8 00 00 00 00       	call   d2 <artnet::rdm_send(unsigned int, unsigned char const*)+0xd2>
  d2:	66 c7 85 da fe ff ff 	movw   $0x0,-0x126(%rbp)
  d9:	00 00 
  db:	c7 85 dc fe ff ff 00 	movl   $0x0,-0x124(%rbp)
  e2:	00 00 00 
  e5:	eb 24                	jmp    10b <artnet::rdm_send(unsigned int, unsigned char const*)+0x10b>
  e7:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
  ed:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
  f4:	48 01 d0             	add    %rdx,%rax
  f7:	0f b6 00             	movzbl (%rax),%eax
  fa:	0f b6 c0             	movzbl %al,%eax
  fd:	66 01 85 da fe ff ff 	add    %ax,-0x126(%rbp)
 104:	83 85 dc fe ff ff 01 	addl   $0x1,-0x124(%rbp)
 10b:	0f b6 85 f2 fe ff ff 	movzbl -0x10e(%rbp),%eax
 112:	0f b6 c0             	movzbl %al,%eax
 115:	39 85 dc fe ff ff    	cmp    %eax,-0x124(%rbp)
 11b:	72 ca                	jb     e7 <artnet::rdm_send(unsigned int, unsigned char const*)+0xe7>
 11d:	0f b7 85 da fe ff ff 	movzwl -0x126(%rbp),%eax
 124:	66 c1 e8 08          	shr    $0x8,%ax
 128:	89 c1                	mov    %eax,%ecx
 12a:	8b 85 dc fe ff ff    	mov    -0x124(%rbp),%eax
 130:	8d 50 01             	lea    0x1(%rax),%edx
 133:	89 95 dc fe ff ff    	mov    %edx,-0x124(%rbp)
 139:	89 c2                	mov    %eax,%edx
 13b:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
 142:	48 01 d0             	add    %rdx,%rax
 145:	89 ca                	mov    %ecx,%edx
 147:	88 10                	mov    %dl,(%rax)
 149:	8b 95 dc fe ff ff    	mov    -0x124(%rbp),%edx
 14f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
 156:	48 01 d0             	add    %rdx,%rax
 159:	0f b7 95 da fe ff ff 	movzwl -0x126(%rbp),%edx
 160:	88 10                	mov    %dl,(%rax)
 162:	0f b6 85 f2 fe ff ff 	movzbl -0x10e(%rbp),%eax
 169:	0f b6 c0             	movzbl %al,%eax
 16c:	8d 50 02             	lea    0x2(%rax),%edx
 16f:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
 176:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
 17c:	48 89 ce             	mov    %rcx,%rsi
 17f:	89 c7                	mov    %eax,%edi
 181:	e8 00 00 00 00       	call   186 <artnet::rdm_send(unsigned int, unsigned char const*)+0x186>
 186:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
 18d:	48 89 c7             	mov    %rax,%rdi
 190:	e8 00 00 00 00       	call   195 <artnet::rdm_send(unsigned int, unsigned char const*)+0x195>
 195:	90                   	nop
 196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 19a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 1a1:	00 00 
 1a3:	74 05                	je     1aa <artnet::rdm_send(unsigned int, unsigned char const*)+0x1aa>
 1a5:	e8 00 00 00 00       	call   1aa <artnet::rdm_send(unsigned int, unsigned char const*)+0x1aa>
 1aa:	c9                   	leave  
 1ab:	c3                   	ret    

rdmdiscovery.o:     file format elf64-x86-64


Disassembly of section .text._ZN6RDMTod5ResetEv:

0000000000000000 <RDMTod::Reset()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  13:	eb 35                	jmp    4a <RDMTod::Reset()+0x4a>
  15:	8b 55 f8             	mov    -0x8(%rbp),%edx
  18:	48 89 d0             	mov    %rdx,%rax
  1b:	48 01 c0             	add    %rax,%rax
  1e:	48 01 d0             	add    %rdx,%rax
  21:	48 01 c0             	add    %rax,%rax
  24:	48 8d 50 20          	lea    0x20(%rax),%rdx
  28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2c:	48 01 d0             	add    %rdx,%rax
  2f:	48 83 c0 04          	add    $0x4,%rax
  33:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 39 <RDMTod::Reset()+0x39>
  39:	89 10                	mov    %edx,(%rax)
  3b:	0f b7 15 00 00 00 00 	movzwl 0x0(%rip),%edx        # 42 <RDMTod::Reset()+0x42>
  42:	66 89 50 04          	mov    %dx,0x4(%rax)
  46:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4e:	8b 00                	mov    (%rax),%eax
  50:	39 45 f8             	cmp    %eax,-0x8(%rbp)
  53:	72 c0                	jb     15 <RDMTod::Reset()+0x15>
  55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  59:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  5f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  66:	eb 13                	jmp    7b <RDMTod::Reset()+0x7b>
  68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  6f:	c7 44 90 08 00 00 00 	movl   $0x0,0x8(%rax,%rdx,4)
  76:	00 
  77:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  7b:	83 7d fc 06          	cmpl   $0x6,-0x4(%rbp)
  7f:	76 e7                	jbe    68 <RDMTod::Reset()+0x68>
  81:	90                   	nop
  82:	90                   	nop
  83:	5d                   	pop    %rbp
  84:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod6AddUidEPKh:

0000000000000000 <RDMTod::AddUid(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	8b 00                	mov    (%rax),%eax
  1a:	3d c8 00 00 00       	cmp    $0xc8,%eax
  1f:	75 07                	jne    28 <RDMTod::AddUid(unsigned char const*)+0x28>
  21:	b8 00 00 00 00       	mov    $0x0,%eax
  26:	eb 63                	jmp    8b <RDMTod::AddUid(unsigned char const*)+0x8b>
  28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  30:	48 89 d6             	mov    %rdx,%rsi
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	call   3b <RDMTod::AddUid(unsigned char const*)+0x3b>
  3b:	84 c0                	test   %al,%al
  3d:	74 07                	je     46 <RDMTod::AddUid(unsigned char const*)+0x46>
  3f:	b8 00 00 00 00       	mov    $0x0,%eax
  44:	eb 45                	jmp    8b <RDMTod::AddUid(unsigned char const*)+0x8b>
  46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4a:	8b 00                	mov    (%rax),%eax
  4c:	8d 48 01             	lea    0x1(%rax),%ecx
  4f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  53:	89 0a                	mov    %ecx,(%rdx)
  55:	89 c2                	mov    %eax,%edx
  57:	48 89 d0             	mov    %rdx,%rax
  5a:	48 01 c0             	add    %rax,%rax
  5d:	48 01 d0             	add    %rdx,%rax
  60:	48 01 c0             	add    %rax,%rax
  63:	48 8d 50 20          	lea    0x20(%rax),%rdx
  67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6b:	48 01 d0             	add    %rdx,%rax
  6e:	48 8d 48 04          	lea    0x4(%rax),%rcx
  72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  76:	ba 06 00 00 00       	mov    $0x6,%edx
  7b:	48 89 c6             	mov    %rax,%rsi
  7e:	48 89 cf             	mov    %rcx,%rdi
  81:	e8 00 00 00 00       	call   86 <RDMTod::AddUid(unsigned char const*)+0x86>
  86:	b8 01 00 00 00       	mov    $0x1,%eax
  8b:	c9                   	leave  
  8c:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod5ExistEPKh:

0000000000000000 <RDMTod::Exist(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  1b:	eb 4b                	jmp    68 <RDMTod::Exist(unsigned char const*)+0x68>
  1d:	8b 55 fc             	mov    -0x4(%rbp),%edx
  20:	48 89 d0             	mov    %rdx,%rax
  23:	48 01 c0             	add    %rax,%rax
  26:	48 01 d0             	add    %rdx,%rax
  29:	48 01 c0             	add    %rax,%rax
  2c:	48 8d 50 20          	lea    0x20(%rax),%rdx
  30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  34:	48 01 d0             	add    %rdx,%rax
  37:	48 8d 48 04          	lea    0x4(%rax),%rcx
  3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  3f:	ba 06 00 00 00       	mov    $0x6,%edx
  44:	48 89 c6             	mov    %rax,%rsi
  47:	48 89 cf             	mov    %rcx,%rdi
  4a:	e8 00 00 00 00       	call   4f <RDMTod::Exist(unsigned char const*)+0x4f>
  4f:	85 c0                	test   %eax,%eax
  51:	75 11                	jne    64 <RDMTod::Exist(unsigned char const*)+0x64>
  53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  57:	8b 55 fc             	mov    -0x4(%rbp),%edx
  5a:	89 50 04             	mov    %edx,0x4(%rax)
  5d:	b8 01 00 00 00       	mov    $0x1,%eax
  62:	eb 1f                	jmp    83 <RDMTod::Exist(unsigned char const*)+0x83>
  64:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6c:	8b 00                	mov    (%rax),%eax
  6e:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  71:	72 aa                	jb     1d <RDMTod::Exist(unsigned char const*)+0x1d>
  73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  77:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%rax)
  7e:	b8 00 00 00 00       	mov    $0x0,%eax
  83:	c9                   	leave  
  84:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod4DumpEj:

0000000000000000 <RDMTod::Dump(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	81 7d e4 c8 00 00 00 	cmpl   $0xc8,-0x1c(%rbp)
  1a:	76 07                	jbe    23 <RDMTod::Dump(unsigned int)+0x23>
  1c:	c7 45 e4 c8 00 00 00 	movl   $0xc8,-0x1c(%rbp)
  23:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  26:	89 c6                	mov    %eax,%esi
  28:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2f <RDMTod::Dump(unsigned int)+0x2f>
  2f:	48 89 c7             	mov    %rax,%rdi
  32:	b8 00 00 00 00       	mov    $0x0,%eax
  37:	e8 00 00 00 00       	call   3c <RDMTod::Dump(unsigned int)+0x3c>
  3c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  43:	e9 e5 00 00 00       	jmp    12d <RDMTod::Dump(unsigned int)+0x12d>
  48:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  4f:	48 89 d0             	mov    %rdx,%rax
  52:	48 01 c0             	add    %rax,%rax
  55:	48 01 d0             	add    %rdx,%rax
  58:	48 01 c0             	add    %rax,%rax
  5b:	48 01 c8             	add    %rcx,%rax
  5e:	48 83 c0 29          	add    $0x29,%rax
  62:	0f b6 00             	movzbl (%rax),%eax
  65:	0f b6 f0             	movzbl %al,%esi
  68:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  6c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  6f:	48 89 d0             	mov    %rdx,%rax
  72:	48 01 c0             	add    %rax,%rax
  75:	48 01 d0             	add    %rdx,%rax
  78:	48 01 c0             	add    %rax,%rax
  7b:	48 01 c8             	add    %rcx,%rax
  7e:	48 83 c0 28          	add    $0x28,%rax
  82:	0f b6 00             	movzbl (%rax),%eax
  85:	44 0f b6 c8          	movzbl %al,%r9d
  89:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  8d:	8b 55 fc             	mov    -0x4(%rbp),%edx
  90:	48 89 d0             	mov    %rdx,%rax
  93:	48 01 c0             	add    %rax,%rax
  96:	48 01 d0             	add    %rdx,%rax
  99:	48 01 c0             	add    %rax,%rax
  9c:	48 01 c8             	add    %rcx,%rax
  9f:	48 83 c0 27          	add    $0x27,%rax
  a3:	0f b6 00             	movzbl (%rax),%eax
  a6:	44 0f b6 c0          	movzbl %al,%r8d
  aa:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  ae:	8b 55 fc             	mov    -0x4(%rbp),%edx
  b1:	48 89 d0             	mov    %rdx,%rax
  b4:	48 01 c0             	add    %rax,%rax
  b7:	48 01 d0             	add    %rdx,%rax
  ba:	48 01 c0             	add    %rax,%rax
  bd:	48 01 c8             	add    %rcx,%rax
  c0:	48 83 c0 26          	add    $0x26,%rax
  c4:	0f b6 00             	movzbl (%rax),%eax
  c7:	0f b6 c8             	movzbl %al,%ecx
  ca:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  ce:	8b 55 fc             	mov    -0x4(%rbp),%edx
  d1:	48 89 d0             	mov    %rdx,%rax
  d4:	48 01 c0             	add    %rax,%rax
  d7:	48 01 d0             	add    %rdx,%rax
  da:	48 01 c0             	add    %rax,%rax
  dd:	48 01 f8             	add    %rdi,%rax
  e0:	48 83 c0 25          	add    $0x25,%rax
  e4:	0f b6 00             	movzbl (%rax),%eax
  e7:	0f b6 d0             	movzbl %al,%edx
  ea:	4c 8b 55 e8          	mov    -0x18(%rbp),%r10
  ee:	8b 7d fc             	mov    -0x4(%rbp),%edi
  f1:	48 89 f8             	mov    %rdi,%rax
  f4:	48 01 c0             	add    %rax,%rax
  f7:	48 01 f8             	add    %rdi,%rax
  fa:	48 01 c0             	add    %rax,%rax
  fd:	4c 01 d0             	add    %r10,%rax
 100:	48 83 c0 24          	add    $0x24,%rax
 104:	0f b6 00             	movzbl (%rax),%eax
 107:	0f b6 c0             	movzbl %al,%eax
 10a:	48 83 ec 08          	sub    $0x8,%rsp
 10e:	56                   	push   %rsi
 10f:	89 c6                	mov    %eax,%esi
 111:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 118 <RDMTod::Dump(unsigned int)+0x118>
 118:	48 89 c7             	mov    %rax,%rdi
 11b:	b8 00 00 00 00       	mov    $0x0,%eax
 120:	e8 00 00 00 00       	call   125 <RDMTod::Dump(unsigned int)+0x125>
 125:	48 83 c4 10          	add    $0x10,%rsp
 129:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 12d:	8b 45 fc             	mov    -0x4(%rbp),%eax
 130:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
 133:	0f 82 0f ff ff ff    	jb     48 <RDMTod::Dump(unsigned int)+0x48>
 139:	90                   	nop
 13a:	90                   	nop
 13b:	c9                   	leave  
 13c:	c3                   	ret    

Disassembly of section .text._ZN6RDMTod4DumpEv:

0000000000000000 <RDMTod::Dump()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 10                	mov    (%rax),%edx
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	89 d6                	mov    %edx,%esi
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	e8 00 00 00 00       	call   24 <RDMTod::Dump()+0x24>
  24:	90                   	nop
  25:	c9                   	leave  
  26:	c3                   	ret    

Disassembly of section .text.udelay:

0000000000000000 <udelay>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   b:	90                   	nop
   c:	5d                   	pop    %rbp
   d:	c3                   	ret    

Disassembly of section .text._ZN8Hardware12WatchdogFeedEv:

0000000000000000 <Hardware::WatchdogFeed()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN12RDMDiscoveryC2EPKh:

0000000000000000 <RDMDiscovery::RDMDiscovery(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <RDMDiscovery::RDMDiscovery(unsigned char const*)+0x20>
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	48 8d 88 10 01 00 00 	lea    0x110(%rax),%rcx
  2b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2f:	ba 06 00 00 00       	mov    $0x6,%edx
  34:	48 89 c6             	mov    %rax,%rsi
  37:	48 89 cf             	mov    %rcx,%rdi
  3a:	e8 00 00 00 00       	call   3f <RDMDiscovery::RDMDiscovery(unsigned char const*)+0x3f>
  3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  47:	48 89 d6             	mov    %rdx,%rsi
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	e8 00 00 00 00       	call   52 <RDMDiscovery::RDMDiscovery(unsigned char const*)+0x52>
  52:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 59 <RDMDiscovery::RDMDiscovery(unsigned char const*)+0x59>
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	b8 00 00 00 00       	mov    $0x0,%eax
  61:	e8 00 00 00 00       	call   66 <RDMDiscovery::RDMDiscovery(unsigned char const*)+0x66>
  66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6a:	48 8d 90 10 01 00 00 	lea    0x110(%rax),%rdx
  71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  75:	48 89 d6             	mov    %rdx,%rsi
  78:	48 89 c7             	mov    %rax,%rdi
  7b:	e8 00 00 00 00       	call   80 <RDMDiscovery::RDMDiscovery(unsigned char const*)+0x80>
  80:	bf 0a 00 00 00       	mov    $0xa,%edi
  85:	e8 00 00 00 00       	call   8a <RDMDiscovery::RDMDiscovery(unsigned char const*)+0x8a>
  8a:	90                   	nop
  8b:	c9                   	leave  
  8c:	c3                   	ret    

Disassembly of section .text._ZN12RDMDiscovery4FullEjP6RDMTod:

0000000000000000 <RDMDiscovery::Full(unsigned int, RDMTod*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	8b 55 f4             	mov    -0xc(%rbp),%edx
  1e:	89 90 04 01 00 00    	mov    %edx,0x104(%rax)
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  2c:	48 89 90 08 01 00 00 	mov    %rdx,0x108(%rax)
  33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  37:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <RDMDiscovery::Full(unsigned int, RDMTod*)+0x46>
  46:	e8 00 00 00 00       	call   4b <RDMDiscovery::Full(unsigned int, RDMTod*)+0x4b>
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	call   53 <RDMDiscovery::Full(unsigned int, RDMTod*)+0x53>
  53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  57:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5e <RDMDiscovery::Full(unsigned int, RDMTod*)+0x5e>
  5e:	48 89 d6             	mov    %rdx,%rsi
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <RDMDiscovery::Full(unsigned int, RDMTod*)+0x69>
  69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6d:	be 10 00 00 00       	mov    $0x10,%esi
  72:	48 89 c7             	mov    %rax,%rdi
  75:	e8 00 00 00 00       	call   7a <RDMDiscovery::Full(unsigned int, RDMTod*)+0x7a>
  7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7e:	be 03 00 00 00       	mov    $0x3,%esi
  83:	48 89 c7             	mov    %rax,%rdi
  86:	e8 00 00 00 00       	call   8b <RDMDiscovery::Full(unsigned int, RDMTod*)+0x8b>
  8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8f:	ba 00 00 00 00       	mov    $0x0,%edx
  94:	be 00 00 00 00       	mov    $0x0,%esi
  99:	48 89 c7             	mov    %rax,%rdi
  9c:	e8 00 00 00 00       	call   a1 <RDMDiscovery::Full(unsigned int, RDMTod*)+0xa1>
  a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  a9:	8b 8a 04 01 00 00    	mov    0x104(%rdx),%ecx
  af:	ba 00 00 00 00       	mov    $0x0,%edx
  b4:	89 ce                	mov    %ecx,%esi
  b6:	48 89 c7             	mov    %rax,%rdi
  b9:	e8 00 00 00 00       	call   be <RDMDiscovery::Full(unsigned int, RDMTod*)+0xbe>
  be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c2:	8b 80 04 01 00 00    	mov    0x104(%rax),%eax
  c8:	be f0 0a 00 00       	mov    $0xaf0,%esi
  cd:	89 c7                	mov    %eax,%edi
  cf:	e8 00 00 00 00       	call   d4 <RDMDiscovery::Full(unsigned int, RDMTod*)+0xd4>
  d4:	e8 00 00 00 00       	call   d9 <RDMDiscovery::Full(unsigned int, RDMTod*)+0xd9>
  d9:	48 89 c7             	mov    %rax,%rdi
  dc:	e8 00 00 00 00       	call   e1 <RDMDiscovery::Full(unsigned int, RDMTod*)+0xe1>
  e1:	bf f0 0a 00 00       	mov    $0xaf0,%edi
  e6:	e8 00 00 00 00       	call   eb <RDMDiscovery::Full(unsigned int, RDMTod*)+0xeb>
  eb:	e8 00 00 00 00       	call   f0 <RDMDiscovery::Full(unsigned int, RDMTod*)+0xf0>
  f0:	48 89 c7             	mov    %rax,%rdi
  f3:	e8 00 00 00 00       	call   f8 <RDMDiscovery::Full(unsigned int, RDMTod*)+0xf8>
  f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 100:	8b 8a 04 01 00 00    	mov    0x104(%rdx),%ecx
 106:	ba 00 00 00 00       	mov    $0x0,%edx
 10b:	89 ce                	mov    %ecx,%esi
 10d:	48 89 c7             	mov    %rax,%rdi
 110:	e8 00 00 00 00       	call   115 <RDMDiscovery::Full(unsigned int, RDMTod*)+0x115>
 115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 119:	8b 80 04 01 00 00    	mov    0x104(%rax),%eax
 11f:	be f0 0a 00 00       	mov    $0xaf0,%esi
 124:	89 c7                	mov    %eax,%edi
 126:	e8 00 00 00 00       	call   12b <RDMDiscovery::Full(unsigned int, RDMTod*)+0x12b>
 12b:	e8 00 00 00 00       	call   130 <RDMDiscovery::Full(unsigned int, RDMTod*)+0x130>
 130:	48 89 c7             	mov    %rax,%rdi
 133:	e8 00 00 00 00       	call   138 <RDMDiscovery::Full(unsigned int, RDMTod*)+0x138>
 138:	bf f0 0a 00 00       	mov    $0xaf0,%edi
 13d:	e8 00 00 00 00       	call   142 <RDMDiscovery::Full(unsigned int, RDMTod*)+0x142>
 142:	e8 00 00 00 00       	call   147 <RDMDiscovery::Full(unsigned int, RDMTod*)+0x147>
 147:	48 89 c7             	mov    %rax,%rdi
 14a:	e8 00 00 00 00       	call   14f <RDMDiscovery::Full(unsigned int, RDMTod*)+0x14f>
 14f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 153:	48 ba fe ff ff ff ff 	movabs $0xfffffffffffe,%rdx
 15a:	ff 00 00 
 15d:	be 00 00 00 00       	mov    $0x0,%esi
 162:	48 89 c7             	mov    %rax,%rdi
 165:	e8 00 00 00 00       	call   16a <RDMDiscovery::Full(unsigned int, RDMTod*)+0x16a>
 16a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 16e:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
 175:	48 89 c7             	mov    %rax,%rdi
 178:	e8 00 00 00 00       	call   17d <RDMDiscovery::Full(unsigned int, RDMTod*)+0x17d>
 17d:	90                   	nop
 17e:	c9                   	leave  
 17f:	c3                   	ret    

Disassembly of section .text._ZN12RDMDiscovery11FindDevicesEmm:

0000000000000000 <RDMDiscovery::FindDevices(unsigned long, unsigned long)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 60          	sub    $0x60,%rsp
   c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  10:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  14:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  25:	31 c0                	xor    %eax,%eax
  27:	e8 00 00 00 00       	call   2c <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x2c>
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	e8 00 00 00 00       	call   34 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x34>
  34:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  38:	8b 80 04 01 00 00    	mov    0x104(%rax),%eax
  3e:	89 c7                	mov    %eax,%edi
  40:	e8 00 00 00 00       	call   45 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x45>
  45:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  49:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4e:	74 25                	je     75 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x75>
  50:	be 5f 00 00 00       	mov    $0x5f,%esi
  55:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5c <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x5c>
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	b8 00 00 00 00       	mov    $0x0,%eax
  64:	e8 00 00 00 00       	call   69 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x69>
  69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	call   75 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x75>
  75:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7c <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x7c>
  7c:	48 89 c7             	mov    %rax,%rdi
  7f:	b8 00 00 00 00       	mov    $0x0,%eax
  84:	e8 00 00 00 00       	call   89 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x89>
  89:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  8d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  91:	48 89 d6             	mov    %rdx,%rsi
  94:	48 89 c7             	mov    %rax,%rdi
  97:	e8 00 00 00 00       	call   9c <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x9c>
  9c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a3 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0xa3>
  a3:	48 89 c7             	mov    %rax,%rdi
  a6:	b8 00 00 00 00       	mov    $0x0,%eax
  ab:	e8 00 00 00 00       	call   b0 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0xb0>
  b0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  b4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  b8:	48 89 d6             	mov    %rdx,%rsi
  bb:	48 89 c7             	mov    %rax,%rdi
  be:	e8 00 00 00 00       	call   c3 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0xc3>
  c3:	bf 0a 00 00 00       	mov    $0xa,%edi
  c8:	e8 00 00 00 00       	call   cd <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0xcd>
  cd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  d1:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax
  d5:	0f 85 b5 01 00 00    	jne    290 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x290>
  db:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  df:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  e3:	48 89 d6             	mov    %rdx,%rsi
  e6:	48 89 c7             	mov    %rax,%rdi
  e9:	e8 00 00 00 00       	call   ee <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0xee>
  ee:	8b 10                	mov    (%rax),%edx
  f0:	89 55 f2             	mov    %edx,-0xe(%rbp)
  f3:	0f b7 40 04          	movzwl 0x4(%rax),%eax
  f7:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
  fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  ff:	be 10 00 00 00       	mov    $0x10,%esi
 104:	48 89 c7             	mov    %rax,%rdi
 107:	e8 00 00 00 00       	call   10c <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x10c>
 10c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 110:	be 02 00 00 00       	mov    $0x2,%esi
 115:	48 89 c7             	mov    %rax,%rdi
 118:	e8 00 00 00 00       	call   11d <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x11d>
 11d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 121:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
 125:	48 89 d6             	mov    %rdx,%rsi
 128:	48 89 c7             	mov    %rax,%rdi
 12b:	e8 00 00 00 00       	call   130 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x130>
 130:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 134:	ba 00 00 00 00       	mov    $0x0,%edx
 139:	be 00 00 00 00       	mov    $0x0,%esi
 13e:	48 89 c7             	mov    %rax,%rdi
 141:	e8 00 00 00 00       	call   146 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x146>
 146:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
 14d:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
 151:	83 7d d0 0a          	cmpl   $0xa,-0x30(%rbp)
 155:	0f 94 c0             	sete   %al
 158:	84 c0                	test   %al,%al
 15a:	0f 85 88 00 00 00    	jne    1e8 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x1e8>
 160:	e8 00 00 00 00       	call   165 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x165>
 165:	48 89 c7             	mov    %rax,%rdi
 168:	e8 00 00 00 00       	call   16d <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x16d>
 16d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 171:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 175:	8b 8a 04 01 00 00    	mov    0x104(%rdx),%ecx
 17b:	ba a8 16 00 00       	mov    $0x16a8,%edx
 180:	89 ce                	mov    %ecx,%esi
 182:	48 89 c7             	mov    %rax,%rdi
 185:	e8 00 00 00 00       	call   18a <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x18a>
 18a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 18e:	8b 80 04 01 00 00    	mov    0x104(%rax),%eax
 194:	be f0 0a 00 00       	mov    $0xaf0,%esi
 199:	89 c7                	mov    %eax,%edi
 19b:	e8 00 00 00 00       	call   1a0 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x1a0>
 1a0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 1a4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
 1a9:	74 30                	je     1db <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x1db>
 1ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1af:	0f b6 40 14          	movzbl 0x14(%rax),%eax
 1b3:	3c 11                	cmp    $0x11,%al
 1b5:	75 23                	jne    1da <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x1da>
 1b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1bb:	0f b6 40 15          	movzbl 0x15(%rax),%eax
 1bf:	0f b6 c0             	movzbl %al,%eax
 1c2:	c1 e0 08             	shl    $0x8,%eax
 1c5:	89 c2                	mov    %eax,%edx
 1c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1cb:	0f b6 40 16          	movzbl 0x16(%rax),%eax
 1cf:	0f b6 c0             	movzbl %al,%eax
 1d2:	01 d0                	add    %edx,%eax
 1d4:	66 83 f8 02          	cmp    $0x2,%ax
 1d8:	eb 01                	jmp    1db <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x1db>
 1da:	90                   	nop
 1db:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
 1e0:	0f 84 67 ff ff ff    	je     14d <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x14d>
 1e6:	eb 01                	jmp    1e9 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x1e9>
 1e8:	90                   	nop
 1e9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
 1ee:	0f 84 92 00 00 00    	je     286 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x286>
 1f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1f8:	48 89 c7             	mov    %rax,%rdi
 1fb:	e8 00 00 00 00       	call   200 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x200>
 200:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 204:	0f b6 40 14          	movzbl 0x14(%rax),%eax
 208:	3c 11                	cmp    $0x11,%al
 20a:	75 3f                	jne    24b <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x24b>
 20c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 210:	48 8d 48 09          	lea    0x9(%rax),%rcx
 214:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
 218:	ba 06 00 00 00       	mov    $0x6,%edx
 21d:	48 89 ce             	mov    %rcx,%rsi
 220:	48 89 c7             	mov    %rax,%rdi
 223:	e8 00 00 00 00       	call   228 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x228>
 228:	85 c0                	test   %eax,%eax
 22a:	75 1f                	jne    24b <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x24b>
 22c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 230:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
 237:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
 23b:	48 89 d6             	mov    %rdx,%rsi
 23e:	48 89 c7             	mov    %rax,%rdi
 241:	e8 00 00 00 00       	call   246 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x246>
 246:	e9 5a 02 00 00       	jmp    4a5 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x4a5>
 24b:	be 92 00 00 00       	mov    $0x92,%esi
 250:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 257 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x257>
 257:	48 89 c7             	mov    %rax,%rdi
 25a:	b8 00 00 00 00       	mov    $0x0,%eax
 25f:	e8 00 00 00 00       	call   264 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x264>
 264:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
 268:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 26c:	48 89 d6             	mov    %rdx,%rsi
 26f:	48 89 c7             	mov    %rax,%rdi
 272:	e8 00 00 00 00       	call   277 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x277>
 277:	bf 0a 00 00 00       	mov    $0xa,%edi
 27c:	e8 00 00 00 00       	call   281 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x281>
 281:	e9 1f 02 00 00       	jmp    4a5 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x4a5>
 286:	b8 01 00 00 00       	mov    $0x1,%eax
 28b:	e9 1a 02 00 00       	jmp    4aa <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x4aa>
 290:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
 294:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 298:	48 89 d6             	mov    %rdx,%rsi
 29b:	48 89 c7             	mov    %rax,%rdi
 29e:	e8 00 00 00 00       	call   2a3 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x2a3>
 2a3:	48 89 c1             	mov    %rax,%rcx
 2a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 2aa:	48 05 16 01 00 00    	add    $0x116,%rax
 2b0:	ba 06 00 00 00       	mov    $0x6,%edx
 2b5:	48 89 ce             	mov    %rcx,%rsi
 2b8:	48 89 c7             	mov    %rax,%rdi
 2bb:	e8 00 00 00 00       	call   2c0 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x2c0>
 2c0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
 2c4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 2c8:	48 89 d6             	mov    %rdx,%rsi
 2cb:	48 89 c7             	mov    %rax,%rdi
 2ce:	e8 00 00 00 00       	call   2d3 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x2d3>
 2d3:	48 89 c1             	mov    %rax,%rcx
 2d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 2da:	48 05 1c 01 00 00    	add    $0x11c,%rax
 2e0:	ba 06 00 00 00       	mov    $0x6,%edx
 2e5:	48 89 ce             	mov    %rcx,%rsi
 2e8:	48 89 c7             	mov    %rax,%rdi
 2eb:	e8 00 00 00 00       	call   2f0 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x2f0>
 2f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 2f4:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2fb <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x2fb>
 2fb:	48 89 d6             	mov    %rdx,%rsi
 2fe:	48 89 c7             	mov    %rax,%rdi
 301:	e8 00 00 00 00       	call   306 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x306>
 306:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 30a:	be 10 00 00 00       	mov    $0x10,%esi
 30f:	48 89 c7             	mov    %rax,%rdi
 312:	e8 00 00 00 00       	call   317 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x317>
 317:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 31b:	be 01 00 00 00       	mov    $0x1,%esi
 320:	48 89 c7             	mov    %rax,%rdi
 323:	e8 00 00 00 00       	call   328 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x328>
 328:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 32c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 330:	48 8d 8a 16 01 00 00 	lea    0x116(%rdx),%rcx
 337:	ba 0c 00 00 00       	mov    $0xc,%edx
 33c:	48 89 ce             	mov    %rcx,%rsi
 33f:	48 89 c7             	mov    %rax,%rdi
 342:	e8 00 00 00 00       	call   347 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x347>
 347:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
 34e:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
 352:	83 7d d4 03          	cmpl   $0x3,-0x2c(%rbp)
 356:	0f 94 c0             	sete   %al
 359:	84 c0                	test   %al,%al
 35b:	75 4d                	jne    3aa <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x3aa>
 35d:	e8 00 00 00 00       	call   362 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x362>
 362:	48 89 c7             	mov    %rax,%rdi
 365:	e8 00 00 00 00       	call   36a <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x36a>
 36a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 36e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 372:	8b 8a 04 01 00 00    	mov    0x104(%rdx),%ecx
 378:	ba a8 16 00 00       	mov    $0x16a8,%edx
 37d:	89 ce                	mov    %ecx,%esi
 37f:	48 89 c7             	mov    %rax,%rdi
 382:	e8 00 00 00 00       	call   387 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x387>
 387:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 38b:	8b 80 04 01 00 00    	mov    0x104(%rax),%eax
 391:	be f0 0a 00 00       	mov    $0xaf0,%esi
 396:	89 c7                	mov    %eax,%edi
 398:	e8 00 00 00 00       	call   39d <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x39d>
 39d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3a1:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
 3a6:	74 a6                	je     34e <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x34e>
 3a8:	eb 01                	jmp    3ab <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x3ab>
 3aa:	90                   	nop
 3ab:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
 3b0:	0f 84 ef 00 00 00    	je     4a5 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x4a5>
 3b6:	c6 45 cf 01          	movb   $0x1,-0x31(%rbp)
 3ba:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
 3be:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
 3c2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3c6:	48 89 ce             	mov    %rcx,%rsi
 3c9:	48 89 c7             	mov    %rax,%rdi
 3cc:	e8 00 00 00 00       	call   3d1 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x3d1>
 3d1:	84 c0                	test   %al,%al
 3d3:	74 16                	je     3eb <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x3eb>
 3d5:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
 3d9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3dd:	48 89 d6             	mov    %rdx,%rsi
 3e0:	48 89 c7             	mov    %rax,%rdi
 3e3:	e8 00 00 00 00       	call   3e8 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x3e8>
 3e8:	88 45 cf             	mov    %al,-0x31(%rbp)
 3eb:	80 7d cf 00          	cmpb   $0x0,-0x31(%rbp)
 3ef:	0f 84 b0 00 00 00    	je     4a5 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x4a5>
 3f5:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffff,%rax
 3fc:	7f 00 00 
 3ff:	48 23 45 b0          	and    -0x50(%rbp),%rax
 403:	48 89 c2             	mov    %rax,%rdx
 406:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffff,%rax
 40d:	7f 00 00 
 410:	48 23 45 a8          	and    -0x58(%rbp),%rax
 414:	48 01 d0             	add    %rdx,%rax
 417:	48 d1 e8             	shr    %rax
 41a:	48 89 c2             	mov    %rax,%rdx
 41d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 421:	48 d1 e8             	shr    %rax
 424:	48 89 c1             	mov    %rax,%rcx
 427:	48 b8 00 00 00 00 00 	movabs $0x400000000000,%rax
 42e:	40 00 00 
 431:	48 21 c8             	and    %rcx,%rax
 434:	48 01 c2             	add    %rax,%rdx
 437:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 43b:	48 d1 e8             	shr    %rax
 43e:	48 89 c1             	mov    %rax,%rcx
 441:	48 b8 00 00 00 00 00 	movabs $0x400000000000,%rax
 448:	40 00 00 
 44b:	48 21 c8             	and    %rcx,%rax
 44e:	48 01 d0             	add    %rdx,%rax
 451:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 455:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 459:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
 45d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 461:	48 89 ce             	mov    %rcx,%rsi
 464:	48 89 c7             	mov    %rax,%rdi
 467:	e8 00 00 00 00       	call   46c <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x46c>
 46c:	88 45 cf             	mov    %al,-0x31(%rbp)
 46f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 473:	48 8d 48 01          	lea    0x1(%rax),%rcx
 477:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
 47b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 47f:	48 89 ce             	mov    %rcx,%rsi
 482:	48 89 c7             	mov    %rax,%rdi
 485:	e8 00 00 00 00       	call   48a <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x48a>
 48a:	0a 45 cf             	or     -0x31(%rbp),%al
 48d:	0f b6 c0             	movzbl %al,%eax
 490:	85 c0                	test   %eax,%eax
 492:	0f 95 c0             	setne  %al
 495:	88 45 cf             	mov    %al,-0x31(%rbp)
 498:	80 7d cf 00          	cmpb   $0x0,-0x31(%rbp)
 49c:	74 07                	je     4a5 <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x4a5>
 49e:	b8 01 00 00 00       	mov    $0x1,%eax
 4a3:	eb 05                	jmp    4aa <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x4aa>
 4a5:	b8 00 00 00 00       	mov    $0x0,%eax
 4aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 4ae:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 4b5:	00 00 
 4b7:	74 05                	je     4be <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x4be>
 4b9:	e8 00 00 00 00       	call   4be <RDMDiscovery::FindDevices(unsigned long, unsigned long)+0x4be>
 4be:	c9                   	leave  
 4bf:	c3                   	ret    

Disassembly of section .text._ZN12RDMDiscovery10ConvertUidEm:

0000000000000000 <RDMDiscovery::ConvertUid(unsigned long)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	48 c1 e0 10          	shl    $0x10,%rax
  18:	48 0f c8             	bswap  %rax
  1b:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 22 <RDMDiscovery::ConvertUid(unsigned long)+0x22>
  22:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 29 <RDMDiscovery::ConvertUid(unsigned long)+0x29>
  29:	5d                   	pop    %rbp
  2a:	c3                   	ret    

Disassembly of section .text._ZN12RDMDiscovery10ConvertUidEPKh:

0000000000000000 <RDMDiscovery::ConvertUid(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	8b 10                	mov    (%rax),%edx
  16:	89 15 00 00 00 00    	mov    %edx,0x0(%rip)        # 1c <RDMDiscovery::ConvertUid(unsigned char const*)+0x1c>
  1c:	0f b7 40 04          	movzwl 0x4(%rax),%eax
  20:	66 89 05 00 00 00 00 	mov    %ax,0x0(%rip)        # 27 <RDMDiscovery::ConvertUid(unsigned char const*)+0x27>
  27:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2e <RDMDiscovery::ConvertUid(unsigned char const*)+0x2e>
  2e:	48 c1 e0 10          	shl    $0x10,%rax
  32:	48 0f c8             	bswap  %rax
  35:	5d                   	pop    %rbp
  36:	c3                   	ret    

Disassembly of section .text._ZN12RDMDiscovery8PrintUidEm:

0000000000000000 <RDMDiscovery::PrintUid(unsigned long)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	48 89 d6             	mov    %rdx,%rsi
  1f:	48 89 c7             	mov    %rax,%rdi
  22:	e8 00 00 00 00       	call   27 <RDMDiscovery::PrintUid(unsigned long)+0x27>
  27:	48 89 c2             	mov    %rax,%rdx
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 d6             	mov    %rdx,%rsi
  31:	48 89 c7             	mov    %rax,%rdi
  34:	e8 00 00 00 00       	call   39 <RDMDiscovery::PrintUid(unsigned long)+0x39>
  39:	90                   	nop
  3a:	c9                   	leave  
  3b:	c3                   	ret    

Disassembly of section .text._ZN12RDMDiscovery8PrintUidEPKh:

0000000000000000 <RDMDiscovery::PrintUid(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  18:	48 83 c0 05          	add    $0x5,%rax
  1c:	0f b6 00             	movzbl (%rax),%eax
  1f:	0f b6 f0             	movzbl %al,%esi
  22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  26:	48 83 c0 04          	add    $0x4,%rax
  2a:	0f b6 00             	movzbl (%rax),%eax
  2d:	44 0f b6 c0          	movzbl %al,%r8d
  31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  35:	48 83 c0 03          	add    $0x3,%rax
  39:	0f b6 00             	movzbl (%rax),%eax
  3c:	0f b6 f8             	movzbl %al,%edi
  3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  43:	48 83 c0 02          	add    $0x2,%rax
  47:	0f b6 00             	movzbl (%rax),%eax
  4a:	0f b6 c8             	movzbl %al,%ecx
  4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  51:	48 83 c0 01          	add    $0x1,%rax
  55:	0f b6 00             	movzbl (%rax),%eax
  58:	0f b6 d0             	movzbl %al,%edx
  5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5f:	0f b6 00             	movzbl (%rax),%eax
  62:	0f b6 c0             	movzbl %al,%eax
  65:	48 83 ec 08          	sub    $0x8,%rsp
  69:	56                   	push   %rsi
  6a:	45 89 c1             	mov    %r8d,%r9d
  6d:	41 89 f8             	mov    %edi,%r8d
  70:	89 c6                	mov    %eax,%esi
  72:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 79 <RDMDiscovery::PrintUid(unsigned char const*)+0x79>
  79:	48 89 c7             	mov    %rax,%rdi
  7c:	b8 00 00 00 00       	mov    $0x0,%eax
  81:	e8 00 00 00 00       	call   86 <RDMDiscovery::PrintUid(unsigned char const*)+0x86>
  86:	48 83 c4 10          	add    $0x10,%rsp
  8a:	90                   	nop
  8b:	c9                   	leave  
  8c:	c3                   	ret    

Disassembly of section .text._ZN12RDMDiscovery24IsValidDiscoveryResponseEPKhPh:

0000000000000000 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  25:	31 c0                	xor    %eax,%eax
  27:	66 c7 45 ee fa 05    	movw   $0x5fa,-0x12(%rbp)
  2d:	c6 45 ed 00          	movb   $0x0,-0x13(%rbp)
  31:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  35:	0f b6 00             	movzbl (%rax),%eax
  38:	3c fe                	cmp    $0xfe,%al
  3a:	0f 85 a3 01 00 00    	jne    1e3 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x1e3>
  40:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  44:	48 83 c0 08          	add    $0x8,%rax
  48:	0f b6 10             	movzbl (%rax),%edx
  4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4f:	48 83 c0 09          	add    $0x9,%rax
  53:	0f b6 00             	movzbl (%rax),%eax
  56:	21 c2                	and    %eax,%edx
  58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  5c:	88 10                	mov    %dl,(%rax)
  5e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  62:	48 83 c0 0a          	add    $0xa,%rax
  66:	0f b6 08             	movzbl (%rax),%ecx
  69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  6d:	48 83 c0 0b          	add    $0xb,%rax
  71:	0f b6 10             	movzbl (%rax),%edx
  74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  78:	48 83 c0 01          	add    $0x1,%rax
  7c:	21 ca                	and    %ecx,%edx
  7e:	88 10                	mov    %dl,(%rax)
  80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  84:	48 83 c0 0c          	add    $0xc,%rax
  88:	0f b6 08             	movzbl (%rax),%ecx
  8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  8f:	48 83 c0 0d          	add    $0xd,%rax
  93:	0f b6 10             	movzbl (%rax),%edx
  96:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  9a:	48 83 c0 02          	add    $0x2,%rax
  9e:	21 ca                	and    %ecx,%edx
  a0:	88 10                	mov    %dl,(%rax)
  a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  a6:	48 83 c0 0e          	add    $0xe,%rax
  aa:	0f b6 08             	movzbl (%rax),%ecx
  ad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  b1:	48 83 c0 0f          	add    $0xf,%rax
  b5:	0f b6 10             	movzbl (%rax),%edx
  b8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  bc:	48 83 c0 03          	add    $0x3,%rax
  c0:	21 ca                	and    %ecx,%edx
  c2:	88 10                	mov    %dl,(%rax)
  c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  c8:	48 83 c0 10          	add    $0x10,%rax
  cc:	0f b6 08             	movzbl (%rax),%ecx
  cf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  d3:	48 83 c0 11          	add    $0x11,%rax
  d7:	0f b6 10             	movzbl (%rax),%edx
  da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  de:	48 83 c0 04          	add    $0x4,%rax
  e2:	21 ca                	and    %ecx,%edx
  e4:	88 10                	mov    %dl,(%rax)
  e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  ea:	48 83 c0 12          	add    $0x12,%rax
  ee:	0f b6 08             	movzbl (%rax),%ecx
  f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  f5:	48 83 c0 13          	add    $0x13,%rax
  f9:	0f b6 10             	movzbl (%rax),%edx
  fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 100:	48 83 c0 05          	add    $0x5,%rax
 104:	21 ca                	and    %ecx,%edx
 106:	88 10                	mov    %dl,(%rax)
 108:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 10c:	48 83 c0 16          	add    $0x16,%rax
 110:	0f b6 10             	movzbl (%rax),%edx
 113:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 117:	48 83 c0 17          	add    $0x17,%rax
 11b:	0f b6 00             	movzbl (%rax),%eax
 11e:	21 d0                	and    %edx,%eax
 120:	88 45 f6             	mov    %al,-0xa(%rbp)
 123:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 127:	48 83 c0 14          	add    $0x14,%rax
 12b:	0f b6 10             	movzbl (%rax),%edx
 12e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 132:	48 83 c0 15          	add    $0x15,%rax
 136:	0f b6 00             	movzbl (%rax),%eax
 139:	21 d0                	and    %edx,%eax
 13b:	88 45 f7             	mov    %al,-0x9(%rbp)
 13e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 145:	eb 18                	jmp    15f <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x15f>
 147:	8b 55 f0             	mov    -0x10(%rbp),%edx
 14a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 14e:	48 01 d0             	add    %rdx,%rax
 151:	0f b6 00             	movzbl (%rax),%eax
 154:	0f b6 c0             	movzbl %al,%eax
 157:	66 01 45 ee          	add    %ax,-0x12(%rbp)
 15b:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
 15f:	83 7d f0 05          	cmpl   $0x5,-0x10(%rbp)
 163:	76 e2                	jbe    147 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x147>
 165:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
 169:	66 c1 e8 08          	shr    $0x8,%ax
 16d:	89 c2                	mov    %eax,%edx
 16f:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 173:	0f b6 c0             	movzbl %al,%eax
 176:	66 39 c2             	cmp    %ax,%dx
 179:	75 16                	jne    191 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x191>
 17b:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
 17f:	0f b6 d0             	movzbl %al,%edx
 182:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
 186:	0f b6 c0             	movzbl %al,%eax
 189:	39 c2                	cmp    %eax,%edx
 18b:	75 04                	jne    191 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x191>
 18d:	c6 45 ed 01          	movb   $0x1,-0x13(%rbp)
 191:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 195:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 199:	48 89 d6             	mov    %rdx,%rsi
 19c:	48 89 c7             	mov    %rax,%rdi
 19f:	e8 00 00 00 00       	call   1a4 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x1a4>
 1a4:	80 7d ed 00          	cmpb   $0x0,-0x13(%rbp)
 1a8:	74 07                	je     1b1 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x1b1>
 1aa:	be 59 00 00 00       	mov    $0x59,%esi
 1af:	eb 05                	jmp    1b6 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x1b6>
 1b1:	be 4e 00 00 00       	mov    $0x4e,%esi
 1b6:	0f b7 4d ee          	movzwl -0x12(%rbp),%ecx
 1ba:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
 1be:	0f b6 d0             	movzbl %al,%edx
 1c1:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 1c5:	0f b6 c0             	movzbl %al,%eax
 1c8:	41 89 f0             	mov    %esi,%r8d
 1cb:	89 c6                	mov    %eax,%esi
 1cd:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1d4 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x1d4>
 1d4:	48 89 c7             	mov    %rax,%rdi
 1d7:	b8 00 00 00 00       	mov    $0x0,%eax
 1dc:	e8 00 00 00 00       	call   1e1 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x1e1>
 1e1:	eb 25                	jmp    208 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x208>
 1e3:	be 00 01 00 00       	mov    $0x100,%esi
 1e8:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1ef <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x1ef>
 1ef:	48 89 c7             	mov    %rax,%rdi
 1f2:	b8 00 00 00 00       	mov    $0x0,%eax
 1f7:	e8 00 00 00 00       	call   1fc <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x1fc>
 1fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 200:	48 89 c7             	mov    %rax,%rdi
 203:	e8 00 00 00 00       	call   208 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x208>
 208:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
 20c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 210:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 217:	00 00 
 219:	74 05                	je     220 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x220>
 21b:	e8 00 00 00 00       	call   220 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x220>
 220:	c9                   	leave  
 221:	c3                   	ret    

Disassembly of section .text._ZN12RDMDiscovery9QuickFindEPKh:

0000000000000000 <RDMDiscovery::QuickFind(unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2a <RDMDiscovery::QuickFind(unsigned char const*)+0x2a>
  2a:	48 89 c7             	mov    %rax,%rdi
  2d:	b8 00 00 00 00       	mov    $0x0,%eax
  32:	e8 00 00 00 00       	call   37 <RDMDiscovery::QuickFind(unsigned char const*)+0x37>
  37:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  3f:	48 89 d6             	mov    %rdx,%rsi
  42:	48 89 c7             	mov    %rax,%rdi
  45:	e8 00 00 00 00       	call   4a <RDMDiscovery::QuickFind(unsigned char const*)+0x4a>
  4a:	bf 0a 00 00 00       	mov    $0xa,%edi
  4f:	e8 00 00 00 00       	call   54 <RDMDiscovery::QuickFind(unsigned char const*)+0x54>
  54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  58:	be 10 00 00 00       	mov    $0x10,%esi
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	e8 00 00 00 00       	call   65 <RDMDiscovery::QuickFind(unsigned char const*)+0x65>
  65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  69:	be 02 00 00 00       	mov    $0x2,%esi
  6e:	48 89 c7             	mov    %rax,%rdi
  71:	e8 00 00 00 00       	call   76 <RDMDiscovery::QuickFind(unsigned char const*)+0x76>
  76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  7a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  7e:	48 89 d6             	mov    %rdx,%rsi
  81:	48 89 c7             	mov    %rax,%rdi
  84:	e8 00 00 00 00       	call   89 <RDMDiscovery::QuickFind(unsigned char const*)+0x89>
  89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  8d:	ba 00 00 00 00       	mov    $0x0,%edx
  92:	be 00 00 00 00       	mov    $0x0,%esi
  97:	48 89 c7             	mov    %rax,%rdi
  9a:	e8 00 00 00 00       	call   9f <RDMDiscovery::QuickFind(unsigned char const*)+0x9f>
  9f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  a6:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  aa:	83 7d e4 0a          	cmpl   $0xa,-0x1c(%rbp)
  ae:	0f 94 c0             	sete   %al
  b1:	84 c0                	test   %al,%al
  b3:	0f 85 88 00 00 00    	jne    141 <RDMDiscovery::QuickFind(unsigned char const*)+0x141>
  b9:	e8 00 00 00 00       	call   be <RDMDiscovery::QuickFind(unsigned char const*)+0xbe>
  be:	48 89 c7             	mov    %rax,%rdi
  c1:	e8 00 00 00 00       	call   c6 <RDMDiscovery::QuickFind(unsigned char const*)+0xc6>
  c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ca:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  ce:	8b 8a 04 01 00 00    	mov    0x104(%rdx),%ecx
  d4:	ba a8 16 00 00       	mov    $0x16a8,%edx
  d9:	89 ce                	mov    %ecx,%esi
  db:	48 89 c7             	mov    %rax,%rdi
  de:	e8 00 00 00 00       	call   e3 <RDMDiscovery::QuickFind(unsigned char const*)+0xe3>
  e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  e7:	8b 80 04 01 00 00    	mov    0x104(%rax),%eax
  ed:	be f0 0a 00 00       	mov    $0xaf0,%esi
  f2:	89 c7                	mov    %eax,%edi
  f4:	e8 00 00 00 00       	call   f9 <RDMDiscovery::QuickFind(unsigned char const*)+0xf9>
  f9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  fd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 102:	74 30                	je     134 <RDMDiscovery::QuickFind(unsigned char const*)+0x134>
 104:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 108:	0f b6 40 14          	movzbl 0x14(%rax),%eax
 10c:	3c 11                	cmp    $0x11,%al
 10e:	75 23                	jne    133 <RDMDiscovery::QuickFind(unsigned char const*)+0x133>
 110:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 114:	0f b6 40 15          	movzbl 0x15(%rax),%eax
 118:	0f b6 c0             	movzbl %al,%eax
 11b:	c1 e0 08             	shl    $0x8,%eax
 11e:	89 c2                	mov    %eax,%edx
 120:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 124:	0f b6 40 16          	movzbl 0x16(%rax),%eax
 128:	0f b6 c0             	movzbl %al,%eax
 12b:	01 d0                	add    %edx,%eax
 12d:	66 83 f8 02          	cmp    $0x2,%ax
 131:	eb 01                	jmp    134 <RDMDiscovery::QuickFind(unsigned char const*)+0x134>
 133:	90                   	nop
 134:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 139:	0f 84 67 ff ff ff    	je     a6 <RDMDiscovery::QuickFind(unsigned char const*)+0xa6>
 13f:	eb 01                	jmp    142 <RDMDiscovery::QuickFind(unsigned char const*)+0x142>
 141:	90                   	nop
 142:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 147:	0f 84 8a 00 00 00    	je     1d7 <RDMDiscovery::QuickFind(unsigned char const*)+0x1d7>
 14d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 151:	48 89 c7             	mov    %rax,%rdi
 154:	e8 00 00 00 00       	call   159 <RDMDiscovery::QuickFind(unsigned char const*)+0x159>
 159:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 15d:	0f b6 40 14          	movzbl 0x14(%rax),%eax
 161:	3c 11                	cmp    $0x11,%al
 163:	75 3c                	jne    1a1 <RDMDiscovery::QuickFind(unsigned char const*)+0x1a1>
 165:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 169:	48 8d 48 09          	lea    0x9(%rax),%rcx
 16d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 171:	ba 06 00 00 00       	mov    $0x6,%edx
 176:	48 89 ce             	mov    %rcx,%rsi
 179:	48 89 c7             	mov    %rax,%rdi
 17c:	e8 00 00 00 00       	call   181 <RDMDiscovery::QuickFind(unsigned char const*)+0x181>
 181:	85 c0                	test   %eax,%eax
 183:	75 1c                	jne    1a1 <RDMDiscovery::QuickFind(unsigned char const*)+0x1a1>
 185:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 189:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
 190:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 194:	48 89 d6             	mov    %rdx,%rsi
 197:	48 89 c7             	mov    %rax,%rdi
 19a:	e8 00 00 00 00       	call   19f <RDMDiscovery::QuickFind(unsigned char const*)+0x19f>
 19f:	eb 36                	jmp    1d7 <RDMDiscovery::QuickFind(unsigned char const*)+0x1d7>
 1a1:	be 33 01 00 00       	mov    $0x133,%esi
 1a6:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1ad <RDMDiscovery::QuickFind(unsigned char const*)+0x1ad>
 1ad:	48 89 c7             	mov    %rax,%rdi
 1b0:	b8 00 00 00 00       	mov    $0x0,%eax
 1b5:	e8 00 00 00 00       	call   1ba <RDMDiscovery::QuickFind(unsigned char const*)+0x1ba>
 1ba:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 1be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1c2:	48 89 d6             	mov    %rdx,%rsi
 1c5:	48 89 c7             	mov    %rax,%rdi
 1c8:	e8 00 00 00 00       	call   1cd <RDMDiscovery::QuickFind(unsigned char const*)+0x1cd>
 1cd:	bf 0a 00 00 00       	mov    $0xa,%edi
 1d2:	e8 00 00 00 00       	call   1d7 <RDMDiscovery::QuickFind(unsigned char const*)+0x1d7>
 1d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1db:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1e2 <RDMDiscovery::QuickFind(unsigned char const*)+0x1e2>
 1e2:	48 89 d6             	mov    %rdx,%rsi
 1e5:	48 89 c7             	mov    %rax,%rdi
 1e8:	e8 00 00 00 00       	call   1ed <RDMDiscovery::QuickFind(unsigned char const*)+0x1ed>
 1ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 1f1:	be 10 00 00 00       	mov    $0x10,%esi
 1f6:	48 89 c7             	mov    %rax,%rdi
 1f9:	e8 00 00 00 00       	call   1fe <RDMDiscovery::QuickFind(unsigned char const*)+0x1fe>
 1fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 202:	be 01 00 00 00       	mov    $0x1,%esi
 207:	48 89 c7             	mov    %rax,%rdi
 20a:	e8 00 00 00 00       	call   20f <RDMDiscovery::QuickFind(unsigned char const*)+0x20f>
 20f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 213:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 217:	48 8d 8a 16 01 00 00 	lea    0x116(%rdx),%rcx
 21e:	ba 0c 00 00 00       	mov    $0xc,%edx
 223:	48 89 ce             	mov    %rcx,%rsi
 226:	48 89 c7             	mov    %rax,%rdi
 229:	e8 00 00 00 00       	call   22e <RDMDiscovery::QuickFind(unsigned char const*)+0x22e>
 22e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 235:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 239:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
 23d:	0f 94 c0             	sete   %al
 240:	84 c0                	test   %al,%al
 242:	75 4d                	jne    291 <RDMDiscovery::QuickFind(unsigned char const*)+0x291>
 244:	e8 00 00 00 00       	call   249 <RDMDiscovery::QuickFind(unsigned char const*)+0x249>
 249:	48 89 c7             	mov    %rax,%rdi
 24c:	e8 00 00 00 00       	call   251 <RDMDiscovery::QuickFind(unsigned char const*)+0x251>
 251:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 255:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 259:	8b 8a 04 01 00 00    	mov    0x104(%rdx),%ecx
 25f:	ba a8 16 00 00       	mov    $0x16a8,%edx
 264:	89 ce                	mov    %ecx,%esi
 266:	48 89 c7             	mov    %rax,%rdi
 269:	e8 00 00 00 00       	call   26e <RDMDiscovery::QuickFind(unsigned char const*)+0x26e>
 26e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 272:	8b 80 04 01 00 00    	mov    0x104(%rax),%eax
 278:	be f0 0a 00 00       	mov    $0xaf0,%esi
 27d:	89 c7                	mov    %eax,%edi
 27f:	e8 00 00 00 00       	call   284 <RDMDiscovery::QuickFind(unsigned char const*)+0x284>
 284:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 288:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 28d:	74 a6                	je     235 <RDMDiscovery::QuickFind(unsigned char const*)+0x235>
 28f:	eb 01                	jmp    292 <RDMDiscovery::QuickFind(unsigned char const*)+0x292>
 291:	90                   	nop
 292:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 297:	74 22                	je     2bb <RDMDiscovery::QuickFind(unsigned char const*)+0x2bb>
 299:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
 29d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 2a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 2a5:	48 89 ce             	mov    %rcx,%rsi
 2a8:	48 89 c7             	mov    %rax,%rdi
 2ab:	e8 00 00 00 00       	call   2b0 <RDMDiscovery::QuickFind(unsigned char const*)+0x2b0>
 2b0:	84 c0                	test   %al,%al
 2b2:	74 07                	je     2bb <RDMDiscovery::QuickFind(unsigned char const*)+0x2bb>
 2b4:	b8 01 00 00 00       	mov    $0x1,%eax
 2b9:	eb 05                	jmp    2c0 <RDMDiscovery::QuickFind(unsigned char const*)+0x2c0>
 2bb:	b8 00 00 00 00       	mov    $0x0,%eax
 2c0:	84 c0                	test   %al,%al
 2c2:	74 15                	je     2d9 <RDMDiscovery::QuickFind(unsigned char const*)+0x2d9>
 2c4:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
 2c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 2cc:	48 89 d6             	mov    %rdx,%rsi
 2cf:	48 89 c7             	mov    %rax,%rdi
 2d2:	e8 00 00 00 00       	call   2d7 <RDMDiscovery::QuickFind(unsigned char const*)+0x2d7>
 2d7:	eb 3c                	jmp    315 <RDMDiscovery::QuickFind(unsigned char const*)+0x315>
 2d9:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 2de:	74 25                	je     305 <RDMDiscovery::QuickFind(unsigned char const*)+0x305>
 2e0:	48 8d 55 f2          	lea    -0xe(%rbp),%rdx
 2e4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 2e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 2ec:	48 89 ce             	mov    %rcx,%rsi
 2ef:	48 89 c7             	mov    %rax,%rdi
 2f2:	e8 00 00 00 00       	call   2f7 <RDMDiscovery::QuickFind(unsigned char const*)+0x2f7>
 2f7:	83 f0 01             	xor    $0x1,%eax
 2fa:	84 c0                	test   %al,%al
 2fc:	74 07                	je     305 <RDMDiscovery::QuickFind(unsigned char const*)+0x305>
 2fe:	b8 01 00 00 00       	mov    $0x1,%eax
 303:	eb 05                	jmp    30a <RDMDiscovery::QuickFind(unsigned char const*)+0x30a>
 305:	b8 00 00 00 00       	mov    $0x0,%eax
 30a:	84 c0                	test   %al,%al
 30c:	74 07                	je     315 <RDMDiscovery::QuickFind(unsigned char const*)+0x315>
 30e:	b8 01 00 00 00       	mov    $0x1,%eax
 313:	eb 05                	jmp    31a <RDMDiscovery::QuickFind(unsigned char const*)+0x31a>
 315:	b8 00 00 00 00       	mov    $0x0,%eax
 31a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 31e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 325:	00 00 
 327:	74 05                	je     32e <RDMDiscovery::QuickFind(unsigned char const*)+0x32e>
 329:	e8 00 00 00 00       	call   32e <RDMDiscovery::QuickFind(unsigned char const*)+0x32e>
 32e:	c9                   	leave  
 32f:	c3                   	ret    
