In archive lib_linux/libconfigstore.a:

configstore.o:     file format elf64-x86-64


Disassembly of section .text._ZNK11StoreDevice10IsDetectedEv:

0000000000000000 <StoreDevice::IsDetected() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 00             	movzbl (%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStoreC2Ev:

0000000000000000 <ConfigStore::ConfigStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ConfigStore::ConfigStore()+0x1c>
  1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  20:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 27 <ConfigStore::ConfigStore()+0x27>
  27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2b:	48 89 c7             	mov    %rax,%rdi
  2e:	e8 00 00 00 00       	call   33 <ConfigStore::ConfigStore()+0x33>
  33:	84 c0                	test   %al,%al
  35:	74 12                	je     49 <ConfigStore::ConfigStore()+0x49>
  37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	e8 00 00 00 00       	call   43 <ConfigStore::ConfigStore()+0x43>
  43:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 49 <ConfigStore::ConfigStore()+0x49>
  49:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 50 <ConfigStore::ConfigStore()+0x50>
  50:	84 c0                	test   %al,%al
  52:	74 40                	je     94 <ConfigStore::ConfigStore()+0x94>
  54:	c7 05 00 00 00 00 20 	movl   $0x20,0x0(%rip)        # 5e <ConfigStore::ConfigStore()+0x5e>
  5b:	00 00 00 
  5e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  65:	eb 27                	jmp    8e <ConfigStore::ConfigStore()+0x8e>
  67:	8b 45 fc             	mov    -0x4(%rbp),%eax
  6a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  71:	00 
  72:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 79 <ConfigStore::ConfigStore()+0x79>
  79:	8b 14 02             	mov    (%rdx,%rax,1),%edx
  7c:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 82 <ConfigStore::ConfigStore()+0x82>
  82:	01 d0                	add    %edx,%eax
  84:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 8a <ConfigStore::ConfigStore()+0x8a>
  8a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  8e:	83 7d fc 1b          	cmpl   $0x1b,-0x4(%rbp)
  92:	76 d3                	jbe    67 <ConfigStore::ConfigStore()+0x67>
  94:	90                   	nop
  95:	c9                   	leave  
  96:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore4InitEv:

0000000000000000 <ConfigStore::Init()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	call   2b <ConfigStore::Init()+0x2b>
  2b:	89 45 e8             	mov    %eax,-0x18(%rbp)
  2e:	81 7d e8 00 10 00 00 	cmpl   $0x1000,-0x18(%rbp)
  35:	74 0a                	je     41 <ConfigStore::Init()+0x41>
  37:	b8 00 00 00 00       	mov    $0x0,%eax
  3c:	e9 50 02 00 00       	jmp    291 <ConfigStore::Init()+0x291>
  41:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  45:	48 89 c7             	mov    %rax,%rdi
  48:	e8 00 00 00 00       	call   4d <ConfigStore::Init()+0x4d>
  4d:	2b 45 e8             	sub    -0x18(%rbp),%eax
  50:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 56 <ConfigStore::Init()+0x56>
  56:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 5c <ConfigStore::Init()+0x5c>
  5c:	ba 00 00 00 00       	mov    $0x0,%edx
  61:	f7 75 e8             	divl   -0x18(%rbp)
  64:	89 d0                	mov    %edx,%eax
  66:	85 c0                	test   %eax,%eax
  68:	74 0a                	je     74 <ConfigStore::Init()+0x74>
  6a:	b8 00 00 00 00       	mov    $0x0,%eax
  6f:	e9 1d 02 00 00       	jmp    291 <ConfigStore::Init()+0x291>
  74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  78:	8b 35 00 00 00 00    	mov    0x0(%rip),%esi        # 7e <ConfigStore::Init()+0x7e>
  7e:	48 8d 55 d4          	lea    -0x2c(%rbp),%rdx
  82:	49 89 d0             	mov    %rdx,%r8
  85:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 8c <ConfigStore::Init()+0x8c>
  8c:	48 89 d1             	mov    %rdx,%rcx
  8f:	ba 00 10 00 00       	mov    $0x1000,%edx
  94:	48 89 c7             	mov    %rax,%rdi
  97:	e8 00 00 00 00       	call   9c <ConfigStore::Init()+0x9c>
  9c:	c6 45 d3 01          	movb   $0x1,-0x2d(%rbp)
  a0:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  a7:	eb 43                	jmp    ec <ConfigStore::Init()+0xec>
  a9:	8b 45 d8             	mov    -0x28(%rbp),%eax
  ac:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # b3 <ConfigStore::Init()+0xb3>
  b3:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx
  b7:	8b 45 d8             	mov    -0x28(%rbp),%eax
  ba:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # c1 <ConfigStore::Init()+0xc1>
  c1:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
  c5:	38 c2                	cmp    %al,%dl
  c7:	74 1f                	je     e8 <ConfigStore::Init()+0xe8>
  c9:	8b 45 d8             	mov    -0x28(%rbp),%eax
  cc:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # d3 <ConfigStore::Init()+0xd3>
  d3:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx
  d7:	8b 45 d8             	mov    -0x28(%rbp),%eax
  da:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # e1 <ConfigStore::Init()+0xe1>
  e1:	88 14 08             	mov    %dl,(%rax,%rcx,1)
  e4:	c6 45 d3 00          	movb   $0x0,-0x2d(%rbp)
  e8:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
  ec:	83 7d d8 03          	cmpl   $0x3,-0x28(%rbp)
  f0:	76 b7                	jbe    a9 <ConfigStore::Init()+0xa9>
  f2:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  f6:	83 f0 01             	xor    $0x1,%eax
  f9:	84 c0                	test   %al,%al
  fb:	0f 84 da 00 00 00    	je     1db <ConfigStore::Init()+0x1db>
 101:	c6 05 00 00 00 00 01 	movb   $0x1,0x0(%rip)        # 108 <ConfigStore::Init()+0x108>
 108:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
 10f:	e9 a9 00 00 00       	jmp    1bd <ConfigStore::Init()+0x1bd>
 114:	8b 55 dc             	mov    -0x24(%rbp),%edx
 117:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 11b:	89 d6                	mov    %edx,%esi
 11d:	48 89 c7             	mov    %rax,%rdi
 120:	e8 00 00 00 00       	call   125 <ConfigStore::Init()+0x125>
 125:	89 45 ec             	mov    %eax,-0x14(%rbp)
 128:	8b 45 ec             	mov    -0x14(%rbp),%eax
 12b:	89 45 e0             	mov    %eax,-0x20(%rbp)
 12e:	8b 45 e0             	mov    -0x20(%rbp),%eax
 131:	8d 50 01             	lea    0x1(%rax),%edx
 134:	89 55 e0             	mov    %edx,-0x20(%rbp)
 137:	89 c2                	mov    %eax,%edx
 139:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 140 <ConfigStore::Init()+0x140>
 140:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
 144:	8b 45 e0             	mov    -0x20(%rbp),%eax
 147:	8d 50 01             	lea    0x1(%rax),%edx
 14a:	89 55 e0             	mov    %edx,-0x20(%rbp)
 14d:	89 c2                	mov    %eax,%edx
 14f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 156 <ConfigStore::Init()+0x156>
 156:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
 15a:	8b 45 e0             	mov    -0x20(%rbp),%eax
 15d:	8d 50 01             	lea    0x1(%rax),%edx
 160:	89 55 e0             	mov    %edx,-0x20(%rbp)
 163:	89 c2                	mov    %eax,%edx
 165:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 16c <ConfigStore::Init()+0x16c>
 16c:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
 170:	8b 45 e0             	mov    -0x20(%rbp),%eax
 173:	8d 50 01             	lea    0x1(%rax),%edx
 176:	89 55 e0             	mov    %edx,-0x20(%rbp)
 179:	89 c2                	mov    %eax,%edx
 17b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 182 <ConfigStore::Init()+0x182>
 182:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
 186:	eb 12                	jmp    19a <ConfigStore::Init()+0x19a>
 188:	8b 45 e0             	mov    -0x20(%rbp),%eax
 18b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 192 <ConfigStore::Init()+0x192>
 192:	c6 04 10 ff          	movb   $0xff,(%rax,%rdx,1)
 196:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
 19a:	8b 45 dc             	mov    -0x24(%rbp),%eax
 19d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 1a4:	00 
 1a5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1ac <ConfigStore::Init()+0x1ac>
 1ac:	8b 14 02             	mov    (%rdx,%rax,1),%edx
 1af:	8b 45 ec             	mov    -0x14(%rbp),%eax
 1b2:	01 d0                	add    %edx,%eax
 1b4:	39 45 e0             	cmp    %eax,-0x20(%rbp)
 1b7:	72 cf                	jb     188 <ConfigStore::Init()+0x188>
 1b9:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
 1bd:	83 7d dc 1b          	cmpl   $0x1b,-0x24(%rbp)
 1c1:	0f 86 4d ff ff ff    	jbe    114 <ConfigStore::Init()+0x114>
 1c7:	c7 05 00 00 00 00 01 	movl   $0x1,0x0(%rip)        # 1d1 <ConfigStore::Init()+0x1d1>
 1ce:	00 00 00 
 1d1:	b8 01 00 00 00       	mov    $0x1,%eax
 1d6:	e9 b6 00 00 00       	jmp    291 <ConfigStore::Init()+0x291>
 1db:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 1e2:	e9 9b 00 00 00       	jmp    282 <ConfigStore::Init()+0x282>
 1e7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
 1ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1ee:	89 d6                	mov    %edx,%esi
 1f0:	48 89 c7             	mov    %rax,%rdi
 1f3:	e8 00 00 00 00       	call   1f8 <ConfigStore::Init()+0x1f8>
 1f8:	89 c2                	mov    %eax,%edx
 1fa:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 201 <ConfigStore::Init()+0x201>
 201:	48 01 d0             	add    %rdx,%rax
 204:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 208:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 20c:	0f b6 00             	movzbl (%rax),%eax
 20f:	3c ff                	cmp    $0xff,%al
 211:	75 6b                	jne    27e <ConfigStore::Init()+0x27e>
 213:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 217:	48 83 c0 01          	add    $0x1,%rax
 21b:	0f b6 00             	movzbl (%rax),%eax
 21e:	3c ff                	cmp    $0xff,%al
 220:	75 5c                	jne    27e <ConfigStore::Init()+0x27e>
 222:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 226:	48 83 c0 02          	add    $0x2,%rax
 22a:	0f b6 00             	movzbl (%rax),%eax
 22d:	3c ff                	cmp    $0xff,%al
 22f:	75 4d                	jne    27e <ConfigStore::Init()+0x27e>
 231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 235:	48 83 c0 03          	add    $0x3,%rax
 239:	0f b6 00             	movzbl (%rax),%eax
 23c:	3c ff                	cmp    $0xff,%al
 23e:	75 3e                	jne    27e <ConfigStore::Init()+0x27e>
 240:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 244:	48 8d 50 01          	lea    0x1(%rax),%rdx
 248:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
 24c:	c6 00 00             	movb   $0x0,(%rax)
 24f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 253:	48 8d 50 01          	lea    0x1(%rax),%rdx
 257:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
 25b:	c6 00 00             	movb   $0x0,(%rax)
 25e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 262:	48 8d 50 01          	lea    0x1(%rax),%rdx
 266:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
 26a:	c6 00 00             	movb   $0x0,(%rax)
 26d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 271:	c6 00 00             	movb   $0x0,(%rax)
 274:	c7 05 00 00 00 00 01 	movl   $0x1,0x0(%rip)        # 27e <ConfigStore::Init()+0x27e>
 27b:	00 00 00 
 27e:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 282:	83 7d e4 1b          	cmpl   $0x1b,-0x1c(%rbp)
 286:	0f 86 5b ff ff ff    	jbe    1e7 <ConfigStore::Init()+0x1e7>
 28c:	b8 01 00 00 00       	mov    $0x1,%eax
 291:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 295:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 29c:	00 00 
 29e:	74 05                	je     2a5 <ConfigStore::Init()+0x2a5>
 2a0:	e8 00 00 00 00       	call   2a5 <ConfigStore::Init()+0x2a5>
 2a5:	c9                   	leave  
 2a6:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore14GetStoreOffsetEN11configstore5StoreE:

0000000000000000 <ConfigStore::GetStoreOffset(configstore::Store)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   f:	c7 45 f8 20 00 00 00 	movl   $0x20,-0x8(%rbp)
  16:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  1d:	eb 1c                	jmp    3b <ConfigStore::GetStoreOffset(configstore::Store)+0x3b>
  1f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  22:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  29:	00 
  2a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 31 <ConfigStore::GetStoreOffset(configstore::Store)+0x31>
  31:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  34:	01 45 f8             	add    %eax,-0x8(%rbp)
  37:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  3b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  3e:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  41:	72 dc                	jb     1f <ConfigStore::GetStoreOffset(configstore::Store)+0x1f>
  43:	8b 45 f8             	mov    -0x8(%rbp),%eax
  46:	5d                   	pop    %rbp
  47:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore12ResetSetListEN11configstore5StoreE:

0000000000000000 <ConfigStore::ResetSetList(configstore::Store)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1a:	89 d6                	mov    %edx,%esi
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	e8 00 00 00 00       	call   24 <ConfigStore::ResetSetList(configstore::Store)+0x24>
  24:	89 c2                	mov    %eax,%edx
  26:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2d <ConfigStore::ResetSetList(configstore::Store)+0x2d>
  2d:	48 01 d0             	add    %rdx,%rax
  30:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  38:	48 8d 50 01          	lea    0x1(%rax),%rdx
  3c:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  40:	c6 00 00             	movb   $0x0,(%rax)
  43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  47:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4b:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  4f:	c6 00 00             	movb   $0x0,(%rax)
  52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  56:	48 8d 50 01          	lea    0x1(%rax),%rdx
  5a:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  5e:	c6 00 00             	movb   $0x0,(%rax)
  61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  65:	c6 00 00             	movb   $0x0,(%rax)
  68:	c7 05 00 00 00 00 01 	movl   $0x1,0x0(%rip)        # 72 <ConfigStore::ResetSetList(configstore::Store)+0x72>
  6f:	00 00 00 
  72:	90                   	nop
  73:	c9                   	leave  
  74:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEjPKvjjj:

0000000000000000 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 50          	sub    $0x50,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  13:	89 55 c0             	mov    %edx,-0x40(%rbp)
  16:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
  1a:	44 89 45 b4          	mov    %r8d,-0x4c(%rbp)
  1e:	44 89 4d b0          	mov    %r9d,-0x50(%rbp)
  22:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 29 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x29>
  29:	83 f0 01             	xor    $0x1,%eax
  2c:	84 c0                	test   %al,%al
  2e:	0f 85 fc 00 00 00    	jne    130 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x130>
  34:	c6 45 df 00          	movb   $0x0,-0x21(%rbp)
  38:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  3b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  3f:	89 d6                	mov    %edx,%esi
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x49>
  49:	8b 55 c0             	mov    -0x40(%rbp),%edx
  4c:	01 d0                	add    %edx,%eax
  4e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  51:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  55:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  59:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  5c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 63 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x63>
  63:	48 01 d0             	add    %rdx,%rax
  66:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  6a:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  71:	eb 31                	jmp    a4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0xa4>
  73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  77:	0f b6 10             	movzbl (%rax),%edx
  7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  7e:	0f b6 00             	movzbl (%rax),%eax
  81:	38 c2                	cmp    %al,%dl
  83:	74 11                	je     96 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x96>
  85:	c6 45 df 01          	movb   $0x1,-0x21(%rbp)
  89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  8d:	0f b6 10             	movzbl (%rax),%edx
  90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  94:	88 10                	mov    %dl,(%rax)
  96:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  9b:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  a0:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
  a4:	8b 45 e0             	mov    -0x20(%rbp),%eax
  a7:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
  aa:	72 c7                	jb     73 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x73>
  ac:	80 7d df 00          	cmpb   $0x0,-0x21(%rbp)
  b0:	74 32                	je     e4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0xe4>
  b2:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # b8 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0xb8>
  b8:	85 c0                	test   %eax,%eax
  ba:	74 0b                	je     c7 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0xc7>
  bc:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # c2 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0xc2>
  c2:	83 f8 06             	cmp    $0x6,%eax
  c5:	75 0a                	jne    d1 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0xd1>
  c7:	c7 05 00 00 00 00 01 	movl   $0x1,0x0(%rip)        # d1 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0xd1>
  ce:	00 00 00 
  d1:	e8 00 00 00 00       	call   d6 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0xd6>
  d6:	48 89 c7             	mov    %rax,%rdi
  d9:	e8 00 00 00 00       	call   de <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0xde>
  de:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # e4 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0xe4>
  e4:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
  e8:	74 47                	je     131 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x131>
  ea:	80 7d df 00          	cmpb   $0x0,-0x21(%rbp)
  ee:	74 41                	je     131 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x131>
  f0:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
  f4:	74 3b                	je     131 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x131>
  f6:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  fd:	89 d6                	mov    %edx,%esi
  ff:	48 89 c7             	mov    %rax,%rdi
 102:	e8 00 00 00 00       	call   107 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x107>
 107:	89 c2                	mov    %eax,%edx
 109:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 110 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x110>
 110:	48 01 c2             	add    %rax,%rdx
 113:	8b 45 10             	mov    0x10(%rbp),%eax
 116:	48 01 d0             	add    %rdx,%rax
 119:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 11d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 121:	8b 00                	mov    (%rax),%eax
 123:	0b 45 b0             	or     -0x50(%rbp),%eax
 126:	89 c2                	mov    %eax,%edx
 128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 12c:	89 10                	mov    %edx,(%rax)
 12e:	eb 01                	jmp    131 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x131>
 130:	90                   	nop
 131:	c9                   	leave  
 132:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore4CopyEN11configstore5StoreEPvjjb:

0000000000000000 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  13:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  17:	89 4d d0             	mov    %ecx,-0x30(%rbp)
  1a:	44 89 45 c4          	mov    %r8d,-0x3c(%rbp)
  1e:	44 89 c8             	mov    %r9d,%eax
  21:	88 45 c0             	mov    %al,-0x40(%rbp)
  24:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 2b <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x2b>
  2b:	83 f0 01             	xor    $0x1,%eax
  2e:	84 c0                	test   %al,%al
  30:	0f 85 c8 00 00 00    	jne    fe <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0xfe>
  36:	80 7d c0 00          	cmpb   $0x0,-0x40(%rbp)
  3a:	74 5f                	je     9b <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x9b>
  3c:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43:	89 d6                	mov    %edx,%esi
  45:	48 89 c7             	mov    %rax,%rdi
  48:	e8 00 00 00 00       	call   4d <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4d>
  4d:	89 c2                	mov    %eax,%edx
  4f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 56 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x56>
  56:	48 01 c2             	add    %rax,%rdx
  59:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  5c:	48 01 d0             	add    %rdx,%rax
  5f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  67:	8b 00                	mov    (%rax),%eax
  69:	85 c0                	test   %eax,%eax
  6b:	75 2e                	jne    9b <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x9b>
  6d:	8b 7d d0             	mov    -0x30(%rbp),%edi
  70:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  74:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  77:	8b 75 d4             	mov    -0x2c(%rbp),%esi
  7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  7e:	48 83 ec 08          	sub    $0x8,%rsp
  82:	6a 00                	push   $0x0
  84:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  8a:	41 89 f8             	mov    %edi,%r8d
  8d:	48 89 c7             	mov    %rax,%rdi
  90:	e8 00 00 00 00       	call   95 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x95>
  95:	48 83 c4 10          	add    $0x10,%rsp
  99:	eb 64                	jmp    ff <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0xff>
  9b:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a2:	89 d6                	mov    %edx,%esi
  a4:	48 89 c7             	mov    %rax,%rdi
  a7:	e8 00 00 00 00       	call   ac <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0xac>
  ac:	89 c2                	mov    %eax,%edx
  ae:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b5 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0xb5>
  b5:	48 01 c2             	add    %rax,%rdx
  b8:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  bb:	48 01 d0             	add    %rdx,%rax
  be:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  c6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  ca:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  d1:	eb 21                	jmp    f4 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0xf4>
  d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  d7:	48 8d 42 01          	lea    0x1(%rdx),%rax
  db:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  e3:	48 8d 48 01          	lea    0x1(%rax),%rcx
  e7:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  eb:	0f b6 12             	movzbl (%rdx),%edx
  ee:	88 10                	mov    %dl,(%rax)
  f0:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  f4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  f7:	3b 45 d0             	cmp    -0x30(%rbp),%eax
  fa:	72 d7                	jb     d3 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0xd3>
  fc:	eb 01                	jmp    ff <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0xff>
  fe:	90                   	nop
  ff:	c9                   	leave  
 100:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6CopyToEN11configstore5StoreEPvRj:

0000000000000000 <ConfigStore::CopyTo(configstore::Store, void*, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  13:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  17:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  1b:	83 7d d4 1b          	cmpl   $0x1b,-0x2c(%rbp)
  1f:	7e 0c                	jle    2d <ConfigStore::CopyTo(configstore::Store, void*, unsigned int&)+0x2d>
  21:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  25:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  2b:	eb 7e                	jmp    ab <ConfigStore::CopyTo(configstore::Store, void*, unsigned int&)+0xab>
  2d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  30:	89 c0                	mov    %eax,%eax
  32:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  39:	00 
  3a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 41 <ConfigStore::CopyTo(configstore::Store, void*, unsigned int&)+0x41>
  41:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  44:	0f b7 d0             	movzwl %ax,%edx
  47:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4b:	89 10                	mov    %edx,(%rax)
  4d:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  54:	89 d6                	mov    %edx,%esi
  56:	48 89 c7             	mov    %rax,%rdi
  59:	e8 00 00 00 00       	call   5e <ConfigStore::CopyTo(configstore::Store, void*, unsigned int&)+0x5e>
  5e:	89 c2                	mov    %eax,%edx
  60:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 67 <ConfigStore::CopyTo(configstore::Store, void*, unsigned int&)+0x67>
  67:	48 01 d0             	add    %rdx,%rax
  6a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  72:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  76:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  7d:	eb 21                	jmp    a0 <ConfigStore::CopyTo(configstore::Store, void*, unsigned int&)+0xa0>
  7f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  83:	48 8d 42 01          	lea    0x1(%rdx),%rax
  87:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8f:	48 8d 48 01          	lea    0x1(%rax),%rcx
  93:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  97:	0f b6 12             	movzbl (%rdx),%edx
  9a:	88 10                	mov    %dl,(%rax)
  9c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  a0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  a4:	8b 00                	mov    (%rax),%eax
  a6:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  a9:	72 d4                	jb     7f <ConfigStore::CopyTo(configstore::Store, void*, unsigned int&)+0x7f>
  ab:	c9                   	leave  
  ac:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore5FlashEv:

0000000000000000 <ConfigStore::Flash()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 25 <ConfigStore::Flash()+0x25>
  25:	85 c0                	test   %eax,%eax
  27:	0f 94 c0             	sete   %al
  2a:	0f b6 c0             	movzbl %al,%eax
  2d:	48 85 c0             	test   %rax,%rax
  30:	74 0a                	je     3c <ConfigStore::Flash()+0x3c>
  32:	b8 00 00 00 00       	mov    $0x0,%eax
  37:	e9 5e 01 00 00       	jmp    19a <ConfigStore::Flash()+0x19a>
  3c:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 42 <ConfigStore::Flash()+0x42>
  42:	89 c0                	mov    %eax,%eax
  44:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4b:	00 
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <ConfigStore::Flash()+0x53>
  53:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  56:	48 98                	cltq   
  58:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5f <ConfigStore::Flash()+0x5f>
  5f:	48 01 d0             	add    %rdx,%rax
  62:	3e ff e0             	notrack jmp *%rax
  65:	e8 00 00 00 00       	call   6a <ConfigStore::Flash()+0x6a>
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	e8 00 00 00 00       	call   72 <ConfigStore::Flash()+0x72>
  72:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 78 <ConfigStore::Flash()+0x78>
  78:	c7 05 00 00 00 00 02 	movl   $0x2,0x0(%rip)        # 82 <ConfigStore::Flash()+0x82>
  7f:	00 00 00 
  82:	b8 01 00 00 00       	mov    $0x1,%eax
  87:	e9 0e 01 00 00       	jmp    19a <ConfigStore::Flash()+0x19a>
  8c:	e8 00 00 00 00       	call   91 <ConfigStore::Flash()+0x91>
  91:	48 89 c7             	mov    %rax,%rdi
  94:	e8 00 00 00 00       	call   99 <ConfigStore::Flash()+0x99>
  99:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 9f <ConfigStore::Flash()+0x9f>
  9f:	29 d0                	sub    %edx,%eax
  a1:	83 f8 63             	cmp    $0x63,%eax
  a4:	0f 96 c0             	setbe  %al
  a7:	84 c0                	test   %al,%al
  a9:	74 0a                	je     b5 <ConfigStore::Flash()+0xb5>
  ab:	b8 01 00 00 00       	mov    $0x1,%eax
  b0:	e9 e5 00 00 00       	jmp    19a <ConfigStore::Flash()+0x19a>
  b5:	c7 05 00 00 00 00 03 	movl   $0x3,0x0(%rip)        # bf <ConfigStore::Flash()+0xbf>
  bc:	00 00 00 
  bf:	b8 01 00 00 00       	mov    $0x1,%eax
  c4:	e9 d1 00 00 00       	jmp    19a <ConfigStore::Flash()+0x19a>
  c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  cd:	8b 35 00 00 00 00    	mov    0x0(%rip),%esi        # d3 <ConfigStore::Flash()+0xd3>
  d3:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  d7:	48 89 d1             	mov    %rdx,%rcx
  da:	ba 00 10 00 00       	mov    $0x1000,%edx
  df:	48 89 c7             	mov    %rax,%rdi
  e2:	e8 00 00 00 00       	call   e7 <ConfigStore::Flash()+0xe7>
  e7:	84 c0                	test   %al,%al
  e9:	74 1d                	je     108 <ConfigStore::Flash()+0x108>
  eb:	e8 00 00 00 00       	call   f0 <ConfigStore::Flash()+0xf0>
  f0:	48 89 c7             	mov    %rax,%rdi
  f3:	e8 00 00 00 00       	call   f8 <ConfigStore::Flash()+0xf8>
  f8:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # fe <ConfigStore::Flash()+0xfe>
  fe:	c7 05 00 00 00 00 05 	movl   $0x5,0x0(%rip)        # 108 <ConfigStore::Flash()+0x108>
 105:	00 00 00 
 108:	b8 01 00 00 00       	mov    $0x1,%eax
 10d:	e9 88 00 00 00       	jmp    19a <ConfigStore::Flash()+0x19a>
 112:	e8 00 00 00 00       	call   117 <ConfigStore::Flash()+0x117>
 117:	48 89 c7             	mov    %rax,%rdi
 11a:	e8 00 00 00 00       	call   11f <ConfigStore::Flash()+0x11f>
 11f:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 125 <ConfigStore::Flash()+0x125>
 125:	29 d0                	sub    %edx,%eax
 127:	83 f8 63             	cmp    $0x63,%eax
 12a:	0f 96 c0             	setbe  %al
 12d:	84 c0                	test   %al,%al
 12f:	74 07                	je     138 <ConfigStore::Flash()+0x138>
 131:	b8 01 00 00 00       	mov    $0x1,%eax
 136:	eb 62                	jmp    19a <ConfigStore::Flash()+0x19a>
 138:	c7 05 00 00 00 00 04 	movl   $0x4,0x0(%rip)        # 142 <ConfigStore::Flash()+0x142>
 13f:	00 00 00 
 142:	b8 01 00 00 00       	mov    $0x1,%eax
 147:	eb 51                	jmp    19a <ConfigStore::Flash()+0x19a>
 149:	c7 05 00 00 00 00 06 	movl   $0x6,0x0(%rip)        # 153 <ConfigStore::Flash()+0x153>
 150:	00 00 00 
 153:	b8 01 00 00 00       	mov    $0x1,%eax
 158:	eb 40                	jmp    19a <ConfigStore::Flash()+0x19a>
 15a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 15e:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 164 <ConfigStore::Flash()+0x164>
 164:	8b 35 00 00 00 00    	mov    0x0(%rip),%esi        # 16a <ConfigStore::Flash()+0x16a>
 16a:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
 16e:	49 89 c8             	mov    %rcx,%r8
 171:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 178 <ConfigStore::Flash()+0x178>
 178:	48 89 c7             	mov    %rax,%rdi
 17b:	e8 00 00 00 00       	call   180 <ConfigStore::Flash()+0x180>
 180:	84 c0                	test   %al,%al
 182:	74 11                	je     195 <ConfigStore::Flash()+0x195>
 184:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # 18e <ConfigStore::Flash()+0x18e>
 18b:	00 00 00 
 18e:	b8 00 00 00 00       	mov    $0x0,%eax
 193:	eb 05                	jmp    19a <ConfigStore::Flash()+0x19a>
 195:	b8 01 00 00 00       	mov    $0x1,%eax
 19a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 19e:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 1a5:	00 00 
 1a7:	74 05                	je     1ae <ConfigStore::Flash()+0x1ae>
 1a9:	e8 00 00 00 00       	call   1ae <ConfigStore::Flash()+0x1ae>
 1ae:	c9                   	leave  
 1af:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore4DumpEv:

0000000000000000 <ConfigStore::Dump()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

storedisplayudf.o:     file format elf64-x86-64


Disassembly of section .text._ZN21DisplayUdfParamsStoreD2Ev:

0000000000000000 <DisplayUdfParamsStore::~DisplayUdfParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DisplayUdfParamsStore::~DisplayUdfParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN21DisplayUdfParamsStoreD0Ev:

0000000000000000 <DisplayUdfParamsStore::~DisplayUdfParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <DisplayUdfParamsStore::~DisplayUdfParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <DisplayUdfParamsStore::~DisplayUdfParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN15StoreDisplayUdf6UpdateEPKN16displayudfparams6ParamsE:

0000000000000000 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 22 00 00 00       	mov    $0x22,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 0f 00 00 00       	mov    $0xf,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN15StoreDisplayUdf4CopyEPN16displayudfparams6ParamsE:

0000000000000000 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 22 00 00 00       	mov    $0x22,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 0f 00 00 00       	mov    $0xf,%esi
  39:	e8 00 00 00 00       	call   3e <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN21DisplayUdfParamsStoreC2Ev:

0000000000000000 <DisplayUdfParamsStore::DisplayUdfParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DisplayUdfParamsStore::DisplayUdfParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN15StoreDisplayUdfC2Ev:

0000000000000000 <StoreDisplayUdf::StoreDisplayUdf()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreDisplayUdf::StoreDisplayUdf()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreDisplayUdf::StoreDisplayUdf()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreDisplayUdf::StoreDisplayUdf()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN15StoreDisplayUdfD2Ev:

0000000000000000 <StoreDisplayUdf::~StoreDisplayUdf()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreDisplayUdf::~StoreDisplayUdf()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreDisplayUdf::~StoreDisplayUdf()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN15StoreDisplayUdfD0Ev:

0000000000000000 <StoreDisplayUdf::~StoreDisplayUdf()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreDisplayUdf::~StoreDisplayUdf()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreDisplayUdf::~StoreDisplayUdf()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storedmxsend.o:     file format elf64-x86-64


Disassembly of section .text._ZN14DmxParamsStoreD2Ev:

0000000000000000 <DmxParamsStore::~DmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DmxParamsStore::~DmxParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN14DmxParamsStoreD0Ev:

0000000000000000 <DmxParamsStore::~DmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <DmxParamsStore::~DmxParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <DmxParamsStore::~DmxParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN12StoreDmxSend6UpdateEPK10TDmxParams:

0000000000000000 <StoreDmxSend::Update(TDmxParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreDmxSend::Update(TDmxParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 0a 00 00 00       	mov    $0xa,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 02 00 00 00       	mov    $0x2,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreDmxSend::Update(TDmxParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN12StoreDmxSend4CopyEP10TDmxParams:

0000000000000000 <StoreDmxSend::Copy(TDmxParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreDmxSend::Copy(TDmxParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 0a 00 00 00       	mov    $0xa,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 02 00 00 00       	mov    $0x2,%esi
  39:	e8 00 00 00 00       	call   3e <StoreDmxSend::Copy(TDmxParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN14DmxParamsStoreC2Ev:

0000000000000000 <DmxParamsStore::DmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DmxParamsStore::DmxParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN12StoreDmxSendC2Ev:

0000000000000000 <StoreDmxSend::StoreDmxSend()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreDmxSend::StoreDmxSend()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreDmxSend::StoreDmxSend()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreDmxSend::StoreDmxSend()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN12StoreDmxSendD2Ev:

0000000000000000 <StoreDmxSend::~StoreDmxSend()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreDmxSend::~StoreDmxSend()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreDmxSend::~StoreDmxSend()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN12StoreDmxSendD0Ev:

0000000000000000 <StoreDmxSend::~StoreDmxSend()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreDmxSend::~StoreDmxSend()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreDmxSend::~StoreDmxSend()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storedmxserial.o:     file format elf64-x86-64


Disassembly of section .text._ZN20DmxSerialParamsStoreD2Ev:

0000000000000000 <DmxSerialParamsStore::~DmxSerialParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DmxSerialParamsStore::~DmxSerialParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN20DmxSerialParamsStoreD0Ev:

0000000000000000 <DmxSerialParamsStore::~DmxSerialParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <DmxSerialParamsStore::~DmxSerialParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <DmxSerialParamsStore::~DmxSerialParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN14StoreDmxSerial6UpdateEPK16TDmxSerialParams:

0000000000000000 <StoreDmxSerial::Update(TDmxSerialParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreDmxSerial::Update(TDmxSerialParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 13 00 00 00       	mov    $0x13,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 16 00 00 00       	mov    $0x16,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreDmxSerial::Update(TDmxSerialParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN14StoreDmxSerial4CopyEP16TDmxSerialParams:

0000000000000000 <StoreDmxSerial::Copy(TDmxSerialParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreDmxSerial::Copy(TDmxSerialParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 13 00 00 00       	mov    $0x13,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 16 00 00 00       	mov    $0x16,%esi
  39:	e8 00 00 00 00       	call   3e <StoreDmxSerial::Copy(TDmxSerialParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN20DmxSerialParamsStoreC2Ev:

0000000000000000 <DmxSerialParamsStore::DmxSerialParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DmxSerialParamsStore::DmxSerialParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN14StoreDmxSerialC2Ev:

0000000000000000 <StoreDmxSerial::StoreDmxSerial()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreDmxSerial::StoreDmxSerial()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreDmxSerial::StoreDmxSerial()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreDmxSerial::StoreDmxSerial()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN14StoreDmxSerialD2Ev:

0000000000000000 <StoreDmxSerial::~StoreDmxSerial()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreDmxSerial::~StoreDmxSerial()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreDmxSerial::~StoreDmxSerial()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN14StoreDmxSerialD0Ev:

0000000000000000 <StoreDmxSerial::~StoreDmxSerial()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreDmxSerial::~StoreDmxSerial()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreDmxSerial::~StoreDmxSerial()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storemidi.o:     file format elf64-x86-64


Disassembly of section .text._ZN15MidiParamsStoreD2Ev:

0000000000000000 <MidiParamsStore::~MidiParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <MidiParamsStore::~MidiParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN15MidiParamsStoreD0Ev:

0000000000000000 <MidiParamsStore::~MidiParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <MidiParamsStore::~MidiParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <MidiParamsStore::~MidiParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN9StoreMidi6UpdateEPK11TMidiParams:

0000000000000000 <StoreMidi::Update(TMidiParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreMidi::Update(TMidiParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 08 00 00 00       	mov    $0x8,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 06 00 00 00       	mov    $0x6,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreMidi::Update(TMidiParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN9StoreMidi4CopyEP11TMidiParams:

0000000000000000 <StoreMidi::Copy(TMidiParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreMidi::Copy(TMidiParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 08 00 00 00       	mov    $0x8,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 06 00 00 00       	mov    $0x6,%esi
  39:	e8 00 00 00 00       	call   3e <StoreMidi::Copy(TMidiParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN15MidiParamsStoreC2Ev:

0000000000000000 <MidiParamsStore::MidiParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <MidiParamsStore::MidiParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN9StoreMidiC2Ev:

0000000000000000 <StoreMidi::StoreMidi()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreMidi::StoreMidi()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreMidi::StoreMidi()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreMidi::StoreMidi()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN9StoreMidiD2Ev:

0000000000000000 <StoreMidi::~StoreMidi()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreMidi::~StoreMidi()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreMidi::~StoreMidi()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN9StoreMidiD0Ev:

0000000000000000 <StoreMidi::~StoreMidi()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreMidi::~StoreMidi()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreMidi::~StoreMidi()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storemonitor.o:     file format elf64-x86-64


Disassembly of section .text._ZN15DmxMonitorStoreD2Ev:

0000000000000000 <DmxMonitorStore::~DmxMonitorStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DmxMonitorStore::~DmxMonitorStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN15DmxMonitorStoreD0Ev:

0000000000000000 <DmxMonitorStore::~DmxMonitorStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <DmxMonitorStore::~DmxMonitorStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <DmxMonitorStore::~DmxMonitorStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN21DMXMonitorParamsStoreD2Ev:

0000000000000000 <DMXMonitorParamsStore::~DMXMonitorParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DMXMonitorParamsStore::~DMXMonitorParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN21DMXMonitorParamsStoreD0Ev:

0000000000000000 <DMXMonitorParamsStore::~DMXMonitorParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <DMXMonitorParamsStore::~DMXMonitorParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <DMXMonitorParamsStore::~DMXMonitorParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN12StoreMonitor6UpdateEPK17TDMXMonitorParams:

0000000000000000 <StoreMonitor::Update(TDMXMonitorParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreMonitor::Update(TDMXMonitorParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 09 00 00 00       	mov    $0x9,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 11 00 00 00       	mov    $0x11,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreMonitor::Update(TDMXMonitorParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN12StoreMonitor4CopyEP17TDMXMonitorParams:

0000000000000000 <StoreMonitor::Copy(TDMXMonitorParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreMonitor::Copy(TDMXMonitorParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 09 00 00 00       	mov    $0x9,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 11 00 00 00       	mov    $0x11,%esi
  39:	e8 00 00 00 00       	call   3e <StoreMonitor::Copy(TDMXMonitorParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN12StoreMonitor19SaveDmxStartAddressEt:

0000000000000000 <StoreMonitor::SaveDmxStartAddress(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	e8 00 00 00 00       	call   1b <StoreMonitor::SaveDmxStartAddress(unsigned short)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  22:	48 83 ec 08          	sub    $0x8,%rsp
  26:	6a 00                	push   $0x0
  28:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  2e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  34:	48 89 c1             	mov    %rax,%rcx
  37:	ba 04 00 00 00       	mov    $0x4,%edx
  3c:	be 11 00 00 00       	mov    $0x11,%esi
  41:	e8 00 00 00 00       	call   46 <StoreMonitor::SaveDmxStartAddress(unsigned short)+0x46>
  46:	48 83 c4 10          	add    $0x10,%rsp
  4a:	90                   	nop
  4b:	c9                   	leave  
  4c:	c3                   	ret    

000000000000004d <non-virtual thunk to StoreMonitor::SaveDmxStartAddress(unsigned short)>:
  4d:	f3 0f 1e fa          	endbr64 
  51:	48 83 ef 08          	sub    $0x8,%rdi
  55:	eb a9                	jmp    0 <StoreMonitor::SaveDmxStartAddress(unsigned short)>

Disassembly of section .text._ZN21DMXMonitorParamsStoreC2Ev:

0000000000000000 <DMXMonitorParamsStore::DMXMonitorParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DMXMonitorParamsStore::DMXMonitorParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN15DmxMonitorStoreC2Ev:

0000000000000000 <DmxMonitorStore::DmxMonitorStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DmxMonitorStore::DmxMonitorStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN12StoreMonitorC2Ev:

0000000000000000 <StoreMonitor::StoreMonitor()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreMonitor::StoreMonitor()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 83 c0 08          	add    $0x8,%rax
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <StoreMonitor::StoreMonitor()+0x2c>
  2c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 33 <StoreMonitor::StoreMonitor()+0x33>
  33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  37:	48 89 10             	mov    %rdx,(%rax)
  3a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 41 <StoreMonitor::StoreMonitor()+0x41>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	48 89 50 08          	mov    %rdx,0x8(%rax)
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 54 <StoreMonitor::StoreMonitor()+0x54>
  54:	90                   	nop
  55:	c9                   	leave  
  56:	c3                   	ret    

Disassembly of section .text._ZN12StoreMonitorD2Ev:

0000000000000000 <StoreMonitor::~StoreMonitor()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreMonitor::~StoreMonitor()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 25 <StoreMonitor::~StoreMonitor()+0x25>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	48 89 50 08          	mov    %rdx,0x8(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 83 c0 08          	add    $0x8,%rax
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <StoreMonitor::~StoreMonitor()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <StoreMonitor::~StoreMonitor()+0x49>
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StoreMonitor::~StoreMonitor()>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StoreMonitor::~StoreMonitor()>

Disassembly of section .text._ZN12StoreMonitorD0Ev:

0000000000000000 <StoreMonitor::~StoreMonitor()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreMonitor::~StoreMonitor()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreMonitor::~StoreMonitor()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

000000000000002a <non-virtual thunk to StoreMonitor::~StoreMonitor()>:
  2a:	f3 0f 1e fa          	endbr64 
  2e:	48 83 ef 08          	sub    $0x8,%rdi
  32:	eb cc                	jmp    0 <StoreMonitor::~StoreMonitor()>

storenetwork.o:     file format elf64-x86-64


Disassembly of section .text._ZN12NetworkStoreD2Ev:

0000000000000000 <NetworkStore::~NetworkStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <NetworkStore::~NetworkStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN12NetworkStoreD0Ev:

0000000000000000 <NetworkStore::~NetworkStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <NetworkStore::~NetworkStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <NetworkStore::~NetworkStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN18NetworkParamsStoreD2Ev:

0000000000000000 <NetworkParamsStore::~NetworkParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <NetworkParamsStore::~NetworkParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN18NetworkParamsStoreD0Ev:

0000000000000000 <NetworkParamsStore::~NetworkParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <NetworkParamsStore::~NetworkParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <NetworkParamsStore::~NetworkParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN12StoreNetwork6UpdateEPKN13networkparams6ParamsE:

0000000000000000 <StoreNetwork::Update(networkparams::Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreNetwork::Update(networkparams::Params const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 5e 00 00 00       	mov    $0x5e,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 00 00 00 00       	mov    $0x0,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreNetwork::Update(networkparams::Params const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN12StoreNetwork4CopyEPN13networkparams6ParamsE:

0000000000000000 <StoreNetwork::Copy(networkparams::Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreNetwork::Copy(networkparams::Params*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 5e 00 00 00       	mov    $0x5e,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 00 00 00 00       	mov    $0x0,%esi
  39:	e8 00 00 00 00       	call   3e <StoreNetwork::Copy(networkparams::Params*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN12StoreNetwork6SaveIpEj:

0000000000000000 <StoreNetwork::SaveIp(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	e8 00 00 00 00       	call   18 <StoreNetwork::SaveIp(unsigned int)+0x18>
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  1f:	48 83 ec 08          	sub    $0x8,%rsp
  23:	6a 00                	push   $0x0
  25:	41 b9 02 00 00 00    	mov    $0x2,%r9d
  2b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  31:	48 89 c1             	mov    %rax,%rcx
  34:	ba 04 00 00 00       	mov    $0x4,%edx
  39:	be 00 00 00 00       	mov    $0x0,%esi
  3e:	e8 00 00 00 00       	call   43 <StoreNetwork::SaveIp(unsigned int)+0x43>
  43:	48 83 c4 10          	add    $0x10,%rsp
  47:	90                   	nop
  48:	c9                   	leave  
  49:	c3                   	ret    

000000000000004a <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
  4a:	f3 0f 1e fa          	endbr64 
  4e:	48 83 ef 08          	sub    $0x8,%rdi
  52:	eb ac                	jmp    0 <StoreNetwork::SaveIp(unsigned int)>

Disassembly of section .text._ZN12StoreNetwork11SaveNetMaskEj:

0000000000000000 <StoreNetwork::SaveNetMask(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	e8 00 00 00 00       	call   18 <StoreNetwork::SaveNetMask(unsigned int)+0x18>
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  1f:	48 83 ec 08          	sub    $0x8,%rsp
  23:	6a 00                	push   $0x0
  25:	41 b9 04 00 00 00    	mov    $0x4,%r9d
  2b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  31:	48 89 c1             	mov    %rax,%rcx
  34:	ba 08 00 00 00       	mov    $0x8,%edx
  39:	be 00 00 00 00       	mov    $0x0,%esi
  3e:	e8 00 00 00 00       	call   43 <StoreNetwork::SaveNetMask(unsigned int)+0x43>
  43:	48 83 c4 10          	add    $0x10,%rsp
  47:	90                   	nop
  48:	c9                   	leave  
  49:	c3                   	ret    

000000000000004a <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
  4a:	f3 0f 1e fa          	endbr64 
  4e:	48 83 ef 08          	sub    $0x8,%rdi
  52:	eb ac                	jmp    0 <StoreNetwork::SaveNetMask(unsigned int)>

Disassembly of section .text._ZN12StoreNetwork13SaveGatewayIpEj:

0000000000000000 <StoreNetwork::SaveGatewayIp(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	e8 00 00 00 00       	call   18 <StoreNetwork::SaveGatewayIp(unsigned int)+0x18>
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  1f:	48 83 ec 08          	sub    $0x8,%rsp
  23:	6a 00                	push   $0x0
  25:	41 b9 08 00 00 00    	mov    $0x8,%r9d
  2b:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  31:	48 89 c1             	mov    %rax,%rcx
  34:	ba 0c 00 00 00       	mov    $0xc,%edx
  39:	be 00 00 00 00       	mov    $0x0,%esi
  3e:	e8 00 00 00 00       	call   43 <StoreNetwork::SaveGatewayIp(unsigned int)+0x43>
  43:	48 83 c4 10          	add    $0x10,%rsp
  47:	90                   	nop
  48:	c9                   	leave  
  49:	c3                   	ret    

000000000000004a <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
  4a:	f3 0f 1e fa          	endbr64 
  4e:	48 83 ef 08          	sub    $0x8,%rdi
  52:	eb ac                	jmp    0 <StoreNetwork::SaveGatewayIp(unsigned int)>

Disassembly of section .text._ZN12StoreNetwork12SaveHostNameEPKcj:

0000000000000000 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 55 dc             	mov    %edx,-0x24(%rbp)
  17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1e:	00 00 
  20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  24:	31 c0                	xor    %eax,%eax
  26:	c7 45 f4 40 00 00 00 	movl   $0x40,-0xc(%rbp)
  2d:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  31:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
  35:	48 89 d6             	mov    %rdx,%rsi
  38:	48 89 c7             	mov    %rax,%rdi
  3b:	e8 00 00 00 00       	call   40 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x40>
  40:	8b 00                	mov    (%rax),%eax
  42:	89 45 dc             	mov    %eax,-0x24(%rbp)
  45:	e8 00 00 00 00       	call   4a <StoreNetwork::SaveHostName(char const*, unsigned int)+0x4a>
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	8b 55 dc             	mov    -0x24(%rbp),%edx
  50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  54:	48 83 ec 08          	sub    $0x8,%rsp
  58:	6a 00                	push   $0x0
  5a:	41 b9 20 00 00 00    	mov    $0x20,%r9d
  60:	41 89 d0             	mov    %edx,%r8d
  63:	48 89 c1             	mov    %rax,%rcx
  66:	ba 15 00 00 00       	mov    $0x15,%edx
  6b:	be 00 00 00 00       	mov    $0x0,%esi
  70:	e8 00 00 00 00       	call   75 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x75>
  75:	48 83 c4 10          	add    $0x10,%rsp
  79:	90                   	nop
  7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  85:	00 00 
  87:	74 05                	je     8e <StoreNetwork::SaveHostName(char const*, unsigned int)+0x8e>
  89:	e8 00 00 00 00       	call   8e <StoreNetwork::SaveHostName(char const*, unsigned int)+0x8e>
  8e:	c9                   	leave  
  8f:	c3                   	ret    

0000000000000090 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
  90:	f3 0f 1e fa          	endbr64 
  94:	48 83 ef 08          	sub    $0x8,%rdi
  98:	e9 63 ff ff ff       	jmp    0 <StoreNetwork::SaveHostName(char const*, unsigned int)>

Disassembly of section .text._ZN12StoreNetwork8SaveDhcpEb:

0000000000000000 <StoreNetwork::SaveDhcp(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	e8 00 00 00 00       	call   1a <StoreNetwork::SaveDhcp(bool)+0x1a>
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  21:	48 83 ec 08          	sub    $0x8,%rsp
  25:	6a 00                	push   $0x0
  27:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  2d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  33:	48 89 c1             	mov    %rax,%rcx
  36:	ba 14 00 00 00       	mov    $0x14,%edx
  3b:	be 00 00 00 00       	mov    $0x0,%esi
  40:	e8 00 00 00 00       	call   45 <StoreNetwork::SaveDhcp(bool)+0x45>
  45:	48 83 c4 10          	add    $0x10,%rsp
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StoreNetwork::SaveDhcp(bool)>

Disassembly of section .text._ZN18NetworkParamsStoreC2Ev:

0000000000000000 <NetworkParamsStore::NetworkParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <NetworkParamsStore::NetworkParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN12NetworkStoreC2Ev:

0000000000000000 <NetworkStore::NetworkStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <NetworkStore::NetworkStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN12StoreNetworkC2Ev:

0000000000000000 <StoreNetwork::StoreNetwork()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreNetwork::StoreNetwork()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 83 c0 08          	add    $0x8,%rax
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <StoreNetwork::StoreNetwork()+0x2c>
  2c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 33 <StoreNetwork::StoreNetwork()+0x33>
  33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  37:	48 89 10             	mov    %rdx,(%rax)
  3a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 41 <StoreNetwork::StoreNetwork()+0x41>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	48 89 50 08          	mov    %rdx,0x8(%rax)
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 54 <StoreNetwork::StoreNetwork()+0x54>
  54:	90                   	nop
  55:	c9                   	leave  
  56:	c3                   	ret    

Disassembly of section .text._ZSt3minIjERKT_S2_S2_:

0000000000000000 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	8b 10                	mov    (%rax),%edx
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	8b 00                	mov    (%rax),%eax
  1c:	39 c2                	cmp    %eax,%edx
  1e:	73 06                	jae    26 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x26>
  20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  24:	eb 04                	jmp    2a <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x2a>
  26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2a:	5d                   	pop    %rbp
  2b:	c3                   	ret    

Disassembly of section .text._ZN12StoreNetworkD2Ev:

0000000000000000 <StoreNetwork::~StoreNetwork()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreNetwork::~StoreNetwork()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 25 <StoreNetwork::~StoreNetwork()+0x25>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	48 89 50 08          	mov    %rdx,0x8(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 83 c0 08          	add    $0x8,%rax
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <StoreNetwork::~StoreNetwork()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <StoreNetwork::~StoreNetwork()+0x49>
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StoreNetwork::~StoreNetwork()>

Disassembly of section .text._ZN12StoreNetworkD0Ev:

0000000000000000 <StoreNetwork::~StoreNetwork()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreNetwork::~StoreNetwork()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreNetwork::~StoreNetwork()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

000000000000002a <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
  2a:	f3 0f 1e fa          	endbr64 
  2e:	48 83 ef 08          	sub    $0x8,%rdi
  32:	eb cc                	jmp    0 <StoreNetwork::~StoreNetwork()>

storeoscserver.o:     file format elf64-x86-64


Disassembly of section .text._ZN20OSCServerParamsStoreD2Ev:

0000000000000000 <OSCServerParamsStore::~OSCServerParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <OSCServerParamsStore::~OSCServerParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN20OSCServerParamsStoreD0Ev:

0000000000000000 <OSCServerParamsStore::~OSCServerParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <OSCServerParamsStore::~OSCServerParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <OSCServerParamsStore::~OSCServerParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscServer6UpdateEPKN3osc6server6ParamsE:

0000000000000000 <StoreOscServer::Update(osc::server::Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreOscServer::Update(osc::server::Params const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 8a 01 00 00       	mov    $0x18a,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 08 00 00 00       	mov    $0x8,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreOscServer::Update(osc::server::Params const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscServer4CopyEPN3osc6server6ParamsE:

0000000000000000 <StoreOscServer::Copy(osc::server::Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreOscServer::Copy(osc::server::Params*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 8a 01 00 00       	mov    $0x18a,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 08 00 00 00       	mov    $0x8,%esi
  39:	e8 00 00 00 00       	call   3e <StoreOscServer::Copy(osc::server::Params*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN20OSCServerParamsStoreC2Ev:

0000000000000000 <OSCServerParamsStore::OSCServerParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <OSCServerParamsStore::OSCServerParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscServerC2Ev:

0000000000000000 <StoreOscServer::StoreOscServer()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreOscServer::StoreOscServer()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreOscServer::StoreOscServer()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreOscServer::StoreOscServer()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscServerD2Ev:

0000000000000000 <StoreOscServer::~StoreOscServer()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreOscServer::~StoreOscServer()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreOscServer::~StoreOscServer()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscServerD0Ev:

0000000000000000 <StoreOscServer::~StoreOscServer()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreOscServer::~StoreOscServer()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreOscServer::~StoreOscServer()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storeremoteconfig.o:     file format elf64-x86-64


Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN23RemoteConfigParamsStoreD2Ev:

0000000000000000 <RemoteConfigParamsStore::~RemoteConfigParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RemoteConfigParamsStore::~RemoteConfigParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN23RemoteConfigParamsStoreD0Ev:

0000000000000000 <RemoteConfigParamsStore::~RemoteConfigParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RemoteConfigParamsStore::~RemoteConfigParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <RemoteConfigParamsStore::~RemoteConfigParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN17StoreRemoteConfig6UpdateEPK19TRemoteConfigParams:

0000000000000000 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 20 00 00 00       	mov    $0x20,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 0c 00 00 00       	mov    $0xc,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN17StoreRemoteConfig4CopyEP19TRemoteConfigParams:

0000000000000000 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 20 00 00 00       	mov    $0x20,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 0c 00 00 00       	mov    $0xc,%esi
  39:	e8 00 00 00 00       	call   3e <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN23RemoteConfigParamsStoreC2Ev:

0000000000000000 <RemoteConfigParamsStore::RemoteConfigParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RemoteConfigParamsStore::RemoteConfigParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN17StoreRemoteConfigC2Ev:

0000000000000000 <StoreRemoteConfig::StoreRemoteConfig()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreRemoteConfig::StoreRemoteConfig()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreRemoteConfig::StoreRemoteConfig()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreRemoteConfig::StoreRemoteConfig()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN17StoreRemoteConfigD2Ev:

0000000000000000 <StoreRemoteConfig::~StoreRemoteConfig()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreRemoteConfig::~StoreRemoteConfig()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreRemoteConfig::~StoreRemoteConfig()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN17StoreRemoteConfigD0Ev:

0000000000000000 <StoreRemoteConfig::~StoreRemoteConfig()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreRemoteConfig::~StoreRemoteConfig()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreRemoteConfig::~StoreRemoteConfig()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storeshowfile.o:     file format elf64-x86-64


Disassembly of section .text._ZN19ShowFileParamsStoreD2Ev:

0000000000000000 <ShowFileParamsStore::~ShowFileParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ShowFileParamsStore::~ShowFileParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN19ShowFileParamsStoreD0Ev:

0000000000000000 <ShowFileParamsStore::~ShowFileParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ShowFileParamsStore::~ShowFileParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ShowFileParamsStore::~ShowFileParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN13StoreShowFile6UpdateEPKN14showfileparams6ParamsE:

0000000000000000 <StoreShowFile::Update(showfileparams::Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreShowFile::Update(showfileparams::Params const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 11 00 00 00       	mov    $0x11,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 15 00 00 00       	mov    $0x15,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreShowFile::Update(showfileparams::Params const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN13StoreShowFile4CopyEPN14showfileparams6ParamsE:

0000000000000000 <StoreShowFile::Copy(showfileparams::Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreShowFile::Copy(showfileparams::Params*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 11 00 00 00       	mov    $0x11,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 15 00 00 00       	mov    $0x15,%esi
  39:	e8 00 00 00 00       	call   3e <StoreShowFile::Copy(showfileparams::Params*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN19ShowFileParamsStoreC2Ev:

0000000000000000 <ShowFileParamsStore::ShowFileParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ShowFileParamsStore::ShowFileParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN13StoreShowFileC2Ev:

0000000000000000 <StoreShowFile::StoreShowFile()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreShowFile::StoreShowFile()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreShowFile::StoreShowFile()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreShowFile::StoreShowFile()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN13StoreShowFileD2Ev:

0000000000000000 <StoreShowFile::~StoreShowFile()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreShowFile::~StoreShowFile()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreShowFile::~StoreShowFile()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN13StoreShowFileD0Ev:

0000000000000000 <StoreShowFile::~StoreShowFile()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreShowFile::~StoreShowFile()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreShowFile::~StoreShowFile()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storetlc59711.o:     file format elf64-x86-64


Disassembly of section .text._ZN16TLC59711DmxStoreD2Ev:

0000000000000000 <TLC59711DmxStore::~TLC59711DmxStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <TLC59711DmxStore::~TLC59711DmxStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN16TLC59711DmxStoreD0Ev:

0000000000000000 <TLC59711DmxStore::~TLC59711DmxStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <TLC59711DmxStore::~TLC59711DmxStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <TLC59711DmxStore::~TLC59711DmxStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN22TLC59711DmxParamsStoreD2Ev:

0000000000000000 <TLC59711DmxParamsStore::~TLC59711DmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <TLC59711DmxParamsStore::~TLC59711DmxParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN22TLC59711DmxParamsStoreD0Ev:

0000000000000000 <TLC59711DmxParamsStore::~TLC59711DmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <TLC59711DmxParamsStore::~TLC59711DmxParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <TLC59711DmxParamsStore::~TLC59711DmxParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN13StoreTLC597116UpdateEPK18TTLC59711DmxParams:

0000000000000000 <StoreTLC59711::Update(TTLC59711DmxParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreTLC59711::Update(TTLC59711DmxParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 10 00 00 00       	mov    $0x10,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 09 00 00 00       	mov    $0x9,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreTLC59711::Update(TTLC59711DmxParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN13StoreTLC597114CopyEP18TTLC59711DmxParams:

0000000000000000 <StoreTLC59711::Copy(TTLC59711DmxParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreTLC59711::Copy(TTLC59711DmxParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 10 00 00 00       	mov    $0x10,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 09 00 00 00       	mov    $0x9,%esi
  39:	e8 00 00 00 00       	call   3e <StoreTLC59711::Copy(TTLC59711DmxParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN13StoreTLC5971119SaveDmxStartAddressEt:

0000000000000000 <StoreTLC59711::SaveDmxStartAddress(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	e8 00 00 00 00       	call   1b <StoreTLC59711::SaveDmxStartAddress(unsigned short)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  22:	48 83 ec 08          	sub    $0x8,%rsp
  26:	6a 00                	push   $0x0
  28:	41 b9 04 00 00 00    	mov    $0x4,%r9d
  2e:	41 b8 04 00 00 00    	mov    $0x4,%r8d
  34:	48 89 c1             	mov    %rax,%rcx
  37:	ba 0a 00 00 00       	mov    $0xa,%edx
  3c:	be 09 00 00 00       	mov    $0x9,%esi
  41:	e8 00 00 00 00       	call   46 <StoreTLC59711::SaveDmxStartAddress(unsigned short)+0x46>
  46:	48 83 c4 10          	add    $0x10,%rsp
  4a:	90                   	nop
  4b:	c9                   	leave  
  4c:	c3                   	ret    

000000000000004d <non-virtual thunk to StoreTLC59711::SaveDmxStartAddress(unsigned short)>:
  4d:	f3 0f 1e fa          	endbr64 
  51:	48 83 ef 08          	sub    $0x8,%rdi
  55:	eb a9                	jmp    0 <StoreTLC59711::SaveDmxStartAddress(unsigned short)>

Disassembly of section .text._ZN22TLC59711DmxParamsStoreC2Ev:

0000000000000000 <TLC59711DmxParamsStore::TLC59711DmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <TLC59711DmxParamsStore::TLC59711DmxParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN16TLC59711DmxStoreC2Ev:

0000000000000000 <TLC59711DmxStore::TLC59711DmxStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <TLC59711DmxStore::TLC59711DmxStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN13StoreTLC59711C2Ev:

0000000000000000 <StoreTLC59711::StoreTLC59711()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreTLC59711::StoreTLC59711()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 83 c0 08          	add    $0x8,%rax
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <StoreTLC59711::StoreTLC59711()+0x2c>
  2c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 33 <StoreTLC59711::StoreTLC59711()+0x33>
  33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  37:	48 89 10             	mov    %rdx,(%rax)
  3a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 41 <StoreTLC59711::StoreTLC59711()+0x41>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	48 89 50 08          	mov    %rdx,0x8(%rax)
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 54 <StoreTLC59711::StoreTLC59711()+0x54>
  54:	90                   	nop
  55:	c9                   	leave  
  56:	c3                   	ret    

Disassembly of section .text._ZN13StoreTLC59711D2Ev:

0000000000000000 <StoreTLC59711::~StoreTLC59711()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreTLC59711::~StoreTLC59711()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 25 <StoreTLC59711::~StoreTLC59711()+0x25>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	48 89 50 08          	mov    %rdx,0x8(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 83 c0 08          	add    $0x8,%rax
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <StoreTLC59711::~StoreTLC59711()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <StoreTLC59711::~StoreTLC59711()+0x49>
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StoreTLC59711::~StoreTLC59711()>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StoreTLC59711::~StoreTLC59711()>

Disassembly of section .text._ZN13StoreTLC59711D0Ev:

0000000000000000 <StoreTLC59711::~StoreTLC59711()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreTLC59711::~StoreTLC59711()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreTLC59711::~StoreTLC59711()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

000000000000002a <non-virtual thunk to StoreTLC59711::~StoreTLC59711()>:
  2a:	f3 0f 1e fa          	endbr64 
  2e:	48 83 ef 08          	sub    $0x8,%rdi
  32:	eb cc                	jmp    0 <StoreTLC59711::~StoreTLC59711()>

storedevice.o:     file format elf64-x86-64


Disassembly of section .text._ZN11StoreDeviceC2Ev:

0000000000000000 <StoreDevice::StoreDevice()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	c6 00 00             	movb   $0x0,(%rax)
  17:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1e <StoreDevice::StoreDevice()+0x1e>
  1e:	48 89 c6             	mov    %rax,%rsi
  21:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 28 <StoreDevice::StoreDevice()+0x28>
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <StoreDevice::StoreDevice()+0x30>
  30:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 37 <StoreDevice::StoreDevice()+0x37>
  37:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3e <StoreDevice::StoreDevice()+0x3e>
  3e:	48 85 c0             	test   %rax,%rax
  41:	0f 94 c0             	sete   %al
  44:	84 c0                	test   %al,%al
  46:	0f 84 9b 00 00 00    	je     e7 <StoreDevice::StoreDevice()+0xe7>
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <StoreDevice::StoreDevice()+0x53>
  53:	48 89 c7             	mov    %rax,%rdi
  56:	e8 00 00 00 00       	call   5b <StoreDevice::StoreDevice()+0x5b>
  5b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 62 <StoreDevice::StoreDevice()+0x62>
  62:	48 89 c6             	mov    %rax,%rsi
  65:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6c <StoreDevice::StoreDevice()+0x6c>
  6c:	48 89 c7             	mov    %rax,%rdi
  6f:	e8 00 00 00 00       	call   74 <StoreDevice::StoreDevice()+0x74>
  74:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 7b <StoreDevice::StoreDevice()+0x7b>
  7b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  82:	eb 33                	jmp    b7 <StoreDevice::StoreDevice()+0xb7>
  84:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 8b <StoreDevice::StoreDevice()+0x8b>
  8b:	48 89 c6             	mov    %rax,%rsi
  8e:	bf ff 00 00 00       	mov    $0xff,%edi
  93:	e8 00 00 00 00       	call   98 <StoreDevice::StoreDevice()+0x98>
  98:	83 f8 ff             	cmp    $0xffffffff,%eax
  9b:	0f 94 c0             	sete   %al
  9e:	84 c0                	test   %al,%al
  a0:	74 11                	je     b3 <StoreDevice::StoreDevice()+0xb3>
  a2:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a9 <StoreDevice::StoreDevice()+0xa9>
  a9:	48 89 c7             	mov    %rax,%rdi
  ac:	e8 00 00 00 00       	call   b1 <StoreDevice::StoreDevice()+0xb1>
  b1:	eb 3b                	jmp    ee <StoreDevice::StoreDevice()+0xee>
  b3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  b7:	81 7d fc ff ff 1f 00 	cmpl   $0x1fffff,-0x4(%rbp)
  be:	76 c4                	jbe    84 <StoreDevice::StoreDevice()+0x84>
  c0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # c7 <StoreDevice::StoreDevice()+0xc7>
  c7:	48 89 c7             	mov    %rax,%rdi
  ca:	e8 00 00 00 00       	call   cf <StoreDevice::StoreDevice()+0xcf>
  cf:	85 c0                	test   %eax,%eax
  d1:	0f 95 c0             	setne  %al
  d4:	84 c0                	test   %al,%al
  d6:	74 0f                	je     e7 <StoreDevice::StoreDevice()+0xe7>
  d8:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # df <StoreDevice::StoreDevice()+0xdf>
  df:	48 89 c7             	mov    %rax,%rdi
  e2:	e8 00 00 00 00       	call   e7 <StoreDevice::StoreDevice()+0xe7>
  e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  eb:	c6 00 01             	movb   $0x1,(%rax)
  ee:	c9                   	leave  
  ef:	c3                   	ret    

Disassembly of section .text._ZN11StoreDeviceD2Ev:

0000000000000000 <StoreDevice::~StoreDevice()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 17 <StoreDevice::~StoreDevice()+0x17>
  17:	48 85 c0             	test   %rax,%rax
  1a:	74 1a                	je     36 <StoreDevice::~StoreDevice()+0x36>
  1c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 23 <StoreDevice::~StoreDevice()+0x23>
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	call   2b <StoreDevice::~StoreDevice()+0x2b>
  2b:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 36 <StoreDevice::~StoreDevice()+0x36>
  32:	00 00 00 00 
  36:	90                   	nop
  37:	c9                   	leave  
  38:	c3                   	ret    

Disassembly of section .text._ZNK11StoreDevice7GetSizeEv:

0000000000000000 <StoreDevice::GetSize() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	b8 00 00 20 00       	mov    $0x200000,%eax
  11:	5d                   	pop    %rbp
  12:	c3                   	ret    

Disassembly of section .text._ZNK11StoreDevice13GetSectorSizeEv:

0000000000000000 <StoreDevice::GetSectorSize() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	b8 00 10 00 00       	mov    $0x1000,%eax
  11:	5d                   	pop    %rbp
  12:	c3                   	ret    

Disassembly of section .text._ZN11StoreDevice4ReadEjjPhRN11storedevice6resultE:

0000000000000000 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  1a:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  1e:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  21:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 28 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x28>
  28:	ba 00 00 00 00       	mov    $0x0,%edx
  2d:	48 89 ce             	mov    %rcx,%rsi
  30:	48 89 c7             	mov    %rax,%rdi
  33:	e8 00 00 00 00       	call   38 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x38>
  38:	85 c0                	test   %eax,%eax
  3a:	0f 95 c0             	setne  %al
  3d:	84 c0                	test   %al,%al
  3f:	74 20                	je     61 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x61>
  41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  45:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  4b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 52 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x52>
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	call   5a <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x5a>
  5a:	b8 01 00 00 00       	mov    $0x1,%eax
  5f:	eb 57                	jmp    b8 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0xb8>
  61:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # 68 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x68>
  68:	8b 55 f0             	mov    -0x10(%rbp),%edx
  6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6f:	be 01 00 00 00       	mov    $0x1,%esi
  74:	48 89 c7             	mov    %rax,%rdi
  77:	e8 00 00 00 00       	call   7c <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x7c>
  7c:	8b 55 f0             	mov    -0x10(%rbp),%edx
  7f:	48 39 d0             	cmp    %rdx,%rax
  82:	0f 95 c0             	setne  %al
  85:	84 c0                	test   %al,%al
  87:	74 20                	je     a9 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0xa9>
  89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  8d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  93:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9a <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0x9a>
  9a:	48 89 c7             	mov    %rax,%rdi
  9d:	e8 00 00 00 00       	call   a2 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0xa2>
  a2:	b8 01 00 00 00       	mov    $0x1,%eax
  a7:	eb 0f                	jmp    b8 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)+0xb8>
  a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  ad:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  b3:	b8 01 00 00 00       	mov    $0x1,%eax
  b8:	c9                   	leave  
  b9:	c3                   	ret    

Disassembly of section .text._ZN11StoreDevice5EraseEjjRN11storedevice6resultE:

0000000000000000 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 55 e0             	mov    %edx,-0x20(%rbp)
  16:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  1a:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 20 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x20>
  20:	85 c0                	test   %eax,%eax
  22:	0f 85 ae 00 00 00    	jne    d6 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0xd6>
  28:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  2b:	25 ff 0f 00 00       	and    $0xfff,%eax
  30:	85 c0                	test   %eax,%eax
  32:	75 0c                	jne    40 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x40>
  34:	8b 45 e0             	mov    -0x20(%rbp),%eax
  37:	25 ff 0f 00 00       	and    $0xfff,%eax
  3c:	85 c0                	test   %eax,%eax
  3e:	74 1e                	je     5e <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x5e>
  40:	c7 05 00 00 00 00 02 	movl   $0x2,0x0(%rip)        # 4a <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x4a>
  47:	00 00 00 
  4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4e:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  54:	b8 01 00 00 00       	mov    $0x1,%eax
  59:	e9 30 01 00 00       	jmp    18e <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x18e>
  5e:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  61:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 68 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x68>
  68:	ba 00 00 00 00       	mov    $0x0,%edx
  6d:	48 89 ce             	mov    %rcx,%rsi
  70:	48 89 c7             	mov    %rax,%rdi
  73:	e8 00 00 00 00       	call   78 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x78>
  78:	85 c0                	test   %eax,%eax
  7a:	0f 95 c0             	setne  %al
  7d:	84 c0                	test   %al,%al
  7f:	74 2d                	je     ae <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0xae>
  81:	c7 05 00 00 00 00 02 	movl   $0x2,0x0(%rip)        # 8b <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x8b>
  88:	00 00 00 
  8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  8f:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  95:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9c <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x9c>
  9c:	48 89 c7             	mov    %rax,%rdi
  9f:	e8 00 00 00 00       	call   a4 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0xa4>
  a4:	b8 01 00 00 00       	mov    $0x1,%eax
  a9:	e9 e0 00 00 00       	jmp    18e <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x18e>
  ae:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # b8 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0xb8>
  b5:	00 00 00 
  b8:	c7 05 00 00 00 00 01 	movl   $0x1,0x0(%rip)        # c2 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0xc2>
  bf:	00 00 00 
  c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  cc:	b8 00 00 00 00       	mov    $0x0,%eax
  d1:	e9 b8 00 00 00       	jmp    18e <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x18e>
  d6:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # dc <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0xdc>
  dc:	83 f8 01             	cmp    $0x1,%eax
  df:	0f 85 a4 00 00 00    	jne    189 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x189>
  e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  ec:	eb 4c                	jmp    13a <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x13a>
  ee:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f5 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0xf5>
  f5:	48 89 c6             	mov    %rax,%rsi
  f8:	bf ff 00 00 00       	mov    $0xff,%edi
  fd:	e8 00 00 00 00       	call   102 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x102>
 102:	83 f8 ff             	cmp    $0xffffffff,%eax
 105:	0f 94 c0             	sete   %al
 108:	84 c0                	test   %al,%al
 10a:	74 2a                	je     136 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x136>
 10c:	c7 05 00 00 00 00 02 	movl   $0x2,0x0(%rip)        # 116 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x116>
 113:	00 00 00 
 116:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 11a:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 120:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 127 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x127>
 127:	48 89 c7             	mov    %rax,%rdi
 12a:	e8 00 00 00 00       	call   12f <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x12f>
 12f:	b8 01 00 00 00       	mov    $0x1,%eax
 134:	eb 58                	jmp    18e <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x18e>
 136:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 13a:	8b 45 fc             	mov    -0x4(%rbp),%eax
 13d:	3b 45 e0             	cmp    -0x20(%rbp),%eax
 140:	72 ac                	jb     ee <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0xee>
 142:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # 14c <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x14c>
 149:	00 00 00 
 14c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 150:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 156:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 15d <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x15d>
 15d:	48 89 c7             	mov    %rax,%rdi
 160:	e8 00 00 00 00       	call   165 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x165>
 165:	85 c0                	test   %eax,%eax
 167:	0f 95 c0             	setne  %al
 16a:	84 c0                	test   %al,%al
 16c:	74 0f                	je     17d <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x17d>
 16e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 175 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x175>
 175:	48 89 c7             	mov    %rax,%rdi
 178:	e8 00 00 00 00       	call   17d <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x17d>
 17d:	e8 00 00 00 00       	call   182 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x182>
 182:	b8 01 00 00 00       	mov    $0x1,%eax
 187:	eb 05                	jmp    18e <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)+0x18e>
 189:	b8 01 00 00 00       	mov    $0x1,%eax
 18e:	c9                   	leave  
 18f:	c3                   	ret    

Disassembly of section .text._ZN11StoreDevice5WriteEjjPKhRN11storedevice6resultE:

0000000000000000 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 55 e0             	mov    %edx,-0x20(%rbp)
  16:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
  1a:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  1e:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 24 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x24>
  24:	85 c0                	test   %eax,%eax
  26:	75 78                	jne    a0 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0xa0>
  28:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  2b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 32 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x32>
  32:	ba 00 00 00 00       	mov    $0x0,%edx
  37:	48 89 ce             	mov    %rcx,%rsi
  3a:	48 89 c7             	mov    %rax,%rdi
  3d:	e8 00 00 00 00       	call   42 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x42>
  42:	85 c0                	test   %eax,%eax
  44:	0f 95 c0             	setne  %al
  47:	84 c0                	test   %al,%al
  49:	74 2d                	je     78 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x78>
  4b:	c7 05 00 00 00 00 02 	movl   $0x2,0x0(%rip)        # 55 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x55>
  52:	00 00 00 
  55:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  59:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  5f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 66 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x66>
  66:	48 89 c7             	mov    %rax,%rdi
  69:	e8 00 00 00 00       	call   6e <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x6e>
  6e:	b8 01 00 00 00       	mov    $0x1,%eax
  73:	e9 25 01 00 00       	jmp    19d <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x19d>
  78:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # 82 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x82>
  7f:	00 00 00 
  82:	c7 05 00 00 00 00 01 	movl   $0x1,0x0(%rip)        # 8c <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x8c>
  89:	00 00 00 
  8c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  90:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  96:	b8 00 00 00 00       	mov    $0x0,%eax
  9b:	e9 fd 00 00 00       	jmp    19d <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x19d>
  a0:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # a6 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0xa6>
  a6:	83 f8 01             	cmp    $0x1,%eax
  a9:	0f 85 e9 00 00 00    	jne    198 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x198>
  af:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # b5 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0xb5>
  b5:	8b 45 e0             	mov    -0x20(%rbp),%eax
  b8:	29 d0                	sub    %edx,%eax
  ba:	89 45 fc             	mov    %eax,-0x4(%rbp)
  bd:	81 7d fc 00 04 00 00 	cmpl   $0x400,-0x4(%rbp)
  c4:	76 07                	jbe    cd <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0xcd>
  c6:	c7 45 fc 00 04 00 00 	movl   $0x400,-0x4(%rbp)
  cd:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # d4 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0xd4>
  d4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  d7:	8b 0d 00 00 00 00    	mov    0x0(%rip),%ecx        # dd <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0xdd>
  dd:	89 ce                	mov    %ecx,%esi
  df:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  e3:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
  e7:	48 89 d1             	mov    %rdx,%rcx
  ea:	48 89 c2             	mov    %rax,%rdx
  ed:	be 01 00 00 00       	mov    $0x1,%esi
  f2:	e8 00 00 00 00       	call   f7 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0xf7>
  f7:	8b 55 fc             	mov    -0x4(%rbp),%edx
  fa:	48 39 d0             	cmp    %rdx,%rax
  fd:	0f 95 c0             	setne  %al
 100:	84 c0                	test   %al,%al
 102:	74 2a                	je     12e <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x12e>
 104:	c7 05 00 00 00 00 02 	movl   $0x2,0x0(%rip)        # 10e <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x10e>
 10b:	00 00 00 
 10e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 112:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 118:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 11f <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x11f>
 11f:	48 89 c7             	mov    %rax,%rdi
 122:	e8 00 00 00 00       	call   127 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x127>
 127:	b8 01 00 00 00       	mov    $0x1,%eax
 12c:	eb 6f                	jmp    19d <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x19d>
 12e:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 134 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x134>
 134:	8b 45 fc             	mov    -0x4(%rbp),%eax
 137:	01 d0                	add    %edx,%eax
 139:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 13f <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x13f>
 13f:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 145 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x145>
 145:	39 45 e0             	cmp    %eax,-0x20(%rbp)
 148:	75 3d                	jne    187 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x187>
 14a:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # 154 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x154>
 151:	00 00 00 
 154:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 15b <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x15b>
 15b:	48 89 c7             	mov    %rax,%rdi
 15e:	e8 00 00 00 00       	call   163 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x163>
 163:	85 c0                	test   %eax,%eax
 165:	0f 95 c0             	setne  %al
 168:	84 c0                	test   %al,%al
 16a:	74 0f                	je     17b <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x17b>
 16c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 173 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x173>
 173:	48 89 c7             	mov    %rax,%rdi
 176:	e8 00 00 00 00       	call   17b <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x17b>
 17b:	e8 00 00 00 00       	call   180 <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x180>
 180:	b8 01 00 00 00       	mov    $0x1,%eax
 185:	eb 16                	jmp    19d <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x19d>
 187:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 18b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 191:	b8 00 00 00 00       	mov    $0x0,%eax
 196:	eb 05                	jmp    19d <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)+0x19d>
 198:	b8 01 00 00 00       	mov    $0x1,%eax
 19d:	c9                   	leave  
 19e:	c3                   	ret    

storeartnet.o:     file format elf64-x86-64


Disassembly of section .text._ZN12artnetparamsL10clear_maskEj:

0000000000000000 <artnetparams::clear_mask(unsigned int)>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	8b 45 fc             	mov    -0x4(%rbp),%eax
   a:	83 c0 08             	add    $0x8,%eax
   d:	ba 01 00 00 00       	mov    $0x1,%edx
  12:	89 c1                	mov    %eax,%ecx
  14:	d3 e2                	shl    %cl,%edx
  16:	89 d0                	mov    %edx,%eax
  18:	89 c6                	mov    %eax,%esi
  1a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  1d:	ba 01 00 00 00       	mov    $0x1,%edx
  22:	89 c1                	mov    %eax,%ecx
  24:	d3 e2                	shl    %cl,%edx
  26:	89 d0                	mov    %edx,%eax
  28:	09 f0                	or     %esi,%eax
  2a:	f7 d0                	not    %eax
  2c:	5d                   	pop    %rbp
  2d:	c3                   	ret    

Disassembly of section .text._ZN12artnetparamsL10shift_leftEjj:

0000000000000000 <artnetparams::shift_left(unsigned int, unsigned int)>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	89 75 f8             	mov    %esi,-0x8(%rbp)
   a:	8b 45 fc             	mov    -0x4(%rbp),%eax
   d:	83 e0 01             	and    $0x1,%eax
  10:	89 c2                	mov    %eax,%edx
  12:	8b 45 f8             	mov    -0x8(%rbp),%eax
  15:	89 c1                	mov    %eax,%ecx
  17:	d3 e2                	shl    %cl,%edx
  19:	89 d0                	mov    %edx,%eax
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN17ArtNetParamsStoreD2Ev:

0000000000000000 <ArtNetParamsStore::~ArtNetParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ArtNetParamsStore::~ArtNetParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN17ArtNetParamsStoreD0Ev:

0000000000000000 <ArtNetParamsStore::~ArtNetParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ArtNetParamsStore::~ArtNetParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ArtNetParamsStore::~ArtNetParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ArtNetStoreD2Ev:

0000000000000000 <ArtNetStore::~ArtNetStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ArtNetStore::~ArtNetStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN11ArtNetStoreD0Ev:

0000000000000000 <ArtNetStore::~ArtNetStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ArtNetStore::~ArtNetStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ArtNetStore::~ArtNetStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN11StoreArtNet6UpdateEPKN12artnetparams6ParamsE:

0000000000000000 <StoreArtNet::Update(artnetparams::Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreArtNet::Update(artnetparams::Params const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 87 00 00 00       	mov    $0x87,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 01 00 00 00       	mov    $0x1,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreArtNet::Update(artnetparams::Params const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN11StoreArtNet4CopyEPN12artnetparams6ParamsE:

0000000000000000 <StoreArtNet::Copy(artnetparams::Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreArtNet::Copy(artnetparams::Params*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 87 00 00 00       	mov    $0x87,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 01 00 00 00       	mov    $0x1,%esi
  39:	e8 00 00 00 00       	call   3e <StoreArtNet::Copy(artnetparams::Params*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN11StoreArtNet12SaveFailSafeEh:

0000000000000000 <StoreArtNet::SaveFailSafe(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	e8 00 00 00 00       	call   1a <StoreArtNet::SaveFailSafe(unsigned char)+0x1a>
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  21:	48 83 ec 08          	sub    $0x8,%rsp
  25:	6a 00                	push   $0x0
  27:	41 b9 10 00 00 00    	mov    $0x10,%r9d
  2d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  33:	48 89 c1             	mov    %rax,%rcx
  36:	ba 06 00 00 00       	mov    $0x6,%edx
  3b:	be 01 00 00 00       	mov    $0x1,%esi
  40:	e8 00 00 00 00       	call   45 <StoreArtNet::SaveFailSafe(unsigned char)+0x45>
  45:	48 83 c4 10          	add    $0x10,%rsp
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StoreArtNet::SaveFailSafe(unsigned char)>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StoreArtNet::SaveFailSafe(unsigned char)>

Disassembly of section .text._ZN11StoreArtNet13SaveShortNameEPKc:

0000000000000000 <StoreArtNet::SaveShortName(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreArtNet::SaveShortName(char const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	48 83 ec 08          	sub    $0x8,%rsp
  24:	6a 00                	push   $0x0
  26:	41 b9 02 00 00 00    	mov    $0x2,%r9d
  2c:	41 b8 12 00 00 00    	mov    $0x12,%r8d
  32:	48 89 c1             	mov    %rax,%rcx
  35:	ba 0c 00 00 00       	mov    $0xc,%edx
  3a:	be 01 00 00 00       	mov    $0x1,%esi
  3f:	e8 00 00 00 00       	call   44 <StoreArtNet::SaveShortName(char const*)+0x44>
  44:	48 83 c4 10          	add    $0x10,%rsp
  48:	90                   	nop
  49:	c9                   	leave  
  4a:	c3                   	ret    

000000000000004b <non-virtual thunk to StoreArtNet::SaveShortName(char const*)>:
  4b:	f3 0f 1e fa          	endbr64 
  4f:	48 83 ef 08          	sub    $0x8,%rdi
  53:	eb ab                	jmp    0 <StoreArtNet::SaveShortName(char const*)>

Disassembly of section .text._ZN11StoreArtNet12SaveLongNameEPKc:

0000000000000000 <StoreArtNet::SaveLongName(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreArtNet::SaveLongName(char const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	48 83 ec 08          	sub    $0x8,%rsp
  24:	6a 00                	push   $0x0
  26:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  2c:	41 b8 40 00 00 00    	mov    $0x40,%r8d
  32:	48 89 c1             	mov    %rax,%rcx
  35:	ba 1e 00 00 00       	mov    $0x1e,%edx
  3a:	be 01 00 00 00       	mov    $0x1,%esi
  3f:	e8 00 00 00 00       	call   44 <StoreArtNet::SaveLongName(char const*)+0x44>
  44:	48 83 c4 10          	add    $0x10,%rsp
  48:	90                   	nop
  49:	c9                   	leave  
  4a:	c3                   	ret    

000000000000004b <non-virtual thunk to StoreArtNet::SaveLongName(char const*)>:
  4b:	f3 0f 1e fa          	endbr64 
  4f:	48 83 ef 08          	sub    $0x8,%rdi
  53:	eb ab                	jmp    0 <StoreArtNet::SaveLongName(char const*)>

Disassembly of section .text._ZN11StoreArtNet12SaveUniverseEjt:

0000000000000000 <StoreArtNet::SaveUniverse(unsigned int, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	89 d0                	mov    %edx,%eax
  11:	66 89 45 f0          	mov    %ax,-0x10(%rbp)
  15:	90                   	nop
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    

0000000000000018 <non-virtual thunk to StoreArtNet::SaveUniverse(unsigned int, unsigned short)>:
  18:	f3 0f 1e fa          	endbr64 
  1c:	48 83 ef 08          	sub    $0x8,%rdi
  20:	eb de                	jmp    0 <StoreArtNet::SaveUniverse(unsigned int, unsigned short)>

Disassembly of section .text._ZN17ArtNetParamsStoreC2Ev:

0000000000000000 <ArtNetParamsStore::ArtNetParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ArtNetParamsStore::ArtNetParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN11ArtNetStoreC2Ev:

0000000000000000 <ArtNetStore::ArtNetStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ArtNetStore::ArtNetStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN11StoreArtNetC2Ej:

0000000000000000 <StoreArtNet::StoreArtNet(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 c7             	mov    %rax,%rdi
  1a:	e8 00 00 00 00       	call   1f <StoreArtNet::StoreArtNet(unsigned int)+0x1f>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	48 83 c0 08          	add    $0x8,%rax
  27:	48 89 c7             	mov    %rax,%rdi
  2a:	e8 00 00 00 00       	call   2f <StoreArtNet::StoreArtNet(unsigned int)+0x2f>
  2f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 36 <StoreArtNet::StoreArtNet(unsigned int)+0x36>
  36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3a:	48 89 10             	mov    %rdx,(%rax)
  3d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 44 <StoreArtNet::StoreArtNet(unsigned int)+0x44>
  44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  48:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  50:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 57 <StoreArtNet::StoreArtNet(unsigned int)+0x57>
  57:	8b 45 f4             	mov    -0xc(%rbp),%eax
  5a:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 60 <StoreArtNet::StoreArtNet(unsigned int)+0x60>
  60:	90                   	nop
  61:	c9                   	leave  
  62:	c3                   	ret    

Disassembly of section .text._ZN11StoreArtNet18SaveUniverseSwitchEjh:

0000000000000000 <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 d0                	mov    %edx,%eax
  15:	88 45 f0             	mov    %al,-0x10(%rbp)
  18:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1e <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0x1e>
  1e:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  21:	72 51                	jb     74 <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0x74>
  23:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 29 <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0x29>
  29:	29 45 f4             	sub    %eax,-0xc(%rbp)
  2c:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
  30:	77 45                	ja     77 <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0x77>
  32:	e8 00 00 00 00       	call   37 <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0x37>
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	8b 45 f4             	mov    -0xc(%rbp),%eax
  3d:	ba 00 20 00 00       	mov    $0x2000,%edx
  42:	89 c1                	mov    %eax,%ecx
  44:	d3 e2                	shl    %cl,%edx
  46:	89 d1                	mov    %edx,%ecx
  48:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4b:	8d 50 67             	lea    0x67(%rax),%edx
  4e:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  52:	48 83 ec 08          	sub    $0x8,%rsp
  56:	6a 00                	push   $0x0
  58:	41 89 c9             	mov    %ecx,%r9d
  5b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  61:	48 89 c1             	mov    %rax,%rcx
  64:	be 01 00 00 00       	mov    $0x1,%esi
  69:	e8 00 00 00 00       	call   6e <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0x6e>
  6e:	48 83 c4 10          	add    $0x10,%rsp
  72:	eb 04                	jmp    78 <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0x78>
  74:	90                   	nop
  75:	eb 01                	jmp    78 <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0x78>
  77:	90                   	nop
  78:	c9                   	leave  
  79:	c3                   	ret    

Disassembly of section .text._ZThn8_N11StoreArtNet18SaveUniverseSwitchEjh:

0000000000000000 <non-virtual thunk to StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0xd>

Disassembly of section .text._ZN11StoreArtNet13SaveNetSwitchEjh:

0000000000000000 <StoreArtNet::SaveNetSwitch(unsigned int, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 d0                	mov    %edx,%eax
  15:	88 45 f0             	mov    %al,-0x10(%rbp)
  18:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  1c:	75 36                	jne    54 <StoreArtNet::SaveNetSwitch(unsigned int, unsigned char)+0x54>
  1e:	e8 00 00 00 00       	call   23 <StoreArtNet::SaveNetSwitch(unsigned int, unsigned char)+0x23>
  23:	48 89 c7             	mov    %rax,%rdi
  26:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  2a:	48 83 ec 08          	sub    $0x8,%rsp
  2e:	6a 00                	push   $0x0
  30:	41 b9 04 00 00 00    	mov    $0x4,%r9d
  36:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  3c:	48 89 c1             	mov    %rax,%rcx
  3f:	ba 04 00 00 00       	mov    $0x4,%edx
  44:	be 01 00 00 00       	mov    $0x1,%esi
  49:	e8 00 00 00 00       	call   4e <StoreArtNet::SaveNetSwitch(unsigned int, unsigned char)+0x4e>
  4e:	48 83 c4 10          	add    $0x10,%rsp
  52:	eb 01                	jmp    55 <StoreArtNet::SaveNetSwitch(unsigned int, unsigned char)+0x55>
  54:	90                   	nop
  55:	c9                   	leave  
  56:	c3                   	ret    

Disassembly of section .text._ZThn8_N11StoreArtNet13SaveNetSwitchEjh:

0000000000000000 <non-virtual thunk to StoreArtNet::SaveNetSwitch(unsigned int, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreArtNet::SaveNetSwitch(unsigned int, unsigned char)+0xd>

Disassembly of section .text._ZN11StoreArtNet16SaveSubnetSwitchEjh:

0000000000000000 <StoreArtNet::SaveSubnetSwitch(unsigned int, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 d0                	mov    %edx,%eax
  15:	88 45 f0             	mov    %al,-0x10(%rbp)
  18:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  1c:	75 36                	jne    54 <StoreArtNet::SaveSubnetSwitch(unsigned int, unsigned char)+0x54>
  1e:	e8 00 00 00 00       	call   23 <StoreArtNet::SaveSubnetSwitch(unsigned int, unsigned char)+0x23>
  23:	48 89 c7             	mov    %rax,%rdi
  26:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  2a:	48 83 ec 08          	sub    $0x8,%rsp
  2e:	6a 00                	push   $0x0
  30:	41 b9 08 00 00 00    	mov    $0x8,%r9d
  36:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  3c:	48 89 c1             	mov    %rax,%rcx
  3f:	ba 05 00 00 00       	mov    $0x5,%edx
  44:	be 01 00 00 00       	mov    $0x1,%esi
  49:	e8 00 00 00 00       	call   4e <StoreArtNet::SaveSubnetSwitch(unsigned int, unsigned char)+0x4e>
  4e:	48 83 c4 10          	add    $0x10,%rsp
  52:	eb 01                	jmp    55 <StoreArtNet::SaveSubnetSwitch(unsigned int, unsigned char)+0x55>
  54:	90                   	nop
  55:	c9                   	leave  
  56:	c3                   	ret    

Disassembly of section .text._ZThn8_N11StoreArtNet16SaveSubnetSwitchEjh:

0000000000000000 <non-virtual thunk to StoreArtNet::SaveSubnetSwitch(unsigned int, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreArtNet::SaveSubnetSwitch(unsigned int, unsigned char)+0xd>

Disassembly of section .text._ZN11StoreArtNet13SaveMergeModeEjN8lightset9MergeModeE:

0000000000000000 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1c <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x1c>
  1c:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  1f:	72 51                	jb     72 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x72>
  21:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 27 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x27>
  27:	29 45 f4             	sub    %eax,-0xc(%rbp)
  2a:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
  2e:	77 45                	ja     75 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x75>
  30:	e8 00 00 00 00       	call   35 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x35>
  35:	48 89 c7             	mov    %rax,%rdi
  38:	8b 45 f4             	mov    -0xc(%rbp),%eax
  3b:	ba 00 00 04 00       	mov    $0x40000,%edx
  40:	89 c1                	mov    %eax,%ecx
  42:	d3 e2                	shl    %cl,%edx
  44:	89 d1                	mov    %edx,%ecx
  46:	8b 45 f4             	mov    -0xc(%rbp),%eax
  49:	8d 50 6c             	lea    0x6c(%rax),%edx
  4c:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  50:	48 83 ec 08          	sub    $0x8,%rsp
  54:	6a 00                	push   $0x0
  56:	41 89 c9             	mov    %ecx,%r9d
  59:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  5f:	48 89 c1             	mov    %rax,%rcx
  62:	be 01 00 00 00       	mov    $0x1,%esi
  67:	e8 00 00 00 00       	call   6c <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x6c>
  6c:	48 83 c4 10          	add    $0x10,%rsp
  70:	eb 04                	jmp    76 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x76>
  72:	90                   	nop
  73:	eb 01                	jmp    76 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x76>
  75:	90                   	nop
  76:	c9                   	leave  
  77:	c3                   	ret    

Disassembly of section .text._ZThn8_N11StoreArtNet13SaveMergeModeEjN8lightset9MergeModeE:

0000000000000000 <non-virtual thunk to StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0xd>

Disassembly of section .text._ZN11StoreArtNet16SavePortProtocolEjN6artnet12PortProtocolE:

0000000000000000 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1c <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x1c>
  1c:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  1f:	72 51                	jb     72 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x72>
  21:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 27 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x27>
  27:	29 45 f4             	sub    %eax,-0xc(%rbp)
  2a:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
  2e:	77 45                	ja     75 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x75>
  30:	e8 00 00 00 00       	call   35 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x35>
  35:	48 89 c7             	mov    %rax,%rdi
  38:	8b 45 f4             	mov    -0xc(%rbp),%eax
  3b:	ba 00 00 80 00       	mov    $0x800000,%edx
  40:	89 c1                	mov    %eax,%ecx
  42:	d3 e2                	shl    %cl,%edx
  44:	89 d1                	mov    %edx,%ecx
  46:	8b 45 f4             	mov    -0xc(%rbp),%eax
  49:	8d 50 71             	lea    0x71(%rax),%edx
  4c:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  50:	48 83 ec 08          	sub    $0x8,%rsp
  54:	6a 00                	push   $0x0
  56:	41 89 c9             	mov    %ecx,%r9d
  59:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  5f:	48 89 c1             	mov    %rax,%rcx
  62:	be 01 00 00 00       	mov    $0x1,%esi
  67:	e8 00 00 00 00       	call   6c <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x6c>
  6c:	48 83 c4 10          	add    $0x10,%rsp
  70:	eb 04                	jmp    76 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x76>
  72:	90                   	nop
  73:	eb 01                	jmp    76 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x76>
  75:	90                   	nop
  76:	c9                   	leave  
  77:	c3                   	ret    

Disassembly of section .text._ZThn8_N11StoreArtNet16SavePortProtocolEjN6artnet12PortProtocolE:

0000000000000000 <non-virtual thunk to StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0xd>

Disassembly of section .text._ZN11StoreArtNet14SaveRdmEnabledEjb:

0000000000000000 <StoreArtNet::SaveRdmEnabled(unsigned int, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 d0                	mov    %edx,%eax
  15:	88 45 e0             	mov    %al,-0x20(%rbp)
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  25:	31 c0                	xor    %eax,%eax
  27:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 2d <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0x2d>
  2d:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  30:	0f 82 c3 00 00 00    	jb     f9 <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0xf9>
  36:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 3c <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0x3c>
  3c:	29 45 e4             	sub    %eax,-0x1c(%rbp)
  3f:	83 7d e4 03          	cmpl   $0x3,-0x1c(%rbp)
  43:	0f 87 b3 00 00 00    	ja     fc <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0xfc>
  49:	e8 00 00 00 00       	call   4e <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0x4e>
  4e:	48 89 c7             	mov    %rax,%rdi
  51:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  55:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  5b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  61:	b9 02 00 00 00       	mov    $0x2,%ecx
  66:	48 89 c2             	mov    %rax,%rdx
  69:	be 01 00 00 00       	mov    $0x1,%esi
  6e:	e8 00 00 00 00       	call   73 <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0x73>
  73:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  76:	89 c7                	mov    %eax,%edi
  78:	e8 00 00 00 00       	call   7d <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0x7d>
  7d:	0f b7 55 f6          	movzwl -0xa(%rbp),%edx
  81:	21 d0                	and    %edx,%eax
  83:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
  87:	80 7d e0 00          	cmpb   $0x0,-0x20(%rbp)
  8b:	74 36                	je     c3 <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0xc3>
  8d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  90:	89 c6                	mov    %eax,%esi
  92:	bf 01 00 00 00       	mov    $0x1,%edi
  97:	e8 00 00 00 00       	call   9c <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0x9c>
  9c:	0f b7 55 f6          	movzwl -0xa(%rbp),%edx
  a0:	09 d0                	or     %edx,%eax
  a2:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
  a6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  a9:	83 c0 08             	add    $0x8,%eax
  ac:	ba 01 00 00 00       	mov    $0x1,%edx
  b1:	89 c1                	mov    %eax,%ecx
  b3:	d3 e2                	shl    %cl,%edx
  b5:	89 d0                	mov    %edx,%eax
  b7:	89 c2                	mov    %eax,%edx
  b9:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax
  bd:	09 d0                	or     %edx,%eax
  bf:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
  c3:	e8 00 00 00 00       	call   c8 <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0xc8>
  c8:	48 89 c7             	mov    %rax,%rdi
  cb:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  cf:	48 83 ec 08          	sub    $0x8,%rsp
  d3:	6a 00                	push   $0x0
  d5:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  db:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  e1:	48 89 c1             	mov    %rax,%rcx
  e4:	ba 08 00 00 00       	mov    $0x8,%edx
  e9:	be 01 00 00 00       	mov    $0x1,%esi
  ee:	e8 00 00 00 00       	call   f3 <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0xf3>
  f3:	48 83 c4 10          	add    $0x10,%rsp
  f7:	eb 04                	jmp    fd <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0xfd>
  f9:	90                   	nop
  fa:	eb 01                	jmp    fd <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0xfd>
  fc:	90                   	nop
  fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 101:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 108:	00 00 
 10a:	74 05                	je     111 <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0x111>
 10c:	e8 00 00 00 00       	call   111 <StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0x111>
 111:	c9                   	leave  
 112:	c3                   	ret    

Disassembly of section .text._ZThn8_N11StoreArtNet14SaveRdmEnabledEjb:

0000000000000000 <non-virtual thunk to StoreArtNet::SaveRdmEnabled(unsigned int, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreArtNet::SaveRdmEnabled(unsigned int, bool)+0xd>

Disassembly of section .text._ZN11StoreArtNetD2Ev:

0000000000000000 <StoreArtNet::~StoreArtNet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreArtNet::~StoreArtNet()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 25 <StoreArtNet::~StoreArtNet()+0x25>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	48 89 50 08          	mov    %rdx,0x8(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 83 c0 08          	add    $0x8,%rax
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <StoreArtNet::~StoreArtNet()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <StoreArtNet::~StoreArtNet()+0x49>
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StoreArtNet::~StoreArtNet()>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StoreArtNet::~StoreArtNet()>

Disassembly of section .text._ZN11StoreArtNetD0Ev:

0000000000000000 <StoreArtNet::~StoreArtNet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreArtNet::~StoreArtNet()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreArtNet::~StoreArtNet()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

000000000000002a <non-virtual thunk to StoreArtNet::~StoreArtNet()>:
  2a:	f3 0f 1e fa          	endbr64 
  2e:	48 83 ef 08          	sub    $0x8,%rdi
  32:	eb cc                	jmp    0 <StoreArtNet::~StoreArtNet()>

storerdmdevice.o:     file format elf64-x86-64


Disassembly of section .text._ZN14RDMDeviceStoreD2Ev:

0000000000000000 <RDMDeviceStore::~RDMDeviceStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RDMDeviceStore::~RDMDeviceStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN14RDMDeviceStoreD0Ev:

0000000000000000 <RDMDeviceStore::~RDMDeviceStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RDMDeviceStore::~RDMDeviceStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <RDMDeviceStore::~RDMDeviceStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN20RDMDeviceParamsStoreD2Ev:

0000000000000000 <RDMDeviceParamsStore::~RDMDeviceParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RDMDeviceParamsStore::~RDMDeviceParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN20RDMDeviceParamsStoreD0Ev:

0000000000000000 <RDMDeviceParamsStore::~RDMDeviceParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RDMDeviceParamsStore::~RDMDeviceParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <RDMDeviceParamsStore::~RDMDeviceParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN14StoreRDMDevice6UpdateEPKN3rdm12deviceparams6ParamsE:

0000000000000000 <StoreRDMDevice::Update(rdm::deviceparams::Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreRDMDevice::Update(rdm::deviceparams::Params const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 29 00 00 00       	mov    $0x29,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 0b 00 00 00       	mov    $0xb,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreRDMDevice::Update(rdm::deviceparams::Params const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN14StoreRDMDevice4CopyEPN3rdm12deviceparams6ParamsE:

0000000000000000 <StoreRDMDevice::Copy(rdm::deviceparams::Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreRDMDevice::Copy(rdm::deviceparams::Params*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 29 00 00 00       	mov    $0x29,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 0b 00 00 00       	mov    $0xb,%esi
  39:	e8 00 00 00 00       	call   3e <StoreRDMDevice::Copy(rdm::deviceparams::Params*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN14StoreRDMDevice9SaveLabelEPKch:

0000000000000000 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 d0                	mov    %edx,%eax
  16:	88 45 ec             	mov    %al,-0x14(%rbp)
  19:	e8 00 00 00 00       	call   1e <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x1e>
  1e:	48 89 c7             	mov    %rax,%rdi
  21:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  25:	0f b6 d0             	movzbl %al,%edx
  28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2c:	48 83 ec 08          	sub    $0x8,%rsp
  30:	6a 00                	push   $0x0
  32:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  38:	41 89 d0             	mov    %edx,%r8d
  3b:	48 89 c1             	mov    %rax,%rcx
  3e:	ba 04 00 00 00       	mov    $0x4,%edx
  43:	be 0b 00 00 00       	mov    $0xb,%esi
  48:	e8 00 00 00 00       	call   4d <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x4d>
  4d:	48 83 c4 10          	add    $0x10,%rsp
  51:	e8 00 00 00 00       	call   56 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x56>
  56:	48 89 c7             	mov    %rax,%rdi
  59:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
  5d:	48 83 ec 08          	sub    $0x8,%rsp
  61:	6a 00                	push   $0x0
  63:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  69:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  6f:	48 89 c1             	mov    %rax,%rcx
  72:	ba 24 00 00 00       	mov    $0x24,%edx
  77:	be 0b 00 00 00       	mov    $0xb,%esi
  7c:	e8 00 00 00 00       	call   81 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x81>
  81:	48 83 c4 10          	add    $0x10,%rsp
  85:	90                   	nop
  86:	c9                   	leave  
  87:	c3                   	ret    

0000000000000088 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
  88:	f3 0f 1e fa          	endbr64 
  8c:	48 83 ef 08          	sub    $0x8,%rdi
  90:	e9 6b ff ff ff       	jmp    0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>

Disassembly of section .text._ZN20RDMDeviceParamsStoreC2Ev:

0000000000000000 <RDMDeviceParamsStore::RDMDeviceParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RDMDeviceParamsStore::RDMDeviceParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN14RDMDeviceStoreC2Ev:

0000000000000000 <RDMDeviceStore::RDMDeviceStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RDMDeviceStore::RDMDeviceStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN14StoreRDMDeviceC2Ev:

0000000000000000 <StoreRDMDevice::StoreRDMDevice()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreRDMDevice::StoreRDMDevice()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 83 c0 08          	add    $0x8,%rax
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <StoreRDMDevice::StoreRDMDevice()+0x2c>
  2c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 33 <StoreRDMDevice::StoreRDMDevice()+0x33>
  33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  37:	48 89 10             	mov    %rdx,(%rax)
  3a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 41 <StoreRDMDevice::StoreRDMDevice()+0x41>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	48 89 50 08          	mov    %rdx,0x8(%rax)
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 54 <StoreRDMDevice::StoreRDMDevice()+0x54>
  54:	90                   	nop
  55:	c9                   	leave  
  56:	c3                   	ret    

Disassembly of section .text._ZN14StoreRDMDeviceD2Ev:

0000000000000000 <StoreRDMDevice::~StoreRDMDevice()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreRDMDevice::~StoreRDMDevice()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 25 <StoreRDMDevice::~StoreRDMDevice()+0x25>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	48 89 50 08          	mov    %rdx,0x8(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 83 c0 08          	add    $0x8,%rax
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <StoreRDMDevice::~StoreRDMDevice()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <StoreRDMDevice::~StoreRDMDevice()+0x49>
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StoreRDMDevice::~StoreRDMDevice()>

Disassembly of section .text._ZN14StoreRDMDeviceD0Ev:

0000000000000000 <StoreRDMDevice::~StoreRDMDevice()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreRDMDevice::~StoreRDMDevice()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreRDMDevice::~StoreRDMDevice()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

000000000000002a <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
  2a:	f3 0f 1e fa          	endbr64 
  2e:	48 83 ef 08          	sub    $0x8,%rdi
  32:	eb cc                	jmp    0 <StoreRDMDevice::~StoreRDMDevice()>

storerdmsensors.o:     file format elf64-x86-64


Disassembly of section .text._ZN21RDMSensorsParamsStoreD2Ev:

0000000000000000 <RDMSensorsParamsStore::~RDMSensorsParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RDMSensorsParamsStore::~RDMSensorsParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN21RDMSensorsParamsStoreD0Ev:

0000000000000000 <RDMSensorsParamsStore::~RDMSensorsParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RDMSensorsParamsStore::~RDMSensorsParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <RDMSensorsParamsStore::~RDMSensorsParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN15StoreRDMSensors6UpdateEPK17TRDMSensorsParams:

0000000000000000 <StoreRDMSensors::Update(TRDMSensorsParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreRDMSensors::Update(TRDMSensorsParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 34 00 00 00       	mov    $0x34,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 17 00 00 00       	mov    $0x17,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreRDMSensors::Update(TRDMSensorsParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN15StoreRDMSensors4CopyEP17TRDMSensorsParams:

0000000000000000 <StoreRDMSensors::Copy(TRDMSensorsParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreRDMSensors::Copy(TRDMSensorsParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 34 00 00 00       	mov    $0x34,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 17 00 00 00       	mov    $0x17,%esi
  39:	e8 00 00 00 00       	call   3e <StoreRDMSensors::Copy(TRDMSensorsParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN21RDMSensorsParamsStoreC2Ev:

0000000000000000 <RDMSensorsParamsStore::RDMSensorsParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RDMSensorsParamsStore::RDMSensorsParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN15StoreRDMSensorsC2Ev:

0000000000000000 <StoreRDMSensors::StoreRDMSensors()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreRDMSensors::StoreRDMSensors()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreRDMSensors::StoreRDMSensors()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreRDMSensors::StoreRDMSensors()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN15StoreRDMSensorsD2Ev:

0000000000000000 <StoreRDMSensors::~StoreRDMSensors()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreRDMSensors::~StoreRDMSensors()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreRDMSensors::~StoreRDMSensors()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN15StoreRDMSensorsD0Ev:

0000000000000000 <StoreRDMSensors::~StoreRDMSensors()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreRDMSensors::~StoreRDMSensors()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreRDMSensors::~StoreRDMSensors()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storerdmsubdevices.o:     file format elf64-x86-64


Disassembly of section .text._ZN24RDMSubDevicesParamsStoreD2Ev:

0000000000000000 <RDMSubDevicesParamsStore::~RDMSubDevicesParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RDMSubDevicesParamsStore::~RDMSubDevicesParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN24RDMSubDevicesParamsStoreD0Ev:

0000000000000000 <RDMSubDevicesParamsStore::~RDMSubDevicesParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RDMSubDevicesParamsStore::~RDMSubDevicesParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <RDMSubDevicesParamsStore::~RDMSubDevicesParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN18StoreRDMSubDevices6UpdateEPK20TRDMSubDevicesParams:

0000000000000000 <StoreRDMSubDevices::Update(TRDMSubDevicesParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreRDMSubDevices::Update(TRDMSubDevicesParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 4c 00 00 00       	mov    $0x4c,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 18 00 00 00       	mov    $0x18,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreRDMSubDevices::Update(TRDMSubDevicesParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN18StoreRDMSubDevices4CopyEP20TRDMSubDevicesParams:

0000000000000000 <StoreRDMSubDevices::Copy(TRDMSubDevicesParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreRDMSubDevices::Copy(TRDMSubDevicesParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 4c 00 00 00       	mov    $0x4c,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 18 00 00 00       	mov    $0x18,%esi
  39:	e8 00 00 00 00       	call   3e <StoreRDMSubDevices::Copy(TRDMSubDevicesParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN24RDMSubDevicesParamsStoreC2Ev:

0000000000000000 <RDMSubDevicesParamsStore::RDMSubDevicesParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RDMSubDevicesParamsStore::RDMSubDevicesParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN18StoreRDMSubDevicesC2Ev:

0000000000000000 <StoreRDMSubDevices::StoreRDMSubDevices()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreRDMSubDevices::StoreRDMSubDevices()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreRDMSubDevices::StoreRDMSubDevices()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreRDMSubDevices::StoreRDMSubDevices()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN18StoreRDMSubDevicesD2Ev:

0000000000000000 <StoreRDMSubDevices::~StoreRDMSubDevices()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreRDMSubDevices::~StoreRDMSubDevices()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreRDMSubDevices::~StoreRDMSubDevices()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN18StoreRDMSubDevicesD0Ev:

0000000000000000 <StoreRDMSubDevices::~StoreRDMSubDevices()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreRDMSubDevices::~StoreRDMSubDevices()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreRDMSubDevices::~StoreRDMSubDevices()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storee131.o:     file format elf64-x86-64


Disassembly of section .text._ZN15E131ParamsStoreD2Ev:

0000000000000000 <E131ParamsStore::~E131ParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <E131ParamsStore::~E131ParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN15E131ParamsStoreD0Ev:

0000000000000000 <E131ParamsStore::~E131ParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <E131ParamsStore::~E131ParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <E131ParamsStore::~E131ParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN9StoreE1316UpdateEPKN10e131params6ParamsE:

0000000000000000 <StoreE131::Update(e131params::Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreE131::Update(e131params::Params const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 1f 00 00 00       	mov    $0x1f,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 04 00 00 00       	mov    $0x4,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreE131::Update(e131params::Params const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN9StoreE1314CopyEPN10e131params6ParamsE:

0000000000000000 <StoreE131::Copy(e131params::Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreE131::Copy(e131params::Params*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 1f 00 00 00       	mov    $0x1f,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 04 00 00 00       	mov    $0x4,%esi
  39:	e8 00 00 00 00       	call   3e <StoreE131::Copy(e131params::Params*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN15E131ParamsStoreC2Ev:

0000000000000000 <E131ParamsStore::E131ParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <E131ParamsStore::E131ParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN9StoreE131C2Ev:

0000000000000000 <StoreE131::StoreE131()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreE131::StoreE131()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreE131::StoreE131()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreE131::StoreE131()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN9StoreE131D2Ev:

0000000000000000 <StoreE131::~StoreE131()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreE131::~StoreE131()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreE131::~StoreE131()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN9StoreE131D0Ev:

0000000000000000 <StoreE131::~StoreE131()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreE131::~StoreE131()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreE131::~StoreE131()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storegps.o:     file format elf64-x86-64


Disassembly of section .text._ZN14GPSParamsStoreD2Ev:

0000000000000000 <GPSParamsStore::~GPSParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <GPSParamsStore::~GPSParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN14GPSParamsStoreD0Ev:

0000000000000000 <GPSParamsStore::~GPSParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <GPSParamsStore::~GPSParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <GPSParamsStore::~GPSParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN8StoreGPS6UpdateEPK10TGPSParams:

0000000000000000 <StoreGPS::Update(TGPSParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreGPS::Update(TGPSParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 09 00 00 00       	mov    $0x9,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 19 00 00 00       	mov    $0x19,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreGPS::Update(TGPSParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN8StoreGPS4CopyEP10TGPSParams:

0000000000000000 <StoreGPS::Copy(TGPSParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreGPS::Copy(TGPSParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 09 00 00 00       	mov    $0x9,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 19 00 00 00       	mov    $0x19,%esi
  39:	e8 00 00 00 00       	call   3e <StoreGPS::Copy(TGPSParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN14GPSParamsStoreC2Ev:

0000000000000000 <GPSParamsStore::GPSParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <GPSParamsStore::GPSParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN8StoreGPSC2Ev:

0000000000000000 <StoreGPS::StoreGPS()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreGPS::StoreGPS()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreGPS::StoreGPS()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreGPS::StoreGPS()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN8StoreGPSD2Ev:

0000000000000000 <StoreGPS::~StoreGPS()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreGPS::~StoreGPS()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreGPS::~StoreGPS()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN8StoreGPSD0Ev:

0000000000000000 <StoreGPS::~StoreGPS()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreGPS::~StoreGPS()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreGPS::~StoreGPS()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storeltc.o:     file format elf64-x86-64


storeltcdisplay.o:     file format elf64-x86-64


Disassembly of section .text._ZN21LtcDisplayParamsStoreD2Ev:

0000000000000000 <LtcDisplayParamsStore::~LtcDisplayParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <LtcDisplayParamsStore::~LtcDisplayParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN21LtcDisplayParamsStoreD0Ev:

0000000000000000 <LtcDisplayParamsStore::~LtcDisplayParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <LtcDisplayParamsStore::~LtcDisplayParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <LtcDisplayParamsStore::~LtcDisplayParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN15StoreLtcDisplay6UpdateEPKN16ltcdisplayparams6ParamsE:

0000000000000000 <StoreLtcDisplay::Update(ltcdisplayparams::Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreLtcDisplay::Update(ltcdisplayparams::Params const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 2e 00 00 00       	mov    $0x2e,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 10 00 00 00       	mov    $0x10,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreLtcDisplay::Update(ltcdisplayparams::Params const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN15StoreLtcDisplay4CopyEPN16ltcdisplayparams6ParamsE:

0000000000000000 <StoreLtcDisplay::Copy(ltcdisplayparams::Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreLtcDisplay::Copy(ltcdisplayparams::Params*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 2e 00 00 00       	mov    $0x2e,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 10 00 00 00       	mov    $0x10,%esi
  39:	e8 00 00 00 00       	call   3e <StoreLtcDisplay::Copy(ltcdisplayparams::Params*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN21LtcDisplayParamsStoreC2Ev:

0000000000000000 <LtcDisplayParamsStore::LtcDisplayParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <LtcDisplayParamsStore::LtcDisplayParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN15StoreLtcDisplayC2Ev:

0000000000000000 <StoreLtcDisplay::StoreLtcDisplay()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreLtcDisplay::StoreLtcDisplay()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreLtcDisplay::StoreLtcDisplay()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreLtcDisplay::StoreLtcDisplay()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN15StoreLtcDisplayD2Ev:

0000000000000000 <StoreLtcDisplay::~StoreLtcDisplay()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreLtcDisplay::~StoreLtcDisplay()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreLtcDisplay::~StoreLtcDisplay()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN15StoreLtcDisplayD0Ev:

0000000000000000 <StoreLtcDisplay::~StoreLtcDisplay()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreLtcDisplay::~StoreLtcDisplay()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreLtcDisplay::~StoreLtcDisplay()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storeltcetc.o:     file format elf64-x86-64


storergbpanel.o:     file format elf64-x86-64


Disassembly of section .text._ZN19RgbPanelParamsStoreD2Ev:

0000000000000000 <RgbPanelParamsStore::~RgbPanelParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RgbPanelParamsStore::~RgbPanelParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN19RgbPanelParamsStoreD0Ev:

0000000000000000 <RgbPanelParamsStore::~RgbPanelParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RgbPanelParamsStore::~RgbPanelParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <RgbPanelParamsStore::~RgbPanelParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN13StoreRgbPanel6UpdateEPK15TRgbPanelParams:

0000000000000000 <StoreRgbPanel::Update(TRgbPanelParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreRgbPanel::Update(TRgbPanelParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 08 00 00 00       	mov    $0x8,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 1a 00 00 00       	mov    $0x1a,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreRgbPanel::Update(TRgbPanelParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN13StoreRgbPanel4CopyEP15TRgbPanelParams:

0000000000000000 <StoreRgbPanel::Copy(TRgbPanelParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreRgbPanel::Copy(TRgbPanelParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 08 00 00 00       	mov    $0x8,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 1a 00 00 00       	mov    $0x1a,%esi
  39:	e8 00 00 00 00       	call   3e <StoreRgbPanel::Copy(TRgbPanelParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN19RgbPanelParamsStoreC2Ev:

0000000000000000 <RgbPanelParamsStore::RgbPanelParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RgbPanelParamsStore::RgbPanelParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN13StoreRgbPanelC2Ev:

0000000000000000 <StoreRgbPanel::StoreRgbPanel()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreRgbPanel::StoreRgbPanel()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreRgbPanel::StoreRgbPanel()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreRgbPanel::StoreRgbPanel()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN13StoreRgbPanelD2Ev:

0000000000000000 <StoreRgbPanel::~StoreRgbPanel()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreRgbPanel::~StoreRgbPanel()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreRgbPanel::~StoreRgbPanel()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN13StoreRgbPanelD0Ev:

0000000000000000 <StoreRgbPanel::~StoreRgbPanel()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreRgbPanel::~StoreRgbPanel()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreRgbPanel::~StoreRgbPanel()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storetcnet.o:     file format elf64-x86-64


Disassembly of section .text._ZN16TCNetParamsStoreD2Ev:

0000000000000000 <TCNetParamsStore::~TCNetParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <TCNetParamsStore::~TCNetParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN16TCNetParamsStoreD0Ev:

0000000000000000 <TCNetParamsStore::~TCNetParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <TCNetParamsStore::~TCNetParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <TCNetParamsStore::~TCNetParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN10StoreTCNet6UpdateEPKN11tcnetparams6ParamsE:

0000000000000000 <StoreTCNet::Update(tcnetparams::Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreTCNet::Update(tcnetparams::Params const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 0e 00 00 00       	mov    $0xe,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 0d 00 00 00       	mov    $0xd,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreTCNet::Update(tcnetparams::Params const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN10StoreTCNet4CopyEPN11tcnetparams6ParamsE:

0000000000000000 <StoreTCNet::Copy(tcnetparams::Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreTCNet::Copy(tcnetparams::Params*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 0e 00 00 00       	mov    $0xe,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 0d 00 00 00       	mov    $0xd,%esi
  39:	e8 00 00 00 00       	call   3e <StoreTCNet::Copy(tcnetparams::Params*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN16TCNetParamsStoreC2Ev:

0000000000000000 <TCNetParamsStore::TCNetParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <TCNetParamsStore::TCNetParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN10StoreTCNetC2Ev:

0000000000000000 <StoreTCNet::StoreTCNet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreTCNet::StoreTCNet()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreTCNet::StoreTCNet()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreTCNet::StoreTCNet()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN10StoreTCNetD2Ev:

0000000000000000 <StoreTCNet::~StoreTCNet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreTCNet::~StoreTCNet()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreTCNet::~StoreTCNet()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN10StoreTCNetD0Ev:

0000000000000000 <StoreTCNet::~StoreTCNet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreTCNet::~StoreTCNet()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreTCNet::~StoreTCNet()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storeoscclient.o:     file format elf64-x86-64


Disassembly of section .text._ZN20OscClientParamsStoreD2Ev:

0000000000000000 <OscClientParamsStore::~OscClientParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <OscClientParamsStore::~OscClientParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN20OscClientParamsStoreD0Ev:

0000000000000000 <OscClientParamsStore::~OscClientParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <OscClientParamsStore::~OscClientParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <OscClientParamsStore::~OscClientParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscClient6UpdateEPK16TOscClientParams:

0000000000000000 <StoreOscClient::Update(TOscClientParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreOscClient::Update(TOscClientParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 8e 03 00 00       	mov    $0x38e,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 0e 00 00 00       	mov    $0xe,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreOscClient::Update(TOscClientParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscClient4CopyEP16TOscClientParams:

0000000000000000 <StoreOscClient::Copy(TOscClientParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreOscClient::Copy(TOscClientParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 8e 03 00 00       	mov    $0x38e,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 0e 00 00 00       	mov    $0xe,%esi
  39:	e8 00 00 00 00       	call   3e <StoreOscClient::Copy(TOscClientParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN20OscClientParamsStoreC2Ev:

0000000000000000 <OscClientParamsStore::OscClientParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <OscClientParamsStore::OscClientParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscClientC2Ev:

0000000000000000 <StoreOscClient::StoreOscClient()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreOscClient::StoreOscClient()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreOscClient::StoreOscClient()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreOscClient::StoreOscClient()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscClientD2Ev:

0000000000000000 <StoreOscClient::~StoreOscClient()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreOscClient::~StoreOscClient()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreOscClient::~StoreOscClient()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscClientD0Ev:

0000000000000000 <StoreOscClient::~StoreOscClient()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreOscClient::~StoreOscClient()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreOscClient::~StoreOscClient()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storepixeldmx.o:     file format elf64-x86-64


Disassembly of section .text._ZN19PixelDmxParamsStoreD2Ev:

0000000000000000 <PixelDmxParamsStore::~PixelDmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <PixelDmxParamsStore::~PixelDmxParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN19PixelDmxParamsStoreD0Ev:

0000000000000000 <PixelDmxParamsStore::~PixelDmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <PixelDmxParamsStore::~PixelDmxParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <PixelDmxParamsStore::~PixelDmxParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN13PixelDmxStoreD2Ev:

0000000000000000 <PixelDmxStore::~PixelDmxStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <PixelDmxStore::~PixelDmxStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN13PixelDmxStoreD0Ev:

0000000000000000 <PixelDmxStore::~PixelDmxStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <PixelDmxStore::~PixelDmxStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <PixelDmxStore::~PixelDmxStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN13StorePixelDmx6UpdateEPKN14pixeldmxparams6ParamsE:

0000000000000000 <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 18 00 00 00       	mov    $0x18,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 03 00 00 00       	mov    $0x3,%esi
  2d:	e8 00 00 00 00       	call   32 <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN13StorePixelDmx4CopyEPN14pixeldmxparams6ParamsE:

0000000000000000 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 18 00 00 00       	mov    $0x18,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 03 00 00 00       	mov    $0x3,%esi
  39:	e8 00 00 00 00       	call   3e <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN13StorePixelDmx8SaveTypeEh:

0000000000000000 <StorePixelDmx::SaveType(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	e8 00 00 00 00       	call   1a <StorePixelDmx::SaveType(unsigned char)+0x1a>
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  21:	48 83 ec 08          	sub    $0x8,%rsp
  25:	6a 00                	push   $0x0
  27:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  2d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  33:	48 89 c1             	mov    %rax,%rcx
  36:	ba 04 00 00 00       	mov    $0x4,%edx
  3b:	be 03 00 00 00       	mov    $0x3,%esi
  40:	e8 00 00 00 00       	call   45 <StorePixelDmx::SaveType(unsigned char)+0x45>
  45:	48 83 c4 10          	add    $0x10,%rsp
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StorePixelDmx::SaveType(unsigned char)>

Disassembly of section .text._ZN13StorePixelDmx9SaveCountEt:

0000000000000000 <StorePixelDmx::SaveCount(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	e8 00 00 00 00       	call   1b <StorePixelDmx::SaveCount(unsigned short)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  22:	48 83 ec 08          	sub    $0x8,%rsp
  26:	6a 00                	push   $0x0
  28:	41 b9 02 00 00 00    	mov    $0x2,%r9d
  2e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  34:	48 89 c1             	mov    %rax,%rcx
  37:	ba 05 00 00 00       	mov    $0x5,%edx
  3c:	be 03 00 00 00       	mov    $0x3,%esi
  41:	e8 00 00 00 00       	call   46 <StorePixelDmx::SaveCount(unsigned short)+0x46>
  46:	48 83 c4 10          	add    $0x10,%rsp
  4a:	90                   	nop
  4b:	c9                   	leave  
  4c:	c3                   	ret    

000000000000004d <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
  4d:	f3 0f 1e fa          	endbr64 
  51:	48 83 ef 08          	sub    $0x8,%rdi
  55:	eb a9                	jmp    0 <StorePixelDmx::SaveCount(unsigned short)>

Disassembly of section .text._ZN13StorePixelDmx17SaveGroupingCountEt:

0000000000000000 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	e8 00 00 00 00       	call   1b <StorePixelDmx::SaveGroupingCount(unsigned short)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  22:	48 83 ec 08          	sub    $0x8,%rsp
  26:	6a 00                	push   $0x0
  28:	41 b9 00 01 00 00    	mov    $0x100,%r9d
  2e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  34:	48 89 c1             	mov    %rax,%rcx
  37:	ba 11 00 00 00       	mov    $0x11,%edx
  3c:	be 03 00 00 00       	mov    $0x3,%esi
  41:	e8 00 00 00 00       	call   46 <StorePixelDmx::SaveGroupingCount(unsigned short)+0x46>
  46:	48 83 c4 10          	add    $0x10,%rsp
  4a:	90                   	nop
  4b:	c9                   	leave  
  4c:	c3                   	ret    

000000000000004d <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
  4d:	f3 0f 1e fa          	endbr64 
  51:	48 83 ef 08          	sub    $0x8,%rdi
  55:	eb a9                	jmp    0 <StorePixelDmx::SaveGroupingCount(unsigned short)>

Disassembly of section .text._ZN13StorePixelDmx7SaveMapEh:

0000000000000000 <StorePixelDmx::SaveMap(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	e8 00 00 00 00       	call   1a <StorePixelDmx::SaveMap(unsigned char)+0x1a>
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  21:	48 83 ec 08          	sub    $0x8,%rsp
  25:	6a 00                	push   $0x0
  27:	41 b9 00 02 00 00    	mov    $0x200,%r9d
  2d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  33:	48 89 c1             	mov    %rax,%rcx
  36:	ba 13 00 00 00       	mov    $0x13,%edx
  3b:	be 03 00 00 00       	mov    $0x3,%esi
  40:	e8 00 00 00 00       	call   45 <StorePixelDmx::SaveMap(unsigned char)+0x45>
  45:	48 83 c4 10          	add    $0x10,%rsp
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StorePixelDmx::SaveMap(unsigned char)>

Disassembly of section .text._ZN13StorePixelDmx15SaveTestPatternEh:

0000000000000000 <StorePixelDmx::SaveTestPattern(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	e8 00 00 00 00       	call   1a <StorePixelDmx::SaveTestPattern(unsigned char)+0x1a>
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  21:	48 83 ec 08          	sub    $0x8,%rsp
  25:	6a 00                	push   $0x0
  27:	41 b9 08 00 00 00    	mov    $0x8,%r9d
  2d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  33:	48 89 c1             	mov    %rax,%rcx
  36:	ba 10 00 00 00       	mov    $0x10,%edx
  3b:	be 03 00 00 00       	mov    $0x3,%esi
  40:	e8 00 00 00 00       	call   45 <StorePixelDmx::SaveTestPattern(unsigned char)+0x45>
  45:	48 83 c4 10          	add    $0x10,%rsp
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StorePixelDmx::SaveTestPattern(unsigned char)>

Disassembly of section .text._ZN13StorePixelDmx19SaveDmxStartAddressEt:

0000000000000000 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	e8 00 00 00 00       	call   1b <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  22:	48 83 ec 08          	sub    $0x8,%rsp
  26:	6a 00                	push   $0x0
  28:	41 b9 04 00 00 00    	mov    $0x4,%r9d
  2e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  34:	48 89 c1             	mov    %rax,%rcx
  37:	ba 07 00 00 00       	mov    $0x7,%edx
  3c:	be 03 00 00 00       	mov    $0x3,%esi
  41:	e8 00 00 00 00       	call   46 <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x46>
  46:	48 83 c4 10          	add    $0x10,%rsp
  4a:	90                   	nop
  4b:	c9                   	leave  
  4c:	c3                   	ret    

000000000000004d <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
  4d:	f3 0f 1e fa          	endbr64 
  51:	48 83 ef 08          	sub    $0x8,%rdi
  55:	eb a9                	jmp    0 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>

Disassembly of section .text._ZN19PixelDmxParamsStoreC2Ev:

0000000000000000 <PixelDmxParamsStore::PixelDmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <PixelDmxParamsStore::PixelDmxParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN13PixelDmxStoreC2Ev:

0000000000000000 <PixelDmxStore::PixelDmxStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <PixelDmxStore::PixelDmxStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN13StorePixelDmxC2Ev:

0000000000000000 <StorePixelDmx::StorePixelDmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StorePixelDmx::StorePixelDmx()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 83 c0 08          	add    $0x8,%rax
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <StorePixelDmx::StorePixelDmx()+0x2c>
  2c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 33 <StorePixelDmx::StorePixelDmx()+0x33>
  33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  37:	48 89 10             	mov    %rdx,(%rax)
  3a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 41 <StorePixelDmx::StorePixelDmx()+0x41>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	48 89 50 08          	mov    %rdx,0x8(%rax)
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 54 <StorePixelDmx::StorePixelDmx()+0x54>
  54:	90                   	nop
  55:	c9                   	leave  
  56:	c3                   	ret    

Disassembly of section .text._ZN13StorePixelDmxD2Ev:

0000000000000000 <StorePixelDmx::~StorePixelDmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StorePixelDmx::~StorePixelDmx()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 25 <StorePixelDmx::~StorePixelDmx()+0x25>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	48 89 50 08          	mov    %rdx,0x8(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 83 c0 08          	add    $0x8,%rax
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <StorePixelDmx::~StorePixelDmx()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <StorePixelDmx::~StorePixelDmx()+0x49>
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

000000000000004c <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
  4c:	f3 0f 1e fa          	endbr64 
  50:	48 83 ef 08          	sub    $0x8,%rdi
  54:	eb aa                	jmp    0 <StorePixelDmx::~StorePixelDmx()>

Disassembly of section .text._ZN13StorePixelDmxD0Ev:

0000000000000000 <StorePixelDmx::~StorePixelDmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StorePixelDmx::~StorePixelDmx()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StorePixelDmx::~StorePixelDmx()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

000000000000002a <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
  2a:	f3 0f 1e fa          	endbr64 
  2e:	48 83 ef 08          	sub    $0x8,%rdi
  32:	eb cc                	jmp    0 <StorePixelDmx::~StorePixelDmx()>

storemotors.o:     file format elf64-x86-64


Disassembly of section .text._ZN15ModeParamsStoreD2Ev:

0000000000000000 <ModeParamsStore::~ModeParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ModeParamsStore::~ModeParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN15ModeParamsStoreD0Ev:

0000000000000000 <ModeParamsStore::~ModeParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ModeParamsStore::~ModeParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ModeParamsStore::~ModeParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN16MotorParamsStoreD2Ev:

0000000000000000 <MotorParamsStore::~MotorParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <MotorParamsStore::~MotorParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN16MotorParamsStoreD0Ev:

0000000000000000 <MotorParamsStore::~MotorParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <MotorParamsStore::~MotorParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <MotorParamsStore::~MotorParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN16L6470ParamsStoreD2Ev:

0000000000000000 <L6470ParamsStore::~L6470ParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <L6470ParamsStore::~L6470ParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN16L6470ParamsStoreD0Ev:

0000000000000000 <L6470ParamsStore::~L6470ParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <L6470ParamsStore::~L6470ParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <L6470ParamsStore::~L6470ParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN9ModeStoreD2Ev:

0000000000000000 <ModeStore::~ModeStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ModeStore::~ModeStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN9ModeStoreD0Ev:

0000000000000000 <ModeStore::~ModeStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ModeStore::~ModeStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ModeStore::~ModeStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN15ModeParamsStoreC2Ev:

0000000000000000 <ModeParamsStore::ModeParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ModeParamsStore::ModeParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN16MotorParamsStoreC2Ev:

0000000000000000 <MotorParamsStore::MotorParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <MotorParamsStore::MotorParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN16L6470ParamsStoreC2Ev:

0000000000000000 <L6470ParamsStore::L6470ParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <L6470ParamsStore::L6470ParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN9ModeStoreC2Ev:

0000000000000000 <ModeStore::ModeStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ModeStore::ModeStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN11StoreMotorsC2Ev:

0000000000000000 <StoreMotors::StoreMotors()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
   f:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	e8 00 00 00 00       	call   34 <StoreMotors::StoreMotors()+0x34>
  34:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  3b:	48 83 c0 08          	add    $0x8,%rax
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <StoreMotors::StoreMotors()+0x47>
  47:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4e:	48 83 c0 10          	add    $0x10,%rax
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	call   5a <StoreMotors::StoreMotors()+0x5a>
  5a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  61:	48 83 c0 18          	add    $0x18,%rax
  65:	48 89 c7             	mov    %rax,%rdi
  68:	e8 00 00 00 00       	call   6d <StoreMotors::StoreMotors()+0x6d>
  6d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 74 <StoreMotors::StoreMotors()+0x74>
  74:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  7b:	48 89 10             	mov    %rdx,(%rax)
  7e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 85 <StoreMotors::StoreMotors()+0x85>
  85:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  8c:	48 89 50 08          	mov    %rdx,0x8(%rax)
  90:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 97 <StoreMotors::StoreMotors()+0x97>
  97:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  9e:	48 89 50 10          	mov    %rdx,0x10(%rax)
  a2:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # a9 <StoreMotors::StoreMotors()+0xa9>
  a9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  b0:	48 89 50 18          	mov    %rdx,0x18(%rax)
  b4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  bb:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # c2 <StoreMotors::StoreMotors()+0xc2>
  c2:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
  c9:	e9 18 01 00 00       	jmp    1e6 <StoreMotors::StoreMotors()+0x1e6>
  ce:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  d2:	ba 28 00 00 00       	mov    $0x28,%edx
  d7:	be ff 00 00 00       	mov    $0xff,%esi
  dc:	48 89 c7             	mov    %rax,%rdi
  df:	e8 00 00 00 00       	call   e4 <StoreMotors::StoreMotors()+0xe4>
  e4:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  eb:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  ef:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
  f2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  f9:	89 ce                	mov    %ecx,%esi
  fb:	48 89 c7             	mov    %rax,%rdi
  fe:	e8 00 00 00 00       	call   103 <StoreMotors::StoreMotors()+0x103>
 103:	8b 45 d0             	mov    -0x30(%rbp),%eax
 106:	83 f8 ff             	cmp    $0xffffffff,%eax
 109:	75 1f                	jne    12a <StoreMotors::StoreMotors()+0x12a>
 10b:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
 112:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
 116:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
 119:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 120:	89 ce                	mov    %ecx,%esi
 122:	48 89 c7             	mov    %rax,%rdi
 125:	e8 00 00 00 00       	call   12a <StoreMotors::StoreMotors()+0x12a>
 12a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 12e:	ba 18 00 00 00       	mov    $0x18,%edx
 133:	be ff 00 00 00       	mov    $0xff,%esi
 138:	48 89 c7             	mov    %rax,%rdi
 13b:	e8 00 00 00 00       	call   140 <StoreMotors::StoreMotors()+0x140>
 140:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
 147:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
 14b:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
 14e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 155:	89 ce                	mov    %ecx,%esi
 157:	48 89 c7             	mov    %rax,%rdi
 15a:	e8 00 00 00 00       	call   15f <StoreMotors::StoreMotors()+0x15f>
 15f:	8b 45 90             	mov    -0x70(%rbp),%eax
 162:	83 f8 ff             	cmp    $0xffffffff,%eax
 165:	75 1f                	jne    186 <StoreMotors::StoreMotors()+0x186>
 167:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
 16e:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
 172:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
 175:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 17c:	89 ce                	mov    %ecx,%esi
 17e:	48 89 c7             	mov    %rax,%rdi
 181:	e8 00 00 00 00       	call   186 <StoreMotors::StoreMotors()+0x186>
 186:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 18a:	ba 19 00 00 00       	mov    $0x19,%edx
 18f:	be ff 00 00 00       	mov    $0xff,%esi
 194:	48 89 c7             	mov    %rax,%rdi
 197:	e8 00 00 00 00       	call   19c <StoreMotors::StoreMotors()+0x19c>
 19c:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
 1a3:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
 1a7:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
 1aa:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 1b1:	89 ce                	mov    %ecx,%esi
 1b3:	48 89 c7             	mov    %rax,%rdi
 1b6:	e8 00 00 00 00       	call   1bb <StoreMotors::StoreMotors()+0x1bb>
 1bb:	8b 45 b0             	mov    -0x50(%rbp),%eax
 1be:	83 f8 ff             	cmp    $0xffffffff,%eax
 1c1:	75 1f                	jne    1e2 <StoreMotors::StoreMotors()+0x1e2>
 1c3:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
 1ca:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
 1ce:	8b 4d 8c             	mov    -0x74(%rbp),%ecx
 1d1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 1d8:	89 ce                	mov    %ecx,%esi
 1da:	48 89 c7             	mov    %rax,%rdi
 1dd:	e8 00 00 00 00       	call   1e2 <StoreMotors::StoreMotors()+0x1e2>
 1e2:	83 45 8c 01          	addl   $0x1,-0x74(%rbp)
 1e6:	83 7d 8c 07          	cmpl   $0x7,-0x74(%rbp)
 1ea:	0f 86 de fe ff ff    	jbe    ce <StoreMotors::StoreMotors()+0xce>
 1f0:	90                   	nop
 1f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1f5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 1fc:	00 00 
 1fe:	74 05                	je     205 <StoreMotors::StoreMotors()+0x205>
 200:	e8 00 00 00 00       	call   205 <StoreMotors::StoreMotors()+0x205>
 205:	c9                   	leave  
 206:	c3                   	ret    

Disassembly of section .text._ZN11StoreMotors6UpdateEjPK11TModeParams:

0000000000000000 <StoreMotors::Update(unsigned int, TModeParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	e8 00 00 00 00       	call   1c <StoreMotors::Update(unsigned int, TModeParams const*)+0x1c>
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  22:	c1 e0 07             	shl    $0x7,%eax
  25:	89 c2                	mov    %eax,%edx
  27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2b:	48 83 ec 08          	sub    $0x8,%rsp
  2f:	6a 00                	push   $0x0
  31:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  37:	41 b8 28 00 00 00    	mov    $0x28,%r8d
  3d:	48 89 c1             	mov    %rax,%rcx
  40:	be 14 00 00 00       	mov    $0x14,%esi
  45:	e8 00 00 00 00       	call   4a <StoreMotors::Update(unsigned int, TModeParams const*)+0x4a>
  4a:	48 83 c4 10          	add    $0x10,%rsp
  4e:	90                   	nop
  4f:	c9                   	leave  
  50:	c3                   	ret    

Disassembly of section .text._ZN11StoreMotors4CopyEjP11TModeParams:

0000000000000000 <StoreMotors::Copy(unsigned int, TModeParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	e8 00 00 00 00       	call   1c <StoreMotors::Copy(unsigned int, TModeParams*)+0x1c>
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  22:	c1 e0 07             	shl    $0x7,%eax
  25:	89 c2                	mov    %eax,%edx
  27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2b:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  31:	41 89 d0             	mov    %edx,%r8d
  34:	b9 28 00 00 00       	mov    $0x28,%ecx
  39:	48 89 c2             	mov    %rax,%rdx
  3c:	be 14 00 00 00       	mov    $0x14,%esi
  41:	e8 00 00 00 00       	call   46 <StoreMotors::Copy(unsigned int, TModeParams*)+0x46>
  46:	90                   	nop
  47:	c9                   	leave  
  48:	c3                   	ret    

Disassembly of section .text._ZN11StoreMotors6UpdateEjPK12TMotorParams:

0000000000000000 <StoreMotors::Update(unsigned int, TMotorParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	e8 00 00 00 00       	call   1c <StoreMotors::Update(unsigned int, TMotorParams const*)+0x1c>
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  22:	c1 e0 07             	shl    $0x7,%eax
  25:	8d 50 40             	lea    0x40(%rax),%edx
  28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2c:	48 83 ec 08          	sub    $0x8,%rsp
  30:	6a 00                	push   $0x0
  32:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  38:	41 b8 18 00 00 00    	mov    $0x18,%r8d
  3e:	48 89 c1             	mov    %rax,%rcx
  41:	be 14 00 00 00       	mov    $0x14,%esi
  46:	e8 00 00 00 00       	call   4b <StoreMotors::Update(unsigned int, TMotorParams const*)+0x4b>
  4b:	48 83 c4 10          	add    $0x10,%rsp
  4f:	90                   	nop
  50:	c9                   	leave  
  51:	c3                   	ret    

Disassembly of section .text._ZThn8_N11StoreMotors6UpdateEjPK12TMotorParams:

0000000000000000 <non-virtual thunk to StoreMotors::Update(unsigned int, TMotorParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreMotors::Update(unsigned int, TMotorParams const*)+0xd>

Disassembly of section .text._ZN11StoreMotors4CopyEjP12TMotorParams:

0000000000000000 <StoreMotors::Copy(unsigned int, TMotorParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	e8 00 00 00 00       	call   1c <StoreMotors::Copy(unsigned int, TMotorParams*)+0x1c>
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  22:	c1 e0 07             	shl    $0x7,%eax
  25:	8d 50 40             	lea    0x40(%rax),%edx
  28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2c:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  32:	41 89 d0             	mov    %edx,%r8d
  35:	b9 18 00 00 00       	mov    $0x18,%ecx
  3a:	48 89 c2             	mov    %rax,%rdx
  3d:	be 14 00 00 00       	mov    $0x14,%esi
  42:	e8 00 00 00 00       	call   47 <StoreMotors::Copy(unsigned int, TMotorParams*)+0x47>
  47:	90                   	nop
  48:	c9                   	leave  
  49:	c3                   	ret    

Disassembly of section .text._ZThn8_N11StoreMotors4CopyEjP12TMotorParams:

0000000000000000 <non-virtual thunk to StoreMotors::Copy(unsigned int, TMotorParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreMotors::Copy(unsigned int, TMotorParams*)+0xd>

Disassembly of section .text._ZN11StoreMotors6UpdateEjPK12TL6470Params:

0000000000000000 <StoreMotors::Update(unsigned int, TL6470Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	e8 00 00 00 00       	call   1c <StoreMotors::Update(unsigned int, TL6470Params const*)+0x1c>
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  22:	c1 e0 07             	shl    $0x7,%eax
  25:	8d 50 60             	lea    0x60(%rax),%edx
  28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2c:	48 83 ec 08          	sub    $0x8,%rsp
  30:	6a 00                	push   $0x0
  32:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  38:	41 b8 19 00 00 00    	mov    $0x19,%r8d
  3e:	48 89 c1             	mov    %rax,%rcx
  41:	be 14 00 00 00       	mov    $0x14,%esi
  46:	e8 00 00 00 00       	call   4b <StoreMotors::Update(unsigned int, TL6470Params const*)+0x4b>
  4b:	48 83 c4 10          	add    $0x10,%rsp
  4f:	90                   	nop
  50:	c9                   	leave  
  51:	c3                   	ret    

Disassembly of section .text._ZThn16_N11StoreMotors6UpdateEjPK12TL6470Params:

0000000000000000 <non-virtual thunk to StoreMotors::Update(unsigned int, TL6470Params const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 10          	sub    $0x10,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreMotors::Update(unsigned int, TL6470Params const*)+0xd>

Disassembly of section .text._ZN11StoreMotors4CopyEjP12TL6470Params:

0000000000000000 <StoreMotors::Copy(unsigned int, TL6470Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	e8 00 00 00 00       	call   1c <StoreMotors::Copy(unsigned int, TL6470Params*)+0x1c>
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  22:	c1 e0 07             	shl    $0x7,%eax
  25:	8d 50 60             	lea    0x60(%rax),%edx
  28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2c:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  32:	41 89 d0             	mov    %edx,%r8d
  35:	b9 19 00 00 00       	mov    $0x19,%ecx
  3a:	48 89 c2             	mov    %rax,%rdx
  3d:	be 14 00 00 00       	mov    $0x14,%esi
  42:	e8 00 00 00 00       	call   47 <StoreMotors::Copy(unsigned int, TL6470Params*)+0x47>
  47:	90                   	nop
  48:	c9                   	leave  
  49:	c3                   	ret    

Disassembly of section .text._ZThn16_N11StoreMotors4CopyEjP12TL6470Params:

0000000000000000 <non-virtual thunk to StoreMotors::Copy(unsigned int, TL6470Params*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 10          	sub    $0x10,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreMotors::Copy(unsigned int, TL6470Params*)+0xd>

Disassembly of section .text._ZN11StoreMotors19SaveDmxStartAddressEjt:

0000000000000000 <StoreMotors::SaveDmxStartAddress(unsigned int, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 d0                	mov    %edx,%eax
  15:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  19:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  1c:	c1 e0 07             	shl    $0x7,%eax
  1f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  22:	e8 00 00 00 00       	call   27 <StoreMotors::SaveDmxStartAddress(unsigned int, unsigned short)+0x27>
  27:	48 89 c7             	mov    %rax,%rdi
  2a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2d:	8d 50 05             	lea    0x5(%rax),%edx
  30:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  34:	48 83 ec 08          	sub    $0x8,%rsp
  38:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  3b:	51                   	push   %rcx
  3c:	41 b9 02 00 00 00    	mov    $0x2,%r9d
  42:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  48:	48 89 c1             	mov    %rax,%rcx
  4b:	be 14 00 00 00       	mov    $0x14,%esi
  50:	e8 00 00 00 00       	call   55 <StoreMotors::SaveDmxStartAddress(unsigned int, unsigned short)+0x55>
  55:	48 83 c4 10          	add    $0x10,%rsp
  59:	90                   	nop
  5a:	c9                   	leave  
  5b:	c3                   	ret    

Disassembly of section .text._ZThn24_N11StoreMotors19SaveDmxStartAddressEjt:

0000000000000000 <non-virtual thunk to StoreMotors::SaveDmxStartAddress(unsigned int, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 18          	sub    $0x18,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to StoreMotors::SaveDmxStartAddress(unsigned int, unsigned short)+0xd>

Disassembly of section .text._ZN11StoreMotorsD2Ev:

0000000000000000 <StoreMotors::~StoreMotors()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreMotors::~StoreMotors()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 25 <StoreMotors::~StoreMotors()+0x25>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	48 89 50 08          	mov    %rdx,0x8(%rax)
  2d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 34 <StoreMotors::~StoreMotors()+0x34>
  34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  38:	48 89 50 10          	mov    %rdx,0x10(%rax)
  3c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 43 <StoreMotors::~StoreMotors()+0x43>
  43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  47:	48 89 50 18          	mov    %rdx,0x18(%rax)
  4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4f:	48 83 c0 18          	add    $0x18,%rax
  53:	48 89 c7             	mov    %rax,%rdi
  56:	e8 00 00 00 00       	call   5b <StoreMotors::~StoreMotors()+0x5b>
  5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5f:	48 83 c0 10          	add    $0x10,%rax
  63:	48 89 c7             	mov    %rax,%rdi
  66:	e8 00 00 00 00       	call   6b <StoreMotors::~StoreMotors()+0x6b>
  6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6f:	48 83 c0 08          	add    $0x8,%rax
  73:	48 89 c7             	mov    %rax,%rdi
  76:	e8 00 00 00 00       	call   7b <StoreMotors::~StoreMotors()+0x7b>
  7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7f:	48 89 c7             	mov    %rax,%rdi
  82:	e8 00 00 00 00       	call   87 <StoreMotors::~StoreMotors()+0x87>
  87:	90                   	nop
  88:	c9                   	leave  
  89:	c3                   	ret    

000000000000008a <non-virtual thunk to StoreMotors::~StoreMotors()>:
  8a:	f3 0f 1e fa          	endbr64 
  8e:	48 83 ef 08          	sub    $0x8,%rdi
  92:	e9 69 ff ff ff       	jmp    0 <StoreMotors::~StoreMotors()>

0000000000000097 <non-virtual thunk to StoreMotors::~StoreMotors()>:
  97:	f3 0f 1e fa          	endbr64 
  9b:	48 83 ef 10          	sub    $0x10,%rdi
  9f:	e9 5c ff ff ff       	jmp    0 <StoreMotors::~StoreMotors()>

00000000000000a4 <non-virtual thunk to StoreMotors::~StoreMotors()>:
  a4:	f3 0f 1e fa          	endbr64 
  a8:	48 83 ef 18          	sub    $0x18,%rdi
  ac:	e9 4f ff ff ff       	jmp    0 <StoreMotors::~StoreMotors()>

Disassembly of section .text._ZN11StoreMotorsD0Ev:

0000000000000000 <StoreMotors::~StoreMotors()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreMotors::~StoreMotors()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreMotors::~StoreMotors()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

000000000000002a <non-virtual thunk to StoreMotors::~StoreMotors()>:
  2a:	f3 0f 1e fa          	endbr64 
  2e:	48 83 ef 08          	sub    $0x8,%rdi
  32:	eb cc                	jmp    0 <StoreMotors::~StoreMotors()>

0000000000000034 <non-virtual thunk to StoreMotors::~StoreMotors()>:
  34:	f3 0f 1e fa          	endbr64 
  38:	48 83 ef 10          	sub    $0x10,%rdi
  3c:	eb c2                	jmp    0 <StoreMotors::~StoreMotors()>

000000000000003e <non-virtual thunk to StoreMotors::~StoreMotors()>:
  3e:	f3 0f 1e fa          	endbr64 
  42:	48 83 ef 18          	sub    $0x18,%rdi
  46:	eb b8                	jmp    0 <StoreMotors::~StoreMotors()>

storeslushdmx.o:     file format elf64-x86-64


Disassembly of section .text._ZN19SlushDmxParamsStoreD2Ev:

0000000000000000 <SlushDmxParamsStore::~SlushDmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <SlushDmxParamsStore::~SlushDmxParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN19SlushDmxParamsStoreD0Ev:

0000000000000000 <SlushDmxParamsStore::~SlushDmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <SlushDmxParamsStore::~SlushDmxParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <SlushDmxParamsStore::~SlushDmxParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN19SlushDmxParamsStoreC2Ev:

0000000000000000 <SlushDmxParamsStore::SlushDmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <SlushDmxParamsStore::SlushDmxParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN13StoreSlushDmxC2Ev:

0000000000000000 <StoreSlushDmx::StoreSlushDmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreSlushDmx::StoreSlushDmx()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <StoreSlushDmx::StoreSlushDmx()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 35 <StoreSlushDmx::StoreSlushDmx()+0x35>
  35:	90                   	nop
  36:	c9                   	leave  
  37:	c3                   	ret    

Disassembly of section .text._ZN13StoreSlushDmx6UpdateEPK15TSlushDmxParams:

0000000000000000 <StoreSlushDmx::Update(TSlushDmxParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreSlushDmx::Update(TSlushDmxParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 0b 00 00 00       	mov    $0xb,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 13 00 00 00       	mov    $0x13,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreSlushDmx::Update(TSlushDmxParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN13StoreSlushDmx4CopyEP15TSlushDmxParams:

0000000000000000 <StoreSlushDmx::Copy(TSlushDmxParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreSlushDmx::Copy(TSlushDmxParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 0b 00 00 00       	mov    $0xb,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 13 00 00 00       	mov    $0x13,%esi
  39:	e8 00 00 00 00       	call   3e <StoreSlushDmx::Copy(TSlushDmxParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN13StoreSlushDmx6UpdateEjPK15TSlushDmxParams:

0000000000000000 <StoreSlushDmx::Update(unsigned int, TSlushDmxParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  13:	90                   	nop
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN13StoreSlushDmx4CopyEjP15TSlushDmxParams:

0000000000000000 <StoreSlushDmx::Copy(unsigned int, TSlushDmxParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  13:	90                   	nop
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN13StoreSlushDmxD2Ev:

0000000000000000 <StoreSlushDmx::~StoreSlushDmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreSlushDmx::~StoreSlushDmx()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreSlushDmx::~StoreSlushDmx()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN13StoreSlushDmxD0Ev:

0000000000000000 <StoreSlushDmx::~StoreSlushDmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreSlushDmx::~StoreSlushDmx()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreSlushDmx::~StoreSlushDmx()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

storesparkfundmx.o:     file format elf64-x86-64


Disassembly of section .text._ZN22SparkFunDmxParamsStoreD2Ev:

0000000000000000 <SparkFunDmxParamsStore::~SparkFunDmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <SparkFunDmxParamsStore::~SparkFunDmxParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN22SparkFunDmxParamsStoreD0Ev:

0000000000000000 <SparkFunDmxParamsStore::~SparkFunDmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <SparkFunDmxParamsStore::~SparkFunDmxParamsStore()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <SparkFunDmxParamsStore::~SparkFunDmxParamsStore()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore6UpdateEN11configstore5StoreEPKvj:

0000000000000000 <ConfigStore::Update(configstore::Store, void const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  21:	8b 75 f4             	mov    -0xc(%rbp),%esi
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	48 83 ec 08          	sub    $0x8,%rsp
  2c:	6a 00                	push   $0x0
  2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  34:	41 89 c8             	mov    %ecx,%r8d
  37:	48 89 d1             	mov    %rdx,%rcx
  3a:	ba 00 00 00 00       	mov    $0x0,%edx
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <ConfigStore::Update(configstore::Store, void const*, unsigned int)+0x47>
  47:	48 83 c4 10          	add    $0x10,%rsp
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN22SparkFunDmxParamsStoreC2Ev:

0000000000000000 <SparkFunDmxParamsStore::SparkFunDmxParamsStore()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <SparkFunDmxParamsStore::SparkFunDmxParamsStore()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN16StoreSparkFunDmxC2Ev:

0000000000000000 <StoreSparkFunDmx::StoreSparkFunDmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	call   2b <StoreSparkFunDmx::StoreSparkFunDmx()+0x2b>
  2b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 32 <StoreSparkFunDmx::StoreSparkFunDmx()+0x32>
  32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  36:	48 89 10             	mov    %rdx,(%rax)
  39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  3d:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 44 <StoreSparkFunDmx::StoreSparkFunDmx()+0x44>
  44:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4b:	eb 5a                	jmp    a7 <StoreSparkFunDmx::StoreSparkFunDmx()+0xa7>
  4d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  51:	ba 08 00 00 00       	mov    $0x8,%edx
  56:	be ff 00 00 00       	mov    $0xff,%esi
  5b:	48 89 c7             	mov    %rax,%rdi
  5e:	e8 00 00 00 00       	call   63 <StoreSparkFunDmx::StoreSparkFunDmx()+0x63>
  63:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  6a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  6e:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  75:	89 ce                	mov    %ecx,%esi
  77:	48 89 c7             	mov    %rax,%rdi
  7a:	e8 00 00 00 00       	call   7f <StoreSparkFunDmx::StoreSparkFunDmx()+0x7f>
  7f:	8b 45 f0             	mov    -0x10(%rbp),%eax
  82:	83 f8 ff             	cmp    $0xffffffff,%eax
  85:	75 1c                	jne    a3 <StoreSparkFunDmx::StoreSparkFunDmx()+0xa3>
  87:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  8e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  92:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  99:	89 ce                	mov    %ecx,%esi
  9b:	48 89 c7             	mov    %rax,%rdi
  9e:	e8 00 00 00 00       	call   a3 <StoreSparkFunDmx::StoreSparkFunDmx()+0xa3>
  a3:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  a7:	83 7d ec 07          	cmpl   $0x7,-0x14(%rbp)
  ab:	76 a0                	jbe    4d <StoreSparkFunDmx::StoreSparkFunDmx()+0x4d>
  ad:	90                   	nop
  ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b2:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  b9:	00 00 
  bb:	74 05                	je     c2 <StoreSparkFunDmx::StoreSparkFunDmx()+0xc2>
  bd:	e8 00 00 00 00       	call   c2 <StoreSparkFunDmx::StoreSparkFunDmx()+0xc2>
  c2:	c9                   	leave  
  c3:	c3                   	ret    

Disassembly of section .text._ZN16StoreSparkFunDmx6UpdateEPK18TSparkFunDmxParams:

0000000000000000 <StoreSparkFunDmx::Update(TSparkFunDmxParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreSparkFunDmx::Update(TSparkFunDmxParams const*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	b9 08 00 00 00       	mov    $0x8,%ecx
  25:	48 89 c2             	mov    %rax,%rdx
  28:	be 12 00 00 00       	mov    $0x12,%esi
  2d:	e8 00 00 00 00       	call   32 <StoreSparkFunDmx::Update(TSparkFunDmxParams const*)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN16StoreSparkFunDmx4CopyEP18TSparkFunDmxParams:

0000000000000000 <StoreSparkFunDmx::Copy(TSparkFunDmxParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	e8 00 00 00 00       	call   19 <StoreSparkFunDmx::Copy(TSparkFunDmxParams*)+0x19>
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  20:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  26:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  2c:	b9 08 00 00 00       	mov    $0x8,%ecx
  31:	48 89 c2             	mov    %rax,%rdx
  34:	be 12 00 00 00       	mov    $0x12,%esi
  39:	e8 00 00 00 00       	call   3e <StoreSparkFunDmx::Copy(TSparkFunDmxParams*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN16StoreSparkFunDmx6UpdateEjPK18TSparkFunDmxParams:

0000000000000000 <StoreSparkFunDmx::Update(unsigned int, TSparkFunDmxParams const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	e8 00 00 00 00       	call   1c <StoreSparkFunDmx::Update(unsigned int, TSparkFunDmxParams const*)+0x1c>
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  22:	83 c0 02             	add    $0x2,%eax
  25:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
  2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  30:	48 83 ec 08          	sub    $0x8,%rsp
  34:	6a 00                	push   $0x0
  36:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  3c:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  42:	48 89 c1             	mov    %rax,%rcx
  45:	be 12 00 00 00       	mov    $0x12,%esi
  4a:	e8 00 00 00 00       	call   4f <StoreSparkFunDmx::Update(unsigned int, TSparkFunDmxParams const*)+0x4f>
  4f:	48 83 c4 10          	add    $0x10,%rsp
  53:	90                   	nop
  54:	c9                   	leave  
  55:	c3                   	ret    

Disassembly of section .text._ZN16StoreSparkFunDmx4CopyEjP18TSparkFunDmxParams:

0000000000000000 <StoreSparkFunDmx::Copy(unsigned int, TSparkFunDmxParams*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	e8 00 00 00 00       	call   1c <StoreSparkFunDmx::Copy(unsigned int, TSparkFunDmxParams*)+0x1c>
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  22:	83 c0 02             	add    $0x2,%eax
  25:	8d 14 c5 00 00 00 00 	lea    0x0(,%rax,8),%edx
  2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  30:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  36:	41 89 d0             	mov    %edx,%r8d
  39:	b9 08 00 00 00       	mov    $0x8,%ecx
  3e:	48 89 c2             	mov    %rax,%rdx
  41:	be 12 00 00 00       	mov    $0x12,%esi
  46:	e8 00 00 00 00       	call   4b <StoreSparkFunDmx::Copy(unsigned int, TSparkFunDmxParams*)+0x4b>
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN16StoreSparkFunDmxD2Ev:

0000000000000000 <StoreSparkFunDmx::~StoreSparkFunDmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <StoreSparkFunDmx::~StoreSparkFunDmx()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <StoreSparkFunDmx::~StoreSparkFunDmx()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN16StoreSparkFunDmxD0Ev:

0000000000000000 <StoreSparkFunDmx::~StoreSparkFunDmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <StoreSparkFunDmx::~StoreSparkFunDmx()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <StoreSparkFunDmx::~StoreSparkFunDmx()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    
