In archive lib_linux/librdmresponder.a:

artnetrdmresponder.o:     file format elf64-x86-64


Disassembly of section .text._ZN9ArtNetRdmD2Ev:

0000000000000000 <ArtNetRdm::~ArtNetRdm()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ArtNetRdm::~ArtNetRdm()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN9ArtNetRdmD0Ev:

0000000000000000 <ArtNetRdm::~ArtNetRdm()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ArtNetRdm::~ArtNetRdm()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ArtNetRdm::~ArtNetRdm()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZNK9RDMDevice6GetUIDEv:

0000000000000000 <RDMDevice::GetUID() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 01          	add    $0x1,%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN11RDMIdentifyD2Ev:

0000000000000000 <RDMIdentify::~RDMIdentify()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponderD2Ev:

0000000000000000 <RDMDeviceResponder::~RDMDeviceResponder()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <RDMDeviceResponder::~RDMDeviceResponder()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 05 a0 00 00 00    	add    $0xa0,%rax
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <RDMDeviceResponder::~RDMDeviceResponder()+0x30>
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	48 05 90 00 00 00    	add    $0x90,%rax
  3a:	48 89 c7             	mov    %rax,%rdi
  3d:	e8 00 00 00 00       	call   42 <RDMDeviceResponder::~RDMDeviceResponder()+0x42>
  42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  46:	48 05 88 00 00 00    	add    $0x88,%rax
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	call   54 <RDMDeviceResponder::~RDMDeviceResponder()+0x54>
  54:	90                   	nop
  55:	c9                   	leave  
  56:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponderD0Ev:

0000000000000000 <RDMDeviceResponder::~RDMDeviceResponder()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <RDMDeviceResponder::~RDMDeviceResponder()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponder4FullEj:

0000000000000000 <ArtNetRdmResponder::Full(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	90                   	nop
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponder11GetUidCountEj:

0000000000000000 <ArtNetRdmResponder::GetUidCount(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	b8 01 00 00 00       	mov    $0x1,%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponder7TodCopyEjPh:

0000000000000000 <ArtNetRdmResponder::TodCopy(unsigned int, unsigned char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 83 c0 10          	add    $0x10,%rax
  1f:	48 89 c7             	mov    %rax,%rdi
  22:	e8 00 00 00 00       	call   27 <ArtNetRdmResponder::TodCopy(unsigned int, unsigned char*)+0x27>
  27:	48 89 c1             	mov    %rax,%rcx
  2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2e:	ba 06 00 00 00       	mov    $0x6,%edx
  33:	48 89 ce             	mov    %rcx,%rsi
  36:	48 89 c7             	mov    %rax,%rdi
  39:	e8 00 00 00 00       	call   3e <ArtNetRdmResponder::TodCopy(unsigned int, unsigned char*)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponder8TodResetEj:

0000000000000000 <ArtNetRdmResponder::TodReset(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	90                   	nop
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponder9TodAddUidEjPKh:

0000000000000000 <ArtNetRdmResponder::TodAddUid(unsigned int, unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  13:	b8 00 00 00 00       	mov    $0x0,%eax
  18:	5d                   	pop    %rbp
  19:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponder10RdmReceiveEjPh:

0000000000000000 <ArtNetRdmResponder::RdmReceive(unsigned int, unsigned char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  13:	b8 00 00 00 00       	mov    $0x0,%eax
  18:	5d                   	pop    %rbp
  19:	c3                   	ret    

Disassembly of section .text._ZN9ArtNetRdmC2Ev:

0000000000000000 <ArtNetRdm::ArtNetRdm()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ArtNetRdm::ArtNetRdm()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponderC2EPP14RDMPersonalityj:

0000000000000000 <ArtNetRdmResponder::ArtNetRdmResponder(RDMPersonality**, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <ArtNetRdmResponder::ArtNetRdmResponder(RDMPersonality**, unsigned int)+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 8d 48 08          	lea    0x8(%rax),%rcx
  2b:	8b 55 ec             	mov    -0x14(%rbp),%edx
  2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  32:	48 89 c6             	mov    %rax,%rsi
  35:	48 89 cf             	mov    %rcx,%rdi
  38:	e8 00 00 00 00       	call   3d <ArtNetRdmResponder::ArtNetRdmResponder(RDMPersonality**, unsigned int)+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 05 f8 00 00 00    	add    $0xf8,%rax
  47:	be 01 00 00 00       	mov    $0x1,%esi
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	call   54 <ArtNetRdmResponder::ArtNetRdmResponder(RDMPersonality**, unsigned int)+0x54>
  54:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5b <ArtNetRdmResponder::ArtNetRdmResponder(RDMPersonality**, unsigned int)+0x5b>
  5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5f:	48 89 10             	mov    %rdx,(%rax)
  62:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 69 <ArtNetRdmResponder::ArtNetRdmResponder(RDMPersonality**, unsigned int)+0x69>
  69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  75:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 7c <ArtNetRdmResponder::ArtNetRdmResponder(RDMPersonality**, unsigned int)+0x7c>
  7c:	90                   	nop
  7d:	c9                   	leave  
  7e:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponderD2Ev:

0000000000000000 <ArtNetRdmResponder::~ArtNetRdmResponder()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <ArtNetRdmResponder::~ArtNetRdmResponder()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 25 <ArtNetRdmResponder::~ArtNetRdmResponder()+0x25>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	48 89 50 08          	mov    %rdx,0x8(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 83 c0 08          	add    $0x8,%rax
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <ArtNetRdmResponder::~ArtNetRdmResponder()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <ArtNetRdmResponder::~ArtNetRdmResponder()+0x49>
  49:	90                   	nop
  4a:	c9                   	leave  
  4b:	c3                   	ret    

Disassembly of section .text._ZThn8_N18ArtNetRdmResponderD1Ev:

0000000000000000 <non-virtual thunk to ArtNetRdmResponder::~ArtNetRdmResponder()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to ArtNetRdmResponder::~ArtNetRdmResponder()+0xd>

Disassembly of section .text._ZN18ArtNetRdmResponderD0Ev:

0000000000000000 <ArtNetRdmResponder::~ArtNetRdmResponder()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ArtNetRdmResponder::~ArtNetRdmResponder()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ArtNetRdmResponder::~ArtNetRdmResponder()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZThn8_N18ArtNetRdmResponderD0Ev:

0000000000000000 <non-virtual thunk to ArtNetRdmResponder::~ArtNetRdmResponder()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to ArtNetRdmResponder::~ArtNetRdmResponder()+0xd>

Disassembly of section .text._ZN18ArtNetRdmResponder7HandlerEjPKh:

0000000000000000 <ArtNetRdmResponder::Handler(unsigned int, unsigned char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  1c:	75 07                	jne    25 <ArtNetRdmResponder::Handler(unsigned int, unsigned char const*)+0x25>
  1e:	b8 00 00 00 00       	mov    $0x0,%eax
  23:	eb 3a                	jmp    5f <ArtNetRdmResponder::Handler(unsigned int, unsigned char const*)+0x5f>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	48 8d 88 f8 00 00 00 	lea    0xf8(%rax),%rcx
  30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  34:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3b <ArtNetRdmResponder::Handler(unsigned int, unsigned char const*)+0x3b>
  3b:	48 89 c6             	mov    %rax,%rsi
  3e:	48 89 cf             	mov    %rcx,%rdi
  41:	e8 00 00 00 00       	call   46 <ArtNetRdmResponder::Handler(unsigned int, unsigned char const*)+0x46>
  46:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 4d <ArtNetRdmResponder::Handler(unsigned int, unsigned char const*)+0x4d>
  4d:	3c cc                	cmp    $0xcc,%al
  4f:	74 07                	je     58 <ArtNetRdmResponder::Handler(unsigned int, unsigned char const*)+0x58>
  51:	b8 00 00 00 00       	mov    $0x0,%eax
  56:	eb 07                	jmp    5f <ArtNetRdmResponder::Handler(unsigned int, unsigned char const*)+0x5f>
  58:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5f <ArtNetRdmResponder::Handler(unsigned int, unsigned char const*)+0x5f>
  5f:	c9                   	leave  
  60:	c3                   	ret    
