In archive lib_linux/libshowfile.a:

olashowfile.o:     file format elf64-x86-64


Disassembly of section .text._ZN8ShowFileD2Ev:

0000000000000000 <ShowFile::~ShowFile()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ShowFile::~ShowFile()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN8ShowFileD0Ev:

0000000000000000 <ShowFile::~ShowFile()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ShowFile::~ShowFile()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ShowFile::~ShowFile()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11OlaShowFile13ShowFileStartEv:

0000000000000000 <OlaShowFile::ShowFileStart()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 30 00 00 00       	mov    $0x30,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <OlaShowFile::ShowFileStart()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <OlaShowFile::ShowFileStart()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <OlaShowFile::ShowFileStart()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <OlaShowFile::ShowFileStart()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	c7 80 48 08 00 00 00 	movl   $0x0,0x848(%rax)
  48:	00 00 00 
  4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4f:	c7 80 4c 08 00 00 00 	movl   $0x0,0x84c(%rax)
  56:	00 00 00 
  59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5d:	48 8b 40 10          	mov    0x10(%rax),%rax
  61:	ba 00 00 00 00       	mov    $0x0,%edx
  66:	be 00 00 00 00       	mov    $0x0,%esi
  6b:	48 89 c7             	mov    %rax,%rdi
  6e:	e8 00 00 00 00       	call   73 <OlaShowFile::ShowFileStart()+0x73>
  73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  77:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%rax)
  7e:	b9 39 00 00 00       	mov    $0x39,%ecx
  83:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8a <OlaShowFile::ShowFileStart()+0x8a>
  8a:	48 89 c2             	mov    %rax,%rdx
  8d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 94 <OlaShowFile::ShowFileStart()+0x94>
  94:	48 89 c6             	mov    %rax,%rsi
  97:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9e <OlaShowFile::ShowFileStart()+0x9e>
  9e:	48 89 c7             	mov    %rax,%rdi
  a1:	b8 00 00 00 00       	mov    $0x0,%eax
  a6:	e8 00 00 00 00       	call   ab <OlaShowFile::ShowFileStart()+0xab>
  ab:	90                   	nop
  ac:	c9                   	leave  
  ad:	c3                   	ret    

Disassembly of section .text._ZN11OlaShowFile12ShowFileStopEv:

0000000000000000 <OlaShowFile::ShowFileStop()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 3d 00 00 00       	mov    $0x3d,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <OlaShowFile::ShowFileStop()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <OlaShowFile::ShowFileStop()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <OlaShowFile::ShowFileStop()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <OlaShowFile::ShowFileStop()+0x3d>
  3d:	b9 3f 00 00 00       	mov    $0x3f,%ecx
  42:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 49 <OlaShowFile::ShowFileStop()+0x49>
  49:	48 89 c2             	mov    %rax,%rdx
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <OlaShowFile::ShowFileStop()+0x53>
  53:	48 89 c6             	mov    %rax,%rsi
  56:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5d <OlaShowFile::ShowFileStop()+0x5d>
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	b8 00 00 00 00       	mov    $0x0,%eax
  65:	e8 00 00 00 00       	call   6a <OlaShowFile::ShowFileStop()+0x6a>
  6a:	90                   	nop
  6b:	c9                   	leave  
  6c:	c3                   	ret    

Disassembly of section .text._ZN11OlaShowFile14ShowFileResumeEv:

0000000000000000 <OlaShowFile::ShowFileResume()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 43 00 00 00       	mov    $0x43,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <OlaShowFile::ShowFileResume()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <OlaShowFile::ShowFileResume()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <OlaShowFile::ShowFileResume()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <OlaShowFile::ShowFileResume()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	c7 80 48 08 00 00 00 	movl   $0x0,0x848(%rax)
  48:	00 00 00 
  4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4f:	c7 80 4c 08 00 00 00 	movl   $0x0,0x84c(%rax)
  56:	00 00 00 
  59:	b9 48 00 00 00       	mov    $0x48,%ecx
  5e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 65 <OlaShowFile::ShowFileResume()+0x65>
  65:	48 89 c2             	mov    %rax,%rdx
  68:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6f <OlaShowFile::ShowFileResume()+0x6f>
  6f:	48 89 c6             	mov    %rax,%rsi
  72:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 79 <OlaShowFile::ShowFileResume()+0x79>
  79:	48 89 c7             	mov    %rax,%rdi
  7c:	b8 00 00 00 00       	mov    $0x0,%eax
  81:	e8 00 00 00 00       	call   86 <OlaShowFile::ShowFileResume()+0x86>
  86:	90                   	nop
  87:	c9                   	leave  
  88:	c3                   	ret    

Disassembly of section .text._ZN11OlaShowFile13ShowFilePrintEv:

0000000000000000 <OlaShowFile::ShowFilePrint()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 17 <OlaShowFile::ShowFilePrint()+0x17>
  17:	48 89 c7             	mov    %rax,%rdi
  1a:	e8 00 00 00 00       	call   1f <OlaShowFile::ShowFilePrint()+0x1f>
  1f:	90                   	nop
  20:	c9                   	leave  
  21:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN11OlaShowFile11ShowFileRunEv:

0000000000000000 <OlaShowFile::ShowFileRun()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	8b 40 44             	mov    0x44(%rax),%eax
  17:	83 f8 02             	cmp    $0x2,%eax
  1a:	0f 84 17 01 00 00    	je     137 <OlaShowFile::ShowFileRun()+0x137>
  20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <OlaShowFile::ShowFileRun()+0x2c>
  2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  30:	89 42 40             	mov    %eax,0x40(%rdx)
  33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  37:	8b 40 40             	mov    0x40(%rax),%eax
  3a:	83 f8 02             	cmp    $0x2,%eax
  3d:	75 5f                	jne    9e <OlaShowFile::ShowFileRun()+0x9e>
  3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  43:	8b 80 54 0a 00 00    	mov    0xa54(%rax),%eax
  49:	85 c0                	test   %eax,%eax
  4b:	0f 84 e6 00 00 00    	je     137 <OlaShowFile::ShowFileRun()+0x137>
  51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  55:	48 8b 40 18          	mov    0x18(%rax),%rax
  59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  5d:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  61:	48 8b 12             	mov    (%rdx),%rdx
  64:	48 83 c2 10          	add    $0x10,%rdx
  68:	4c 8b 02             	mov    (%rdx),%r8
  6b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  6f:	8b 92 54 0a 00 00    	mov    0xa54(%rdx),%edx
  75:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  79:	48 8d b9 52 08 00 00 	lea    0x852(%rcx),%rdi
  80:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  84:	0f b7 89 50 08 00 00 	movzwl 0x850(%rcx),%ecx
  8b:	0f b7 f1             	movzwl %cx,%esi
  8e:	89 d1                	mov    %edx,%ecx
  90:	48 89 fa             	mov    %rdi,%rdx
  93:	48 89 c7             	mov    %rax,%rdi
  96:	41 ff d0             	call   *%r8
  99:	e9 99 00 00 00       	jmp    137 <OlaShowFile::ShowFileRun()+0x137>
  9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a2:	8b 40 40             	mov    0x40(%rax),%eax
  a5:	83 f8 01             	cmp    $0x1,%eax
  a8:	75 48                	jne    f2 <OlaShowFile::ShowFileRun()+0xf2>
  aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ae:	8b 80 48 08 00 00    	mov    0x848(%rax),%eax
  b4:	85 c0                	test   %eax,%eax
  b6:	74 2d                	je     e5 <OlaShowFile::ShowFileRun()+0xe5>
  b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  bc:	8b 80 54 0a 00 00    	mov    0xa54(%rax),%eax
  c2:	85 c0                	test   %eax,%eax
  c4:	74 1f                	je     e5 <OlaShowFile::ShowFileRun()+0xe5>
  c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ca:	48 8b 40 18          	mov    0x18(%rax),%rax
  ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  d2:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  d6:	48 8b 12             	mov    (%rdx),%rdx
  d9:	48 83 c2 18          	add    $0x18,%rdx
  dd:	48 8b 12             	mov    (%rdx),%rdx
  e0:	48 89 c7             	mov    %rax,%rdi
  e3:	ff d2                	call   *%rdx
  e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e9:	c7 40 44 02 00 00 00 	movl   $0x2,0x44(%rax)
  f0:	eb 45                	jmp    137 <OlaShowFile::ShowFileRun()+0x137>
  f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f6:	8b 40 40             	mov    0x40(%rax),%eax
  f9:	83 f8 04             	cmp    $0x4,%eax
  fc:	75 39                	jne    137 <OlaShowFile::ShowFileRun()+0x137>
  fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 102:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
 106:	84 c0                	test   %al,%al
 108:	74 1c                	je     126 <OlaShowFile::ShowFileRun()+0x126>
 10a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 10e:	48 8b 40 10          	mov    0x10(%rax),%rax
 112:	ba 00 00 00 00       	mov    $0x0,%edx
 117:	be 00 00 00 00       	mov    $0x0,%esi
 11c:	48 89 c7             	mov    %rax,%rdi
 11f:	e8 00 00 00 00       	call   124 <OlaShowFile::ShowFileRun()+0x124>
 124:	eb 11                	jmp    137 <OlaShowFile::ShowFileRun()+0x137>
 126:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 12a:	be 03 00 00 00       	mov    $0x3,%esi
 12f:	48 89 c7             	mov    %rax,%rdi
 132:	e8 00 00 00 00       	call   137 <OlaShowFile::ShowFileRun()+0x137>
 137:	e8 00 00 00 00       	call   13c <OlaShowFile::ShowFileRun()+0x13c>
 13c:	48 89 c7             	mov    %rax,%rdi
 13f:	e8 00 00 00 00       	call   144 <OlaShowFile::ShowFileRun()+0x144>
 144:	89 45 fc             	mov    %eax,-0x4(%rbp)
 147:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 14b:	8b 88 4c 08 00 00    	mov    0x84c(%rax),%ecx
 151:	8b 45 fc             	mov    -0x4(%rbp),%eax
 154:	29 c8                	sub    %ecx,%eax
 156:	89 c2                	mov    %eax,%edx
 158:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 15c:	8b 80 48 08 00 00    	mov    0x848(%rax),%eax
 162:	39 c2                	cmp    %eax,%edx
 164:	72 18                	jb     17e <OlaShowFile::ShowFileRun()+0x17e>
 166:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 16a:	8b 55 fc             	mov    -0x4(%rbp),%edx
 16d:	89 90 4c 08 00 00    	mov    %edx,0x84c(%rax)
 173:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 177:	c7 40 44 01 00 00 00 	movl   $0x1,0x44(%rax)
 17e:	90                   	nop
 17f:	c9                   	leave  
 180:	c3                   	ret    

Disassembly of section .text._ZN11OlaShowFile12ParseDmxDataEPKc:

0000000000000000 <OlaShowFile::ParseDmxData(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  18:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  1c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  23:	00 
  24:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  2b:	e9 ef 00 00 00       	jmp    11f <OlaShowFile::ParseDmxData(char const*)+0x11f>
  30:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  34:	48 89 d0             	mov    %rdx,%rax
  37:	48 c1 e0 02          	shl    $0x2,%rax
  3b:	48 01 d0             	add    %rdx,%rax
  3e:	48 01 c0             	add    %rax,%rax
  41:	48 89 c2             	mov    %rax,%rdx
  44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  48:	0f b6 00             	movzbl (%rax),%eax
  4b:	48 0f be c0          	movsbq %al,%rax
  4f:	48 01 d0             	add    %rdx,%rax
  52:	48 83 e8 30          	sub    $0x30,%rax
  56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  5a:	48 81 7d f8 ff 00 00 	cmpq   $0xff,-0x8(%rbp)
  61:	00 
  62:	7e 37                	jle    9b <OlaShowFile::ParseDmxData(char const*)+0x9b>
  64:	b9 4f 00 00 00       	mov    $0x4f,%ecx
  69:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 70 <OlaShowFile::ParseDmxData(char const*)+0x70>
  70:	48 89 c2             	mov    %rax,%rdx
  73:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7a <OlaShowFile::ParseDmxData(char const*)+0x7a>
  7a:	48 89 c6             	mov    %rax,%rsi
  7d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 84 <OlaShowFile::ParseDmxData(char const*)+0x84>
  84:	48 89 c7             	mov    %rax,%rdi
  87:	b8 00 00 00 00       	mov    $0x0,%eax
  8c:	e8 00 00 00 00       	call   91 <OlaShowFile::ParseDmxData(char const*)+0x91>
  91:	b8 00 00 00 00       	mov    $0x0,%eax
  96:	e9 b5 00 00 00       	jmp    150 <OlaShowFile::ParseDmxData(char const*)+0x150>
  9b:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  a4:	0f b6 00             	movzbl (%rax),%eax
  a7:	3c 2c                	cmp    $0x2c,%al
  a9:	74 12                	je     bd <OlaShowFile::ParseDmxData(char const*)+0xbd>
  ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  af:	0f b6 00             	movzbl (%rax),%eax
  b2:	0f be c0             	movsbl %al,%eax
  b5:	83 e8 30             	sub    $0x30,%eax
  b8:	83 f8 09             	cmp    $0x9,%eax
  bb:	76 62                	jbe    11f <OlaShowFile::ParseDmxData(char const*)+0x11f>
  bd:	81 7d ec 00 02 00 00 	cmpl   $0x200,-0x14(%rbp)
  c4:	76 34                	jbe    fa <OlaShowFile::ParseDmxData(char const*)+0xfa>
  c6:	b9 58 00 00 00       	mov    $0x58,%ecx
  cb:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # d2 <OlaShowFile::ParseDmxData(char const*)+0xd2>
  d2:	48 89 c2             	mov    %rax,%rdx
  d5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # dc <OlaShowFile::ParseDmxData(char const*)+0xdc>
  dc:	48 89 c6             	mov    %rax,%rsi
  df:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # e6 <OlaShowFile::ParseDmxData(char const*)+0xe6>
  e6:	48 89 c7             	mov    %rax,%rdi
  e9:	b8 00 00 00 00       	mov    $0x0,%eax
  ee:	e8 00 00 00 00       	call   f3 <OlaShowFile::ParseDmxData(char const*)+0xf3>
  f3:	b8 00 00 00 00       	mov    $0x0,%eax
  f8:	eb 56                	jmp    150 <OlaShowFile::ParseDmxData(char const*)+0x150>
  fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  fe:	89 c1                	mov    %eax,%ecx
 100:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 104:	8b 45 ec             	mov    -0x14(%rbp),%eax
 107:	88 8c 02 52 08 00 00 	mov    %cl,0x852(%rdx,%rax,1)
 10e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 115:	00 
 116:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 11a:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 11f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 123:	0f b6 00             	movzbl (%rax),%eax
 126:	0f be c0             	movsbl %al,%eax
 129:	83 e8 30             	sub    $0x30,%eax
 12c:	83 f8 09             	cmp    $0x9,%eax
 12f:	0f 96 c0             	setbe  %al
 132:	0f b6 c0             	movzbl %al,%eax
 135:	83 f8 01             	cmp    $0x1,%eax
 138:	0f 84 f2 fe ff ff    	je     30 <OlaShowFile::ParseDmxData(char const*)+0x30>
 13e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 142:	8b 55 ec             	mov    -0x14(%rbp),%edx
 145:	89 90 54 0a 00 00    	mov    %edx,0xa54(%rax)
 14b:	b8 02 00 00 00       	mov    $0x2,%eax
 150:	c9                   	leave  
 151:	c3                   	ret    

Disassembly of section .text._ZN11OlaShowFile9ParseLineEPKc:

0000000000000000 <OlaShowFile::ParseLine(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  23:	eb 25                	jmp    4a <OlaShowFile::ParseLine(char const*)+0x4a>
  25:	8b 55 f4             	mov    -0xc(%rbp),%edx
  28:	89 d0                	mov    %edx,%eax
  2a:	c1 e0 02             	shl    $0x2,%eax
  2d:	01 d0                	add    %edx,%eax
  2f:	01 c0                	add    %eax,%eax
  31:	89 c2                	mov    %eax,%edx
  33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  37:	0f b6 00             	movzbl (%rax),%eax
  3a:	0f be c0             	movsbl %al,%eax
  3d:	01 d0                	add    %edx,%eax
  3f:	83 e8 30             	sub    $0x30,%eax
  42:	89 45 f4             	mov    %eax,-0xc(%rbp)
  45:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	0f b6 00             	movzbl (%rax),%eax
  51:	0f be c0             	movsbl %al,%eax
  54:	83 e8 30             	sub    $0x30,%eax
  57:	83 f8 09             	cmp    $0x9,%eax
  5a:	0f 96 c0             	setbe  %al
  5d:	0f b6 c0             	movzbl %al,%eax
  60:	83 f8 01             	cmp    $0x1,%eax
  63:	74 c0                	je     25 <OlaShowFile::ParseLine(char const*)+0x25>
  65:	81 7d f4 ff ff 00 00 	cmpl   $0xffff,-0xc(%rbp)
  6c:	7e 07                	jle    75 <OlaShowFile::ParseLine(char const*)+0x75>
  6e:	b8 00 00 00 00       	mov    $0x0,%eax
  73:	eb 5d                	jmp    d2 <OlaShowFile::ParseLine(char const*)+0xd2>
  75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  79:	48 8d 50 01          	lea    0x1(%rax),%rdx
  7d:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  81:	0f b6 00             	movzbl (%rax),%eax
  84:	3c 20                	cmp    $0x20,%al
  86:	0f 94 c0             	sete   %al
  89:	84 c0                	test   %al,%al
  8b:	74 33                	je     c0 <OlaShowFile::ParseLine(char const*)+0xc0>
  8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  91:	c7 80 48 08 00 00 00 	movl   $0x0,0x848(%rax)
  98:	00 00 00 
  9b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  9e:	89 c2                	mov    %eax,%edx
  a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a4:	66 89 90 50 08 00 00 	mov    %dx,0x850(%rax)
  ab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b3:	48 89 d6             	mov    %rdx,%rsi
  b6:	48 89 c7             	mov    %rax,%rdi
  b9:	e8 00 00 00 00       	call   be <OlaShowFile::ParseLine(char const*)+0xbe>
  be:	eb 12                	jmp    d2 <OlaShowFile::ParseLine(char const*)+0xd2>
  c0:	8b 55 f4             	mov    -0xc(%rbp),%edx
  c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c7:	89 90 48 08 00 00    	mov    %edx,0x848(%rax)
  cd:	b8 01 00 00 00       	mov    $0x1,%eax
  d2:	c9                   	leave  
  d3:	c3                   	ret    

Disassembly of section .text._ZN11OlaShowFile11GetNextLineEv:

0000000000000000 <OlaShowFile::GetNextLine()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 40 10          	mov    0x10(%rax),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	74 6d                	je     8a <OlaShowFile::GetNextLine()+0x8a>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8b 40 10          	mov    0x10(%rax),%rax
  25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  29:	48 8d 4a 48          	lea    0x48(%rdx),%rcx
  2d:	48 89 c2             	mov    %rax,%rdx
  30:	be ff 07 00 00       	mov    $0x7ff,%esi
  35:	48 89 cf             	mov    %rcx,%rdi
  38:	e8 00 00 00 00       	call   3d <OlaShowFile::GetNextLine()+0x3d>
  3d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  41:	48 83 c2 48          	add    $0x48,%rdx
  45:	48 39 d0             	cmp    %rdx,%rax
  48:	0f 95 c0             	setne  %al
  4b:	84 c0                	test   %al,%al
  4d:	74 07                	je     56 <OlaShowFile::GetNextLine()+0x56>
  4f:	b8 04 00 00 00       	mov    $0x4,%eax
  54:	eb 39                	jmp    8f <OlaShowFile::GetNextLine()+0x8f>
  56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5a:	0f b6 40 48          	movzbl 0x48(%rax),%eax
  5e:	0f be c0             	movsbl %al,%eax
  61:	83 e8 30             	sub    $0x30,%eax
  64:	83 f8 09             	cmp    $0x9,%eax
  67:	0f 96 c0             	setbe  %al
  6a:	0f b6 c0             	movzbl %al,%eax
  6d:	85 c0                	test   %eax,%eax
  6f:	74 19                	je     8a <OlaShowFile::GetNextLine()+0x8a>
  71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  75:	48 8d 50 48          	lea    0x48(%rax),%rdx
  79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7d:	48 89 d6             	mov    %rdx,%rsi
  80:	48 89 c7             	mov    %rax,%rdi
  83:	e8 00 00 00 00       	call   88 <OlaShowFile::GetNextLine()+0x88>
  88:	eb 05                	jmp    8f <OlaShowFile::GetNextLine()+0x8f>
  8a:	b8 00 00 00 00       	mov    $0x0,%eax
  8f:	c9                   	leave  
  90:	c3                   	ret    

Disassembly of section .text._ZN11OlaShowFileD2Ev:

0000000000000000 <OlaShowFile::~OlaShowFile()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <OlaShowFile::~OlaShowFile()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <OlaShowFile::~OlaShowFile()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN11OlaShowFileD0Ev:

0000000000000000 <OlaShowFile::~OlaShowFile()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <OlaShowFile::~OlaShowFile()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <OlaShowFile::~OlaShowFile()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

showfileconst.o:     file format elf64-x86-64


showfile.o:     file format elf64-x86-64


Disassembly of section .text._ZN8ShowFile4StopEv:

0000000000000000 <ShowFile::Stop()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 50 00 00 00       	mov    $0x50,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFile::Stop()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFile::Stop()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFile::Stop()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFile::Stop()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 8b 40 10          	mov    0x10(%rax),%rax
  45:	48 85 c0             	test   %rax,%rax
  48:	74 28                	je     72 <ShowFile::Stop()+0x72>
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	48 8b 00             	mov    (%rax),%rax
  51:	48 83 c0 18          	add    $0x18,%rax
  55:	48 8b 10             	mov    (%rax),%rdx
  58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	ff d2                	call   *%rdx
  61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  65:	be 02 00 00 00       	mov    $0x2,%esi
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	e8 00 00 00 00       	call   72 <ShowFile::Stop()+0x72>
  72:	b9 57 00 00 00       	mov    $0x57,%ecx
  77:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7e <ShowFile::Stop()+0x7e>
  7e:	48 89 c2             	mov    %rax,%rdx
  81:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 88 <ShowFile::Stop()+0x88>
  88:	48 89 c6             	mov    %rax,%rsi
  8b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 92 <ShowFile::Stop()+0x92>
  92:	48 89 c7             	mov    %rax,%rdi
  95:	b8 00 00 00 00       	mov    $0x0,%eax
  9a:	e8 00 00 00 00       	call   9f <ShowFile::Stop()+0x9f>
  9f:	90                   	nop
  a0:	c9                   	leave  
  a1:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile19UpdateDisplayStatusEv:

0000000000000000 <ShowFile::UpdateDisplayStatus()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 40 20          	mov    0x20(%rax),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	74 1f                	je     3c <ShowFile::UpdateDisplayStatus()+0x3c>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8b 40 20          	mov    0x20(%rax),%rax
  25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  29:	48 8b 52 20          	mov    0x20(%rdx),%rdx
  2d:	48 8b 12             	mov    (%rdx),%rdx
  30:	48 83 c2 18          	add    $0x18,%rdx
  34:	48 8b 12             	mov    (%rdx),%rdx
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	ff d2                	call   *%rdx
  3c:	90                   	nop
  3d:	c9                   	leave  
  3e:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN8ShowFileC2Ev:

0000000000000000 <ShowFile::ShowFile()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <ShowFile::ShowFile()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	c7 40 08 64 00 00 00 	movl   $0x64,0x8(%rax)
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	c6 40 0c 00          	movb   $0x0,0xc(%rax)
  31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  35:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  3c:	00 
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  48:	00 
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  54:	00 
  55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  59:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  64:	c6 40 37 00          	movb   $0x0,0x37(%rax)
  68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6c:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
  73:	00 
  74:	b9 28 00 00 00       	mov    $0x28,%ecx
  79:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 80 <ShowFile::ShowFile()+0x80>
  80:	48 89 c2             	mov    %rax,%rdx
  83:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8a <ShowFile::ShowFile()+0x8a>
  8a:	48 89 c6             	mov    %rax,%rsi
  8d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 94 <ShowFile::ShowFile()+0x94>
  94:	48 89 c7             	mov    %rax,%rdi
  97:	b8 00 00 00 00       	mov    $0x0,%eax
  9c:	e8 00 00 00 00       	call   a1 <ShowFile::ShowFile()+0xa1>
  a1:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # a8 <ShowFile::ShowFile()+0xa8>
  a8:	48 85 c0             	test   %rax,%rax
  ab:	74 28                	je     d5 <ShowFile::ShowFile()+0xd5>
  ad:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b4 <ShowFile::ShowFile()+0xb4>
  b4:	48 89 c1             	mov    %rax,%rcx
  b7:	ba 2a 00 00 00       	mov    $0x2a,%edx
  bc:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # c3 <ShowFile::ShowFile()+0xc3>
  c3:	48 89 c6             	mov    %rax,%rsi
  c6:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # cd <ShowFile::ShowFile()+0xcd>
  cd:	48 89 c7             	mov    %rax,%rdi
  d0:	e8 00 00 00 00       	call   d5 <ShowFile::ShowFile()+0xd5>
  d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d9:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # e0 <ShowFile::ShowFile()+0xe0>
  e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e4:	c6 40 2c 00          	movb   $0x0,0x2c(%rax)
  e8:	b9 2f 00 00 00       	mov    $0x2f,%ecx
  ed:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # f4 <ShowFile::ShowFile()+0xf4>
  f4:	48 89 c2             	mov    %rax,%rdx
  f7:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # fe <ShowFile::ShowFile()+0xfe>
  fe:	48 89 c6             	mov    %rax,%rsi
 101:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 108 <ShowFile::ShowFile()+0x108>
 108:	48 89 c7             	mov    %rax,%rdi
 10b:	b8 00 00 00 00       	mov    $0x0,%eax
 110:	e8 00 00 00 00       	call   115 <ShowFile::ShowFile()+0x115>
 115:	90                   	nop
 116:	c9                   	leave  
 117:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile11SetShowFileEj:

0000000000000000 <ShowFile::SetShowFile(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	b9 33 00 00 00       	mov    $0x33,%ecx
  18:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f <ShowFile::SetShowFile(unsigned int)+0x1f>
  1f:	48 89 c2             	mov    %rax,%rdx
  22:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 29 <ShowFile::SetShowFile(unsigned int)+0x29>
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 33 <ShowFile::SetShowFile(unsigned int)+0x33>
  33:	48 89 c7             	mov    %rax,%rdi
  36:	b8 00 00 00 00       	mov    $0x0,%eax
  3b:	e8 00 00 00 00       	call   40 <ShowFile::SetShowFile(unsigned int)+0x40>
  40:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 47 <ShowFile::SetShowFile(unsigned int)+0x47>
  47:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4a:	41 89 d1             	mov    %edx,%r9d
  4d:	41 b8 34 00 00 00    	mov    $0x34,%r8d
  53:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5a <ShowFile::SetShowFile(unsigned int)+0x5a>
  5a:	48 89 d1             	mov    %rdx,%rcx
  5d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 64 <ShowFile::SetShowFile(unsigned int)+0x64>
  64:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 6b <ShowFile::SetShowFile(unsigned int)+0x6b>
  6b:	48 89 c7             	mov    %rax,%rdi
  6e:	b8 00 00 00 00       	mov    $0x0,%eax
  73:	e8 00 00 00 00       	call   78 <ShowFile::SetShowFile(unsigned int)+0x78>
  78:	83 7d f4 63          	cmpl   $0x63,-0xc(%rbp)
  7c:	0f 87 59 01 00 00    	ja     1db <ShowFile::SetShowFile(unsigned int)+0x1db>
  82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  86:	48 8b 00             	mov    (%rax),%rax
  89:	48 83 c0 18          	add    $0x18,%rax
  8d:	48 8b 10             	mov    (%rax),%rdx
  90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  94:	48 89 c7             	mov    %rax,%rdi
  97:	ff d2                	call   *%rdx
  99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  9d:	48 8b 40 10          	mov    0x10(%rax),%rax
  a1:	48 85 c0             	test   %rax,%rax
  a4:	74 34                	je     da <ShowFile::SetShowFile(unsigned int)+0xda>
  a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  aa:	48 8b 40 10          	mov    0x10(%rax),%rax
  ae:	48 89 c7             	mov    %rax,%rdi
  b1:	e8 00 00 00 00       	call   b6 <ShowFile::SetShowFile(unsigned int)+0xb6>
  b6:	85 c0                	test   %eax,%eax
  b8:	0f 95 c0             	setne  %al
  bb:	84 c0                	test   %al,%al
  bd:	74 0f                	je     ce <ShowFile::SetShowFile(unsigned int)+0xce>
  bf:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # c6 <ShowFile::SetShowFile(unsigned int)+0xc6>
  c6:	48 89 c7             	mov    %rax,%rdi
  c9:	e8 00 00 00 00       	call   ce <ShowFile::SetShowFile(unsigned int)+0xce>
  ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d2:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  d9:	00 
  da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  de:	8b 55 f4             	mov    -0xc(%rbp),%edx
  e1:	89 50 08             	mov    %edx,0x8(%rax)
  e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e8:	48 8d 48 2c          	lea    0x2c(%rax),%rcx
  ec:	8b 45 f4             	mov    -0xc(%rbp),%eax
  ef:	89 c2                	mov    %eax,%edx
  f1:	be 0b 00 00 00       	mov    $0xb,%esi
  f6:	48 89 cf             	mov    %rcx,%rdi
  f9:	e8 00 00 00 00       	call   fe <ShowFile::SetShowFile(unsigned int)+0xfe>
  fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 102:	48 8d 50 2c          	lea    0x2c(%rax),%rdx
 106:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 10d <ShowFile::SetShowFile(unsigned int)+0x10d>
 10d:	49 89 d1             	mov    %rdx,%r9
 110:	41 b8 44 00 00 00    	mov    $0x44,%r8d
 116:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 11d <ShowFile::SetShowFile(unsigned int)+0x11d>
 11d:	48 89 d1             	mov    %rdx,%rcx
 120:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 127 <ShowFile::SetShowFile(unsigned int)+0x127>
 127:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 12e <ShowFile::SetShowFile(unsigned int)+0x12e>
 12e:	48 89 c7             	mov    %rax,%rdi
 131:	b8 00 00 00 00       	mov    $0x0,%eax
 136:	e8 00 00 00 00       	call   13b <ShowFile::SetShowFile(unsigned int)+0x13b>
 13b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 13f:	48 83 c0 2c          	add    $0x2c,%rax
 143:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 14a <ShowFile::SetShowFile(unsigned int)+0x14a>
 14a:	48 89 d6             	mov    %rdx,%rsi
 14d:	48 89 c7             	mov    %rax,%rdi
 150:	e8 00 00 00 00       	call   155 <ShowFile::SetShowFile(unsigned int)+0x155>
 155:	48 89 c2             	mov    %rax,%rdx
 158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 15c:	48 89 50 10          	mov    %rdx,0x10(%rax)
 160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 164:	48 8b 40 10          	mov    0x10(%rax),%rax
 168:	48 85 c0             	test   %rax,%rax
 16b:	75 18                	jne    185 <ShowFile::SetShowFile(unsigned int)+0x185>
 16d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 171:	48 83 c0 2c          	add    $0x2c,%rax
 175:	48 89 c7             	mov    %rax,%rdi
 178:	e8 00 00 00 00       	call   17d <ShowFile::SetShowFile(unsigned int)+0x17d>
 17d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 181:	c6 40 2c 00          	movb   $0x0,0x2c(%rax)
 185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 189:	48 8b 40 20          	mov    0x20(%rax),%rax
 18d:	48 85 c0             	test   %rax,%rax
 190:	74 49                	je     1db <ShowFile::SetShowFile(unsigned int)+0x1db>
 192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 196:	48 8b 40 20          	mov    0x20(%rax),%rax
 19a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 19e:	48 8b 52 20          	mov    0x20(%rdx),%rdx
 1a2:	48 8b 12             	mov    (%rdx),%rdx
 1a5:	48 83 c2 10          	add    $0x10,%rdx
 1a9:	48 8b 0a             	mov    (%rdx),%rcx
 1ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 1b0:	48 8d 72 2c          	lea    0x2c(%rdx),%rsi
 1b4:	8b 55 f4             	mov    -0xc(%rbp),%edx
 1b7:	48 89 c7             	mov    %rax,%rdi
 1ba:	ff d1                	call   *%rcx
 1bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1c0:	48 8b 40 20          	mov    0x20(%rax),%rax
 1c4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 1c8:	48 8b 52 20          	mov    0x20(%rdx),%rdx
 1cc:	48 8b 12             	mov    (%rdx),%rdx
 1cf:	48 83 c2 18          	add    $0x18,%rdx
 1d3:	48 8b 12             	mov    (%rdx),%rdx
 1d6:	48 89 c7             	mov    %rax,%rdi
 1d9:	ff d2                	call   *%rdx
 1db:	b9 53 00 00 00       	mov    $0x53,%ecx
 1e0:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1e7 <ShowFile::SetShowFile(unsigned int)+0x1e7>
 1e7:	48 89 c2             	mov    %rax,%rdx
 1ea:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f1 <ShowFile::SetShowFile(unsigned int)+0x1f1>
 1f1:	48 89 c6             	mov    %rax,%rsi
 1f4:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1fb <ShowFile::SetShowFile(unsigned int)+0x1fb>
 1fb:	48 89 c7             	mov    %rax,%rdi
 1fe:	b8 00 00 00 00       	mov    $0x0,%eax
 203:	e8 00 00 00 00       	call   208 <ShowFile::SetShowFile(unsigned int)+0x208>
 208:	90                   	nop
 209:	c9                   	leave  
 20a:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile14DeleteShowFileEj:

0000000000000000 <ShowFile::DeleteShowFile(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	b9 57 00 00 00       	mov    $0x57,%ecx
  27:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2e <ShowFile::DeleteShowFile(unsigned int)+0x2e>
  2e:	48 89 c2             	mov    %rax,%rdx
  31:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 38 <ShowFile::DeleteShowFile(unsigned int)+0x38>
  38:	48 89 c6             	mov    %rax,%rsi
  3b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 42 <ShowFile::DeleteShowFile(unsigned int)+0x42>
  42:	48 89 c7             	mov    %rax,%rdi
  45:	b8 00 00 00 00       	mov    $0x0,%eax
  4a:	e8 00 00 00 00       	call   4f <ShowFile::DeleteShowFile(unsigned int)+0x4f>
  4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  53:	0f b6 40 37          	movzbl 0x37(%rax),%eax
  57:	0f b6 d0             	movzbl %al,%edx
  5a:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 61 <ShowFile::DeleteShowFile(unsigned int)+0x61>
  61:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  64:	48 83 ec 08          	sub    $0x8,%rsp
  68:	52                   	push   %rdx
  69:	41 89 c9             	mov    %ecx,%r9d
  6c:	41 b8 59 00 00 00    	mov    $0x59,%r8d
  72:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 79 <ShowFile::DeleteShowFile(unsigned int)+0x79>
  79:	48 89 d1             	mov    %rdx,%rcx
  7c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 83 <ShowFile::DeleteShowFile(unsigned int)+0x83>
  83:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 8a <ShowFile::DeleteShowFile(unsigned int)+0x8a>
  8a:	48 89 c7             	mov    %rax,%rdi
  8d:	b8 00 00 00 00       	mov    $0x0,%eax
  92:	e8 00 00 00 00       	call   97 <ShowFile::DeleteShowFile(unsigned int)+0x97>
  97:	48 83 c4 10          	add    $0x10,%rsp
  9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9f:	0f b6 40 37          	movzbl 0x37(%rax),%eax
  a3:	83 f0 01             	xor    $0x1,%eax
  a6:	84 c0                	test   %al,%al
  a8:	74 37                	je     e1 <ShowFile::DeleteShowFile(unsigned int)+0xe1>
  aa:	b9 5c 00 00 00       	mov    $0x5c,%ecx
  af:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b6 <ShowFile::DeleteShowFile(unsigned int)+0xb6>
  b6:	48 89 c2             	mov    %rax,%rdx
  b9:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # c0 <ShowFile::DeleteShowFile(unsigned int)+0xc0>
  c0:	48 89 c6             	mov    %rax,%rsi
  c3:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ca <ShowFile::DeleteShowFile(unsigned int)+0xca>
  ca:	48 89 c7             	mov    %rax,%rdi
  cd:	b8 00 00 00 00       	mov    $0x0,%eax
  d2:	e8 00 00 00 00       	call   d7 <ShowFile::DeleteShowFile(unsigned int)+0xd7>
  d7:	b8 00 00 00 00       	mov    $0x0,%eax
  dc:	e9 c7 00 00 00       	jmp    1a8 <ShowFile::DeleteShowFile(unsigned int)+0x1a8>
  e1:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  e4:	48 8d 45 ed          	lea    -0x13(%rbp),%rax
  e8:	be 0b 00 00 00       	mov    $0xb,%esi
  ed:	48 89 c7             	mov    %rax,%rdi
  f0:	e8 00 00 00 00       	call   f5 <ShowFile::DeleteShowFile(unsigned int)+0xf5>
  f5:	84 c0                	test   %al,%al
  f7:	74 7d                	je     176 <ShowFile::DeleteShowFile(unsigned int)+0x176>
  f9:	48 8d 45 ed          	lea    -0x13(%rbp),%rax
  fd:	48 89 c7             	mov    %rax,%rdi
 100:	e8 00 00 00 00       	call   105 <ShowFile::DeleteShowFile(unsigned int)+0x105>
 105:	89 45 e8             	mov    %eax,-0x18(%rbp)
 108:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 10f <ShowFile::DeleteShowFile(unsigned int)+0x10f>
 10f:	8b 55 e8             	mov    -0x18(%rbp),%edx
 112:	41 89 d1             	mov    %edx,%r9d
 115:	41 b8 64 00 00 00    	mov    $0x64,%r8d
 11b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 122 <ShowFile::DeleteShowFile(unsigned int)+0x122>
 122:	48 89 d1             	mov    %rdx,%rcx
 125:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 12c <ShowFile::DeleteShowFile(unsigned int)+0x12c>
 12c:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 133 <ShowFile::DeleteShowFile(unsigned int)+0x133>
 133:	48 89 c7             	mov    %rax,%rdi
 136:	b8 00 00 00 00       	mov    $0x0,%eax
 13b:	e8 00 00 00 00       	call   140 <ShowFile::DeleteShowFile(unsigned int)+0x140>
 140:	b9 65 00 00 00       	mov    $0x65,%ecx
 145:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 14c <ShowFile::DeleteShowFile(unsigned int)+0x14c>
 14c:	48 89 c2             	mov    %rax,%rdx
 14f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 156 <ShowFile::DeleteShowFile(unsigned int)+0x156>
 156:	48 89 c6             	mov    %rax,%rsi
 159:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 160 <ShowFile::DeleteShowFile(unsigned int)+0x160>
 160:	48 89 c7             	mov    %rax,%rdi
 163:	b8 00 00 00 00       	mov    $0x0,%eax
 168:	e8 00 00 00 00       	call   16d <ShowFile::DeleteShowFile(unsigned int)+0x16d>
 16d:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
 171:	0f 94 c0             	sete   %al
 174:	eb 32                	jmp    1a8 <ShowFile::DeleteShowFile(unsigned int)+0x1a8>
 176:	b9 69 00 00 00       	mov    $0x69,%ecx
 17b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 182 <ShowFile::DeleteShowFile(unsigned int)+0x182>
 182:	48 89 c2             	mov    %rax,%rdx
 185:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 18c <ShowFile::DeleteShowFile(unsigned int)+0x18c>
 18c:	48 89 c6             	mov    %rax,%rsi
 18f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 196 <ShowFile::DeleteShowFile(unsigned int)+0x196>
 196:	48 89 c7             	mov    %rax,%rdi
 199:	b8 00 00 00 00       	mov    $0x0,%eax
 19e:	e8 00 00 00 00       	call   1a3 <ShowFile::DeleteShowFile(unsigned int)+0x1a3>
 1a3:	b8 00 00 00 00       	mov    $0x0,%eax
 1a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 1ac:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 1b3:	00 00 
 1b5:	74 05                	je     1bc <ShowFile::DeleteShowFile(unsigned int)+0x1bc>
 1b7:	e8 00 00 00 00       	call   1bc <ShowFile::DeleteShowFile(unsigned int)+0x1bc>
 1bc:	c9                   	leave  
 1bd:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile10EnableTFTPEb:

0000000000000000 <ShowFile::EnableTFTP(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	89 f0                	mov    %esi,%eax
  13:	88 45 e4             	mov    %al,-0x1c(%rbp)
  16:	b9 6e 00 00 00       	mov    $0x6e,%ecx
  1b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 22 <ShowFile::EnableTFTP(bool)+0x22>
  22:	48 89 c2             	mov    %rax,%rdx
  25:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2c <ShowFile::EnableTFTP(bool)+0x2c>
  2c:	48 89 c6             	mov    %rax,%rsi
  2f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 36 <ShowFile::EnableTFTP(bool)+0x36>
  36:	48 89 c7             	mov    %rax,%rdi
  39:	b8 00 00 00 00       	mov    $0x0,%eax
  3e:	e8 00 00 00 00       	call   43 <ShowFile::EnableTFTP(bool)+0x43>
  43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  47:	0f b6 40 37          	movzbl 0x37(%rax),%eax
  4b:	38 45 e4             	cmp    %al,-0x1c(%rbp)
  4e:	75 32                	jne    82 <ShowFile::EnableTFTP(bool)+0x82>
  50:	b9 72 00 00 00       	mov    $0x72,%ecx
  55:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5c <ShowFile::EnableTFTP(bool)+0x5c>
  5c:	48 89 c2             	mov    %rax,%rdx
  5f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 66 <ShowFile::EnableTFTP(bool)+0x66>
  66:	48 89 c6             	mov    %rax,%rsi
  69:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 70 <ShowFile::EnableTFTP(bool)+0x70>
  70:	48 89 c7             	mov    %rax,%rdi
  73:	b8 00 00 00 00       	mov    $0x0,%eax
  78:	e8 00 00 00 00       	call   7d <ShowFile::EnableTFTP(bool)+0x7d>
  7d:	e9 a8 01 00 00       	jmp    22a <ShowFile::EnableTFTP(bool)+0x22a>
  82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  86:	0f b6 55 e4          	movzbl -0x1c(%rbp),%edx
  8a:	88 50 37             	mov    %dl,0x37(%rax)
  8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  91:	0f b6 40 37          	movzbl 0x37(%rax),%eax
  95:	84 c0                	test   %al,%al
  97:	0f 84 d8 00 00 00    	je     175 <ShowFile::EnableTFTP(bool)+0x175>
  9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a1:	48 8b 40 38          	mov    0x38(%rax),%rax
  a5:	48 85 c0             	test   %rax,%rax
  a8:	74 28                	je     d2 <ShowFile::EnableTFTP(bool)+0xd2>
  aa:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b1 <ShowFile::EnableTFTP(bool)+0xb1>
  b1:	48 89 c1             	mov    %rax,%rcx
  b4:	ba 79 00 00 00       	mov    $0x79,%edx
  b9:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # c0 <ShowFile::EnableTFTP(bool)+0xc0>
  c0:	48 89 c6             	mov    %rax,%rsi
  c3:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ca <ShowFile::EnableTFTP(bool)+0xca>
  ca:	48 89 c7             	mov    %rax,%rdi
  cd:	e8 00 00 00 00       	call   d2 <ShowFile::EnableTFTP(bool)+0xd2>
  d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d6:	48 89 c7             	mov    %rax,%rdi
  d9:	e8 00 00 00 00       	call   de <ShowFile::EnableTFTP(bool)+0xde>
  de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e2:	48 8b 40 10          	mov    0x10(%rax),%rax
  e6:	48 85 c0             	test   %rax,%rax
  e9:	74 34                	je     11f <ShowFile::EnableTFTP(bool)+0x11f>
  eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ef:	48 8b 40 10          	mov    0x10(%rax),%rax
  f3:	48 89 c7             	mov    %rax,%rdi
  f6:	e8 00 00 00 00       	call   fb <ShowFile::EnableTFTP(bool)+0xfb>
  fb:	85 c0                	test   %eax,%eax
  fd:	0f 95 c0             	setne  %al
 100:	84 c0                	test   %al,%al
 102:	74 0f                	je     113 <ShowFile::EnableTFTP(bool)+0x113>
 104:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 10b <ShowFile::EnableTFTP(bool)+0x10b>
 10b:	48 89 c7             	mov    %rax,%rdi
 10e:	e8 00 00 00 00       	call   113 <ShowFile::EnableTFTP(bool)+0x113>
 113:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 117:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
 11e:	00 
 11f:	bf 50 02 00 00       	mov    $0x250,%edi
 124:	e8 00 00 00 00       	call   129 <ShowFile::EnableTFTP(bool)+0x129>
 129:	48 89 c3             	mov    %rax,%rbx
 12c:	48 89 df             	mov    %rbx,%rdi
 12f:	e8 00 00 00 00       	call   134 <ShowFile::EnableTFTP(bool)+0x134>
 134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 138:	48 89 58 38          	mov    %rbx,0x38(%rax)
 13c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 140:	48 8b 40 38          	mov    0x38(%rax),%rax
 144:	48 85 c0             	test   %rax,%rax
 147:	0f 85 a4 00 00 00    	jne    1f1 <ShowFile::EnableTFTP(bool)+0x1f1>
 14d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 154 <ShowFile::EnableTFTP(bool)+0x154>
 154:	48 89 c1             	mov    %rax,%rcx
 157:	ba 85 00 00 00       	mov    $0x85,%edx
 15c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 163 <ShowFile::EnableTFTP(bool)+0x163>
 163:	48 89 c6             	mov    %rax,%rsi
 166:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 16d <ShowFile::EnableTFTP(bool)+0x16d>
 16d:	48 89 c7             	mov    %rax,%rdi
 170:	e8 00 00 00 00       	call   175 <ShowFile::EnableTFTP(bool)+0x175>
 175:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 179:	48 8b 40 38          	mov    0x38(%rax),%rax
 17d:	48 85 c0             	test   %rax,%rax
 180:	75 28                	jne    1aa <ShowFile::EnableTFTP(bool)+0x1aa>
 182:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 189 <ShowFile::EnableTFTP(bool)+0x189>
 189:	48 89 c1             	mov    %rax,%rcx
 18c:	ba 87 00 00 00       	mov    $0x87,%edx
 191:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 198 <ShowFile::EnableTFTP(bool)+0x198>
 198:	48 89 c6             	mov    %rax,%rsi
 19b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1a2 <ShowFile::EnableTFTP(bool)+0x1a2>
 1a2:	48 89 c7             	mov    %rax,%rdi
 1a5:	e8 00 00 00 00       	call   1aa <ShowFile::EnableTFTP(bool)+0x1aa>
 1aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1ae:	48 8b 40 38          	mov    0x38(%rax),%rax
 1b2:	48 85 c0             	test   %rax,%rax
 1b5:	74 08                	je     1bf <ShowFile::EnableTFTP(bool)+0x1bf>
 1b7:	48 89 c7             	mov    %rax,%rdi
 1ba:	e8 00 00 00 00       	call   1bf <ShowFile::EnableTFTP(bool)+0x1bf>
 1bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1c3:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
 1ca:	00 
 1cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1cf:	8b 50 08             	mov    0x8(%rax),%edx
 1d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1d6:	89 d6                	mov    %edx,%esi
 1d8:	48 89 c7             	mov    %rax,%rdi
 1db:	e8 00 00 00 00       	call   1e0 <ShowFile::EnableTFTP(bool)+0x1e0>
 1e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1e4:	be 00 00 00 00       	mov    $0x0,%esi
 1e9:	48 89 c7             	mov    %rax,%rdi
 1ec:	e8 00 00 00 00       	call   1f1 <ShowFile::EnableTFTP(bool)+0x1f1>
 1f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1f5:	48 89 c7             	mov    %rax,%rdi
 1f8:	e8 00 00 00 00       	call   1fd <ShowFile::EnableTFTP(bool)+0x1fd>
 1fd:	b9 92 00 00 00       	mov    $0x92,%ecx
 202:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 209 <ShowFile::EnableTFTP(bool)+0x209>
 209:	48 89 c2             	mov    %rax,%rdx
 20c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 213 <ShowFile::EnableTFTP(bool)+0x213>
 213:	48 89 c6             	mov    %rax,%rsi
 216:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 21d <ShowFile::EnableTFTP(bool)+0x21d>
 21d:	48 89 c7             	mov    %rax,%rdi
 220:	b8 00 00 00 00       	mov    $0x0,%eax
 225:	e8 00 00 00 00       	call   22a <ShowFile::EnableTFTP(bool)+0x22a>
 22a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 22e:	c9                   	leave  
 22f:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile9SetStatusEN8showfile6StatusE:

0000000000000000 <ShowFile::SetStatus(showfile::Status)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	b9 96 00 00 00       	mov    $0x96,%ecx
  18:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f <ShowFile::SetStatus(showfile::Status)+0x1f>
  1f:	48 89 c2             	mov    %rax,%rdx
  22:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 29 <ShowFile::SetStatus(showfile::Status)+0x29>
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 33 <ShowFile::SetStatus(showfile::Status)+0x33>
  33:	48 89 c7             	mov    %rax,%rdi
  36:	b8 00 00 00 00       	mov    $0x0,%eax
  3b:	e8 00 00 00 00       	call   40 <ShowFile::SetStatus(showfile::Status)+0x40>
  40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44:	8b 40 28             	mov    0x28(%rax),%eax
  47:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  4a:	75 32                	jne    7e <ShowFile::SetStatus(showfile::Status)+0x7e>
  4c:	b9 99 00 00 00       	mov    $0x99,%ecx
  51:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 58 <ShowFile::SetStatus(showfile::Status)+0x58>
  58:	48 89 c2             	mov    %rax,%rdx
  5b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 62 <ShowFile::SetStatus(showfile::Status)+0x62>
  62:	48 89 c6             	mov    %rax,%rsi
  65:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6c <ShowFile::SetStatus(showfile::Status)+0x6c>
  6c:	48 89 c7             	mov    %rax,%rdi
  6f:	b8 00 00 00 00       	mov    $0x0,%eax
  74:	e8 00 00 00 00       	call   79 <ShowFile::SetStatus(showfile::Status)+0x79>
  79:	e9 0f 01 00 00       	jmp    18d <ShowFile::SetStatus(showfile::Status)+0x18d>
  7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  82:	8b 55 f4             	mov    -0xc(%rbp),%edx
  85:	89 50 28             	mov    %edx,0x28(%rax)
  88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8c:	8b 40 28             	mov    0x28(%rax),%eax
  8f:	83 f8 03             	cmp    $0x3,%eax
  92:	0f 8f bb 00 00 00    	jg     153 <ShowFile::SetStatus(showfile::Status)+0x153>
  98:	83 f8 02             	cmp    $0x2,%eax
  9b:	7d 7e                	jge    11b <ShowFile::SetStatus(showfile::Status)+0x11b>
  9d:	85 c0                	test   %eax,%eax
  9f:	74 0a                	je     ab <ShowFile::SetStatus(showfile::Status)+0xab>
  a1:	83 f8 01             	cmp    $0x1,%eax
  a4:	74 3d                	je     e3 <ShowFile::SetStatus(showfile::Status)+0xe3>
  a6:	e9 a8 00 00 00       	jmp    153 <ShowFile::SetStatus(showfile::Status)+0x153>
  ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  af:	48 8b 40 18          	mov    0x18(%rax),%rax
  b3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  b7:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  bb:	48 8b 12             	mov    (%rdx),%rdx
  be:	48 83 c2 30          	add    $0x30,%rdx
  c2:	48 8b 12             	mov    (%rdx),%rdx
  c5:	be 01 00 00 00       	mov    $0x1,%esi
  ca:	48 89 c7             	mov    %rax,%rdi
  cd:	ff d2                	call   *%rdx
  cf:	e8 00 00 00 00       	call   d4 <ShowFile::SetStatus(showfile::Status)+0xd4>
  d4:	be 02 00 00 00       	mov    $0x2,%esi
  d9:	48 89 c7             	mov    %rax,%rdi
  dc:	e8 00 00 00 00       	call   e1 <ShowFile::SetStatus(showfile::Status)+0xe1>
  e1:	eb 71                	jmp    154 <ShowFile::SetStatus(showfile::Status)+0x154>
  e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e7:	48 8b 40 18          	mov    0x18(%rax),%rax
  eb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  ef:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  f3:	48 8b 12             	mov    (%rdx),%rdx
  f6:	48 83 c2 30          	add    $0x30,%rdx
  fa:	48 8b 12             	mov    (%rdx),%rdx
  fd:	be 00 00 00 00       	mov    $0x0,%esi
 102:	48 89 c7             	mov    %rax,%rdi
 105:	ff d2                	call   *%rdx
 107:	e8 00 00 00 00       	call   10c <ShowFile::SetStatus(showfile::Status)+0x10c>
 10c:	be 03 00 00 00       	mov    $0x3,%esi
 111:	48 89 c7             	mov    %rax,%rdi
 114:	e8 00 00 00 00       	call   119 <ShowFile::SetStatus(showfile::Status)+0x119>
 119:	eb 39                	jmp    154 <ShowFile::SetStatus(showfile::Status)+0x154>
 11b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 11f:	48 8b 40 18          	mov    0x18(%rax),%rax
 123:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 127:	48 8b 52 18          	mov    0x18(%rdx),%rdx
 12b:	48 8b 12             	mov    (%rdx),%rdx
 12e:	48 83 c2 30          	add    $0x30,%rdx
 132:	48 8b 12             	mov    (%rdx),%rdx
 135:	be 01 00 00 00       	mov    $0x1,%esi
 13a:	48 89 c7             	mov    %rax,%rdi
 13d:	ff d2                	call   *%rdx
 13f:	e8 00 00 00 00       	call   144 <ShowFile::SetStatus(showfile::Status)+0x144>
 144:	be 02 00 00 00       	mov    $0x2,%esi
 149:	48 89 c7             	mov    %rax,%rdi
 14c:	e8 00 00 00 00       	call   151 <ShowFile::SetStatus(showfile::Status)+0x151>
 151:	eb 01                	jmp    154 <ShowFile::SetStatus(showfile::Status)+0x154>
 153:	90                   	nop
 154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 158:	48 89 c7             	mov    %rax,%rdi
 15b:	e8 00 00 00 00       	call   160 <ShowFile::SetStatus(showfile::Status)+0x160>
 160:	b9 b3 00 00 00       	mov    $0xb3,%ecx
 165:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 16c <ShowFile::SetStatus(showfile::Status)+0x16c>
 16c:	48 89 c2             	mov    %rax,%rdx
 16f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 176 <ShowFile::SetStatus(showfile::Status)+0x176>
 176:	48 89 c6             	mov    %rax,%rsi
 179:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 180 <ShowFile::SetStatus(showfile::Status)+0x180>
 180:	48 89 c7             	mov    %rax,%rdi
 183:	b8 00 00 00 00       	mov    $0x0,%eax
 188:	e8 00 00 00 00       	call   18d <ShowFile::SetStatus(showfile::Status)+0x18d>
 18d:	c9                   	leave  
 18e:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTPD2Ev:

0000000000000000 <ShowFileTFTP::~ShowFileTFTP()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <ShowFileTFTP::~ShowFileTFTP()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <ShowFileTFTP::~ShowFileTFTP()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTPD0Ev:

0000000000000000 <ShowFileTFTP::~ShowFileTFTP()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ShowFileTFTP::~ShowFileTFTP()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ShowFileTFTP::~ShowFileTFTP()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

showfileosc.o:     file format elf64-x86-64


Disassembly of section .text._ZN8ShowFile5StartEv:

0000000000000000 <ShowFile::Start()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 41 00 00 00       	mov    $0x41,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFile::Start()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFile::Start()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFile::Start()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFile::Start()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	be 00 00 00 00       	mov    $0x0,%esi
  46:	48 89 c7             	mov    %rax,%rdi
  49:	e8 00 00 00 00       	call   4e <ShowFile::Start()+0x4e>
  4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  52:	48 8b 40 10          	mov    0x10(%rax),%rax
  56:	48 85 c0             	test   %rax,%rax
  59:	74 2a                	je     85 <ShowFile::Start()+0x85>
  5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5f:	48 8b 00             	mov    (%rax),%rax
  62:	48 83 c0 10          	add    $0x10,%rax
  66:	48 8b 10             	mov    (%rax),%rdx
  69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	ff d2                	call   *%rdx
  72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  76:	be 01 00 00 00       	mov    $0x1,%esi
  7b:	48 89 c7             	mov    %rax,%rdi
  7e:	e8 00 00 00 00       	call   83 <ShowFile::Start()+0x83>
  83:	eb 11                	jmp    96 <ShowFile::Start()+0x96>
  85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  89:	be 02 00 00 00       	mov    $0x2,%esi
  8e:	48 89 c7             	mov    %rax,%rdi
  91:	e8 00 00 00 00       	call   96 <ShowFile::Start()+0x96>
  96:	b9 4c 00 00 00       	mov    $0x4c,%ecx
  9b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a2 <ShowFile::Start()+0xa2>
  a2:	48 89 c2             	mov    %rax,%rdx
  a5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ac <ShowFile::Start()+0xac>
  ac:	48 89 c6             	mov    %rax,%rsi
  af:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b6 <ShowFile::Start()+0xb6>
  b6:	48 89 c7             	mov    %rax,%rdi
  b9:	b8 00 00 00 00       	mov    $0x0,%eax
  be:	e8 00 00 00 00       	call   c3 <ShowFile::Start()+0xc3>
  c3:	90                   	nop
  c4:	c9                   	leave  
  c5:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile4StopEv:

0000000000000000 <ShowFile::Stop()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 50 00 00 00       	mov    $0x50,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFile::Stop()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFile::Stop()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFile::Stop()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFile::Stop()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 8b 40 10          	mov    0x10(%rax),%rax
  45:	48 85 c0             	test   %rax,%rax
  48:	74 28                	je     72 <ShowFile::Stop()+0x72>
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	48 8b 00             	mov    (%rax),%rax
  51:	48 83 c0 18          	add    $0x18,%rax
  55:	48 8b 10             	mov    (%rax),%rdx
  58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	ff d2                	call   *%rdx
  61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  65:	be 02 00 00 00       	mov    $0x2,%esi
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	e8 00 00 00 00       	call   72 <ShowFile::Stop()+0x72>
  72:	b9 57 00 00 00       	mov    $0x57,%ecx
  77:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7e <ShowFile::Stop()+0x7e>
  7e:	48 89 c2             	mov    %rax,%rdx
  81:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 88 <ShowFile::Stop()+0x88>
  88:	48 89 c6             	mov    %rax,%rsi
  8b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 92 <ShowFile::Stop()+0x92>
  92:	48 89 c7             	mov    %rax,%rdi
  95:	b8 00 00 00 00       	mov    $0x0,%eax
  9a:	e8 00 00 00 00       	call   9f <ShowFile::Stop()+0x9f>
  9f:	90                   	nop
  a0:	c9                   	leave  
  a1:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile6ResumeEv:

0000000000000000 <ShowFile::Resume()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 5b 00 00 00       	mov    $0x5b,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFile::Resume()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFile::Resume()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFile::Resume()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFile::Resume()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 8b 40 10          	mov    0x10(%rax),%rax
  45:	48 85 c0             	test   %rax,%rax
  48:	74 28                	je     72 <ShowFile::Resume()+0x72>
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	48 8b 00             	mov    (%rax),%rax
  51:	48 83 c0 20          	add    $0x20,%rax
  55:	48 8b 10             	mov    (%rax),%rdx
  58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	ff d2                	call   *%rdx
  61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  65:	be 01 00 00 00       	mov    $0x1,%esi
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	e8 00 00 00 00       	call   72 <ShowFile::Resume()+0x72>
  72:	b9 62 00 00 00       	mov    $0x62,%ecx
  77:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7e <ShowFile::Resume()+0x7e>
  7e:	48 89 c2             	mov    %rax,%rdx
  81:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 88 <ShowFile::Resume()+0x88>
  88:	48 89 c6             	mov    %rax,%rsi
  8b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 92 <ShowFile::Resume()+0x92>
  92:	48 89 c7             	mov    %rax,%rdi
  95:	b8 00 00 00 00       	mov    $0x0,%eax
  9a:	e8 00 00 00 00       	call   9f <ShowFile::Resume()+0x9f>
  9f:	90                   	nop
  a0:	c9                   	leave  
  a1:	c3                   	ret    

Disassembly of section .text._ZNK8ShowFile9GetStatusEv:

0000000000000000 <ShowFile::GetStatus() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 28             	mov    0x28(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK8ShowFile15GetShowFileNameEv:

0000000000000000 <ShowFile::GetShowFileName() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 2c          	add    $0x2c,%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile6DoLoopEb:

0000000000000000 <ShowFile::DoLoop(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  15:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  19:	88 50 0c             	mov    %dl,0xc(%rax)
  1c:	90                   	nop
  1d:	5d                   	pop    %rbp
  1e:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile8BlackOutEv:

0000000000000000 <ShowFile::BlackOut()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 40 18          	mov    0x18(%rax),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	74 2b                	je     48 <ShowFile::BlackOut()+0x48>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <ShowFile::BlackOut()+0x29>
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	48 8b 40 18          	mov    0x18(%rax),%rax
  31:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  35:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  39:	48 8b 12             	mov    (%rdx),%rdx
  3c:	48 83 c2 20          	add    $0x20,%rdx
  40:	48 8b 12             	mov    (%rdx),%rdx
  43:	48 89 c7             	mov    %rax,%rdi
  46:	ff d2                	call   *%rdx
  48:	90                   	nop
  49:	c9                   	leave  
  4a:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile9SetMasterEj:

0000000000000000 <ShowFile::SetMaster(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 40 18          	mov    0x18(%rax),%rax
  1b:	48 85 c0             	test   %rax,%rax
  1e:	74 24                	je     44 <ShowFile::SetMaster(unsigned int)+0x44>
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	48 8b 40 18          	mov    0x18(%rax),%rax
  28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2c:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  30:	48 8b 12             	mov    (%rdx),%rdx
  33:	48 83 c2 28          	add    $0x28,%rdx
  37:	48 8b 0a             	mov    (%rdx),%rcx
  3a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  3d:	89 d6                	mov    %edx,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	ff d1                	call   *%rcx
  44:	90                   	nop
  45:	c9                   	leave  
  46:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile19UpdateDisplayStatusEv:

0000000000000000 <ShowFile::UpdateDisplayStatus()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 40 20          	mov    0x20(%rax),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	74 1f                	je     3c <ShowFile::UpdateDisplayStatus()+0x3c>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8b 40 20          	mov    0x20(%rax),%rax
  25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  29:	48 8b 52 20          	mov    0x20(%rdx),%rdx
  2d:	48 8b 12             	mov    (%rdx),%rdx
  30:	48 83 c2 18          	add    $0x18,%rdx
  34:	48 8b 12             	mov    (%rdx),%rdx
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	ff d2                	call   *%rdx
  3c:	90                   	nop
  3d:	c9                   	leave  
  3e:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile3GetEv:

0000000000000000 <ShowFile::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ShowFile::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN16OscSimpleMessage7GetTypeEj:

0000000000000000 <OscSimpleMessage::GetType(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  13:	8b 40 18             	mov    0x18(%rax),%eax
  16:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  19:	73 13                	jae    2e <OscSimpleMessage::GetType(unsigned int)+0x2e>
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	48 8b 50 10          	mov    0x10(%rax),%rdx
  23:	8b 45 f4             	mov    -0xc(%rbp),%eax
  26:	48 01 d0             	add    %rdx,%rax
  29:	0f b6 00             	movzbl (%rax),%eax
  2c:	eb 05                	jmp    33 <OscSimpleMessage::GetType(unsigned int)+0x33>
  2e:	b8 00 00 00 00       	mov    $0x0,%eax
  33:	5d                   	pop    %rbp
  34:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Network::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN11ShowFileOSCC2Ev:

0000000000000000 <ShowFileOSC::ShowFileOSC()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	66 c7 00 40 1f       	movw   $0x1f40,(%rax)
  19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1d:	66 c7 40 02 28 23    	movw   $0x2328,0x2(%rax)
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%rax)
  2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  32:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	66 c7 40 0c 00 00    	movw   $0x0,0xc(%rax)
  43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  47:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  4e:	00 
  4f:	b9 50 00 00 00       	mov    $0x50,%ecx
  54:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5b <ShowFileOSC::ShowFileOSC()+0x5b>
  5b:	48 89 c2             	mov    %rax,%rdx
  5e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 65 <ShowFileOSC::ShowFileOSC()+0x65>
  65:	48 89 c6             	mov    %rax,%rsi
  68:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6f <ShowFileOSC::ShowFileOSC()+0x6f>
  6f:	48 89 c7             	mov    %rax,%rdi
  72:	b8 00 00 00 00       	mov    $0x0,%eax
  77:	e8 00 00 00 00       	call   7c <ShowFileOSC::ShowFileOSC()+0x7c>
  7c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 83 <ShowFileOSC::ShowFileOSC()+0x83>
  83:	48 85 c0             	test   %rax,%rax
  86:	74 28                	je     b0 <ShowFileOSC::ShowFileOSC()+0xb0>
  88:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8f <ShowFileOSC::ShowFileOSC()+0x8f>
  8f:	48 89 c1             	mov    %rax,%rcx
  92:	ba 52 00 00 00       	mov    $0x52,%edx
  97:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9e <ShowFileOSC::ShowFileOSC()+0x9e>
  9e:	48 89 c6             	mov    %rax,%rsi
  a1:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a8 <ShowFileOSC::ShowFileOSC()+0xa8>
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	call   b0 <ShowFileOSC::ShowFileOSC()+0xb0>
  b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b4:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # bb <ShowFileOSC::ShowFileOSC()+0xbb>
  bb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  c2:	eb 17                	jmp    db <ShowFileOSC::ShowFileOSC()+0xdb>
  c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c8:	8b 55 fc             	mov    -0x4(%rbp),%edx
  cb:	48 83 c2 04          	add    $0x4,%rdx
  cf:	c7 44 90 08 ff ff ff 	movl   $0xffffffff,0x8(%rax,%rdx,4)
  d6:	ff 
  d7:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  db:	83 7d fc 13          	cmpl   $0x13,-0x4(%rbp)
  df:	76 e3                	jbe    c4 <ShowFileOSC::ShowFileOSC()+0xc4>
  e1:	b9 59 00 00 00       	mov    $0x59,%ecx
  e6:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ed <ShowFileOSC::ShowFileOSC()+0xed>
  ed:	48 89 c2             	mov    %rax,%rdx
  f0:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # f7 <ShowFileOSC::ShowFileOSC()+0xf7>
  f7:	48 89 c6             	mov    %rax,%rsi
  fa:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 101 <ShowFileOSC::ShowFileOSC()+0x101>
 101:	48 89 c7             	mov    %rax,%rdi
 104:	b8 00 00 00 00       	mov    $0x0,%eax
 109:	e8 00 00 00 00       	call   10e <ShowFileOSC::ShowFileOSC()+0x10e>
 10e:	90                   	nop
 10f:	c9                   	leave  
 110:	c3                   	ret    

Disassembly of section .text._ZN11ShowFileOSCD2Ev:

0000000000000000 <ShowFileOSC::~ShowFileOSC()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 5d 00 00 00       	mov    $0x5d,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFileOSC::~ShowFileOSC()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFileOSC::~ShowFileOSC()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFileOSC::~ShowFileOSC()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFileOSC::~ShowFileOSC()+0x3d>
  3d:	b9 5f 00 00 00       	mov    $0x5f,%ecx
  42:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 49 <ShowFileOSC::~ShowFileOSC()+0x49>
  49:	48 89 c2             	mov    %rax,%rdx
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <ShowFileOSC::~ShowFileOSC()+0x53>
  53:	48 89 c6             	mov    %rax,%rsi
  56:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5d <ShowFileOSC::~ShowFileOSC()+0x5d>
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	b8 00 00 00 00       	mov    $0x0,%eax
  65:	e8 00 00 00 00       	call   6a <ShowFileOSC::~ShowFileOSC()+0x6a>
  6a:	90                   	nop
  6b:	c9                   	leave  
  6c:	c3                   	ret    

Disassembly of section .text._ZN11ShowFileOSC5StartEv:

0000000000000000 <ShowFileOSC::Start()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 63 00 00 00       	mov    $0x63,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFileOSC::Start()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFileOSC::Start()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFileOSC::Start()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFileOSC::Start()+0x3d>
  3d:	e8 00 00 00 00       	call   42 <ShowFileOSC::Start()+0x42>
  42:	48 89 c2             	mov    %rax,%rdx
  45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  49:	0f b7 00             	movzwl (%rax),%eax
  4c:	0f b7 c0             	movzwl %ax,%eax
  4f:	89 c6                	mov    %eax,%esi
  51:	48 89 d7             	mov    %rdx,%rdi
  54:	e8 00 00 00 00       	call   59 <ShowFileOSC::Start()+0x59>
  59:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  5d:	89 42 04             	mov    %eax,0x4(%rdx)
  60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  64:	8b 40 04             	mov    0x4(%rax),%eax
  67:	83 f8 ff             	cmp    $0xffffffff,%eax
  6a:	75 28                	jne    94 <ShowFileOSC::Start()+0x94>
  6c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 73 <ShowFileOSC::Start()+0x73>
  73:	48 89 c1             	mov    %rax,%rcx
  76:	ba 66 00 00 00       	mov    $0x66,%edx
  7b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 82 <ShowFileOSC::Start()+0x82>
  82:	48 89 c6             	mov    %rax,%rsi
  85:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8c <ShowFileOSC::Start()+0x8c>
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	e8 00 00 00 00       	call   94 <ShowFileOSC::Start()+0x94>
  94:	b9 68 00 00 00       	mov    $0x68,%ecx
  99:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a0 <ShowFileOSC::Start()+0xa0>
  a0:	48 89 c2             	mov    %rax,%rdx
  a3:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # aa <ShowFileOSC::Start()+0xaa>
  aa:	48 89 c6             	mov    %rax,%rsi
  ad:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b4 <ShowFileOSC::Start()+0xb4>
  b4:	48 89 c7             	mov    %rax,%rdi
  b7:	b8 00 00 00 00       	mov    $0x0,%eax
  bc:	e8 00 00 00 00       	call   c1 <ShowFileOSC::Start()+0xc1>
  c1:	90                   	nop
  c2:	c9                   	leave  
  c3:	c3                   	ret    

Disassembly of section .text._ZN11ShowFileOSC4StopEv:

0000000000000000 <ShowFileOSC::Stop()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 6c 00 00 00       	mov    $0x6c,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFileOSC::Stop()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFileOSC::Stop()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFileOSC::Stop()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFileOSC::Stop()+0x3d>
  3d:	b9 70 00 00 00       	mov    $0x70,%ecx
  42:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 49 <ShowFileOSC::Stop()+0x49>
  49:	48 89 c2             	mov    %rax,%rdx
  4c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 53 <ShowFileOSC::Stop()+0x53>
  53:	48 89 c6             	mov    %rax,%rsi
  56:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5d <ShowFileOSC::Stop()+0x5d>
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	b8 00 00 00 00       	mov    $0x0,%eax
  65:	e8 00 00 00 00       	call   6a <ShowFileOSC::Stop()+0x6a>
  6a:	90                   	nop
  6b:	c9                   	leave  
  6c:	c3                   	ret    

Disassembly of section .text._ZN11ShowFileOSC3RunEv:

0000000000000000 <ShowFileOSC::Run()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  10:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1e:	00 00 
  20:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  24:	31 c0                	xor    %eax,%eax
  26:	e8 00 00 00 00       	call   2b <ShowFileOSC::Run()+0x2b>
  2b:	48 89 c7             	mov    %rax,%rdi
  2e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  35:	48 8d 70 0c          	lea    0xc(%rax),%rsi
  39:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40:	48 8d 48 08          	lea    0x8(%rax),%rcx
  44:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4b:	48 8d 50 10          	lea    0x10(%rax),%rdx
  4f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  56:	8b 40 04             	mov    0x4(%rax),%eax
  59:	49 89 f0             	mov    %rsi,%r8
  5c:	89 c6                	mov    %eax,%esi
  5e:	e8 00 00 00 00       	call   63 <ShowFileOSC::Run()+0x63>
  63:	66 89 45 82          	mov    %ax,-0x7e(%rbp)
  67:	66 83 7d 82 0a       	cmpw   $0xa,-0x7e(%rbp)
  6c:	0f 96 c0             	setbe  %al
  6f:	0f b6 c0             	movzbl %al,%eax
  72:	48 85 c0             	test   %rax,%rax
  75:	0f 85 66 0a 00 00    	jne    ae1 <ShowFileOSC::Run()+0xae1>
  7b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  82:	48 8b 40 10          	mov    0x10(%rax),%rax
  86:	ba 0a 00 00 00       	mov    $0xa,%edx
  8b:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 92 <ShowFileOSC::Run()+0x92>
  92:	48 89 ce             	mov    %rcx,%rsi
  95:	48 89 c7             	mov    %rax,%rdi
  98:	e8 00 00 00 00       	call   9d <ShowFileOSC::Run()+0x9d>
  9d:	85 c0                	test   %eax,%eax
  9f:	0f 85 55 0a 00 00    	jne    afa <ShowFileOSC::Run()+0xafa>
  a5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  ac:	48 8b 40 10          	mov    0x10(%rax),%rax
  b0:	48 8d 58 0a          	lea    0xa(%rax),%rbx
  b4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  bb:	48 8b 40 10          	mov    0x10(%rax),%rax
  bf:	48 89 c7             	mov    %rax,%rdi
  c2:	e8 00 00 00 00       	call   c7 <ShowFileOSC::Run()+0xc7>
  c7:	89 c1                	mov    %eax,%ecx
  c9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  d0:	48 8b 50 10          	mov    0x10(%rax),%rdx
  d4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # db <ShowFileOSC::Run()+0xdb>
  db:	48 83 ec 08          	sub    $0x8,%rsp
  df:	53                   	push   %rbx
  e0:	6a 0a                	push   $0xa
  e2:	51                   	push   %rcx
  e3:	49 89 d1             	mov    %rdx,%r9
  e6:	41 b8 7b 00 00 00    	mov    $0x7b,%r8d
  ec:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # f3 <ShowFileOSC::Run()+0xf3>
  f3:	48 89 d1             	mov    %rdx,%rcx
  f6:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # fd <ShowFileOSC::Run()+0xfd>
  fd:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 104 <ShowFileOSC::Run()+0x104>
 104:	48 89 c7             	mov    %rax,%rdi
 107:	b8 00 00 00 00       	mov    $0x0,%eax
 10c:	e8 00 00 00 00       	call   111 <ShowFileOSC::Run()+0x111>
 111:	48 83 c4 20          	add    $0x20,%rsp
 115:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 11c:	48 8b 40 10          	mov    0x10(%rax),%rax
 120:	48 83 c0 0a          	add    $0xa,%rax
 124:	ba 05 00 00 00       	mov    $0x5,%edx
 129:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 130 <ShowFileOSC::Run()+0x130>
 130:	48 89 ce             	mov    %rcx,%rsi
 133:	48 89 c7             	mov    %rax,%rdi
 136:	e8 00 00 00 00       	call   13b <ShowFileOSC::Run()+0x13b>
 13b:	85 c0                	test   %eax,%eax
 13d:	75 5a                	jne    199 <ShowFileOSC::Run()+0x199>
 13f:	e8 00 00 00 00       	call   144 <ShowFileOSC::Run()+0x144>
 144:	48 89 c7             	mov    %rax,%rdi
 147:	e8 00 00 00 00       	call   14c <ShowFileOSC::Run()+0x14c>
 14c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 153:	48 89 c7             	mov    %rax,%rdi
 156:	e8 00 00 00 00       	call   15b <ShowFileOSC::Run()+0x15b>
 15b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 162 <ShowFileOSC::Run()+0x162>
 162:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 169 <ShowFileOSC::Run()+0x169>
 169:	41 b8 80 00 00 00    	mov    $0x80,%r8d
 16f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 176 <ShowFileOSC::Run()+0x176>
 176:	48 89 d1             	mov    %rdx,%rcx
 179:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 180 <ShowFileOSC::Run()+0x180>
 180:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 187 <ShowFileOSC::Run()+0x187>
 187:	48 89 c7             	mov    %rax,%rdi
 18a:	b8 00 00 00 00       	mov    $0x0,%eax
 18f:	e8 00 00 00 00       	call   194 <ShowFileOSC::Run()+0x194>
 194:	e9 61 09 00 00       	jmp    afa <ShowFileOSC::Run()+0xafa>
 199:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 1a0:	48 8b 40 10          	mov    0x10(%rax),%rax
 1a4:	48 83 c0 0a          	add    $0xa,%rax
 1a8:	ba 04 00 00 00       	mov    $0x4,%edx
 1ad:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 1b4 <ShowFileOSC::Run()+0x1b4>
 1b4:	48 89 ce             	mov    %rcx,%rsi
 1b7:	48 89 c7             	mov    %rax,%rdi
 1ba:	e8 00 00 00 00       	call   1bf <ShowFileOSC::Run()+0x1bf>
 1bf:	85 c0                	test   %eax,%eax
 1c1:	75 5a                	jne    21d <ShowFileOSC::Run()+0x21d>
 1c3:	e8 00 00 00 00       	call   1c8 <ShowFileOSC::Run()+0x1c8>
 1c8:	48 89 c7             	mov    %rax,%rdi
 1cb:	e8 00 00 00 00       	call   1d0 <ShowFileOSC::Run()+0x1d0>
 1d0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 1d7:	48 89 c7             	mov    %rax,%rdi
 1da:	e8 00 00 00 00       	call   1df <ShowFileOSC::Run()+0x1df>
 1df:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1e6 <ShowFileOSC::Run()+0x1e6>
 1e6:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 1ed <ShowFileOSC::Run()+0x1ed>
 1ed:	41 b8 87 00 00 00    	mov    $0x87,%r8d
 1f3:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1fa <ShowFileOSC::Run()+0x1fa>
 1fa:	48 89 d1             	mov    %rdx,%rcx
 1fd:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 204 <ShowFileOSC::Run()+0x204>
 204:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 20b <ShowFileOSC::Run()+0x20b>
 20b:	48 89 c7             	mov    %rax,%rdi
 20e:	b8 00 00 00 00       	mov    $0x0,%eax
 213:	e8 00 00 00 00       	call   218 <ShowFileOSC::Run()+0x218>
 218:	e9 dd 08 00 00       	jmp    afa <ShowFileOSC::Run()+0xafa>
 21d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 224:	48 8b 40 10          	mov    0x10(%rax),%rax
 228:	48 83 c0 0a          	add    $0xa,%rax
 22c:	ba 06 00 00 00       	mov    $0x6,%edx
 231:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 238 <ShowFileOSC::Run()+0x238>
 238:	48 89 ce             	mov    %rcx,%rsi
 23b:	48 89 c7             	mov    %rax,%rdi
 23e:	e8 00 00 00 00       	call   243 <ShowFileOSC::Run()+0x243>
 243:	85 c0                	test   %eax,%eax
 245:	75 5a                	jne    2a1 <ShowFileOSC::Run()+0x2a1>
 247:	e8 00 00 00 00       	call   24c <ShowFileOSC::Run()+0x24c>
 24c:	48 89 c7             	mov    %rax,%rdi
 24f:	e8 00 00 00 00       	call   254 <ShowFileOSC::Run()+0x254>
 254:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 25b:	48 89 c7             	mov    %rax,%rdi
 25e:	e8 00 00 00 00       	call   263 <ShowFileOSC::Run()+0x263>
 263:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 26a <ShowFileOSC::Run()+0x26a>
 26a:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 271 <ShowFileOSC::Run()+0x271>
 271:	41 b8 8e 00 00 00    	mov    $0x8e,%r8d
 277:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 27e <ShowFileOSC::Run()+0x27e>
 27e:	48 89 d1             	mov    %rdx,%rcx
 281:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 288 <ShowFileOSC::Run()+0x288>
 288:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 28f <ShowFileOSC::Run()+0x28f>
 28f:	48 89 c7             	mov    %rax,%rdi
 292:	b8 00 00 00 00       	mov    $0x0,%eax
 297:	e8 00 00 00 00       	call   29c <ShowFileOSC::Run()+0x29c>
 29c:	e9 59 08 00 00       	jmp    afa <ShowFileOSC::Run()+0xafa>
 2a1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 2a8:	48 8b 40 10          	mov    0x10(%rax),%rax
 2ac:	48 83 c0 0a          	add    $0xa,%rax
 2b0:	ba 04 00 00 00       	mov    $0x4,%edx
 2b5:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 2bc <ShowFileOSC::Run()+0x2bc>
 2bc:	48 89 ce             	mov    %rcx,%rsi
 2bf:	48 89 c7             	mov    %rax,%rdi
 2c2:	e8 00 00 00 00       	call   2c7 <ShowFileOSC::Run()+0x2c7>
 2c7:	85 c0                	test   %eax,%eax
 2c9:	0f 85 99 00 00 00    	jne    368 <ShowFileOSC::Run()+0x368>
 2cf:	0f b7 55 82          	movzwl -0x7e(%rbp),%edx
 2d3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 2da:	48 8b 48 10          	mov    0x10(%rax),%rcx
 2de:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 2e2:	48 89 ce             	mov    %rcx,%rsi
 2e5:	48 89 c7             	mov    %rax,%rdi
 2e8:	e8 00 00 00 00       	call   2ed <ShowFileOSC::Run()+0x2ed>
 2ed:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 2f1:	be 00 00 00 00       	mov    $0x0,%esi
 2f6:	48 89 c7             	mov    %rax,%rdi
 2f9:	e8 00 00 00 00       	call   2fe <ShowFileOSC::Run()+0x2fe>
 2fe:	89 45 9c             	mov    %eax,-0x64(%rbp)
 301:	83 7d 9c 63          	cmpl   $0x63,-0x64(%rbp)
 305:	77 24                	ja     32b <ShowFileOSC::Run()+0x32b>
 307:	e8 00 00 00 00       	call   30c <ShowFileOSC::Run()+0x30c>
 30c:	48 89 c2             	mov    %rax,%rdx
 30f:	8b 45 9c             	mov    -0x64(%rbp),%eax
 312:	89 c6                	mov    %eax,%esi
 314:	48 89 d7             	mov    %rdx,%rdi
 317:	e8 00 00 00 00       	call   31c <ShowFileOSC::Run()+0x31c>
 31c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 323:	48 89 c7             	mov    %rax,%rdi
 326:	e8 00 00 00 00       	call   32b <ShowFileOSC::Run()+0x32b>
 32b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 332 <ShowFileOSC::Run()+0x332>
 332:	8b 55 9c             	mov    -0x64(%rbp),%edx
 335:	41 89 d1             	mov    %edx,%r9d
 338:	41 b8 9c 00 00 00    	mov    $0x9c,%r8d
 33e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 345 <ShowFileOSC::Run()+0x345>
 345:	48 89 d1             	mov    %rdx,%rcx
 348:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 34f <ShowFileOSC::Run()+0x34f>
 34f:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 356 <ShowFileOSC::Run()+0x356>
 356:	48 89 c7             	mov    %rax,%rdi
 359:	b8 00 00 00 00       	mov    $0x0,%eax
 35e:	e8 00 00 00 00       	call   363 <ShowFileOSC::Run()+0x363>
 363:	e9 92 07 00 00       	jmp    afa <ShowFileOSC::Run()+0xafa>
 368:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 36f:	48 8b 40 10          	mov    0x10(%rax),%rax
 373:	48 83 c0 0a          	add    $0xa,%rax
 377:	ba 04 00 00 00       	mov    $0x4,%edx
 37c:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 383 <ShowFileOSC::Run()+0x383>
 383:	48 89 ce             	mov    %rcx,%rsi
 386:	48 89 c7             	mov    %rax,%rdi
 389:	e8 00 00 00 00       	call   38e <ShowFileOSC::Run()+0x38e>
 38e:	85 c0                	test   %eax,%eax
 390:	0f 85 00 01 00 00    	jne    496 <ShowFileOSC::Run()+0x496>
 396:	0f b7 55 82          	movzwl -0x7e(%rbp),%edx
 39a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 3a1:	48 8b 48 10          	mov    0x10(%rax),%rcx
 3a5:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 3a9:	48 89 ce             	mov    %rcx,%rsi
 3ac:	48 89 c7             	mov    %rax,%rdi
 3af:	e8 00 00 00 00       	call   3b4 <ShowFileOSC::Run()+0x3b4>
 3b4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 3b8:	be 00 00 00 00       	mov    $0x0,%esi
 3bd:	48 89 c7             	mov    %rax,%rdi
 3c0:	e8 00 00 00 00       	call   3c5 <ShowFileOSC::Run()+0x3c5>
 3c5:	3c 69                	cmp    $0x69,%al
 3c7:	0f 94 c0             	sete   %al
 3ca:	84 c0                	test   %al,%al
 3cc:	74 16                	je     3e4 <ShowFileOSC::Run()+0x3e4>
 3ce:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 3d2:	be 00 00 00 00       	mov    $0x0,%esi
 3d7:	48 89 c7             	mov    %rax,%rdi
 3da:	e8 00 00 00 00       	call   3df <ShowFileOSC::Run()+0x3df>
 3df:	89 45 84             	mov    %eax,-0x7c(%rbp)
 3e2:	eb 36                	jmp    41a <ShowFileOSC::Run()+0x41a>
 3e4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 3e8:	be 00 00 00 00       	mov    $0x0,%esi
 3ed:	48 89 c7             	mov    %rax,%rdi
 3f0:	e8 00 00 00 00       	call   3f5 <ShowFileOSC::Run()+0x3f5>
 3f5:	3c 66                	cmp    $0x66,%al
 3f7:	0f 94 c0             	sete   %al
 3fa:	84 c0                	test   %al,%al
 3fc:	0f 84 e2 06 00 00    	je     ae4 <ShowFileOSC::Run()+0xae4>
 402:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 406:	be 00 00 00 00       	mov    $0x0,%esi
 40b:	48 89 c7             	mov    %rax,%rdi
 40e:	e8 00 00 00 00       	call   413 <ShowFileOSC::Run()+0x413>
 413:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
 417:	89 45 84             	mov    %eax,-0x7c(%rbp)
 41a:	e8 00 00 00 00       	call   41f <ShowFileOSC::Run()+0x41f>
 41f:	48 89 c2             	mov    %rax,%rdx
 422:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
 426:	0f 95 c0             	setne  %al
 429:	0f b6 c0             	movzbl %al,%eax
 42c:	89 c6                	mov    %eax,%esi
 42e:	48 89 d7             	mov    %rdx,%rdi
 431:	e8 00 00 00 00       	call   436 <ShowFileOSC::Run()+0x436>
 436:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 43d:	48 89 c7             	mov    %rax,%rdi
 440:	e8 00 00 00 00       	call   445 <ShowFileOSC::Run()+0x445>
 445:	e8 00 00 00 00       	call   44a <ShowFileOSC::Run()+0x44a>
 44a:	48 89 c7             	mov    %rax,%rdi
 44d:	e8 00 00 00 00       	call   452 <ShowFileOSC::Run()+0x452>
 452:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
 456:	0f 95 c0             	setne  %al
 459:	0f b6 d0             	movzbl %al,%edx
 45c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 463 <ShowFileOSC::Run()+0x463>
 463:	41 89 d1             	mov    %edx,%r9d
 466:	41 b8 b1 00 00 00    	mov    $0xb1,%r8d
 46c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 473 <ShowFileOSC::Run()+0x473>
 473:	48 89 d1             	mov    %rdx,%rcx
 476:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 47d <ShowFileOSC::Run()+0x47d>
 47d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 484 <ShowFileOSC::Run()+0x484>
 484:	48 89 c7             	mov    %rax,%rdi
 487:	b8 00 00 00 00       	mov    $0x0,%eax
 48c:	e8 00 00 00 00       	call   491 <ShowFileOSC::Run()+0x491>
 491:	e9 64 06 00 00       	jmp    afa <ShowFileOSC::Run()+0xafa>
 496:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 49d:	48 8b 40 10          	mov    0x10(%rax),%rax
 4a1:	48 83 c0 0a          	add    $0xa,%rax
 4a5:	ba 08 00 00 00       	mov    $0x8,%edx
 4aa:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 4b1 <ShowFileOSC::Run()+0x4b1>
 4b1:	48 89 ce             	mov    %rcx,%rsi
 4b4:	48 89 c7             	mov    %rax,%rdi
 4b7:	e8 00 00 00 00       	call   4bc <ShowFileOSC::Run()+0x4bc>
 4bc:	85 c0                	test   %eax,%eax
 4be:	75 5a                	jne    51a <ShowFileOSC::Run()+0x51a>
 4c0:	e8 00 00 00 00       	call   4c5 <ShowFileOSC::Run()+0x4c5>
 4c5:	48 89 c7             	mov    %rax,%rdi
 4c8:	e8 00 00 00 00       	call   4cd <ShowFileOSC::Run()+0x4cd>
 4cd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 4d4:	48 89 c7             	mov    %rax,%rdi
 4d7:	e8 00 00 00 00       	call   4dc <ShowFileOSC::Run()+0x4dc>
 4dc:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 4e3 <ShowFileOSC::Run()+0x4e3>
 4e3:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 4ea <ShowFileOSC::Run()+0x4ea>
 4ea:	41 b8 b8 00 00 00    	mov    $0xb8,%r8d
 4f0:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 4f7 <ShowFileOSC::Run()+0x4f7>
 4f7:	48 89 d1             	mov    %rdx,%rcx
 4fa:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 501 <ShowFileOSC::Run()+0x501>
 501:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 508 <ShowFileOSC::Run()+0x508>
 508:	48 89 c7             	mov    %rax,%rdi
 50b:	b8 00 00 00 00       	mov    $0x0,%eax
 510:	e8 00 00 00 00       	call   515 <ShowFileOSC::Run()+0x515>
 515:	e9 e0 05 00 00       	jmp    afa <ShowFileOSC::Run()+0xafa>
 51a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 521:	48 8b 40 10          	mov    0x10(%rax),%rax
 525:	48 83 c0 0a          	add    $0xa,%rax
 529:	ba 06 00 00 00       	mov    $0x6,%edx
 52e:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 535 <ShowFileOSC::Run()+0x535>
 535:	48 89 ce             	mov    %rcx,%rsi
 538:	48 89 c7             	mov    %rax,%rdi
 53b:	e8 00 00 00 00       	call   540 <ShowFileOSC::Run()+0x540>
 540:	85 c0                	test   %eax,%eax
 542:	0f 85 e5 00 00 00    	jne    62d <ShowFileOSC::Run()+0x62d>
 548:	0f b7 55 82          	movzwl -0x7e(%rbp),%edx
 54c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 553:	48 8b 48 10          	mov    0x10(%rax),%rcx
 557:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 55b:	48 89 ce             	mov    %rcx,%rsi
 55e:	48 89 c7             	mov    %rax,%rdi
 561:	e8 00 00 00 00       	call   566 <ShowFileOSC::Run()+0x566>
 566:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 56a:	be 00 00 00 00       	mov    $0x0,%esi
 56f:	48 89 c7             	mov    %rax,%rdi
 572:	e8 00 00 00 00       	call   577 <ShowFileOSC::Run()+0x577>
 577:	3c 69                	cmp    $0x69,%al
 579:	0f 94 c0             	sete   %al
 57c:	84 c0                	test   %al,%al
 57e:	74 16                	je     596 <ShowFileOSC::Run()+0x596>
 580:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 584:	be 00 00 00 00       	mov    $0x0,%esi
 589:	48 89 c7             	mov    %rax,%rdi
 58c:	e8 00 00 00 00       	call   591 <ShowFileOSC::Run()+0x591>
 591:	89 45 88             	mov    %eax,-0x78(%rbp)
 594:	eb 36                	jmp    5cc <ShowFileOSC::Run()+0x5cc>
 596:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 59a:	be 00 00 00 00       	mov    $0x0,%esi
 59f:	48 89 c7             	mov    %rax,%rdi
 5a2:	e8 00 00 00 00       	call   5a7 <ShowFileOSC::Run()+0x5a7>
 5a7:	3c 66                	cmp    $0x66,%al
 5a9:	0f 94 c0             	sete   %al
 5ac:	84 c0                	test   %al,%al
 5ae:	0f 84 33 05 00 00    	je     ae7 <ShowFileOSC::Run()+0xae7>
 5b4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 5b8:	be 00 00 00 00       	mov    $0x0,%esi
 5bd:	48 89 c7             	mov    %rax,%rdi
 5c0:	e8 00 00 00 00       	call   5c5 <ShowFileOSC::Run()+0x5c5>
 5c5:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
 5c9:	89 45 88             	mov    %eax,-0x78(%rbp)
 5cc:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
 5d0:	78 1e                	js     5f0 <ShowFileOSC::Run()+0x5f0>
 5d2:	81 7d 88 ff 00 00 00 	cmpl   $0xff,-0x78(%rbp)
 5d9:	7f 15                	jg     5f0 <ShowFileOSC::Run()+0x5f0>
 5db:	e8 00 00 00 00       	call   5e0 <ShowFileOSC::Run()+0x5e0>
 5e0:	48 89 c2             	mov    %rax,%rdx
 5e3:	8b 45 88             	mov    -0x78(%rbp),%eax
 5e6:	89 c6                	mov    %eax,%esi
 5e8:	48 89 d7             	mov    %rdx,%rdi
 5eb:	e8 00 00 00 00       	call   5f0 <ShowFileOSC::Run()+0x5f0>
 5f0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 5f7 <ShowFileOSC::Run()+0x5f7>
 5f7:	8b 55 88             	mov    -0x78(%rbp),%edx
 5fa:	41 89 d1             	mov    %edx,%r9d
 5fd:	41 b8 cd 00 00 00    	mov    $0xcd,%r8d
 603:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 60a <ShowFileOSC::Run()+0x60a>
 60a:	48 89 d1             	mov    %rdx,%rcx
 60d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 614 <ShowFileOSC::Run()+0x614>
 614:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 61b <ShowFileOSC::Run()+0x61b>
 61b:	48 89 c7             	mov    %rax,%rdi
 61e:	b8 00 00 00 00       	mov    $0x0,%eax
 623:	e8 00 00 00 00       	call   628 <ShowFileOSC::Run()+0x628>
 628:	e9 cd 04 00 00       	jmp    afa <ShowFileOSC::Run()+0xafa>
 62d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 634:	48 8b 40 10          	mov    0x10(%rax),%rax
 638:	48 83 c0 0a          	add    $0xa,%rax
 63c:	ba 04 00 00 00       	mov    $0x4,%edx
 641:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 648 <ShowFileOSC::Run()+0x648>
 648:	48 89 ce             	mov    %rcx,%rsi
 64b:	48 89 c7             	mov    %rax,%rdi
 64e:	e8 00 00 00 00       	call   653 <ShowFileOSC::Run()+0x653>
 653:	85 c0                	test   %eax,%eax
 655:	0f 85 f3 00 00 00    	jne    74e <ShowFileOSC::Run()+0x74e>
 65b:	0f b7 55 82          	movzwl -0x7e(%rbp),%edx
 65f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 666:	48 8b 48 10          	mov    0x10(%rax),%rcx
 66a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 66e:	48 89 ce             	mov    %rcx,%rsi
 671:	48 89 c7             	mov    %rax,%rdi
 674:	e8 00 00 00 00       	call   679 <ShowFileOSC::Run()+0x679>
 679:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 67d:	be 00 00 00 00       	mov    $0x0,%esi
 682:	48 89 c7             	mov    %rax,%rdi
 685:	e8 00 00 00 00       	call   68a <ShowFileOSC::Run()+0x68a>
 68a:	3c 69                	cmp    $0x69,%al
 68c:	0f 94 c0             	sete   %al
 68f:	84 c0                	test   %al,%al
 691:	74 16                	je     6a9 <ShowFileOSC::Run()+0x6a9>
 693:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 697:	be 00 00 00 00       	mov    $0x0,%esi
 69c:	48 89 c7             	mov    %rax,%rdi
 69f:	e8 00 00 00 00       	call   6a4 <ShowFileOSC::Run()+0x6a4>
 6a4:	89 45 8c             	mov    %eax,-0x74(%rbp)
 6a7:	eb 36                	jmp    6df <ShowFileOSC::Run()+0x6df>
 6a9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 6ad:	be 00 00 00 00       	mov    $0x0,%esi
 6b2:	48 89 c7             	mov    %rax,%rdi
 6b5:	e8 00 00 00 00       	call   6ba <ShowFileOSC::Run()+0x6ba>
 6ba:	3c 66                	cmp    $0x66,%al
 6bc:	0f 94 c0             	sete   %al
 6bf:	84 c0                	test   %al,%al
 6c1:	0f 84 23 04 00 00    	je     aea <ShowFileOSC::Run()+0xaea>
 6c7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 6cb:	be 00 00 00 00       	mov    $0x0,%esi
 6d0:	48 89 c7             	mov    %rax,%rdi
 6d3:	e8 00 00 00 00       	call   6d8 <ShowFileOSC::Run()+0x6d8>
 6d8:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
 6dc:	89 45 8c             	mov    %eax,-0x74(%rbp)
 6df:	e8 00 00 00 00       	call   6e4 <ShowFileOSC::Run()+0x6e4>
 6e4:	48 89 c2             	mov    %rax,%rdx
 6e7:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
 6eb:	0f 95 c0             	setne  %al
 6ee:	0f b6 c0             	movzbl %al,%eax
 6f1:	89 c6                	mov    %eax,%esi
 6f3:	48 89 d7             	mov    %rdx,%rdi
 6f6:	e8 00 00 00 00       	call   6fb <ShowFileOSC::Run()+0x6fb>
 6fb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 702:	48 89 c7             	mov    %rax,%rdi
 705:	e8 00 00 00 00       	call   70a <ShowFileOSC::Run()+0x70a>
 70a:	83 7d 8c 00          	cmpl   $0x0,-0x74(%rbp)
 70e:	0f 95 c0             	setne  %al
 711:	0f b6 d0             	movzbl %al,%edx
 714:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 71b <ShowFileOSC::Run()+0x71b>
 71b:	41 89 d1             	mov    %edx,%r9d
 71e:	41 b8 e1 00 00 00    	mov    $0xe1,%r8d
 724:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 72b <ShowFileOSC::Run()+0x72b>
 72b:	48 89 d1             	mov    %rdx,%rcx
 72e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 735 <ShowFileOSC::Run()+0x735>
 735:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 73c <ShowFileOSC::Run()+0x73c>
 73c:	48 89 c7             	mov    %rax,%rdi
 73f:	b8 00 00 00 00       	mov    $0x0,%eax
 744:	e8 00 00 00 00       	call   749 <ShowFileOSC::Run()+0x749>
 749:	e9 ac 03 00 00       	jmp    afa <ShowFileOSC::Run()+0xafa>
 74e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 755:	48 8b 40 10          	mov    0x10(%rax),%rax
 759:	48 83 c0 0a          	add    $0xa,%rax
 75d:	ba 06 00 00 00       	mov    $0x6,%edx
 762:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 769 <ShowFileOSC::Run()+0x769>
 769:	48 89 ce             	mov    %rcx,%rsi
 76c:	48 89 c7             	mov    %rax,%rdi
 76f:	e8 00 00 00 00       	call   774 <ShowFileOSC::Run()+0x774>
 774:	85 c0                	test   %eax,%eax
 776:	0f 85 e6 01 00 00    	jne    962 <ShowFileOSC::Run()+0x962>
 77c:	0f b7 55 82          	movzwl -0x7e(%rbp),%edx
 780:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 787:	48 8b 48 10          	mov    0x10(%rax),%rcx
 78b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 78f:	48 89 ce             	mov    %rcx,%rsi
 792:	48 89 c7             	mov    %rax,%rdi
 795:	e8 00 00 00 00       	call   79a <ShowFileOSC::Run()+0x79a>
 79a:	c7 45 98 ff 00 00 00 	movl   $0xff,-0x68(%rbp)
 7a1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 7a5:	be 00 00 00 00       	mov    $0x0,%esi
 7aa:	48 89 c7             	mov    %rax,%rdi
 7ad:	e8 00 00 00 00       	call   7b2 <ShowFileOSC::Run()+0x7b2>
 7b2:	3c 69                	cmp    $0x69,%al
 7b4:	0f 94 c0             	sete   %al
 7b7:	84 c0                	test   %al,%al
 7b9:	0f 84 2e 03 00 00    	je     aed <ShowFileOSC::Run()+0xaed>
 7bf:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 7c3:	be 00 00 00 00       	mov    $0x0,%esi
 7c8:	48 89 c7             	mov    %rax,%rdi
 7cb:	e8 00 00 00 00       	call   7d0 <ShowFileOSC::Run()+0x7d0>
 7d0:	89 45 98             	mov    %eax,-0x68(%rbp)
 7d3:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 7da <ShowFileOSC::Run()+0x7da>
 7da:	8b 55 98             	mov    -0x68(%rbp),%edx
 7dd:	41 89 d1             	mov    %edx,%r9d
 7e0:	41 b8 f1 00 00 00    	mov    $0xf1,%r8d
 7e6:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 7ed <ShowFileOSC::Run()+0x7ed>
 7ed:	48 89 d1             	mov    %rdx,%rcx
 7f0:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 7f7 <ShowFileOSC::Run()+0x7f7>
 7f7:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 7fe <ShowFileOSC::Run()+0x7fe>
 7fe:	48 89 c7             	mov    %rax,%rdi
 801:	b8 00 00 00 00       	mov    $0x0,%eax
 806:	e8 00 00 00 00       	call   80b <ShowFileOSC::Run()+0x80b>
 80b:	83 7d 98 63          	cmpl   $0x63,-0x68(%rbp)
 80f:	0f 87 10 01 00 00    	ja     925 <ShowFileOSC::Run()+0x925>
 815:	8b 55 98             	mov    -0x68(%rbp),%edx
 818:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
 81c:	be 0b 00 00 00       	mov    $0xb,%esi
 821:	48 89 c7             	mov    %rax,%rdi
 824:	e8 00 00 00 00       	call   829 <ShowFileOSC::Run()+0x829>
 829:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 830:	0f b7 40 02          	movzwl 0x2(%rax),%eax
 834:	0f b7 c8             	movzwl %ax,%ecx
 837:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 83e:	8b 50 08             	mov    0x8(%rax),%edx
 841:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 848:	8b 70 04             	mov    0x4(%rax),%esi
 84b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
 84f:	48 83 ec 08          	sub    $0x8,%rsp
 853:	48 8d 7d dd          	lea    -0x23(%rbp),%rdi
 857:	57                   	push   %rdi
 858:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 85f <ShowFileOSC::Run()+0x85f>
 85f:	4c 8d 05 00 00 00 00 	lea    0x0(%rip),%r8        # 866 <ShowFileOSC::Run()+0x866>
 866:	48 89 c7             	mov    %rax,%rdi
 869:	e8 00 00 00 00       	call   86e <ShowFileOSC::Run()+0x86e>
 86e:	48 83 c4 10          	add    $0x10,%rsp
 872:	e8 00 00 00 00       	call   877 <ShowFileOSC::Run()+0x877>
 877:	48 89 c2             	mov    %rax,%rdx
 87a:	8b 45 98             	mov    -0x68(%rbp),%eax
 87d:	89 c6                	mov    %eax,%esi
 87f:	48 89 d7             	mov    %rdx,%rdi
 882:	e8 00 00 00 00       	call   887 <ShowFileOSC::Run()+0x887>
 887:	84 c0                	test   %al,%al
 889:	74 4e                	je     8d9 <ShowFileOSC::Run()+0x8d9>
 88b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 892:	0f b7 40 02          	movzwl 0x2(%rax),%eax
 896:	0f b7 c8             	movzwl %ax,%ecx
 899:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 8a0:	8b 50 08             	mov    0x8(%rax),%edx
 8a3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 8aa:	8b 70 04             	mov    0x4(%rax),%esi
 8ad:	48 8d 45 81          	lea    -0x7f(%rbp),%rax
 8b1:	48 83 ec 08          	sub    $0x8,%rsp
 8b5:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 8bc <ShowFileOSC::Run()+0x8bc>
 8bc:	57                   	push   %rdi
 8bd:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 8c4 <ShowFileOSC::Run()+0x8c4>
 8c4:	4c 8d 05 00 00 00 00 	lea    0x0(%rip),%r8        # 8cb <ShowFileOSC::Run()+0x8cb>
 8cb:	48 89 c7             	mov    %rax,%rdi
 8ce:	e8 00 00 00 00       	call   8d3 <ShowFileOSC::Run()+0x8d3>
 8d3:	48 83 c4 10          	add    $0x10,%rsp
 8d7:	eb 4c                	jmp    925 <ShowFileOSC::Run()+0x925>
 8d9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 8e0:	0f b7 40 02          	movzwl 0x2(%rax),%eax
 8e4:	0f b7 c8             	movzwl %ax,%ecx
 8e7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 8ee:	8b 50 08             	mov    0x8(%rax),%edx
 8f1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 8f8:	8b 70 04             	mov    0x4(%rax),%esi
 8fb:	48 8d 45 81          	lea    -0x7f(%rbp),%rax
 8ff:	48 83 ec 08          	sub    $0x8,%rsp
 903:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 90a <ShowFileOSC::Run()+0x90a>
 90a:	57                   	push   %rdi
 90b:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 912 <ShowFileOSC::Run()+0x912>
 912:	4c 8d 05 00 00 00 00 	lea    0x0(%rip),%r8        # 919 <ShowFileOSC::Run()+0x919>
 919:	48 89 c7             	mov    %rax,%rdi
 91c:	e8 00 00 00 00       	call   921 <ShowFileOSC::Run()+0x921>
 921:	48 83 c4 10          	add    $0x10,%rsp
 925:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 92c <ShowFileOSC::Run()+0x92c>
 92c:	8b 55 98             	mov    -0x68(%rbp),%edx
 92f:	41 89 d1             	mov    %edx,%r9d
 932:	41 b8 01 01 00 00    	mov    $0x101,%r8d
 938:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 93f <ShowFileOSC::Run()+0x93f>
 93f:	48 89 d1             	mov    %rdx,%rcx
 942:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 949 <ShowFileOSC::Run()+0x949>
 949:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 950 <ShowFileOSC::Run()+0x950>
 950:	48 89 c7             	mov    %rax,%rdi
 953:	b8 00 00 00 00       	mov    $0x0,%eax
 958:	e8 00 00 00 00       	call   95d <ShowFileOSC::Run()+0x95d>
 95d:	e9 98 01 00 00       	jmp    afa <ShowFileOSC::Run()+0xafa>
 962:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 969:	48 8b 40 10          	mov    0x10(%rax),%rax
 96d:	48 83 c0 0a          	add    $0xa,%rax
 971:	ba 06 00 00 00       	mov    $0x6,%edx
 976:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 97d <ShowFileOSC::Run()+0x97d>
 97d:	48 89 ce             	mov    %rcx,%rsi
 980:	48 89 c7             	mov    %rax,%rdi
 983:	e8 00 00 00 00       	call   988 <ShowFileOSC::Run()+0x988>
 988:	85 c0                	test   %eax,%eax
 98a:	75 4d                	jne    9d9 <ShowFileOSC::Run()+0x9d9>
 98c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 993:	48 89 c7             	mov    %rax,%rdi
 996:	e8 00 00 00 00       	call   99b <ShowFileOSC::Run()+0x99b>
 99b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 9a2 <ShowFileOSC::Run()+0x9a2>
 9a2:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 9a9 <ShowFileOSC::Run()+0x9a9>
 9a9:	41 b8 0a 01 00 00    	mov    $0x10a,%r8d
 9af:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 9b6 <ShowFileOSC::Run()+0x9b6>
 9b6:	48 89 d1             	mov    %rdx,%rcx
 9b9:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 9c0 <ShowFileOSC::Run()+0x9c0>
 9c0:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 9c7 <ShowFileOSC::Run()+0x9c7>
 9c7:	48 89 c7             	mov    %rax,%rdi
 9ca:	b8 00 00 00 00       	mov    $0x0,%eax
 9cf:	e8 00 00 00 00       	call   9d4 <ShowFileOSC::Run()+0x9d4>
 9d4:	e9 21 01 00 00       	jmp    afa <ShowFileOSC::Run()+0xafa>
 9d9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 9e0:	48 8b 40 10          	mov    0x10(%rax),%rax
 9e4:	48 83 c0 0a          	add    $0xa,%rax
 9e8:	ba 05 00 00 00       	mov    $0x5,%edx
 9ed:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 9f4 <ShowFileOSC::Run()+0x9f4>
 9f4:	48 89 ce             	mov    %rcx,%rsi
 9f7:	48 89 c7             	mov    %rax,%rdi
 9fa:	e8 00 00 00 00       	call   9ff <ShowFileOSC::Run()+0x9ff>
 9ff:	85 c0                	test   %eax,%eax
 a01:	0f 85 f3 00 00 00    	jne    afa <ShowFileOSC::Run()+0xafa>
 a07:	0f b7 55 82          	movzwl -0x7e(%rbp),%edx
 a0b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 a12:	48 8b 48 10          	mov    0x10(%rax),%rcx
 a16:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 a1a:	48 89 ce             	mov    %rcx,%rsi
 a1d:	48 89 c7             	mov    %rax,%rdi
 a20:	e8 00 00 00 00       	call   a25 <ShowFileOSC::Run()+0xa25>
 a25:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 a29:	be 00 00 00 00       	mov    $0x0,%esi
 a2e:	48 89 c7             	mov    %rax,%rdi
 a31:	e8 00 00 00 00       	call   a36 <ShowFileOSC::Run()+0xa36>
 a36:	3c 66                	cmp    $0x66,%al
 a38:	0f 95 c0             	setne  %al
 a3b:	84 c0                	test   %al,%al
 a3d:	0f 85 ad 00 00 00    	jne    af0 <ShowFileOSC::Run()+0xaf0>
 a43:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 a47:	be 00 00 00 00       	mov    $0x0,%esi
 a4c:	48 89 c7             	mov    %rax,%rdi
 a4f:	e8 00 00 00 00       	call   a54 <ShowFileOSC::Run()+0xa54>
 a54:	f3 48 0f 2c c0       	cvttss2si %xmm0,%rax
 a59:	89 45 90             	mov    %eax,-0x70(%rbp)
 a5c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # a63 <ShowFileOSC::Run()+0xa63>
 a63:	8b 55 90             	mov    -0x70(%rbp),%edx
 a66:	41 89 d1             	mov    %edx,%r9d
 a69:	41 b8 18 01 00 00    	mov    $0x118,%r8d
 a6f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # a76 <ShowFileOSC::Run()+0xa76>
 a76:	48 89 d1             	mov    %rdx,%rcx
 a79:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # a80 <ShowFileOSC::Run()+0xa80>
 a80:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # a87 <ShowFileOSC::Run()+0xa87>
 a87:	48 89 c7             	mov    %rax,%rdi
 a8a:	b8 00 00 00 00       	mov    $0x0,%eax
 a8f:	e8 00 00 00 00       	call   a94 <ShowFileOSC::Run()+0xa94>
 a94:	83 7d 90 13          	cmpl   $0x13,-0x70(%rbp)
 a98:	77 59                	ja     af3 <ShowFileOSC::Run()+0xaf3>
 a9a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 aa1:	8b 55 90             	mov    -0x70(%rbp),%edx
 aa4:	48 83 c2 04          	add    $0x4,%rdx
 aa8:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
 aac:	89 45 94             	mov    %eax,-0x6c(%rbp)
 aaf:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
 ab3:	78 41                	js     af6 <ShowFileOSC::Run()+0xaf6>
 ab5:	83 7d 94 63          	cmpl   $0x63,-0x6c(%rbp)
 ab9:	7f 3e                	jg     af9 <ShowFileOSC::Run()+0xaf9>
 abb:	e8 00 00 00 00       	call   ac0 <ShowFileOSC::Run()+0xac0>
 ac0:	48 89 c2             	mov    %rax,%rdx
 ac3:	8b 45 94             	mov    -0x6c(%rbp),%eax
 ac6:	89 c6                	mov    %eax,%esi
 ac8:	48 89 d7             	mov    %rdx,%rdi
 acb:	e8 00 00 00 00       	call   ad0 <ShowFileOSC::Run()+0xad0>
 ad0:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 ad7:	48 89 c7             	mov    %rax,%rdi
 ada:	e8 00 00 00 00       	call   adf <ShowFileOSC::Run()+0xadf>
 adf:	eb 18                	jmp    af9 <ShowFileOSC::Run()+0xaf9>
 ae1:	90                   	nop
 ae2:	eb 16                	jmp    afa <ShowFileOSC::Run()+0xafa>
 ae4:	90                   	nop
 ae5:	eb 13                	jmp    afa <ShowFileOSC::Run()+0xafa>
 ae7:	90                   	nop
 ae8:	eb 10                	jmp    afa <ShowFileOSC::Run()+0xafa>
 aea:	90                   	nop
 aeb:	eb 0d                	jmp    afa <ShowFileOSC::Run()+0xafa>
 aed:	90                   	nop
 aee:	eb 0a                	jmp    afa <ShowFileOSC::Run()+0xafa>
 af0:	90                   	nop
 af1:	eb 07                	jmp    afa <ShowFileOSC::Run()+0xafa>
 af3:	90                   	nop
 af4:	eb 04                	jmp    afa <ShowFileOSC::Run()+0xafa>
 af6:	90                   	nop
 af7:	eb 01                	jmp    afa <ShowFileOSC::Run()+0xafa>
 af9:	90                   	nop
 afa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 afe:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 b05:	00 00 
 b07:	74 05                	je     b0e <ShowFileOSC::Run()+0xb0e>
 b09:	e8 00 00 00 00       	call   b0e <ShowFileOSC::Run()+0xb0e>
 b0e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 b12:	c9                   	leave  
 b13:	c3                   	ret    

Disassembly of section .text._ZN11ShowFileOSC10SendStatusEv:

0000000000000000 <ShowFileOSC::SendStatus()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	e8 00 00 00 00       	call   24 <ShowFileOSC::SendStatus()+0x24>
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <ShowFileOSC::SendStatus()+0x2c>
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  33:	0f b7 40 02          	movzwl 0x2(%rax),%eax
  37:	0f b7 c8             	movzwl %ax,%ecx
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	8b 50 08             	mov    0x8(%rax),%edx
  41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  45:	8b 70 04             	mov    0x4(%rax),%esi
  48:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
  4c:	48 83 ec 08          	sub    $0x8,%rsp
  50:	57                   	push   %rdi
  51:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 58 <ShowFileOSC::SendStatus()+0x58>
  58:	4c 8d 05 00 00 00 00 	lea    0x0(%rip),%r8        # 5f <ShowFileOSC::SendStatus()+0x5f>
  5f:	48 89 c7             	mov    %rax,%rdi
  62:	e8 00 00 00 00       	call   67 <ShowFileOSC::SendStatus()+0x67>
  67:	48 83 c4 10          	add    $0x10,%rsp
  6b:	e8 00 00 00 00       	call   70 <ShowFileOSC::SendStatus()+0x70>
  70:	48 89 c7             	mov    %rax,%rdi
  73:	e8 00 00 00 00       	call   78 <ShowFileOSC::SendStatus()+0x78>
  78:	89 45 f4             	mov    %eax,-0xc(%rbp)
  7b:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
  7f:	75 28                	jne    a9 <ShowFileOSC::SendStatus()+0xa9>
  81:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 88 <ShowFileOSC::SendStatus()+0x88>
  88:	48 89 c1             	mov    %rax,%rcx
  8b:	ba 34 01 00 00       	mov    $0x134,%edx
  90:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 97 <ShowFileOSC::SendStatus()+0x97>
  97:	48 89 c6             	mov    %rax,%rsi
  9a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a1 <ShowFileOSC::SendStatus()+0xa1>
  a1:	48 89 c7             	mov    %rax,%rdi
  a4:	e8 00 00 00 00       	call   a9 <ShowFileOSC::SendStatus()+0xa9>
  a9:	8b 45 f4             	mov    -0xc(%rbp),%eax
  ac:	48 63 d0             	movslq %eax,%rdx
  af:	48 89 d0             	mov    %rdx,%rax
  b2:	48 01 c0             	add    %rax,%rax
  b5:	48 01 d0             	add    %rdx,%rax
  b8:	48 c1 e0 02          	shl    $0x2,%rax
  bc:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # c3 <ShowFileOSC::SendStatus()+0xc3>
  c3:	48 8d 3c 10          	lea    (%rax,%rdx,1),%rdi
  c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  cb:	0f b7 40 02          	movzwl 0x2(%rax),%eax
  cf:	0f b7 c8             	movzwl %ax,%ecx
  d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d6:	8b 50 08             	mov    0x8(%rax),%edx
  d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  dd:	8b 70 04             	mov    0x4(%rax),%esi
  e0:	48 8d 45 f3          	lea    -0xd(%rbp),%rax
  e4:	48 83 ec 08          	sub    $0x8,%rsp
  e8:	57                   	push   %rdi
  e9:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # f0 <ShowFileOSC::SendStatus()+0xf0>
  f0:	4c 8d 05 00 00 00 00 	lea    0x0(%rip),%r8        # f7 <ShowFileOSC::SendStatus()+0xf7>
  f7:	48 89 c7             	mov    %rax,%rdi
  fa:	e8 00 00 00 00       	call   ff <ShowFileOSC::SendStatus()+0xff>
  ff:	48 83 c4 10          	add    $0x10,%rsp
 103:	90                   	nop
 104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 108:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 10f:	00 00 
 111:	74 05                	je     118 <ShowFileOSC::SendStatus()+0x118>
 113:	e8 00 00 00 00       	call   118 <ShowFileOSC::SendStatus()+0x118>
 118:	c9                   	leave  
 119:	c3                   	ret    

Disassembly of section .text._ZN11ShowFileOSC6ReloadEv:

0000000000000000 <ShowFileOSC::Reload()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   f:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%rbp)
  2c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 33 <ShowFileOSC::Reload()+0x33>
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	call   3b <ShowFileOSC::Reload()+0x3b>
  3b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  3f:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
  44:	0f 94 c0             	sete   %al
  47:	84 c0                	test   %al,%al
  49:	74 3d                	je     88 <ShowFileOSC::Reload()+0x88>
  4b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 52 <ShowFileOSC::Reload()+0x52>
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	call   5a <ShowFileOSC::Reload()+0x5a>
  5a:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
  61:	eb 1a                	jmp    7d <ShowFileOSC::Reload()+0x7d>
  63:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  6a:	8b 55 84             	mov    -0x7c(%rbp),%edx
  6d:	48 83 c2 04          	add    $0x4,%rdx
  71:	c7 44 90 08 ff ff ff 	movl   $0xffffffff,0x8(%rax,%rdx,4)
  78:	ff 
  79:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
  7d:	83 7d 84 13          	cmpl   $0x13,-0x7c(%rbp)
  81:	76 e0                	jbe    63 <ShowFileOSC::Reload()+0x63>
  83:	e9 2d 03 00 00       	jmp    3b5 <ShowFileOSC::Reload()+0x3b5>
  88:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	e8 00 00 00 00       	call   94 <ShowFileOSC::Reload()+0x94>
  94:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  98:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
  9d:	0f 95 c0             	setne  %al
  a0:	84 c0                	test   %al,%al
  a2:	0f 84 a4 00 00 00    	je     14c <ShowFileOSC::Reload()+0x14c>
  a8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  ac:	0f b6 40 12          	movzbl 0x12(%rax),%eax
  b0:	3c 04                	cmp    $0x4,%al
  b2:	0f 84 90 00 00 00    	je     148 <ShowFileOSC::Reload()+0x148>
  b8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  bc:	48 8d 50 13          	lea    0x13(%rax),%rdx
  c0:	48 8d 85 7c ff ff ff 	lea    -0x84(%rbp),%rax
  c7:	48 89 c6             	mov    %rax,%rsi
  ca:	48 89 d7             	mov    %rdx,%rdi
  cd:	e8 00 00 00 00       	call   d2 <ShowFileOSC::Reload()+0xd2>
  d2:	83 f0 01             	xor    $0x1,%eax
  d5:	84 c0                	test   %al,%al
  d7:	75 72                	jne    14b <ShowFileOSC::Reload()+0x14b>
  d9:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  df:	89 c1                	mov    %eax,%ecx
  e1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  e8:	8b 55 80             	mov    -0x80(%rbp),%edx
  eb:	48 83 c2 04          	add    $0x4,%rdx
  ef:	89 4c 90 08          	mov    %ecx,0x8(%rax,%rdx,4)
  f3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  f7:	48 8d 50 13          	lea    0x13(%rax),%rdx
  fb:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 102 <ShowFileOSC::Reload()+0x102>
 102:	8b 4d 80             	mov    -0x80(%rbp),%ecx
 105:	48 83 ec 08          	sub    $0x8,%rsp
 109:	52                   	push   %rdx
 10a:	41 89 c9             	mov    %ecx,%r9d
 10d:	41 b8 57 01 00 00    	mov    $0x157,%r8d
 113:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 11a <ShowFileOSC::Reload()+0x11a>
 11a:	48 89 d1             	mov    %rdx,%rcx
 11d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 124 <ShowFileOSC::Reload()+0x124>
 124:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 12b <ShowFileOSC::Reload()+0x12b>
 12b:	48 89 c7             	mov    %rax,%rdi
 12e:	b8 00 00 00 00       	mov    $0x0,%eax
 133:	e8 00 00 00 00       	call   138 <ShowFileOSC::Reload()+0x138>
 138:	48 83 c4 10          	add    $0x10,%rsp
 13c:	83 45 80 01          	addl   $0x1,-0x80(%rbp)
 140:	83 7d 80 14          	cmpl   $0x14,-0x80(%rbp)
 144:	74 13                	je     159 <ShowFileOSC::Reload()+0x159>
 146:	eb 04                	jmp    14c <ShowFileOSC::Reload()+0x14c>
 148:	90                   	nop
 149:	eb 01                	jmp    14c <ShowFileOSC::Reload()+0x14c>
 14b:	90                   	nop
 14c:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
 151:	0f 85 31 ff ff ff    	jne    88 <ShowFileOSC::Reload()+0x88>
 157:	eb 01                	jmp    15a <ShowFileOSC::Reload()+0x15a>
 159:	90                   	nop
 15a:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
 161:	e9 93 00 00 00       	jmp    1f9 <ShowFileOSC::Reload()+0x1f9>
 166:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
 16d:	eb 7a                	jmp    1e9 <ShowFileOSC::Reload()+0x1e9>
 16f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 176:	8b 55 8c             	mov    -0x74(%rbp),%edx
 179:	48 83 c2 04          	add    $0x4,%rdx
 17d:	8b 54 90 08          	mov    0x8(%rax,%rdx,4),%edx
 181:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 188:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 18b:	48 83 c1 04          	add    $0x4,%rcx
 18f:	8b 44 88 08          	mov    0x8(%rax,%rcx,4),%eax
 193:	39 c2                	cmp    %eax,%edx
 195:	7e 4e                	jle    1e5 <ShowFileOSC::Reload()+0x1e5>
 197:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 19e:	8b 55 88             	mov    -0x78(%rbp),%edx
 1a1:	48 83 c2 04          	add    $0x4,%rdx
 1a5:	8b 44 90 08          	mov    0x8(%rax,%rdx,4),%eax
 1a9:	89 45 94             	mov    %eax,-0x6c(%rbp)
 1ac:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 1b3:	8b 55 8c             	mov    -0x74(%rbp),%edx
 1b6:	48 83 c2 04          	add    $0x4,%rdx
 1ba:	8b 54 90 08          	mov    0x8(%rax,%rdx,4),%edx
 1be:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 1c5:	8b 4d 88             	mov    -0x78(%rbp),%ecx
 1c8:	48 83 c1 04          	add    $0x4,%rcx
 1cc:	89 54 88 08          	mov    %edx,0x8(%rax,%rcx,4)
 1d0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 1d7:	8b 55 8c             	mov    -0x74(%rbp),%edx
 1da:	48 8d 4a 04          	lea    0x4(%rdx),%rcx
 1de:	8b 55 94             	mov    -0x6c(%rbp),%edx
 1e1:	89 54 88 08          	mov    %edx,0x8(%rax,%rcx,4)
 1e5:	83 45 8c 01          	addl   $0x1,-0x74(%rbp)
 1e9:	8b 45 8c             	mov    -0x74(%rbp),%eax
 1ec:	3b 45 80             	cmp    -0x80(%rbp),%eax
 1ef:	0f 82 7a ff ff ff    	jb     16f <ShowFileOSC::Reload()+0x16f>
 1f5:	83 45 88 01          	addl   $0x1,-0x78(%rbp)
 1f9:	8b 45 88             	mov    -0x78(%rbp),%eax
 1fc:	3b 45 80             	cmp    -0x80(%rbp),%eax
 1ff:	0f 82 61 ff ff ff    	jb     166 <ShowFileOSC::Reload()+0x166>
 205:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
 20c:	e9 e6 00 00 00       	jmp    2f7 <ShowFileOSC::Reload()+0x2f7>
 211:	8b 55 90             	mov    -0x70(%rbp),%edx
 214:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 218:	89 d1                	mov    %edx,%ecx
 21a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 221 <ShowFileOSC::Reload()+0x221>
 221:	be 3f 00 00 00       	mov    $0x3f,%esi
 226:	48 89 c7             	mov    %rax,%rdi
 229:	b8 00 00 00 00       	mov    $0x0,%eax
 22e:	e8 00 00 00 00       	call   233 <ShowFileOSC::Reload()+0x233>
 233:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 23a:	8b 55 90             	mov    -0x70(%rbp),%edx
 23d:	48 83 c2 04          	add    $0x4,%rdx
 241:	8b 54 90 08          	mov    0x8(%rax,%rdx,4),%edx
 245:	48 8d 45 ac          	lea    -0x54(%rbp),%rax
 249:	89 d1                	mov    %edx,%ecx
 24b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 252 <ShowFileOSC::Reload()+0x252>
 252:	be 03 00 00 00       	mov    $0x3,%esi
 257:	48 89 c7             	mov    %rax,%rdi
 25a:	b8 00 00 00 00       	mov    $0x0,%eax
 25f:	e8 00 00 00 00       	call   264 <ShowFileOSC::Reload()+0x264>
 264:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 26b:	0f b7 40 02          	movzwl 0x2(%rax),%eax
 26f:	0f b7 c8             	movzwl %ax,%ecx
 272:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 279:	8b 50 08             	mov    0x8(%rax),%edx
 27c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 283:	8b 70 04             	mov    0x4(%rax),%esi
 286:	4c 8d 45 b0          	lea    -0x50(%rbp),%r8
 28a:	48 8d 85 7c ff ff ff 	lea    -0x84(%rbp),%rax
 291:	48 83 ec 08          	sub    $0x8,%rsp
 295:	48 8d 7d ac          	lea    -0x54(%rbp),%rdi
 299:	57                   	push   %rdi
 29a:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 2a1 <ShowFileOSC::Reload()+0x2a1>
 2a1:	48 89 c7             	mov    %rax,%rdi
 2a4:	e8 00 00 00 00       	call   2a9 <ShowFileOSC::Reload()+0x2a9>
 2a9:	48 83 c4 10          	add    $0x10,%rsp
 2ad:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2b4 <ShowFileOSC::Reload()+0x2b4>
 2b4:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
 2b8:	48 83 ec 08          	sub    $0x8,%rsp
 2bc:	48 8d 55 ac          	lea    -0x54(%rbp),%rdx
 2c0:	52                   	push   %rdx
 2c1:	49 89 c9             	mov    %rcx,%r9
 2c4:	41 b8 75 01 00 00    	mov    $0x175,%r8d
 2ca:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2d1 <ShowFileOSC::Reload()+0x2d1>
 2d1:	48 89 d1             	mov    %rdx,%rcx
 2d4:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2db <ShowFileOSC::Reload()+0x2db>
 2db:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 2e2 <ShowFileOSC::Reload()+0x2e2>
 2e2:	48 89 c7             	mov    %rax,%rdi
 2e5:	b8 00 00 00 00       	mov    $0x0,%eax
 2ea:	e8 00 00 00 00       	call   2ef <ShowFileOSC::Reload()+0x2ef>
 2ef:	48 83 c4 10          	add    $0x10,%rsp
 2f3:	83 45 90 01          	addl   $0x1,-0x70(%rbp)
 2f7:	8b 45 90             	mov    -0x70(%rbp),%eax
 2fa:	3b 45 80             	cmp    -0x80(%rbp),%eax
 2fd:	0f 82 0e ff ff ff    	jb     211 <ShowFileOSC::Reload()+0x211>
 303:	e9 88 00 00 00       	jmp    390 <ShowFileOSC::Reload()+0x390>
 308:	8b 55 90             	mov    -0x70(%rbp),%edx
 30b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
 30f:	89 d1                	mov    %edx,%ecx
 311:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 318 <ShowFileOSC::Reload()+0x318>
 318:	be 3f 00 00 00       	mov    $0x3f,%esi
 31d:	48 89 c7             	mov    %rax,%rdi
 320:	b8 00 00 00 00       	mov    $0x0,%eax
 325:	e8 00 00 00 00       	call   32a <ShowFileOSC::Reload()+0x32a>
 32a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 331:	0f b7 40 02          	movzwl 0x2(%rax),%eax
 335:	0f b7 c8             	movzwl %ax,%ecx
 338:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 33f:	8b 50 08             	mov    0x8(%rax),%edx
 342:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 349:	8b 70 04             	mov    0x4(%rax),%esi
 34c:	4c 8d 45 b0          	lea    -0x50(%rbp),%r8
 350:	48 8d 85 7c ff ff ff 	lea    -0x84(%rbp),%rax
 357:	48 83 ec 08          	sub    $0x8,%rsp
 35b:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 362 <ShowFileOSC::Reload()+0x362>
 362:	57                   	push   %rdi
 363:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 36a <ShowFileOSC::Reload()+0x36a>
 36a:	48 89 c7             	mov    %rax,%rdi
 36d:	e8 00 00 00 00       	call   372 <ShowFileOSC::Reload()+0x372>
 372:	48 83 c4 10          	add    $0x10,%rsp
 376:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 37d:	8b 55 90             	mov    -0x70(%rbp),%edx
 380:	48 83 c2 04          	add    $0x4,%rdx
 384:	c7 44 90 08 ff ff ff 	movl   $0xffffffff,0x8(%rax,%rdx,4)
 38b:	ff 
 38c:	83 45 90 01          	addl   $0x1,-0x70(%rbp)
 390:	83 7d 90 13          	cmpl   $0x13,-0x70(%rbp)
 394:	0f 86 6e ff ff ff    	jbe    308 <ShowFileOSC::Reload()+0x308>
 39a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 39e:	48 89 c7             	mov    %rax,%rdi
 3a1:	e8 00 00 00 00       	call   3a6 <ShowFileOSC::Reload()+0x3a6>
 3a6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 3ad:	48 89 c7             	mov    %rax,%rdi
 3b0:	e8 00 00 00 00       	call   3b5 <ShowFileOSC::Reload()+0x3b5>
 3b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3b9:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 3c0:	00 00 
 3c2:	74 05                	je     3c9 <ShowFileOSC::Reload()+0x3c9>
 3c4:	e8 00 00 00 00       	call   3c9 <ShowFileOSC::Reload()+0x3c9>
 3c9:	c9                   	leave  
 3ca:	c3                   	ret    

Disassembly of section .text._ZN11ShowFileOSC5PrintEv:

0000000000000000 <ShowFileOSC::Print()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 17 <ShowFileOSC::Print()+0x17>
  17:	48 89 c7             	mov    %rax,%rdi
  1a:	e8 00 00 00 00       	call   1f <ShowFileOSC::Print()+0x1f>
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFileOSC::Print()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFileOSC::Print()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFileOSC::Print()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	0f b7 00             	movzwl (%rax),%eax
  44:	0f b7 c0             	movzwl %ax,%eax
  47:	89 c6                	mov    %eax,%esi
  49:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 50 <ShowFileOSC::Print()+0x50>
  50:	48 89 c7             	mov    %rax,%rdi
  53:	b8 00 00 00 00       	mov    $0x0,%eax
  58:	e8 00 00 00 00       	call   5d <ShowFileOSC::Print()+0x5d>
  5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  61:	0f b7 40 02          	movzwl 0x2(%rax),%eax
  65:	0f b7 c0             	movzwl %ax,%eax
  68:	89 c6                	mov    %eax,%esi
  6a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 71 <ShowFileOSC::Print()+0x71>
  71:	48 89 c7             	mov    %rax,%rdi
  74:	b8 00 00 00 00       	mov    $0x0,%eax
  79:	e8 00 00 00 00       	call   7e <ShowFileOSC::Print()+0x7e>
  7e:	90                   	nop
  7f:	c9                   	leave  
  80:	c3                   	ret    

showfileparamsconst.o:     file format elf64-x86-64


showfileparams.o:     file format elf64-x86-64


Disassembly of section .text._ZN8ShowFile6DoLoopEb:

0000000000000000 <ShowFile::DoLoop(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	40 88 77 0c          	mov    %sil,0xc(%rdi)
   8:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile3GetEv:

0000000000000000 <ShowFile::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <ShowFile::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZNK14ShowFileParams9isMaskSetEj:

0000000000000000 <ShowFileParams::isMaskSet(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8b 47 08             	mov    0x8(%rdi),%eax
   7:	21 f0                	and    %esi,%eax
   9:	39 f0                	cmp    %esi,%eax
   b:	0f 94 c0             	sete   %al
   e:	c3                   	ret    

Disassembly of section .text._ZNK14ShowFileParams11isOptionSetEt:

0000000000000000 <ShowFileParams::isOptionSet(unsigned short) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	66 8b 47 0e          	mov    0xe(%rdi),%ax
   8:	21 f0                	and    %esi,%eax
   a:	66 39 f0             	cmp    %si,%ax
   d:	0f 94 c0             	sete   %al
  10:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder7GetSizeEv:

0000000000000000 <PropertiesBuilder::GetSize()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	80 7f 0c 00          	cmpb   $0x0,0xc(%rdi)
   8:	74 1b                	je     25 <PropertiesBuilder::GetSize()+0x25>
   a:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
   e:	48 8b 17             	mov    (%rdi),%rdx
  11:	c6 44 02 ff 7d       	movb   $0x7d,-0x1(%rdx,%rax,1)
  16:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
  1a:	48 8b 17             	mov    (%rdi),%rdx
  1d:	c6 04 02 7d          	movb   $0x7d,(%rdx,%rax,1)
  21:	66 ff 47 0a          	incw   0xa(%rdi)
  25:	66 8b 47 0a          	mov    0xa(%rdi),%ax
  29:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIPcEEiS1_jPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	49 89 fa             	mov    %rdi,%r10
   7:	48 89 f7             	mov    %rsi,%rdi
   a:	89 d6                	mov    %edx,%esi
   c:	41 8a 42 0c          	mov    0xc(%r10),%al
  10:	45 84 c9             	test   %r9b,%r9b
  13:	75 06                	jne    1b <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x1b>
  15:	84 c0                	test   %al,%al
  17:	75 0d                	jne    26 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x26>
  19:	eb 14                	jmp    2f <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x2f>
  1b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 22 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x22>
  22:	84 c0                	test   %al,%al
  24:	74 10                	je     36 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x36>
  26:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2d <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x2d>
  2d:	eb 07                	jmp    36 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x36>
  2f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 36 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x36>
  36:	31 c0                	xor    %eax,%eax
  38:	e9 00 00 00 00       	jmp    3d <.LC30+0x1>

Disassembly of section .text._ZN17PropertiesBuilder8add_partIPKcEEiPcjS2_T_bj:

0000000000000000 <int PropertiesBuilder::add_part<char const*>(char*, unsigned int, char const*, char const*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	45 0f b6 c9          	movzbl %r9b,%r9d
   8:	e9 00 00 00 00       	jmp    d <.LC18>

Disassembly of section .text._ZN11ShowFileOSC15SetPortIncomingEt:

0000000000000000 <ShowFileOSC::SetPortIncoming(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	66 89 37             	mov    %si,(%rdi)
   7:	c3                   	ret    

Disassembly of section .text._ZN11ShowFileOSC15SetPortOutgoingEt:

0000000000000000 <ShowFileOSC::SetPortOutgoing(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	66 89 77 02          	mov    %si,0x2(%rdi)
   8:	c3                   	ret    

Disassembly of section .text._ZN11ShowFileOSC3GetEv:

0000000000000000 <ShowFileOSC::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <ShowFileOSC::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN7networkL15convert_to_uintEhhhh:

0000000000000000 <network::convert_to_uint(unsigned char, unsigned char, unsigned char, unsigned char)>:
   0:	0f b6 d2             	movzbl %dl,%edx
   3:	c1 e1 18             	shl    $0x18,%ecx
   6:	40 0f b6 ff          	movzbl %dil,%edi
   a:	40 0f b6 f6          	movzbl %sil,%esi
   e:	c1 e2 10             	shl    $0x10,%edx
  11:	c1 e6 08             	shl    $0x8,%esi
  14:	09 ca                	or     %ecx,%edx
  16:	09 fa                	or     %edi,%edx
  18:	89 d0                	mov    %edx,%eax
  1a:	09 f0                	or     %esi,%eax
  1c:	c3                   	ret    

Disassembly of section .text._ZN4e131L24universe_to_multicast_ipEt:

0000000000000000 <e131::universe_to_multicast_ip(unsigned short)>:
   0:	41 89 f8             	mov    %edi,%r8d
   3:	31 c9                	xor    %ecx,%ecx
   5:	31 d2                	xor    %edx,%edx
   7:	be ff 00 00 00       	mov    $0xff,%esi
   c:	bf ef 00 00 00       	mov    $0xef,%edi
  11:	e8 00 00 00 00       	call   16 <e131::universe_to_multicast_ip(unsigned short)+0x16>
  16:	41 0f b7 f8          	movzwl %r8w,%edi
  1a:	41 89 c1             	mov    %eax,%r9d
  1d:	89 f8                	mov    %edi,%eax
  1f:	c1 e7 18             	shl    $0x18,%edi
  22:	c1 e0 08             	shl    $0x8,%eax
  25:	25 00 00 ff 00       	and    $0xff0000,%eax
  2a:	09 f8                	or     %edi,%eax
  2c:	44 09 c8             	or     %r9d,%eax
  2f:	c3                   	ret    

Disassembly of section .text._ZN14E131Controller25SetSynchronizationAddressEt:

0000000000000000 <E131Controller::SetSynchronizationAddress(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	66 89 77 14          	mov    %si,0x14(%rdi)
   8:	49 89 fa             	mov    %rdi,%r10
   b:	0f b7 fe             	movzwl %si,%edi
   e:	e8 00 00 00 00       	call   13 <E131Controller::SetSynchronizationAddress(unsigned short)+0x13>
  13:	41 89 42 18          	mov    %eax,0x18(%r10)
  17:	c3                   	ret    

Disassembly of section .text._ZN14E131Controller3GetEv:

0000000000000000 <E131Controller::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <E131Controller::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN16ArtNetController18SetSynchronizationEb:

0000000000000000 <ArtNetController::SetSynchronization(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	40 88 77 30          	mov    %sil,0x30(%rdi)
   8:	c3                   	ret    

Disassembly of section .text._ZN16ArtNetController10SetUnicastEb:

0000000000000000 <ArtNetController::SetUnicast(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	40 88 77 31          	mov    %sil,0x31(%rdi)
   8:	c3                   	ret    

Disassembly of section .text._ZN16ArtNetController3GetEv:

0000000000000000 <ArtNetController::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <ArtNetController::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN15PROTOCOL2STRING3GetEh:

0000000000000000 <PROTOCOL2STRING::Get(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	40 84 ff             	test   %dil,%dil
   7:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # e <PROTOCOL2STRING::Get(unsigned char)+0xe>
   e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 15 <PROTOCOL2STRING::Get(unsigned char)+0x15>
  15:	48 0f 45 c2          	cmovne %rdx,%rax
  19:	c3                   	ret    

Disassembly of section .text._ZN14ShowFileParamsC2EP19ShowFileParamsStore:

0000000000000000 <ShowFileParams::ShowFileParams(ShowFileParamsStore*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	4c 8d 25 00 00 00 00 	lea    0x0(%rip),%r12        # d <ShowFileParams::ShowFileParams(ShowFileParamsStore*)+0xd>
   d:	b9 45 00 00 00       	mov    $0x45,%ecx
  12:	31 c0                	xor    %eax,%eax
  14:	55                   	push   %rbp
  15:	48 8d 2d 00 00 00 00 	lea    0x0(%rip),%rbp        # 1c <ShowFileParams::ShowFileParams(ShowFileParamsStore*)+0x1c>
  1c:	4c 89 e2             	mov    %r12,%rdx
  1f:	53                   	push   %rbx
  20:	48 89 fb             	mov    %rdi,%rbx
  23:	48 89 37             	mov    %rsi,(%rdi)
  26:	48 89 ee             	mov    %rbp,%rsi
  29:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 30 <ShowFileParams::ShowFileParams(ShowFileParamsStore*)+0x30>
  30:	e8 00 00 00 00       	call   35 <ShowFileParams::ShowFileParams(ShowFileParamsStore*)+0x35>
  35:	c6 43 18 ff          	movb   $0xff,0x18(%rbx)
  39:	4c 89 e2             	mov    %r12,%rdx
  3c:	48 89 ee             	mov    %rbp,%rsi
  3f:	48 b8 40 1f 28 23 00 	movabs $0x13880023281f40,%rax
  46:	88 13 00 
  49:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
  50:	00 
  51:	b9 56 00 00 00       	mov    $0x56,%ecx
  56:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 5d <ShowFileParams::ShowFileParams(ShowFileParamsStore*)+0x5d>
  5d:	48 89 43 10          	mov    %rax,0x10(%rbx)
  61:	5b                   	pop    %rbx
  62:	31 c0                	xor    %eax,%eax
  64:	5d                   	pop    %rbp
  65:	41 5c                	pop    %r12
  67:	e9 00 00 00 00       	jmp    6c <.LC32+0x7>

Disassembly of section .text._ZN14ShowFileParams4LoadEv:

0000000000000000 <ShowFileParams::Load()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	48 89 fa             	mov    %rdi,%rdx
   9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 10 <ShowFileParams::Load()+0x10>
  10:	55                   	push   %rbp
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	48 83 ec 20          	sub    $0x20,%rsp
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  27:	31 c0                	xor    %eax,%eax
  29:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  30:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  35:	48 89 ef             	mov    %rbp,%rdi
  38:	e8 00 00 00 00       	call   3d <ShowFileParams::Load()+0x3d>
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 47 <ShowFileParams::Load()+0x47>
  47:	e8 00 00 00 00       	call   4c <ShowFileParams::Load()+0x4c>
  4c:	48 8b 3b             	mov    (%rbx),%rdi
  4f:	84 c0                	test   %al,%al
  51:	41 89 c4             	mov    %eax,%r12d
  54:	74 11                	je     67 <ShowFileParams::Load()+0x67>
  56:	48 85 ff             	test   %rdi,%rdi
  59:	74 1e                	je     79 <ShowFileParams::Load()+0x79>
  5b:	48 8b 07             	mov    (%rdi),%rax
  5e:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  62:	ff 50 10             	call   *0x10(%rax)
  65:	eb 12                	jmp    79 <ShowFileParams::Load()+0x79>
  67:	48 85 ff             	test   %rdi,%rdi
  6a:	74 0d                	je     79 <ShowFileParams::Load()+0x79>
  6c:	48 8b 07             	mov    (%rdi),%rax
  6f:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  73:	41 b4 01             	mov    $0x1,%r12b
  76:	ff 50 18             	call   *0x18(%rax)
  79:	48 89 ef             	mov    %rbp,%rdi
  7c:	e8 00 00 00 00       	call   81 <ShowFileParams::Load()+0x81>
  81:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  86:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8d:	00 00 
  8f:	74 05                	je     96 <ShowFileParams::Load()+0x96>
  91:	e8 00 00 00 00       	call   96 <ShowFileParams::Load()+0x96>
  96:	48 83 c4 20          	add    $0x20,%rsp
  9a:	44 89 e0             	mov    %r12d,%eax
  9d:	5b                   	pop    %rbx
  9e:	5d                   	pop    %rbp
  9f:	41 5c                	pop    %r12
  a1:	c3                   	ret    

Disassembly of section .text._ZN14ShowFileParams4LoadEPKcj:

0000000000000000 <ShowFileParams::Load(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	55                   	push   %rbp
   9:	53                   	push   %rbx
   a:	48 83 ec 28          	sub    $0x28,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 85 f6             	test   %rsi,%rsi
  21:	75 1c                	jne    3f <ShowFileParams::Load(char const*, unsigned int)+0x3f>
  23:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 2a <ShowFileParams::Load(char const*, unsigned int)+0x2a>
  2a:	ba 70 00 00 00       	mov    $0x70,%edx
  2f:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 36 <ShowFileParams::Load(char const*, unsigned int)+0x36>
  36:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 3d <ShowFileParams::Load(char const*, unsigned int)+0x3d>
  3d:	eb 21                	jmp    60 <ShowFileParams::Load(char const*, unsigned int)+0x60>
  3f:	41 89 d4             	mov    %edx,%r12d
  42:	85 d2                	test   %edx,%edx
  44:	75 1f                	jne    65 <ShowFileParams::Load(char const*, unsigned int)+0x65>
  46:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 4d <ShowFileParams::Load(char const*, unsigned int)+0x4d>
  4d:	ba 71 00 00 00       	mov    $0x71,%edx
  52:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 59 <ShowFileParams::Load(char const*, unsigned int)+0x59>
  59:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 60 <ShowFileParams::Load(char const*, unsigned int)+0x60>
  60:	e8 00 00 00 00       	call   65 <ShowFileParams::Load(char const*, unsigned int)+0x65>
  65:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  69:	48 89 fb             	mov    %rdi,%rbx
  6c:	75 1c                	jne    8a <ShowFileParams::Load(char const*, unsigned int)+0x8a>
  6e:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 75 <ShowFileParams::Load(char const*, unsigned int)+0x75>
  75:	ba 72 00 00 00       	mov    $0x72,%edx
  7a:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 81 <ShowFileParams::Load(char const*, unsigned int)+0x81>
  81:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 88 <ShowFileParams::Load(char const*, unsigned int)+0x88>
  88:	eb d6                	jmp    60 <ShowFileParams::Load(char const*, unsigned int)+0x60>
  8a:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  91:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
  96:	48 89 fa             	mov    %rdi,%rdx
  99:	48 89 f5             	mov    %rsi,%rbp
  9c:	4c 89 ef             	mov    %r13,%rdi
  9f:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # a6 <ShowFileParams::Load(char const*, unsigned int)+0xa6>
  a6:	e8 00 00 00 00       	call   ab <ShowFileParams::Load(char const*, unsigned int)+0xab>
  ab:	44 89 e2             	mov    %r12d,%edx
  ae:	48 89 ee             	mov    %rbp,%rsi
  b1:	4c 89 ef             	mov    %r13,%rdi
  b4:	e8 00 00 00 00       	call   b9 <ShowFileParams::Load(char const*, unsigned int)+0xb9>
  b9:	48 8b 3b             	mov    (%rbx),%rdi
  bc:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  c0:	48 8b 07             	mov    (%rdi),%rax
  c3:	ff 50 10             	call   *0x10(%rax)
  c6:	4c 89 ef             	mov    %r13,%rdi
  c9:	e8 00 00 00 00       	call   ce <ShowFileParams::Load(char const*, unsigned int)+0xce>
  ce:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  d3:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  da:	00 00 
  dc:	74 05                	je     e3 <ShowFileParams::Load(char const*, unsigned int)+0xe3>
  de:	e8 00 00 00 00       	call   e3 <ShowFileParams::Load(char const*, unsigned int)+0xe3>
  e3:	48 83 c4 28          	add    $0x28,%rsp
  e7:	5b                   	pop    %rbx
  e8:	5d                   	pop    %rbp
  e9:	41 5c                	pop    %r12
  eb:	41 5d                	pop    %r13
  ed:	c3                   	ret    

Disassembly of section .text._ZN14ShowFileParams13HandleOptionsEPKcS1_t:

0000000000000000 <ShowFileParams::HandleOptions(char const*, char const*, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	89 cd                	mov    %ecx,%ebp
   7:	53                   	push   %rbx
   8:	48 89 fb             	mov    %rdi,%rbx
   b:	48 89 f7             	mov    %rsi,%rdi
   e:	48 89 d6             	mov    %rdx,%rsi
  11:	48 83 ec 18          	sub    $0x18,%rsp
  15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1c:	00 00 
  1e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  23:	31 c0                	xor    %eax,%eax
  25:	48 8d 54 24 07       	lea    0x7(%rsp),%rdx
  2a:	e8 00 00 00 00       	call   2f <ShowFileParams::HandleOptions(char const*, char const*, unsigned short)+0x2f>
  2f:	85 c0                	test   %eax,%eax
  31:	75 2a                	jne    5d <ShowFileParams::HandleOptions(char const*, char const*, unsigned short)+0x5d>
  33:	80 7c 24 07 00       	cmpb   $0x0,0x7(%rsp)
  38:	66 8b 43 0e          	mov    0xe(%rbx),%ax
  3c:	74 0c                	je     4a <ShowFileParams::HandleOptions(char const*, char const*, unsigned short)+0x4a>
  3e:	09 e8                	or     %ebp,%eax
  40:	83 4b 08 04          	orl    $0x4,0x8(%rbx)
  44:	66 89 43 0e          	mov    %ax,0xe(%rbx)
  48:	eb 08                	jmp    52 <ShowFileParams::HandleOptions(char const*, char const*, unsigned short)+0x52>
  4a:	f7 d5                	not    %ebp
  4c:	21 c5                	and    %eax,%ebp
  4e:	66 89 6b 0e          	mov    %bp,0xe(%rbx)
  52:	66 83 7b 0e 00       	cmpw   $0x0,0xe(%rbx)
  57:	75 04                	jne    5d <ShowFileParams::HandleOptions(char const*, char const*, unsigned short)+0x5d>
  59:	83 63 08 fb          	andl   $0xfffffffb,0x8(%rbx)
  5d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  62:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  69:	00 00 
  6b:	74 05                	je     72 <ShowFileParams::HandleOptions(char const*, char const*, unsigned short)+0x72>
  6d:	e8 00 00 00 00       	call   72 <ShowFileParams::HandleOptions(char const*, char const*, unsigned short)+0x72>
  72:	48 83 c4 18          	add    $0x18,%rsp
  76:	5b                   	pop    %rbx
  77:	5d                   	pop    %rbp
  78:	c3                   	ret    

Disassembly of section .text._ZN14ShowFileParams16callbackFunctionEPKc:

0000000000000000 <ShowFileParams::callbackFunction(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	41 56                	push   %r14
   8:	41 55                	push   %r13
   a:	41 54                	push   %r12
   c:	55                   	push   %rbp
   d:	53                   	push   %rbx
   e:	48 83 ec 28          	sub    $0x28,%rsp
  12:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  19:	00 00 
  1b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  20:	31 c0                	xor    %eax,%eax
  22:	48 85 f6             	test   %rsi,%rsi
  25:	75 1f                	jne    46 <ShowFileParams::callbackFunction(char const*)+0x46>
  27:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 2e <ShowFileParams::callbackFunction(char const*)+0x2e>
  2e:	ba 93 00 00 00       	mov    $0x93,%edx
  33:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 3a <ShowFileParams::callbackFunction(char const*)+0x3a>
  3a:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 41 <ShowFileParams::callbackFunction(char const*)+0x41>
  41:	e8 00 00 00 00       	call   46 <ShowFileParams::callbackFunction(char const*)+0x46>
  46:	49 89 f4             	mov    %rsi,%r12
  49:	48 8d 5c 24 04       	lea    0x4(%rsp),%rbx
  4e:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
  53:	48 89 fd             	mov    %rdi,%rbp
  56:	48 89 d9             	mov    %rbx,%rcx
  59:	4c 89 ea             	mov    %r13,%rdx
  5c:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 63 <ShowFileParams::callbackFunction(char const*)+0x63>
  63:	4c 89 e7             	mov    %r12,%rdi
  66:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%rsp)
  6d:	00 
  6e:	e8 00 00 00 00       	call   73 <ShowFileParams::callbackFunction(char const*)+0x73>
  73:	85 c0                	test   %eax,%eax
  75:	75 32                	jne    a9 <ShowFileParams::callbackFunction(char const*)+0xa9>
  77:	8b 44 24 04          	mov    0x4(%rsp),%eax
  7b:	4c 89 ef             	mov    %r13,%rdi
  7e:	c6 44 04 08 00       	movb   $0x0,0x8(%rsp,%rax,1)
  83:	e8 00 00 00 00       	call   88 <ShowFileParams::callbackFunction(char const*)+0x88>
  88:	83 f8 02             	cmp    $0x2,%eax
  8b:	89 c2                	mov    %eax,%edx
  8d:	8b 45 08             	mov    0x8(%rbp),%eax
  90:	74 0b                	je     9d <ShowFileParams::callbackFunction(char const*)+0x9d>
  92:	88 55 0c             	mov    %dl,0xc(%rbp)
  95:	83 c8 01             	or     $0x1,%eax
  98:	e9 1f 02 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
  9d:	c6 45 0c 00          	movb   $0x0,0xc(%rbp)
  a1:	83 e0 fe             	and    $0xfffffffe,%eax
  a4:	e9 13 02 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
  a9:	4c 8d 7c 24 02       	lea    0x2(%rsp),%r15
  ae:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # b5 <ShowFileParams::callbackFunction(char const*)+0xb5>
  b5:	4c 89 e7             	mov    %r12,%rdi
  b8:	4c 89 fa             	mov    %r15,%rdx
  bb:	e8 00 00 00 00       	call   c0 <ShowFileParams::callbackFunction(char const*)+0xc0>
  c0:	85 c0                	test   %eax,%eax
  c2:	75 30                	jne    f4 <ShowFileParams::callbackFunction(char const*)+0xf4>
  c4:	66 8b 54 24 02       	mov    0x2(%rsp),%dx
  c9:	8b 45 08             	mov    0x8(%rbp),%eax
  cc:	66 81 fa 40 1f       	cmp    $0x1f40,%dx
  d1:	74 13                	je     e6 <ShowFileParams::callbackFunction(char const*)+0xe6>
  d3:	66 81 fa ff 03       	cmp    $0x3ff,%dx
  d8:	76 0c                	jbe    e6 <ShowFileParams::callbackFunction(char const*)+0xe6>
  da:	66 89 55 10          	mov    %dx,0x10(%rbp)
  de:	83 c8 08             	or     $0x8,%eax
  e1:	e9 d6 01 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
  e6:	66 c7 45 10 40 1f    	movw   $0x1f40,0x10(%rbp)
  ec:	83 e0 f7             	and    $0xfffffff7,%eax
  ef:	e9 c8 01 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
  f4:	4c 89 fa             	mov    %r15,%rdx
  f7:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # fe <ShowFileParams::callbackFunction(char const*)+0xfe>
  fe:	4c 89 e7             	mov    %r12,%rdi
 101:	e8 00 00 00 00       	call   106 <ShowFileParams::callbackFunction(char const*)+0x106>
 106:	85 c0                	test   %eax,%eax
 108:	75 30                	jne    13a <ShowFileParams::callbackFunction(char const*)+0x13a>
 10a:	66 8b 54 24 02       	mov    0x2(%rsp),%dx
 10f:	8b 45 08             	mov    0x8(%rbp),%eax
 112:	66 81 fa 28 23       	cmp    $0x2328,%dx
 117:	74 13                	je     12c <ShowFileParams::callbackFunction(char const*)+0x12c>
 119:	66 81 fa ff 03       	cmp    $0x3ff,%dx
 11e:	76 0c                	jbe    12c <ShowFileParams::callbackFunction(char const*)+0x12c>
 120:	66 89 55 12          	mov    %dx,0x12(%rbp)
 124:	83 c8 10             	or     $0x10,%eax
 127:	e9 90 01 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 12c:	66 c7 45 12 28 23    	movw   $0x2328,0x12(%rbp)
 132:	83 e0 ef             	and    $0xffffffef,%eax
 135:	e9 82 01 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 13a:	4c 8d 74 24 01       	lea    0x1(%rsp),%r14
 13f:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 146 <ShowFileParams::callbackFunction(char const*)+0x146>
 146:	4c 89 e7             	mov    %r12,%rdi
 149:	4c 89 f2             	mov    %r14,%rdx
 14c:	e8 00 00 00 00       	call   151 <ShowFileParams::callbackFunction(char const*)+0x151>
 151:	85 c0                	test   %eax,%eax
 153:	75 23                	jne    178 <ShowFileParams::callbackFunction(char const*)+0x178>
 155:	8a 54 24 01          	mov    0x1(%rsp),%dl
 159:	8b 45 08             	mov    0x8(%rbp),%eax
 15c:	80 fa 62             	cmp    $0x62,%dl
 15f:	77 0b                	ja     16c <ShowFileParams::callbackFunction(char const*)+0x16c>
 161:	88 55 0d             	mov    %dl,0xd(%rbp)
 164:	83 c8 02             	or     $0x2,%eax
 167:	e9 50 01 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 16c:	c6 45 0d 00          	movb   $0x0,0xd(%rbp)
 170:	83 e0 fd             	and    $0xfffffffd,%eax
 173:	e9 44 01 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 178:	48 89 d9             	mov    %rbx,%rcx
 17b:	4c 89 ea             	mov    %r13,%rdx
 17e:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 185 <ShowFileParams::callbackFunction(char const*)+0x185>
 185:	4c 89 e7             	mov    %r12,%rdi
 188:	c7 44 24 04 06 00 00 	movl   $0x6,0x4(%rsp)
 18f:	00 
 190:	e8 00 00 00 00       	call   195 <ShowFileParams::callbackFunction(char const*)+0x195>
 195:	85 c0                	test   %eax,%eax
 197:	75 37                	jne    1d0 <ShowFileParams::callbackFunction(char const*)+0x1d0>
 199:	8b 44 24 04          	mov    0x4(%rsp),%eax
 19d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1a4 <ShowFileParams::callbackFunction(char const*)+0x1a4>
 1a4:	4c 89 ef             	mov    %r13,%rdi
 1a7:	c6 44 04 08 00       	movb   $0x0,0x8(%rsp,%rax,1)
 1ac:	e8 00 00 00 00       	call   1b1 <ShowFileParams::callbackFunction(char const*)+0x1b1>
 1b1:	85 c0                	test   %eax,%eax
 1b3:	8b 45 08             	mov    0x8(%rbp),%eax
 1b6:	75 0c                	jne    1c4 <ShowFileParams::callbackFunction(char const*)+0x1c4>
 1b8:	c6 45 14 01          	movb   $0x1,0x14(%rbp)
 1bc:	83 c8 20             	or     $0x20,%eax
 1bf:	e9 f8 00 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 1c4:	c6 45 14 00          	movb   $0x0,0x14(%rbp)
 1c8:	83 e0 20             	and    $0x20,%eax
 1cb:	e9 ec 00 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 1d0:	4c 89 fa             	mov    %r15,%rdx
 1d3:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1da <ShowFileParams::callbackFunction(char const*)+0x1da>
 1da:	4c 89 e7             	mov    %r12,%rdi
 1dd:	e8 00 00 00 00       	call   1e2 <ShowFileParams::callbackFunction(char const*)+0x1e2>
 1e2:	85 c0                	test   %eax,%eax
 1e4:	75 29                	jne    20f <ShowFileParams::callbackFunction(char const*)+0x20f>
 1e6:	66 8b 54 24 02       	mov    0x2(%rsp),%dx
 1eb:	8b 45 08             	mov    0x8(%rbp),%eax
 1ee:	66 81 fa ff f9       	cmp    $0xf9ff,%dx
 1f3:	76 0e                	jbe    203 <ShowFileParams::callbackFunction(char const*)+0x203>
 1f5:	66 c7 45 15 88 13    	movw   $0x1388,0x15(%rbp)
 1fb:	83 e0 bf             	and    $0xffffffbf,%eax
 1fe:	e9 b9 00 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 203:	66 89 55 15          	mov    %dx,0x15(%rbp)
 207:	83 c8 40             	or     $0x40,%eax
 20a:	e9 ad 00 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 20f:	4c 89 f2             	mov    %r14,%rdx
 212:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 219 <ShowFileParams::callbackFunction(char const*)+0x219>
 219:	4c 89 e7             	mov    %r12,%rdi
 21c:	e8 00 00 00 00       	call   221 <ShowFileParams::callbackFunction(char const*)+0x221>
 221:	85 c0                	test   %eax,%eax
 223:	75 1d                	jne    242 <ShowFileParams::callbackFunction(char const*)+0x242>
 225:	80 7c 24 01 00       	cmpb   $0x0,0x1(%rsp)
 22a:	8b 45 08             	mov    0x8(%rbp),%eax
 22d:	74 0b                	je     23a <ShowFileParams::callbackFunction(char const*)+0x23a>
 22f:	c6 45 17 01          	movb   $0x1,0x17(%rbp)
 233:	0c 80                	or     $0x80,%al
 235:	e9 82 00 00 00       	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 23a:	c6 45 17 00          	movb   $0x0,0x17(%rbp)
 23e:	24 7f                	and    $0x7f,%al
 240:	eb 7a                	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 242:	4c 89 f2             	mov    %r14,%rdx
 245:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 24c <ShowFileParams::callbackFunction(char const*)+0x24c>
 24c:	4c 89 e7             	mov    %r12,%rdi
 24f:	e8 00 00 00 00       	call   254 <ShowFileParams::callbackFunction(char const*)+0x254>
 254:	85 c0                	test   %eax,%eax
 256:	75 1d                	jne    275 <ShowFileParams::callbackFunction(char const*)+0x275>
 258:	8a 54 24 01          	mov    0x1(%rsp),%dl
 25c:	8b 45 08             	mov    0x8(%rbp),%eax
 25f:	80 fa ff             	cmp    $0xff,%dl
 262:	74 08                	je     26c <ShowFileParams::callbackFunction(char const*)+0x26c>
 264:	88 55 18             	mov    %dl,0x18(%rbp)
 267:	80 cc 01             	or     $0x1,%ah
 26a:	eb 50                	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 26c:	c6 45 18 ff          	movb   $0xff,0x18(%rbp)
 270:	80 e4 fe             	and    $0xfe,%ah
 273:	eb 47                	jmp    2bc <ShowFileParams::callbackFunction(char const*)+0x2bc>
 275:	4c 89 e6             	mov    %r12,%rsi
 278:	48 89 ef             	mov    %rbp,%rdi
 27b:	b9 01 00 00 00       	mov    $0x1,%ecx
 280:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 287 <ShowFileParams::callbackFunction(char const*)+0x287>
 287:	e8 00 00 00 00       	call   28c <ShowFileParams::callbackFunction(char const*)+0x28c>
 28c:	4c 89 e6             	mov    %r12,%rsi
 28f:	48 89 ef             	mov    %rbp,%rdi
 292:	b9 02 00 00 00       	mov    $0x2,%ecx
 297:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 29e <ShowFileParams::callbackFunction(char const*)+0x29e>
 29e:	e8 00 00 00 00       	call   2a3 <ShowFileParams::callbackFunction(char const*)+0x2a3>
 2a3:	b9 04 00 00 00       	mov    $0x4,%ecx
 2a8:	4c 89 e6             	mov    %r12,%rsi
 2ab:	48 89 ef             	mov    %rbp,%rdi
 2ae:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2b5 <ShowFileParams::callbackFunction(char const*)+0x2b5>
 2b5:	e8 00 00 00 00       	call   2ba <ShowFileParams::callbackFunction(char const*)+0x2ba>
 2ba:	eb 03                	jmp    2bf <ShowFileParams::callbackFunction(char const*)+0x2bf>
 2bc:	89 45 08             	mov    %eax,0x8(%rbp)
 2bf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
 2c4:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 2cb:	00 00 
 2cd:	74 05                	je     2d4 <ShowFileParams::callbackFunction(char const*)+0x2d4>
 2cf:	e8 00 00 00 00       	call   2d4 <ShowFileParams::callbackFunction(char const*)+0x2d4>
 2d4:	48 83 c4 28          	add    $0x28,%rsp
 2d8:	5b                   	pop    %rbx
 2d9:	5d                   	pop    %rbp
 2da:	41 5c                	pop    %r12
 2dc:	41 5d                	pop    %r13
 2de:	41 5e                	pop    %r14
 2e0:	41 5f                	pop    %r15
 2e2:	c3                   	ret    

Disassembly of section .text._ZN14ShowFileParams7BuilderEPK15TShowFileParamsPcjRj:

0000000000000000 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	4c 8d 3d 00 00 00 00 	lea    0x0(%rip),%r15        # d <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0xd>
   d:	41 56                	push   %r14
   f:	4c 8d 35 00 00 00 00 	lea    0x0(%rip),%r14        # 16 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x16>
  16:	41 55                	push   %r13
  18:	41 89 cd             	mov    %ecx,%r13d
  1b:	b9 05 01 00 00       	mov    $0x105,%ecx
  20:	41 54                	push   %r12
  22:	49 89 d4             	mov    %rdx,%r12
  25:	4c 89 fa             	mov    %r15,%rdx
  28:	55                   	push   %rbp
  29:	48 89 f5             	mov    %rsi,%rbp
  2c:	4c 89 f6             	mov    %r14,%rsi
  2f:	53                   	push   %rbx
  30:	48 89 fb             	mov    %rdi,%rbx
  33:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 3a <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x3a>
  3a:	48 83 ec 38          	sub    $0x38,%rsp
  3e:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
  43:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4a:	00 00 
  4c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  51:	31 c0                	xor    %eax,%eax
  53:	e8 00 00 00 00       	call   58 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x58>
  58:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  5c:	48 85 ed             	test   %rbp,%rbp
  5f:	74 10                	je     71 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x71>
  61:	0f 10 45 00          	movups 0x0(%rbp),%xmm0
  65:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
  69:	8a 45 10             	mov    0x10(%rbp),%al
  6c:	88 46 10             	mov    %al,0x10(%rsi)
  6f:	eb 09                	jmp    7a <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x7a>
  71:	48 8b 3b             	mov    (%rbx),%rdi
  74:	48 8b 07             	mov    (%rdi),%rax
  77:	ff 50 18             	call   *0x18(%rax)
  7a:	48 8d 6c 24 18       	lea    0x18(%rsp),%rbp
  7f:	4c 89 e2             	mov    %r12,%rdx
  82:	44 89 e9             	mov    %r13d,%ecx
  85:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 8c <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x8c>
  8c:	48 89 ef             	mov    %rbp,%rdi
  8f:	e8 00 00 00 00       	call   94 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x94>
  94:	48 89 df             	mov    %rbx,%rdi
  97:	be 02 00 00 00       	mov    $0x2,%esi
  9c:	e8 00 00 00 00       	call   a1 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0xa1>
  a1:	0f b6 53 0d          	movzbl 0xd(%rbx),%edx
  a5:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  ab:	48 89 ef             	mov    %rbp,%rdi
  ae:	0f b6 c8             	movzbl %al,%ecx
  b1:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # b8 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0xb8>
  b8:	e8 00 00 00 00       	call   bd <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0xbd>
  bd:	be 01 00 00 00       	mov    $0x1,%esi
  c2:	48 89 df             	mov    %rbx,%rdi
  c5:	e8 00 00 00 00       	call   ca <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0xca>
  ca:	0f b6 7b 0c          	movzbl 0xc(%rbx),%edi
  ce:	41 89 c4             	mov    %eax,%r12d
  d1:	e8 00 00 00 00       	call   d6 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0xd6>
  d6:	41 0f b6 cc          	movzbl %r12b,%ecx
  da:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  e0:	48 89 ef             	mov    %rbp,%rdi
  e3:	48 89 c2             	mov    %rax,%rdx
  e6:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # ed <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0xed>
  ed:	e8 00 00 00 00       	call   f2 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0xf2>
  f2:	48 89 df             	mov    %rbx,%rdi
  f5:	be 20 00 00 00       	mov    $0x20,%esi
  fa:	e8 00 00 00 00       	call   ff <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0xff>
  ff:	80 7b 14 00          	cmpb   $0x0,0x14(%rbx)
 103:	48 89 ef             	mov    %rbp,%rdi
 106:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 10d <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x10d>
 10d:	0f b6 c8             	movzbl %al,%ecx
 110:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 117 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x117>
 117:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 11d:	48 0f 45 d0          	cmovne %rax,%rdx
 121:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 128 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x128>
 128:	e8 00 00 00 00       	call   12d <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x12d>
 12d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 134 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x134>
 134:	48 89 ef             	mov    %rbp,%rdi
 137:	e8 00 00 00 00       	call   13c <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x13c>
 13c:	48 89 df             	mov    %rbx,%rdi
 13f:	be 00 01 00 00       	mov    $0x100,%esi
 144:	e8 00 00 00 00       	call   149 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x149>
 149:	0f b6 53 18          	movzbl 0x18(%rbx),%edx
 14d:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 153:	48 89 ef             	mov    %rbp,%rdi
 156:	0f b6 c8             	movzbl %al,%ecx
 159:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 160 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x160>
 160:	e8 00 00 00 00       	call   165 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x165>
 165:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 16c <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x16c>
 16c:	48 89 ef             	mov    %rbp,%rdi
 16f:	e8 00 00 00 00       	call   174 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x174>
 174:	48 89 df             	mov    %rbx,%rdi
 177:	be 40 00 00 00       	mov    $0x40,%esi
 17c:	e8 00 00 00 00       	call   181 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x181>
 181:	0f b7 53 15          	movzwl 0x15(%rbx),%edx
 185:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 18b:	48 89 ef             	mov    %rbp,%rdi
 18e:	0f b6 c8             	movzbl %al,%ecx
 191:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 198 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x198>
 198:	e8 00 00 00 00       	call   19d <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x19d>
 19d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1a4 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x1a4>
 1a4:	48 89 ef             	mov    %rbp,%rdi
 1a7:	e8 00 00 00 00       	call   1ac <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x1ac>
 1ac:	48 89 df             	mov    %rbx,%rdi
 1af:	be 80 00 00 00       	mov    $0x80,%esi
 1b4:	e8 00 00 00 00       	call   1b9 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x1b9>
 1b9:	0f b6 53 17          	movzbl 0x17(%rbx),%edx
 1bd:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 1c3:	48 89 ef             	mov    %rbp,%rdi
 1c6:	0f b6 c8             	movzbl %al,%ecx
 1c9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1d0 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x1d0>
 1d0:	e8 00 00 00 00       	call   1d5 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x1d5>
 1d5:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1dc <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x1dc>
 1dc:	48 89 ef             	mov    %rbp,%rdi
 1df:	e8 00 00 00 00       	call   1e4 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x1e4>
 1e4:	48 89 df             	mov    %rbx,%rdi
 1e7:	be 01 00 00 00       	mov    $0x1,%esi
 1ec:	e8 00 00 00 00       	call   1f1 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x1f1>
 1f1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 1f7:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1fe <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x1fe>
 1fe:	48 89 ef             	mov    %rbp,%rdi
 201:	0f b6 d0             	movzbl %al,%edx
 204:	89 d1                	mov    %edx,%ecx
 206:	e8 00 00 00 00       	call   20b <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x20b>
 20b:	48 89 df             	mov    %rbx,%rdi
 20e:	be 02 00 00 00       	mov    $0x2,%esi
 213:	e8 00 00 00 00       	call   218 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x218>
 218:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 21e:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 225 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x225>
 225:	48 89 ef             	mov    %rbp,%rdi
 228:	0f b6 d0             	movzbl %al,%edx
 22b:	89 d1                	mov    %edx,%ecx
 22d:	e8 00 00 00 00       	call   232 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x232>
 232:	48 89 df             	mov    %rbx,%rdi
 235:	be 04 00 00 00       	mov    $0x4,%esi
 23a:	e8 00 00 00 00       	call   23f <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x23f>
 23f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 245:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 24c <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x24c>
 24c:	48 89 ef             	mov    %rbp,%rdi
 24f:	0f b6 d0             	movzbl %al,%edx
 252:	89 d1                	mov    %edx,%ecx
 254:	e8 00 00 00 00       	call   259 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x259>
 259:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 260 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x260>
 260:	48 89 ef             	mov    %rbp,%rdi
 263:	e8 00 00 00 00       	call   268 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x268>
 268:	48 89 df             	mov    %rbx,%rdi
 26b:	be 08 00 00 00       	mov    $0x8,%esi
 270:	e8 00 00 00 00       	call   275 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x275>
 275:	0f b7 53 10          	movzwl 0x10(%rbx),%edx
 279:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 27f:	48 89 ef             	mov    %rbp,%rdi
 282:	0f b6 c8             	movzbl %al,%ecx
 285:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 28c <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x28c>
 28c:	e8 00 00 00 00       	call   291 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x291>
 291:	48 89 df             	mov    %rbx,%rdi
 294:	be 10 00 00 00       	mov    $0x10,%esi
 299:	e8 00 00 00 00       	call   29e <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x29e>
 29e:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
 2a2:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 2a9 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x2a9>
 2a9:	48 89 ef             	mov    %rbp,%rdi
 2ac:	0f b6 c8             	movzbl %al,%ecx
 2af:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 2b5:	e8 00 00 00 00       	call   2ba <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x2ba>
 2ba:	48 89 ef             	mov    %rbp,%rdi
 2bd:	e8 00 00 00 00       	call   2c2 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x2c2>
 2c2:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
 2c7:	4c 89 fa             	mov    %r15,%rdx
 2ca:	4c 89 f6             	mov    %r14,%rsi
 2cd:	0f b7 c0             	movzwl %ax,%eax
 2d0:	b9 2e 01 00 00       	mov    $0x12e,%ecx
 2d5:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 2dc <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x2dc>
 2dc:	89 03                	mov    %eax,(%rbx)
 2de:	31 c0                	xor    %eax,%eax
 2e0:	e8 00 00 00 00       	call   2e5 <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x2e5>
 2e5:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
 2ea:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 2f1:	00 00 
 2f3:	74 05                	je     2fa <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x2fa>
 2f5:	e8 00 00 00 00       	call   2fa <ShowFileParams::Builder(TShowFileParams const*, char*, unsigned int, unsigned int&)+0x2fa>
 2fa:	48 83 c4 38          	add    $0x38,%rsp
 2fe:	5b                   	pop    %rbx
 2ff:	5d                   	pop    %rbp
 300:	41 5c                	pop    %r12
 302:	41 5d                	pop    %r13
 304:	41 5e                	pop    %r14
 306:	41 5f                	pop    %r15
 308:	c3                   	ret    

Disassembly of section .text._ZN14ShowFileParams4SaveEPcjRj:

0000000000000000 <ShowFileParams::Save(char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	31 c0                	xor    %eax,%eax
   8:	41 89 d7             	mov    %edx,%r15d
   b:	41 56                	push   %r14
   d:	49 89 f6             	mov    %rsi,%r14
  10:	41 55                	push   %r13
  12:	4c 8d 2d 00 00 00 00 	lea    0x0(%rip),%r13        # 19 <ShowFileParams::Save(char*, unsigned int, unsigned int&)+0x19>
  19:	41 54                	push   %r12
  1b:	4c 8d 25 00 00 00 00 	lea    0x0(%rip),%r12        # 22 <ShowFileParams::Save(char*, unsigned int, unsigned int&)+0x22>
  22:	4c 89 ea             	mov    %r13,%rdx
  25:	55                   	push   %rbp
  26:	4c 89 e6             	mov    %r12,%rsi
  29:	48 89 fd             	mov    %rdi,%rbp
  2c:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 33 <ShowFileParams::Save(char*, unsigned int, unsigned int&)+0x33>
  33:	53                   	push   %rbx
  34:	48 89 cb             	mov    %rcx,%rbx
  37:	b9 32 01 00 00       	mov    $0x132,%ecx
  3c:	41 51                	push   %r9
  3e:	e8 00 00 00 00       	call   43 <ShowFileParams::Save(char*, unsigned int, unsigned int&)+0x43>
  43:	48 83 7d 00 00       	cmpq   $0x0,0x0(%rbp)
  48:	75 1a                	jne    64 <ShowFileParams::Save(char*, unsigned int, unsigned int&)+0x64>
  4a:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
  50:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 57 <ShowFileParams::Save(char*, unsigned int, unsigned int&)+0x57>
  57:	4c 89 ea             	mov    %r13,%rdx
  5a:	4c 89 e6             	mov    %r12,%rsi
  5d:	b9 36 01 00 00       	mov    $0x136,%ecx
  62:	eb 25                	jmp    89 <ShowFileParams::Save(char*, unsigned int, unsigned int&)+0x89>
  64:	44 89 f9             	mov    %r15d,%ecx
  67:	4c 89 f2             	mov    %r14,%rdx
  6a:	31 f6                	xor    %esi,%esi
  6c:	49 89 d8             	mov    %rbx,%r8
  6f:	48 89 ef             	mov    %rbp,%rdi
  72:	e8 00 00 00 00       	call   77 <ShowFileParams::Save(char*, unsigned int, unsigned int&)+0x77>
  77:	b9 3c 01 00 00       	mov    $0x13c,%ecx
  7c:	4c 89 ea             	mov    %r13,%rdx
  7f:	4c 89 e6             	mov    %r12,%rsi
  82:	4c 8d 0d 00 00 00 00 	lea    0x0(%rip),%r9        # 89 <ShowFileParams::Save(char*, unsigned int, unsigned int&)+0x89>
  89:	41 58                	pop    %r8
  8b:	4c 89 cf             	mov    %r9,%rdi
  8e:	5b                   	pop    %rbx
  8f:	31 c0                	xor    %eax,%eax
  91:	5d                   	pop    %rbp
  92:	41 5c                	pop    %r12
  94:	41 5d                	pop    %r13
  96:	41 5e                	pop    %r14
  98:	41 5f                	pop    %r15
  9a:	e9 00 00 00 00       	jmp    9f <.LC33+0x28>

Disassembly of section .text._ZN14ShowFileParams3SetEv:

0000000000000000 <ShowFileParams::Set()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	4c 8d 2d 00 00 00 00 	lea    0x0(%rip),%r13        # d <ShowFileParams::Set()+0xd>
   d:	31 c0                	xor    %eax,%eax
   f:	b9 41 01 00 00       	mov    $0x141,%ecx
  14:	41 54                	push   %r12
  16:	4c 8d 25 00 00 00 00 	lea    0x0(%rip),%r12        # 1d <ShowFileParams::Set()+0x1d>
  1d:	4c 89 ea             	mov    %r13,%rdx
  20:	55                   	push   %rbp
  21:	4c 89 e6             	mov    %r12,%rsi
  24:	48 89 fd             	mov    %rdi,%rbp
  27:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 2e <ShowFileParams::Set()+0x2e>
  2e:	e8 00 00 00 00       	call   33 <ShowFileParams::Set()+0x33>
  33:	be 08 00 00 00       	mov    $0x8,%esi
  38:	48 89 ef             	mov    %rbp,%rdi
  3b:	e8 00 00 00 00       	call   40 <ShowFileParams::Set()+0x40>
  40:	84 c0                	test   %al,%al
  42:	74 11                	je     55 <ShowFileParams::Set()+0x55>
  44:	e8 00 00 00 00       	call   49 <ShowFileParams::Set()+0x49>
  49:	0f b7 75 10          	movzwl 0x10(%rbp),%esi
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	e8 00 00 00 00       	call   55 <ShowFileParams::Set()+0x55>
  55:	be 10 00 00 00       	mov    $0x10,%esi
  5a:	48 89 ef             	mov    %rbp,%rdi
  5d:	e8 00 00 00 00       	call   62 <ShowFileParams::Set()+0x62>
  62:	84 c0                	test   %al,%al
  64:	74 11                	je     77 <ShowFileParams::Set()+0x77>
  66:	e8 00 00 00 00       	call   6b <ShowFileParams::Set()+0x6b>
  6b:	0f b7 75 12          	movzwl 0x12(%rbp),%esi
  6f:	48 89 c7             	mov    %rax,%rdi
  72:	e8 00 00 00 00       	call   77 <ShowFileParams::Set()+0x77>
  77:	be 40 00 00 00       	mov    $0x40,%esi
  7c:	48 89 ef             	mov    %rbp,%rdi
  7f:	e8 00 00 00 00       	call   84 <ShowFileParams::Set()+0x84>
  84:	84 c0                	test   %al,%al
  86:	74 16                	je     9e <ShowFileParams::Set()+0x9e>
  88:	e8 00 00 00 00       	call   8d <ShowFileParams::Set()+0x8d>
  8d:	48 89 c7             	mov    %rax,%rdi
  90:	48 85 c0             	test   %rax,%rax
  93:	74 09                	je     9e <ShowFileParams::Set()+0x9e>
  95:	0f b7 75 15          	movzwl 0x15(%rbp),%esi
  99:	e8 00 00 00 00       	call   9e <ShowFileParams::Set()+0x9e>
  9e:	be 80 00 00 00       	mov    $0x80,%esi
  a3:	48 89 ef             	mov    %rbp,%rdi
  a6:	e8 00 00 00 00       	call   ab <ShowFileParams::Set()+0xab>
  ab:	84 c0                	test   %al,%al
  ad:	74 14                	je     c3 <ShowFileParams::Set()+0xc3>
  af:	e8 00 00 00 00       	call   b4 <ShowFileParams::Set()+0xb4>
  b4:	48 89 c7             	mov    %rax,%rdi
  b7:	48 85 c0             	test   %rax,%rax
  ba:	74 07                	je     c3 <ShowFileParams::Set()+0xc3>
  bc:	31 f6                	xor    %esi,%esi
  be:	e8 00 00 00 00       	call   c3 <ShowFileParams::Set()+0xc3>
  c3:	be 02 00 00 00       	mov    $0x2,%esi
  c8:	48 89 ef             	mov    %rbp,%rdi
  cb:	e8 00 00 00 00       	call   d0 <ShowFileParams::Set()+0xd0>
  d0:	84 c0                	test   %al,%al
  d2:	74 12                	je     e6 <ShowFileParams::Set()+0xe6>
  d4:	e8 00 00 00 00       	call   d9 <ShowFileParams::Set()+0xd9>
  d9:	be 01 00 00 00       	mov    $0x1,%esi
  de:	48 89 c7             	mov    %rax,%rdi
  e1:	e8 00 00 00 00       	call   e6 <ShowFileParams::Set()+0xe6>
  e6:	be 04 00 00 00       	mov    $0x4,%esi
  eb:	48 89 ef             	mov    %rbp,%rdi
  ee:	e8 00 00 00 00       	call   f3 <ShowFileParams::Set()+0xf3>
  f3:	84 c0                	test   %al,%al
  f5:	74 28                	je     11f <ShowFileParams::Set()+0x11f>
  f7:	e8 00 00 00 00       	call   fc <ShowFileParams::Set()+0xfc>
  fc:	48 89 c7             	mov    %rax,%rdi
  ff:	48 85 c0             	test   %rax,%rax
 102:	74 07                	je     10b <ShowFileParams::Set()+0x10b>
 104:	31 f6                	xor    %esi,%esi
 106:	e8 00 00 00 00       	call   10b <ShowFileParams::Set()+0x10b>
 10b:	e8 00 00 00 00       	call   110 <ShowFileParams::Set()+0x110>
 110:	48 89 c7             	mov    %rax,%rdi
 113:	48 85 c0             	test   %rax,%rax
 116:	74 07                	je     11f <ShowFileParams::Set()+0x11f>
 118:	31 f6                	xor    %esi,%esi
 11a:	e8 00 00 00 00       	call   11f <ShowFileParams::Set()+0x11f>
 11f:	5d                   	pop    %rbp
 120:	4c 89 ea             	mov    %r13,%rdx
 123:	4c 89 e6             	mov    %r12,%rsi
 126:	b9 6f 01 00 00       	mov    $0x16f,%ecx
 12b:	41 5c                	pop    %r12
 12d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 134 <ShowFileParams::Set()+0x134>
 134:	31 c0                	xor    %eax,%eax
 136:	41 5d                	pop    %r13
 138:	e9 00 00 00 00       	jmp    13d <.LC33+0xc6>

Disassembly of section .text._ZN14ShowFileParams4DumpEv:

0000000000000000 <ShowFileParams::Dump()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	31 c0                	xor    %eax,%eax
   8:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # f <ShowFileParams::Dump()+0xf>
   f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 16 <ShowFileParams::Dump()+0x16>
  16:	53                   	push   %rbx
  17:	48 89 fb             	mov    %rdi,%rbx
  1a:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 21 <ShowFileParams::Dump()+0x21>
  21:	56                   	push   %rsi
  22:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 29 <ShowFileParams::Dump()+0x29>
  29:	e8 00 00 00 00       	call   2e <ShowFileParams::Dump()+0x2e>
  2e:	be 01 00 00 00       	mov    $0x1,%esi
  33:	48 89 df             	mov    %rbx,%rdi
  36:	e8 00 00 00 00       	call   3b <ShowFileParams::Dump()+0x3b>
  3b:	84 c0                	test   %al,%al
  3d:	74 25                	je     64 <ShowFileParams::Dump()+0x64>
  3f:	0f b6 7b 0c          	movzbl 0xc(%rbx),%edi
  43:	e8 00 00 00 00       	call   48 <ShowFileParams::Dump()+0x48>
  48:	0f b6 53 0c          	movzbl 0xc(%rbx),%edx
  4c:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 53 <ShowFileParams::Dump()+0x53>
  53:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 5a <ShowFileParams::Dump()+0x5a>
  5a:	48 89 c1             	mov    %rax,%rcx
  5d:	31 c0                	xor    %eax,%eax
  5f:	e8 00 00 00 00       	call   64 <ShowFileParams::Dump()+0x64>
  64:	be 02 00 00 00       	mov    $0x2,%esi
  69:	48 89 df             	mov    %rbx,%rdi
  6c:	e8 00 00 00 00       	call   71 <ShowFileParams::Dump()+0x71>
  71:	84 c0                	test   %al,%al
  73:	74 19                	je     8e <ShowFileParams::Dump()+0x8e>
  75:	0f b6 53 0d          	movzbl 0xd(%rbx),%edx
  79:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 80 <ShowFileParams::Dump()+0x80>
  80:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 87 <ShowFileParams::Dump()+0x87>
  87:	31 c0                	xor    %eax,%eax
  89:	e8 00 00 00 00       	call   8e <ShowFileParams::Dump()+0x8e>
  8e:	be 00 01 00 00       	mov    $0x100,%esi
  93:	48 89 df             	mov    %rbx,%rdi
  96:	e8 00 00 00 00       	call   9b <ShowFileParams::Dump()+0x9b>
  9b:	84 c0                	test   %al,%al
  9d:	74 19                	je     b8 <ShowFileParams::Dump()+0xb8>
  9f:	0f b6 53 18          	movzbl 0x18(%rbx),%edx
  a3:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # aa <ShowFileParams::Dump()+0xaa>
  aa:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # b1 <ShowFileParams::Dump()+0xb1>
  b1:	31 c0                	xor    %eax,%eax
  b3:	e8 00 00 00 00       	call   b8 <ShowFileParams::Dump()+0xb8>
  b8:	be 20 00 00 00       	mov    $0x20,%esi
  bd:	48 89 df             	mov    %rbx,%rdi
  c0:	e8 00 00 00 00       	call   c5 <ShowFileParams::Dump()+0xc5>
  c5:	84 c0                	test   %al,%al
  c7:	74 28                	je     f1 <ShowFileParams::Dump()+0xf1>
  c9:	44 0f b6 63 14       	movzbl 0x14(%rbx),%r12d
  ce:	44 89 e7             	mov    %r12d,%edi
  d1:	e8 00 00 00 00       	call   d6 <ShowFileParams::Dump()+0xd6>
  d6:	44 89 e2             	mov    %r12d,%edx
  d9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # e0 <ShowFileParams::Dump()+0xe0>
  e0:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # e7 <ShowFileParams::Dump()+0xe7>
  e7:	48 89 c1             	mov    %rax,%rcx
  ea:	31 c0                	xor    %eax,%eax
  ec:	e8 00 00 00 00       	call   f1 <ShowFileParams::Dump()+0xf1>
  f1:	be 40 00 00 00       	mov    $0x40,%esi
  f6:	48 89 df             	mov    %rbx,%rdi
  f9:	e8 00 00 00 00       	call   fe <ShowFileParams::Dump()+0xfe>
  fe:	84 c0                	test   %al,%al
 100:	74 19                	je     11b <ShowFileParams::Dump()+0x11b>
 102:	0f b7 53 15          	movzwl 0x15(%rbx),%edx
 106:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 10d <ShowFileParams::Dump()+0x10d>
 10d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 114 <ShowFileParams::Dump()+0x114>
 114:	31 c0                	xor    %eax,%eax
 116:	e8 00 00 00 00       	call   11b <ShowFileParams::Dump()+0x11b>
 11b:	be 80 00 00 00       	mov    $0x80,%esi
 120:	48 89 df             	mov    %rbx,%rdi
 123:	e8 00 00 00 00       	call   128 <ShowFileParams::Dump()+0x128>
 128:	84 c0                	test   %al,%al
 12a:	74 2d                	je     159 <ShowFileParams::Dump()+0x159>
 12c:	0f b6 53 17          	movzbl 0x17(%rbx),%edx
 130:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 137 <ShowFileParams::Dump()+0x137>
 137:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 13e <ShowFileParams::Dump()+0x13e>
 13e:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 145 <ShowFileParams::Dump()+0x145>
 145:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 14c <ShowFileParams::Dump()+0x14c>
 14c:	84 d2                	test   %dl,%dl
 14e:	48 0f 45 c8          	cmovne %rax,%rcx
 152:	31 c0                	xor    %eax,%eax
 154:	e8 00 00 00 00       	call   159 <ShowFileParams::Dump()+0x159>
 159:	be 04 00 00 00       	mov    $0x4,%esi
 15e:	48 89 df             	mov    %rbx,%rdi
 161:	e8 00 00 00 00       	call   166 <ShowFileParams::Dump()+0x166>
 166:	84 c0                	test   %al,%al
 168:	74 69                	je     1d3 <ShowFileParams::Dump()+0x1d3>
 16a:	0f b7 73 0e          	movzwl 0xe(%rbx),%esi
 16e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 175 <ShowFileParams::Dump()+0x175>
 175:	31 c0                	xor    %eax,%eax
 177:	e8 00 00 00 00       	call   17c <ShowFileParams::Dump()+0x17c>
 17c:	be 01 00 00 00       	mov    $0x1,%esi
 181:	48 89 df             	mov    %rbx,%rdi
 184:	e8 00 00 00 00       	call   189 <ShowFileParams::Dump()+0x189>
 189:	84 c0                	test   %al,%al
 18b:	74 0c                	je     199 <ShowFileParams::Dump()+0x199>
 18d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 194 <ShowFileParams::Dump()+0x194>
 194:	e8 00 00 00 00       	call   199 <ShowFileParams::Dump()+0x199>
 199:	be 02 00 00 00       	mov    $0x2,%esi
 19e:	48 89 df             	mov    %rbx,%rdi
 1a1:	e8 00 00 00 00       	call   1a6 <ShowFileParams::Dump()+0x1a6>
 1a6:	84 c0                	test   %al,%al
 1a8:	74 0c                	je     1b6 <ShowFileParams::Dump()+0x1b6>
 1aa:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1b1 <ShowFileParams::Dump()+0x1b1>
 1b1:	e8 00 00 00 00       	call   1b6 <ShowFileParams::Dump()+0x1b6>
 1b6:	be 04 00 00 00       	mov    $0x4,%esi
 1bb:	48 89 df             	mov    %rbx,%rdi
 1be:	e8 00 00 00 00       	call   1c3 <ShowFileParams::Dump()+0x1c3>
 1c3:	84 c0                	test   %al,%al
 1c5:	74 0c                	je     1d3 <ShowFileParams::Dump()+0x1d3>
 1c7:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1ce <ShowFileParams::Dump()+0x1ce>
 1ce:	e8 00 00 00 00       	call   1d3 <ShowFileParams::Dump()+0x1d3>
 1d3:	be 08 00 00 00       	mov    $0x8,%esi
 1d8:	48 89 df             	mov    %rbx,%rdi
 1db:	e8 00 00 00 00       	call   1e0 <ShowFileParams::Dump()+0x1e0>
 1e0:	84 c0                	test   %al,%al
 1e2:	74 19                	je     1fd <ShowFileParams::Dump()+0x1fd>
 1e4:	0f b7 53 10          	movzwl 0x10(%rbx),%edx
 1e8:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1ef <ShowFileParams::Dump()+0x1ef>
 1ef:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1f6 <ShowFileParams::Dump()+0x1f6>
 1f6:	31 c0                	xor    %eax,%eax
 1f8:	e8 00 00 00 00       	call   1fd <ShowFileParams::Dump()+0x1fd>
 1fd:	be 10 00 00 00       	mov    $0x10,%esi
 202:	48 89 df             	mov    %rbx,%rdi
 205:	e8 00 00 00 00       	call   20a <ShowFileParams::Dump()+0x20a>
 20a:	84 c0                	test   %al,%al
 20c:	74 1d                	je     22b <ShowFileParams::Dump()+0x22b>
 20e:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
 212:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 219 <ShowFileParams::Dump()+0x219>
 219:	59                   	pop    %rcx
 21a:	31 c0                	xor    %eax,%eax
 21c:	5b                   	pop    %rbx
 21d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 224 <ShowFileParams::Dump()+0x224>
 224:	41 5c                	pop    %r12
 226:	e9 00 00 00 00       	jmp    22b <ShowFileParams::Dump()+0x22b>
 22b:	58                   	pop    %rax
 22c:	5b                   	pop    %rbx
 22d:	41 5c                	pop    %r12
 22f:	c3                   	ret    

Disassembly of section .text._ZN14ShowFileParams22staticCallbackFunctionEPvPKc:

0000000000000000 <ShowFileParams::staticCallbackFunction(void*, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	52                   	push   %rdx
   5:	48 85 ff             	test   %rdi,%rdi
   8:	75 1c                	jne    26 <ShowFileParams::staticCallbackFunction(void*, char const*)+0x26>
   a:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 11 <ShowFileParams::staticCallbackFunction(void*, char const*)+0x11>
  11:	ba ae 01 00 00       	mov    $0x1ae,%edx
  16:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1d <ShowFileParams::staticCallbackFunction(void*, char const*)+0x1d>
  1d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 24 <ShowFileParams::staticCallbackFunction(void*, char const*)+0x24>
  24:	eb 1f                	jmp    45 <ShowFileParams::staticCallbackFunction(void*, char const*)+0x45>
  26:	48 85 f6             	test   %rsi,%rsi
  29:	75 1f                	jne    4a <ShowFileParams::staticCallbackFunction(void*, char const*)+0x4a>
  2b:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 32 <ShowFileParams::staticCallbackFunction(void*, char const*)+0x32>
  32:	ba af 01 00 00       	mov    $0x1af,%edx
  37:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 3e <ShowFileParams::staticCallbackFunction(void*, char const*)+0x3e>
  3e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 45 <ShowFileParams::staticCallbackFunction(void*, char const*)+0x45>
  45:	e8 00 00 00 00       	call   4a <ShowFileParams::staticCallbackFunction(void*, char const*)+0x4a>
  4a:	58                   	pop    %rax
  4b:	e9 00 00 00 00       	jmp    50 <.LC31+0x3>

Disassembly of section .text._ZN17PropertiesBuilder3AddIbEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	41 52                	push   %r10
   8:	49 89 f2             	mov    %rsi,%r10
   b:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	66 39 ee             	cmp    %bp,%si
  16:	72 04                	jb     1c <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x1c>
  18:	31 c0                	xor    %eax,%eax
  1a:	eb 33                	jmp    4f <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x4f>
  1c:	89 d0                	mov    %edx,%eax
  1e:	48 89 fb             	mov    %rdi,%rbx
  21:	0f b7 d6             	movzwl %si,%edx
  24:	48 03 37             	add    (%rdi),%rsi
  27:	57                   	push   %rdi
  28:	29 d5                	sub    %edx,%ebp
  2a:	44 0f b6 c9          	movzbl %cl,%r9d
  2e:	48 89 df             	mov    %rbx,%rdi
  31:	41 50                	push   %r8
  33:	4c 89 d1             	mov    %r10,%rcx
  36:	44 0f b6 c0          	movzbl %al,%r8d
  3a:	89 ea                	mov    %ebp,%edx
  3c:	e8 00 00 00 00       	call   41 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x41>
  41:	41 58                	pop    %r8
  43:	41 59                	pop    %r9
  45:	39 c5                	cmp    %eax,%ebp
  47:	7c cf                	jl     18 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x18>
  49:	66 01 43 0a          	add    %ax,0xa(%rbx)
  4d:	b0 01                	mov    $0x1,%al
  4f:	5a                   	pop    %rdx
  50:	5b                   	pop    %rbx
  51:	5d                   	pop    %rbp
  52:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIjEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	41 52                	push   %r10
   8:	49 89 f2             	mov    %rsi,%r10
   b:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	66 39 ee             	cmp    %bp,%si
  16:	72 04                	jb     1c <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)+0x1c>
  18:	31 c0                	xor    %eax,%eax
  1a:	eb 32                	jmp    4e <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)+0x4e>
  1c:	89 d0                	mov    %edx,%eax
  1e:	48 89 fb             	mov    %rdi,%rbx
  21:	0f b7 d6             	movzwl %si,%edx
  24:	48 03 37             	add    (%rdi),%rsi
  27:	57                   	push   %rdi
  28:	29 d5                	sub    %edx,%ebp
  2a:	44 0f b6 c9          	movzbl %cl,%r9d
  2e:	48 89 df             	mov    %rbx,%rdi
  31:	41 50                	push   %r8
  33:	4c 89 d1             	mov    %r10,%rcx
  36:	41 89 c0             	mov    %eax,%r8d
  39:	89 ea                	mov    %ebp,%edx
  3b:	e8 00 00 00 00       	call   40 <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)+0x40>
  40:	41 58                	pop    %r8
  42:	41 59                	pop    %r9
  44:	39 c5                	cmp    %eax,%ebp
  46:	7c d0                	jl     18 <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)+0x18>
  48:	66 01 43 0a          	add    %ax,0xa(%rbx)
  4c:	b0 01                	mov    $0x1,%al
  4e:	5a                   	pop    %rdx
  4f:	5b                   	pop    %rbx
  50:	5d                   	pop    %rbp
  51:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIPKcEEbS2_T_bj:

0000000000000000 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	41 52                	push   %r10
   8:	49 89 f2             	mov    %rsi,%r10
   b:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	66 39 ee             	cmp    %bp,%si
  16:	72 04                	jb     1c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x1c>
  18:	31 c0                	xor    %eax,%eax
  1a:	eb 33                	jmp    4f <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x4f>
  1c:	48 89 d0             	mov    %rdx,%rax
  1f:	48 89 fb             	mov    %rdi,%rbx
  22:	0f b7 d6             	movzwl %si,%edx
  25:	48 03 37             	add    (%rdi),%rsi
  28:	57                   	push   %rdi
  29:	29 d5                	sub    %edx,%ebp
  2b:	44 0f b6 c9          	movzbl %cl,%r9d
  2f:	48 89 df             	mov    %rbx,%rdi
  32:	41 50                	push   %r8
  34:	4c 89 d1             	mov    %r10,%rcx
  37:	49 89 c0             	mov    %rax,%r8
  3a:	89 ea                	mov    %ebp,%edx
  3c:	e8 00 00 00 00       	call   41 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x41>
  41:	41 58                	pop    %r8
  43:	41 59                	pop    %r9
  45:	39 c5                	cmp    %eax,%ebp
  47:	7c cf                	jl     18 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x18>
  49:	66 01 43 0a          	add    %ax,0xa(%rbx)
  4d:	b0 01                	mov    $0x1,%al
  4f:	5a                   	pop    %rdx
  50:	5b                   	pop    %rbx
  51:	5d                   	pop    %rbp
  52:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIbEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	49 89 fa             	mov    %rdi,%r10
   7:	45 0f b6 c0          	movzbl %r8b,%r8d
   b:	48 89 f7             	mov    %rsi,%rdi
   e:	89 d6                	mov    %edx,%esi
  10:	41 8a 42 0c          	mov    0xc(%r10),%al
  14:	45 84 c9             	test   %r9b,%r9b
  17:	75 06                	jne    1f <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x1f>
  19:	84 c0                	test   %al,%al
  1b:	75 0d                	jne    2a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x2a>
  1d:	eb 14                	jmp    33 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x33>
  1f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x26>
  26:	84 c0                	test   %al,%al
  28:	74 10                	je     3a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x3a>
  2a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 31 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x31>
  31:	eb 07                	jmp    3a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x3a>
  33:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x3a>
  3a:	31 c0                	xor    %eax,%eax
  3c:	e9 00 00 00 00       	jmp    41 <.LC30+0x5>

Disassembly of section .text._ZN17PropertiesBuilder8add_partIjEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	49 89 fa             	mov    %rdi,%r10
   7:	48 89 f7             	mov    %rsi,%rdi
   a:	89 d6                	mov    %edx,%esi
   c:	41 8a 42 0c          	mov    0xc(%r10),%al
  10:	45 84 c9             	test   %r9b,%r9b
  13:	75 06                	jne    1b <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x1b>
  15:	84 c0                	test   %al,%al
  17:	75 0d                	jne    26 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x26>
  19:	eb 14                	jmp    2f <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x2f>
  1b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 22 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x22>
  22:	84 c0                	test   %al,%al
  24:	74 10                	je     36 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x36>
  26:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2d <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x2d>
  2d:	eb 07                	jmp    36 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x36>
  2f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 36 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x36>
  36:	31 c0                	xor    %eax,%eax
  38:	e9 00 00 00 00       	jmp    3d <.LC30+0x1>

showfileprotocolartnettrigger.o:     file format elf64-x86-64


Disassembly of section .text._ZN13ArtNetTriggerD2Ev:

0000000000000000 <ArtNetTrigger::~ArtNetTrigger()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ArtNetTrigger::~ArtNetTrigger()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN13ArtNetTriggerD0Ev:

0000000000000000 <ArtNetTrigger::~ArtNetTrigger()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ArtNetTrigger::~ArtNetTrigger()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ArtNetTrigger::~ArtNetTrigger()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN16ArtNetController18SetRunTableCleanupEb:

0000000000000000 <ArtNetController::SetRunTableCleanup(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  15:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  19:	88 50 6c             	mov    %dl,0x6c(%rax)
  1c:	90                   	nop
  1d:	5d                   	pop    %rbp
  1e:	c3                   	ret    

Disassembly of section .text._ZNK16ArtNetController18GetSynchronizationEv:

0000000000000000 <ArtNetController::GetSynchronization() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 30          	movzbl 0x30(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN16ArtNetController9SetMasterEj:

0000000000000000 <ArtNetController::SetMaster(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	81 7d f4 fe 00 00 00 	cmpl   $0xfe,-0xc(%rbp)
  16:	77 0c                	ja     24 <ArtNetController::SetMaster(unsigned int)+0x24>
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	8b 55 f4             	mov    -0xc(%rbp),%edx
  1f:	89 50 74             	mov    %edx,0x74(%rax)
  22:	eb 0b                	jmp    2f <ArtNetController::SetMaster(unsigned int)+0x2f>
  24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  28:	c7 40 74 ff 00 00 00 	movl   $0xff,0x74(%rax)
  2f:	90                   	nop
  30:	5d                   	pop    %rbp
  31:	c3                   	ret    

Disassembly of section .text._ZN23ShowFileProtocolHandlerD2Ev:

0000000000000000 <ShowFileProtocolHandler::~ShowFileProtocolHandler()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <ShowFileProtocolHandler::~ShowFileProtocolHandler()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN23ShowFileProtocolHandlerD0Ev:

0000000000000000 <ShowFileProtocolHandler::~ShowFileProtocolHandler()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ShowFileProtocolHandler::~ShowFileProtocolHandler()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ShowFileProtocolHandler::~ShowFileProtocolHandler()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNetD2Ev:

0000000000000000 <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 25 <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()+0x25>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	48 89 50 08          	mov    %rdx,0x8(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 83 c0 10          	add    $0x10,%rax
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 83 c0 10          	add    $0x10,%rax
  45:	48 89 c7             	mov    %rax,%rdi
  48:	e8 00 00 00 00       	call   4d <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()+0x4d>
  4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  51:	48 83 c0 08          	add    $0x8,%rax
  55:	48 89 c7             	mov    %rax,%rdi
  58:	e8 00 00 00 00       	call   5d <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()+0x5d>
  5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()+0x69>
  69:	90                   	nop
  6a:	c9                   	leave  
  6b:	c3                   	ret    

000000000000006c <non-virtual thunk to ShowFileProtocolArtNet::~ShowFileProtocolArtNet()>:
  6c:	f3 0f 1e fa          	endbr64 
  70:	48 83 ef 08          	sub    $0x8,%rdi
  74:	eb 8a                	jmp    0 <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()>

Disassembly of section .text._ZN22ShowFileProtocolArtNetD0Ev:

0000000000000000 <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

000000000000002a <non-virtual thunk to ShowFileProtocolArtNet::~ShowFileProtocolArtNet()>:
  2a:	f3 0f 1e fa          	endbr64 
  2e:	48 83 ef 08          	sub    $0x8,%rdi
  32:	eb cc                	jmp    0 <ShowFileProtocolArtNet::~ShowFileProtocolArtNet()>

Disassembly of section .text._ZN22ShowFileProtocolArtNet5StartEv:

0000000000000000 <ShowFileProtocolArtNet::Start()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 83 c0 10          	add    $0x10,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <ShowFileProtocolArtNet::Start()+0x20>
  20:	90                   	nop
  21:	c9                   	leave  
  22:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNet4StopEv:

0000000000000000 <ShowFileProtocolArtNet::Stop()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 83 c0 10          	add    $0x10,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <ShowFileProtocolArtNet::Stop()+0x20>
  20:	90                   	nop
  21:	c9                   	leave  
  22:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNet6DmxOutEtPKhj:

0000000000000000 <ShowFileProtocolArtNet::DmxOut(unsigned short, unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  16:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  19:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8d 78 10          	lea    0x10(%rax),%rdi
  25:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  29:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  30:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  36:	89 c6                	mov    %eax,%esi
  38:	e8 00 00 00 00       	call   3d <ShowFileProtocolArtNet::DmxOut(unsigned short, unsigned char const*, unsigned int)+0x3d>
  3d:	90                   	nop
  3e:	c9                   	leave  
  3f:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNet7DmxSyncEv:

0000000000000000 <ShowFileProtocolArtNet::DmxSync()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 83 c0 10          	add    $0x10,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <ShowFileProtocolArtNet::DmxSync()+0x20>
  20:	90                   	nop
  21:	c9                   	leave  
  22:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNet11DmxBlackoutEv:

0000000000000000 <ShowFileProtocolArtNet::DmxBlackout()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 83 c0 10          	add    $0x10,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <ShowFileProtocolArtNet::DmxBlackout()+0x20>
  20:	90                   	nop
  21:	c9                   	leave  
  22:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNet9DmxMasterEj:

0000000000000000 <ShowFileProtocolArtNet::DmxMaster(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8d 50 10          	lea    0x10(%rax),%rdx
  1b:	8b 45 f4             	mov    -0xc(%rbp),%eax
  1e:	89 c6                	mov    %eax,%esi
  20:	48 89 d7             	mov    %rdx,%rdi
  23:	e8 00 00 00 00       	call   28 <ShowFileProtocolArtNet::DmxMaster(unsigned int)+0x28>
  28:	90                   	nop
  29:	c9                   	leave  
  2a:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNet19DoRunCleanupProcessEb:

0000000000000000 <ShowFileProtocolArtNet::DoRunCleanupProcess(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8d 50 10          	lea    0x10(%rax),%rdx
  1d:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  21:	89 c6                	mov    %eax,%esi
  23:	48 89 d7             	mov    %rdx,%rdi
  26:	e8 00 00 00 00       	call   2b <ShowFileProtocolArtNet::DoRunCleanupProcess(bool)+0x2b>
  2b:	90                   	nop
  2c:	c9                   	leave  
  2d:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNet3RunEv:

0000000000000000 <ShowFileProtocolArtNet::Run()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 83 c0 10          	add    $0x10,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <ShowFileProtocolArtNet::Run()+0x20>
  20:	90                   	nop
  21:	c9                   	leave  
  22:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNet14IsSyncDisabledEv:

0000000000000000 <ShowFileProtocolArtNet::IsSyncDisabled()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 83 c0 10          	add    $0x10,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <ShowFileProtocolArtNet::IsSyncDisabled()+0x20>
  20:	83 f0 01             	xor    $0x1,%eax
  23:	c9                   	leave  
  24:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNet5PrintEv:

0000000000000000 <ShowFileProtocolArtNet::Print()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 17 <ShowFileProtocolArtNet::Print()+0x17>
  17:	48 89 c7             	mov    %rax,%rdi
  1a:	e8 00 00 00 00       	call   1f <ShowFileProtocolArtNet::Print()+0x1f>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	48 83 c0 10          	add    $0x10,%rax
  27:	48 89 c7             	mov    %rax,%rdi
  2a:	e8 00 00 00 00       	call   2f <ShowFileProtocolArtNet::Print()+0x2f>
  2f:	90                   	nop
  30:	c9                   	leave  
  31:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile5StartEv:

0000000000000000 <ShowFile::Start()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 41 00 00 00       	mov    $0x41,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFile::Start()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFile::Start()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFile::Start()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFile::Start()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	be 00 00 00 00       	mov    $0x0,%esi
  46:	48 89 c7             	mov    %rax,%rdi
  49:	e8 00 00 00 00       	call   4e <ShowFile::Start()+0x4e>
  4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  52:	48 8b 40 10          	mov    0x10(%rax),%rax
  56:	48 85 c0             	test   %rax,%rax
  59:	74 2a                	je     85 <ShowFile::Start()+0x85>
  5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5f:	48 8b 00             	mov    (%rax),%rax
  62:	48 83 c0 10          	add    $0x10,%rax
  66:	48 8b 10             	mov    (%rax),%rdx
  69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	ff d2                	call   *%rdx
  72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  76:	be 01 00 00 00       	mov    $0x1,%esi
  7b:	48 89 c7             	mov    %rax,%rdi
  7e:	e8 00 00 00 00       	call   83 <ShowFile::Start()+0x83>
  83:	eb 11                	jmp    96 <ShowFile::Start()+0x96>
  85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  89:	be 02 00 00 00       	mov    $0x2,%esi
  8e:	48 89 c7             	mov    %rax,%rdi
  91:	e8 00 00 00 00       	call   96 <ShowFile::Start()+0x96>
  96:	b9 4c 00 00 00       	mov    $0x4c,%ecx
  9b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a2 <ShowFile::Start()+0xa2>
  a2:	48 89 c2             	mov    %rax,%rdx
  a5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ac <ShowFile::Start()+0xac>
  ac:	48 89 c6             	mov    %rax,%rsi
  af:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b6 <ShowFile::Start()+0xb6>
  b6:	48 89 c7             	mov    %rax,%rdi
  b9:	b8 00 00 00 00       	mov    $0x0,%eax
  be:	e8 00 00 00 00       	call   c3 <ShowFile::Start()+0xc3>
  c3:	90                   	nop
  c4:	c9                   	leave  
  c5:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile4StopEv:

0000000000000000 <ShowFile::Stop()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 50 00 00 00       	mov    $0x50,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFile::Stop()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFile::Stop()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFile::Stop()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFile::Stop()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 8b 40 10          	mov    0x10(%rax),%rax
  45:	48 85 c0             	test   %rax,%rax
  48:	74 28                	je     72 <ShowFile::Stop()+0x72>
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	48 8b 00             	mov    (%rax),%rax
  51:	48 83 c0 18          	add    $0x18,%rax
  55:	48 8b 10             	mov    (%rax),%rdx
  58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	ff d2                	call   *%rdx
  61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  65:	be 02 00 00 00       	mov    $0x2,%esi
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	e8 00 00 00 00       	call   72 <ShowFile::Stop()+0x72>
  72:	b9 57 00 00 00       	mov    $0x57,%ecx
  77:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7e <ShowFile::Stop()+0x7e>
  7e:	48 89 c2             	mov    %rax,%rdx
  81:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 88 <ShowFile::Stop()+0x88>
  88:	48 89 c6             	mov    %rax,%rsi
  8b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 92 <ShowFile::Stop()+0x92>
  92:	48 89 c7             	mov    %rax,%rdi
  95:	b8 00 00 00 00       	mov    $0x0,%eax
  9a:	e8 00 00 00 00       	call   9f <ShowFile::Stop()+0x9f>
  9f:	90                   	nop
  a0:	c9                   	leave  
  a1:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile6ResumeEv:

0000000000000000 <ShowFile::Resume()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 5b 00 00 00       	mov    $0x5b,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFile::Resume()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFile::Resume()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFile::Resume()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFile::Resume()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 8b 40 10          	mov    0x10(%rax),%rax
  45:	48 85 c0             	test   %rax,%rax
  48:	74 28                	je     72 <ShowFile::Resume()+0x72>
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	48 8b 00             	mov    (%rax),%rax
  51:	48 83 c0 20          	add    $0x20,%rax
  55:	48 8b 10             	mov    (%rax),%rdx
  58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	ff d2                	call   *%rdx
  61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  65:	be 01 00 00 00       	mov    $0x1,%esi
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	e8 00 00 00 00       	call   72 <ShowFile::Resume()+0x72>
  72:	b9 62 00 00 00       	mov    $0x62,%ecx
  77:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7e <ShowFile::Resume()+0x7e>
  7e:	48 89 c2             	mov    %rax,%rdx
  81:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 88 <ShowFile::Resume()+0x88>
  88:	48 89 c6             	mov    %rax,%rsi
  8b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 92 <ShowFile::Resume()+0x92>
  92:	48 89 c7             	mov    %rax,%rdi
  95:	b8 00 00 00 00       	mov    $0x0,%eax
  9a:	e8 00 00 00 00       	call   9f <ShowFile::Resume()+0x9f>
  9f:	90                   	nop
  a0:	c9                   	leave  
  a1:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile8BlackOutEv:

0000000000000000 <ShowFile::BlackOut()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 40 18          	mov    0x18(%rax),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	74 2b                	je     48 <ShowFile::BlackOut()+0x48>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <ShowFile::BlackOut()+0x29>
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	48 8b 40 18          	mov    0x18(%rax),%rax
  31:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  35:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  39:	48 8b 12             	mov    (%rdx),%rdx
  3c:	48 83 c2 20          	add    $0x20,%rdx
  40:	48 8b 12             	mov    (%rdx),%rdx
  43:	48 89 c7             	mov    %rax,%rdi
  46:	ff d2                	call   *%rdx
  48:	90                   	nop
  49:	c9                   	leave  
  4a:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile3GetEv:

0000000000000000 <ShowFile::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ShowFile::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN22ShowFileProtocolArtNet7HandlerEPK14TArtNetTrigger:

0000000000000000 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	b9 28 00 00 00       	mov    $0x28,%ecx
  19:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 20 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x20>
  20:	48 89 c2             	mov    %rax,%rdx
  23:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2a <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x2a>
  2a:	48 89 c6             	mov    %rax,%rsi
  2d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 34 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x34>
  34:	48 89 c7             	mov    %rax,%rdi
  37:	b8 00 00 00 00       	mov    $0x0,%eax
  3c:	e8 00 00 00 00       	call   41 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x41>
  41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  45:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  49:	0f b6 d0             	movzbl %al,%edx
  4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  50:	0f b6 00             	movzbl (%rax),%eax
  53:	0f b6 c8             	movzbl %al,%ecx
  56:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 5d <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x5d>
  5d:	48 83 ec 08          	sub    $0x8,%rsp
  61:	52                   	push   %rdx
  62:	41 89 c9             	mov    %ecx,%r9d
  65:	41 b8 29 00 00 00    	mov    $0x29,%r8d
  6b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 72 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x72>
  72:	48 89 d1             	mov    %rdx,%rcx
  75:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 7c <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x7c>
  7c:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 83 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x83>
  83:	48 89 c7             	mov    %rax,%rdi
  86:	b8 00 00 00 00       	mov    $0x0,%eax
  8b:	e8 00 00 00 00       	call   90 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x90>
  90:	48 83 c4 10          	add    $0x10,%rsp
  94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  98:	0f b6 00             	movzbl (%rax),%eax
  9b:	3c 02                	cmp    $0x2,%al
  9d:	75 68                	jne    107 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x107>
  9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  a3:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  a7:	0f b6 c0             	movzbl %al,%eax
  aa:	83 f8 53             	cmp    $0x53,%eax
  ad:	74 48                	je     f7 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xf7>
  af:	83 f8 53             	cmp    $0x53,%eax
  b2:	7f 52                	jg     106 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x106>
  b4:	83 f8 52             	cmp    $0x52,%eax
  b7:	74 2f                	je     e8 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xe8>
  b9:	83 f8 52             	cmp    $0x52,%eax
  bc:	7f 48                	jg     106 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x106>
  be:	83 f8 42             	cmp    $0x42,%eax
  c1:	74 07                	je     ca <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xca>
  c3:	83 f8 47             	cmp    $0x47,%eax
  c6:	74 11                	je     d9 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xd9>
  c8:	eb 3c                	jmp    106 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x106>
  ca:	e8 00 00 00 00       	call   cf <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xcf>
  cf:	48 89 c7             	mov    %rax,%rdi
  d2:	e8 00 00 00 00       	call   d7 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xd7>
  d7:	eb 2e                	jmp    107 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x107>
  d9:	e8 00 00 00 00       	call   de <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xde>
  de:	48 89 c7             	mov    %rax,%rdi
  e1:	e8 00 00 00 00       	call   e6 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xe6>
  e6:	eb 1f                	jmp    107 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x107>
  e8:	e8 00 00 00 00       	call   ed <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xed>
  ed:	48 89 c7             	mov    %rax,%rdi
  f0:	e8 00 00 00 00       	call   f5 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xf5>
  f5:	eb 10                	jmp    107 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x107>
  f7:	e8 00 00 00 00       	call   fc <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xfc>
  fc:	48 89 c7             	mov    %rax,%rdi
  ff:	e8 00 00 00 00       	call   104 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x104>
 104:	eb 01                	jmp    107 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x107>
 106:	90                   	nop
 107:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 10b:	0f b6 00             	movzbl (%rax),%eax
 10e:	3c 03                	cmp    $0x3,%al
 110:	75 1d                	jne    12f <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x12f>
 112:	e8 00 00 00 00       	call   117 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x117>
 117:	48 89 c2             	mov    %rax,%rdx
 11a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 11e:	0f b6 40 01          	movzbl 0x1(%rax),%eax
 122:	0f b6 c0             	movzbl %al,%eax
 125:	89 c6                	mov    %eax,%esi
 127:	48 89 d7             	mov    %rdx,%rdi
 12a:	e8 00 00 00 00       	call   12f <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x12f>
 12f:	b9 42 00 00 00       	mov    $0x42,%ecx
 134:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 13b <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x13b>
 13b:	48 89 c2             	mov    %rax,%rdx
 13e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 145 <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x145>
 145:	48 89 c6             	mov    %rax,%rsi
 148:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 14f <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x14f>
 14f:	48 89 c7             	mov    %rax,%rdi
 152:	b8 00 00 00 00       	mov    $0x0,%eax
 157:	e8 00 00 00 00       	call   15c <ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0x15c>
 15c:	90                   	nop
 15d:	c9                   	leave  
 15e:	c3                   	ret    

Disassembly of section .text._ZThn8_N22ShowFileProtocolArtNet7HandlerEPK14TArtNetTrigger:

0000000000000000 <non-virtual thunk to ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 ef 08          	sub    $0x8,%rdi
   8:	e9 00 00 00 00       	jmp    d <non-virtual thunk to ShowFileProtocolArtNet::Handler(TArtNetTrigger const*)+0xd>

showfilestatic.o:     file format elf64-x86-64


Disassembly of section .text._ZN8ShowFile9GetFormatEPKc:

0000000000000000 <ShowFile::GetFormat(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  15:	75 28                	jne    3f <ShowFile::GetFormat(char const*)+0x3f>
  17:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1e <ShowFile::GetFormat(char const*)+0x1e>
  1e:	48 89 c1             	mov    %rax,%rcx
  21:	ba 26 00 00 00       	mov    $0x26,%edx
  26:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2d <ShowFile::GetFormat(char const*)+0x2d>
  2d:	48 89 c6             	mov    %rax,%rsi
  30:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 37 <ShowFile::GetFormat(char const*)+0x37>
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	e8 00 00 00 00       	call   3f <ShowFile::GetFormat(char const*)+0x3f>
  3f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  46:	eb 38                	jmp    80 <ShowFile::GetFormat(char const*)+0x80>
  48:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4b:	48 63 d0             	movslq %eax,%rdx
  4e:	48 89 d0             	mov    %rdx,%rax
  51:	48 01 c0             	add    %rax,%rax
  54:	48 01 d0             	add    %rdx,%rax
  57:	48 01 c0             	add    %rax,%rax
  5a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 61 <ShowFile::GetFormat(char const*)+0x61>
  61:	48 01 c2             	add    %rax,%rdx
  64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  68:	48 89 d6             	mov    %rdx,%rsi
  6b:	48 89 c7             	mov    %rax,%rdi
  6e:	e8 00 00 00 00       	call   73 <ShowFile::GetFormat(char const*)+0x73>
  73:	85 c0                	test   %eax,%eax
  75:	75 05                	jne    7c <ShowFile::GetFormat(char const*)+0x7c>
  77:	8b 45 fc             	mov    -0x4(%rbp),%eax
  7a:	eb 0f                	jmp    8b <ShowFile::GetFormat(char const*)+0x8b>
  7c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  80:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  84:	7e c2                	jle    48 <ShowFile::GetFormat(char const*)+0x48>
  86:	b8 02 00 00 00       	mov    $0x2,%eax
  8b:	c9                   	leave  
  8c:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile9GetFormatEN8showfile7FormatsE:

0000000000000000 <ShowFile::GetFormat(showfile::Formats)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   b:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   f:	7f 1d                	jg     2e <ShowFile::GetFormat(showfile::Formats)+0x2e>
  11:	8b 45 fc             	mov    -0x4(%rbp),%eax
  14:	89 c2                	mov    %eax,%edx
  16:	48 89 d0             	mov    %rdx,%rax
  19:	48 01 c0             	add    %rax,%rax
  1c:	48 01 d0             	add    %rdx,%rax
  1f:	48 01 c0             	add    %rax,%rax
  22:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 29 <ShowFile::GetFormat(showfile::Formats)+0x29>
  29:	48 01 d0             	add    %rdx,%rax
  2c:	eb 07                	jmp    35 <ShowFile::GetFormat(showfile::Formats)+0x35>
  2e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 35 <ShowFile::GetFormat(showfile::Formats)+0x35>
  35:	5d                   	pop    %rbp
  36:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile18ShowFileNameCopyToEPcjj:

0000000000000000 <ShowFile::ShowFileNameCopyTo(char*, unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	83 7d f4 0b          	cmpl   $0xb,-0xc(%rbp)
  1a:	74 28                	je     44 <ShowFile::ShowFileNameCopyTo(char*, unsigned int, unsigned int)+0x44>
  1c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 23 <ShowFile::ShowFileNameCopyTo(char*, unsigned int, unsigned int)+0x23>
  23:	48 89 c1             	mov    %rax,%rcx
  26:	ba 3a 00 00 00       	mov    $0x3a,%edx
  2b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 32 <ShowFile::ShowFileNameCopyTo(char*, unsigned int, unsigned int)+0x32>
  32:	48 89 c6             	mov    %rax,%rsi
  35:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3c <ShowFile::ShowFileNameCopyTo(char*, unsigned int, unsigned int)+0x3c>
  3c:	48 89 c7             	mov    %rax,%rdi
  3f:	e8 00 00 00 00       	call   44 <ShowFile::ShowFileNameCopyTo(char*, unsigned int, unsigned int)+0x44>
  44:	83 7d f0 62          	cmpl   $0x62,-0x10(%rbp)
  48:	77 27                	ja     71 <ShowFile::ShowFileNameCopyTo(char*, unsigned int, unsigned int)+0x71>
  4a:	8b 75 f4             	mov    -0xc(%rbp),%esi
  4d:	8b 55 f0             	mov    -0x10(%rbp),%edx
  50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  54:	89 d1                	mov    %edx,%ecx
  56:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5d <ShowFile::ShowFileNameCopyTo(char*, unsigned int, unsigned int)+0x5d>
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	b8 00 00 00 00       	mov    $0x0,%eax
  65:	e8 00 00 00 00       	call   6a <ShowFile::ShowFileNameCopyTo(char*, unsigned int, unsigned int)+0x6a>
  6a:	b8 01 00 00 00       	mov    $0x1,%eax
  6f:	eb 05                	jmp    76 <ShowFile::ShowFileNameCopyTo(char*, unsigned int, unsigned int)+0x76>
  71:	b8 00 00 00 00       	mov    $0x0,%eax
  76:	c9                   	leave  
  77:	c3                   	ret    

Disassembly of section .text._ZN8ShowFile17CheckShowFileNameEPKcRj:

0000000000000000 <ShowFile::CheckShowFileName(char const*, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1b <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x1b>
  1b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  1f:	49 89 d1             	mov    %rdx,%r9
  22:	41 b8 45 00 00 00    	mov    $0x45,%r8d
  28:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2f <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x2f>
  2f:	48 89 d1             	mov    %rdx,%rcx
  32:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 39 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x39>
  39:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 40 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x40>
  40:	48 89 c7             	mov    %rax,%rdi
  43:	b8 00 00 00 00       	mov    $0x0,%eax
  48:	e8 00 00 00 00       	call   4d <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x4d>
  4d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  52:	74 12                	je     66 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x66>
  54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  58:	48 89 c7             	mov    %rax,%rdi
  5b:	e8 00 00 00 00       	call   60 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x60>
  60:	48 83 f8 0a          	cmp    $0xa,%rax
  64:	74 37                	je     9d <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x9d>
  66:	b9 48 00 00 00       	mov    $0x48,%ecx
  6b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 72 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x72>
  72:	48 89 c2             	mov    %rax,%rdx
  75:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7c <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x7c>
  7c:	48 89 c6             	mov    %rax,%rsi
  7f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 86 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x86>
  86:	48 89 c7             	mov    %rax,%rdi
  89:	b8 00 00 00 00       	mov    $0x0,%eax
  8e:	e8 00 00 00 00       	call   93 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x93>
  93:	b8 00 00 00 00       	mov    $0x0,%eax
  98:	e9 20 02 00 00       	jmp    2bd <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x2bd>
  9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a1:	ba 04 00 00 00       	mov    $0x4,%edx
  a6:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # ad <ShowFile::CheckShowFileName(char const*, unsigned int&)+0xad>
  ad:	48 89 ce             	mov    %rcx,%rsi
  b0:	48 89 c7             	mov    %rax,%rdi
  b3:	e8 00 00 00 00       	call   b8 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0xb8>
  b8:	85 c0                	test   %eax,%eax
  ba:	74 37                	je     f3 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0xf3>
  bc:	b9 4d 00 00 00       	mov    $0x4d,%ecx
  c1:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # c8 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0xc8>
  c8:	48 89 c2             	mov    %rax,%rdx
  cb:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # d2 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0xd2>
  d2:	48 89 c6             	mov    %rax,%rsi
  d5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # dc <ShowFile::CheckShowFileName(char const*, unsigned int&)+0xdc>
  dc:	48 89 c7             	mov    %rax,%rdi
  df:	b8 00 00 00 00       	mov    $0x0,%eax
  e4:	e8 00 00 00 00       	call   e9 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0xe9>
  e9:	b8 00 00 00 00       	mov    $0x0,%eax
  ee:	e9 ca 01 00 00       	jmp    2bd <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x2bd>
  f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f7:	48 83 c0 06          	add    $0x6,%rax
  fb:	ba 04 00 00 00       	mov    $0x4,%edx
 100:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 107 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x107>
 107:	48 89 ce             	mov    %rcx,%rsi
 10a:	48 89 c7             	mov    %rax,%rdi
 10d:	e8 00 00 00 00       	call   112 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x112>
 112:	85 c0                	test   %eax,%eax
 114:	74 37                	je     14d <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x14d>
 116:	b9 52 00 00 00       	mov    $0x52,%ecx
 11b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 122 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x122>
 122:	48 89 c2             	mov    %rax,%rdx
 125:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 12c <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x12c>
 12c:	48 89 c6             	mov    %rax,%rsi
 12f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 136 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x136>
 136:	48 89 c7             	mov    %rax,%rdi
 139:	b8 00 00 00 00       	mov    $0x0,%eax
 13e:	e8 00 00 00 00       	call   143 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x143>
 143:	b8 00 00 00 00       	mov    $0x0,%eax
 148:	e9 70 01 00 00       	jmp    2bd <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x2bd>
 14d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 151:	48 83 c0 04          	add    $0x4,%rax
 155:	0f b6 00             	movzbl (%rax),%eax
 158:	88 45 ff             	mov    %al,-0x1(%rbp)
 15b:	0f be 55 ff          	movsbl -0x1(%rbp),%edx
 15f:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 166 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x166>
 166:	41 89 d1             	mov    %edx,%r9d
 169:	41 b8 57 00 00 00    	mov    $0x57,%r8d
 16f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 176 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x176>
 176:	48 89 d1             	mov    %rdx,%rcx
 179:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 180 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x180>
 180:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 187 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x187>
 187:	48 89 c7             	mov    %rax,%rdi
 18a:	b8 00 00 00 00       	mov    $0x0,%eax
 18f:	e8 00 00 00 00       	call   194 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x194>
 194:	0f be 45 ff          	movsbl -0x1(%rbp),%eax
 198:	83 e8 30             	sub    $0x30,%eax
 19b:	83 f8 09             	cmp    $0x9,%eax
 19e:	76 37                	jbe    1d7 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x1d7>
 1a0:	b9 5a 00 00 00       	mov    $0x5a,%ecx
 1a5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1ac <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x1ac>
 1ac:	48 89 c2             	mov    %rax,%rdx
 1af:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1b6 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x1b6>
 1b6:	48 89 c6             	mov    %rax,%rsi
 1b9:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c0 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x1c0>
 1c0:	48 89 c7             	mov    %rax,%rdi
 1c3:	b8 00 00 00 00       	mov    $0x0,%eax
 1c8:	e8 00 00 00 00       	call   1cd <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x1cd>
 1cd:	b8 00 00 00 00       	mov    $0x0,%eax
 1d2:	e9 e6 00 00 00       	jmp    2bd <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x2bd>
 1d7:	0f be 45 ff          	movsbl -0x1(%rbp),%eax
 1db:	8d 50 d0             	lea    -0x30(%rax),%edx
 1de:	89 d0                	mov    %edx,%eax
 1e0:	c1 e0 02             	shl    $0x2,%eax
 1e3:	01 d0                	add    %edx,%eax
 1e5:	01 c0                	add    %eax,%eax
 1e7:	89 c2                	mov    %eax,%edx
 1e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 1ed:	89 10                	mov    %edx,(%rax)
 1ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1f3:	48 83 c0 05          	add    $0x5,%rax
 1f7:	0f b6 00             	movzbl (%rax),%eax
 1fa:	88 45 ff             	mov    %al,-0x1(%rbp)
 1fd:	0f be 55 ff          	movsbl -0x1(%rbp),%edx
 201:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 208 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x208>
 208:	41 89 d1             	mov    %edx,%r9d
 20b:	41 b8 61 00 00 00    	mov    $0x61,%r8d
 211:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 218 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x218>
 218:	48 89 d1             	mov    %rdx,%rcx
 21b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 222 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x222>
 222:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 229 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x229>
 229:	48 89 c7             	mov    %rax,%rdi
 22c:	b8 00 00 00 00       	mov    $0x0,%eax
 231:	e8 00 00 00 00       	call   236 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x236>
 236:	0f be 45 ff          	movsbl -0x1(%rbp),%eax
 23a:	83 e8 30             	sub    $0x30,%eax
 23d:	83 f8 09             	cmp    $0x9,%eax
 240:	76 34                	jbe    276 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x276>
 242:	b9 64 00 00 00       	mov    $0x64,%ecx
 247:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 24e <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x24e>
 24e:	48 89 c2             	mov    %rax,%rdx
 251:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 258 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x258>
 258:	48 89 c6             	mov    %rax,%rsi
 25b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 262 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x262>
 262:	48 89 c7             	mov    %rax,%rdi
 265:	b8 00 00 00 00       	mov    $0x0,%eax
 26a:	e8 00 00 00 00       	call   26f <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x26f>
 26f:	b8 00 00 00 00       	mov    $0x0,%eax
 274:	eb 47                	jmp    2bd <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x2bd>
 276:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 27a:	8b 10                	mov    (%rax),%edx
 27c:	0f be 45 ff          	movsbl -0x1(%rbp),%eax
 280:	01 d0                	add    %edx,%eax
 282:	8d 50 d0             	lea    -0x30(%rax),%edx
 285:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 289:	89 10                	mov    %edx,(%rax)
 28b:	b9 6a 00 00 00       	mov    $0x6a,%ecx
 290:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 297 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x297>
 297:	48 89 c2             	mov    %rax,%rdx
 29a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2a1 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x2a1>
 2a1:	48 89 c6             	mov    %rax,%rsi
 2a4:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2ab <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x2ab>
 2ab:	48 89 c7             	mov    %rax,%rdi
 2ae:	b8 00 00 00 00       	mov    $0x0,%eax
 2b3:	e8 00 00 00 00       	call   2b8 <ShowFile::CheckShowFileName(char const*, unsigned int&)+0x2b8>
 2b8:	b8 01 00 00 00       	mov    $0x1,%eax
 2bd:	c9                   	leave  
 2be:	c3                   	ret    

showfiletftp.o:     file format elf64-x86-64


Disassembly of section .text._ZN8ShowFile3GetEv:

0000000000000000 <ShowFile::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ShowFile::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTPC2Ev:

0000000000000000 <ShowFileTFTP::ShowFileTFTP()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ShowFileTFTP::ShowFileTFTP()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <ShowFileTFTP::ShowFileTFTP()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 c7 80 48 02 00 00 	movq   $0x0,0x248(%rax)
  35:	00 00 00 00 
  39:	b9 23 00 00 00       	mov    $0x23,%ecx
  3e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 45 <ShowFileTFTP::ShowFileTFTP()+0x45>
  45:	48 89 c2             	mov    %rax,%rdx
  48:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4f <ShowFileTFTP::ShowFileTFTP()+0x4f>
  4f:	48 89 c6             	mov    %rax,%rsi
  52:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 59 <ShowFileTFTP::ShowFileTFTP()+0x59>
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	b8 00 00 00 00       	mov    $0x0,%eax
  61:	e8 00 00 00 00       	call   66 <ShowFileTFTP::ShowFileTFTP()+0x66>
  66:	b9 25 00 00 00       	mov    $0x25,%ecx
  6b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 72 <ShowFileTFTP::ShowFileTFTP()+0x72>
  72:	48 89 c2             	mov    %rax,%rdx
  75:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7c <ShowFileTFTP::ShowFileTFTP()+0x7c>
  7c:	48 89 c6             	mov    %rax,%rsi
  7f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 86 <ShowFileTFTP::ShowFileTFTP()+0x86>
  86:	48 89 c7             	mov    %rax,%rdi
  89:	b8 00 00 00 00       	mov    $0x0,%eax
  8e:	e8 00 00 00 00       	call   93 <ShowFileTFTP::ShowFileTFTP()+0x93>
  93:	90                   	nop
  94:	c9                   	leave  
  95:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTP4ExitEv:

0000000000000000 <ShowFileTFTP::Exit()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 29 00 00 00       	mov    $0x29,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFileTFTP::Exit()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFileTFTP::Exit()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFileTFTP::Exit()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFileTFTP::Exit()+0x3d>
  3d:	e8 00 00 00 00       	call   42 <ShowFileTFTP::Exit()+0x42>
  42:	be 00 00 00 00       	mov    $0x0,%esi
  47:	48 89 c7             	mov    %rax,%rdi
  4a:	e8 00 00 00 00       	call   4f <ShowFileTFTP::Exit()+0x4f>
  4f:	b9 2d 00 00 00       	mov    $0x2d,%ecx
  54:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5b <ShowFileTFTP::Exit()+0x5b>
  5b:	48 89 c2             	mov    %rax,%rdx
  5e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 65 <ShowFileTFTP::Exit()+0x65>
  65:	48 89 c6             	mov    %rax,%rsi
  68:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6f <ShowFileTFTP::Exit()+0x6f>
  6f:	48 89 c7             	mov    %rax,%rdi
  72:	b8 00 00 00 00       	mov    $0x0,%eax
  77:	e8 00 00 00 00       	call   7c <ShowFileTFTP::Exit()+0x7c>
  7c:	90                   	nop
  7d:	c9                   	leave  
  7e:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTP8FileOpenEPKc8TFTPMode:

0000000000000000 <ShowFileTFTP::FileOpen(char const*, TFTPMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 55 dc             	mov    %edx,-0x24(%rbp)
  17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1e:	00 00 
  20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  24:	31 c0                	xor    %eax,%eax
  26:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2d <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0x2d>
  2d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  31:	48 83 ec 08          	sub    $0x8,%rsp
  35:	8b 55 dc             	mov    -0x24(%rbp),%edx
  38:	52                   	push   %rdx
  39:	49 89 c9             	mov    %rcx,%r9
  3c:	41 b8 31 00 00 00    	mov    $0x31,%r8d
  42:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 49 <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0x49>
  49:	48 89 d1             	mov    %rdx,%rcx
  4c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 53 <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0x53>
  53:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 5a <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0x5a>
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	b8 00 00 00 00       	mov    $0x0,%eax
  62:	e8 00 00 00 00       	call   67 <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0x67>
  67:	48 83 c4 10          	add    $0x10,%rsp
  6b:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  73:	48 89 d6             	mov    %rdx,%rsi
  76:	48 89 c7             	mov    %rax,%rdi
  79:	e8 00 00 00 00       	call   7e <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0x7e>
  7e:	83 f0 01             	xor    $0x1,%eax
  81:	84 c0                	test   %al,%al
  83:	74 34                	je     b9 <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0xb9>
  85:	b9 35 00 00 00       	mov    $0x35,%ecx
  8a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 91 <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0x91>
  91:	48 89 c2             	mov    %rax,%rdx
  94:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9b <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0x9b>
  9b:	48 89 c6             	mov    %rax,%rsi
  9e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a5 <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0xa5>
  a5:	48 89 c7             	mov    %rax,%rdi
  a8:	b8 00 00 00 00       	mov    $0x0,%eax
  ad:	e8 00 00 00 00       	call   b2 <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0xb2>
  b2:	b8 00 00 00 00       	mov    $0x0,%eax
  b7:	eb 35                	jmp    ee <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0xee>
  b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  bd:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # c4 <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0xc4>
  c4:	48 89 d6             	mov    %rdx,%rsi
  c7:	48 89 c7             	mov    %rax,%rdi
  ca:	e8 00 00 00 00       	call   cf <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0xcf>
  cf:	48 89 c2             	mov    %rax,%rdx
  d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d6:	48 89 90 48 02 00 00 	mov    %rdx,0x248(%rax)
  dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e1:	48 8b 80 48 02 00 00 	mov    0x248(%rax),%rax
  e8:	48 85 c0             	test   %rax,%rax
  eb:	0f 95 c0             	setne  %al
  ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  f2:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  f9:	00 00 
  fb:	74 05                	je     102 <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0x102>
  fd:	e8 00 00 00 00       	call   102 <ShowFileTFTP::FileOpen(char const*, TFTPMode)+0x102>
 102:	c9                   	leave  
 103:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTP10FileCreateEPKc8TFTPMode:

0000000000000000 <ShowFileTFTP::FileCreate(char const*, TFTPMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 55 dc             	mov    %edx,-0x24(%rbp)
  17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1e:	00 00 
  20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  24:	31 c0                	xor    %eax,%eax
  26:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2d <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0x2d>
  2d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  31:	48 83 ec 08          	sub    $0x8,%rsp
  35:	8b 55 dc             	mov    -0x24(%rbp),%edx
  38:	52                   	push   %rdx
  39:	49 89 c9             	mov    %rcx,%r9
  3c:	41 b8 3e 00 00 00    	mov    $0x3e,%r8d
  42:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 49 <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0x49>
  49:	48 89 d1             	mov    %rdx,%rcx
  4c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 53 <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0x53>
  53:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 5a <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0x5a>
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	b8 00 00 00 00       	mov    $0x0,%eax
  62:	e8 00 00 00 00       	call   67 <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0x67>
  67:	48 83 c4 10          	add    $0x10,%rsp
  6b:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  73:	48 89 d6             	mov    %rdx,%rsi
  76:	48 89 c7             	mov    %rax,%rdi
  79:	e8 00 00 00 00       	call   7e <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0x7e>
  7e:	83 f0 01             	xor    $0x1,%eax
  81:	84 c0                	test   %al,%al
  83:	74 34                	je     b9 <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0xb9>
  85:	b9 42 00 00 00       	mov    $0x42,%ecx
  8a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 91 <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0x91>
  91:	48 89 c2             	mov    %rax,%rdx
  94:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9b <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0x9b>
  9b:	48 89 c6             	mov    %rax,%rsi
  9e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a5 <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0xa5>
  a5:	48 89 c7             	mov    %rax,%rdi
  a8:	b8 00 00 00 00       	mov    $0x0,%eax
  ad:	e8 00 00 00 00       	call   b2 <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0xb2>
  b2:	b8 00 00 00 00       	mov    $0x0,%eax
  b7:	eb 35                	jmp    ee <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0xee>
  b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  bd:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # c4 <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0xc4>
  c4:	48 89 d6             	mov    %rdx,%rsi
  c7:	48 89 c7             	mov    %rax,%rdi
  ca:	e8 00 00 00 00       	call   cf <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0xcf>
  cf:	48 89 c2             	mov    %rax,%rdx
  d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d6:	48 89 90 48 02 00 00 	mov    %rdx,0x248(%rax)
  dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e1:	48 8b 80 48 02 00 00 	mov    0x248(%rax),%rax
  e8:	48 85 c0             	test   %rax,%rax
  eb:	0f 95 c0             	setne  %al
  ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  f2:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  f9:	00 00 
  fb:	74 05                	je     102 <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0x102>
  fd:	e8 00 00 00 00       	call   102 <ShowFileTFTP::FileCreate(char const*, TFTPMode)+0x102>
 102:	c9                   	leave  
 103:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTP9FileCloseEv:

0000000000000000 <ShowFileTFTP::FileClose()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	b9 4b 00 00 00       	mov    $0x4b,%ecx
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <ShowFileTFTP::FileClose()+0x1c>
  1c:	48 89 c2             	mov    %rax,%rdx
  1f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 26 <ShowFileTFTP::FileClose()+0x26>
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <ShowFileTFTP::FileClose()+0x30>
  30:	48 89 c7             	mov    %rax,%rdi
  33:	b8 00 00 00 00       	mov    $0x0,%eax
  38:	e8 00 00 00 00       	call   3d <ShowFileTFTP::FileClose()+0x3d>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 8b 80 48 02 00 00 	mov    0x248(%rax),%rax
  48:	48 85 c0             	test   %rax,%rax
  4b:	74 22                	je     6f <ShowFileTFTP::FileClose()+0x6f>
  4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  51:	48 8b 80 48 02 00 00 	mov    0x248(%rax),%rax
  58:	48 89 c7             	mov    %rax,%rdi
  5b:	e8 00 00 00 00       	call   60 <ShowFileTFTP::FileClose()+0x60>
  60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  64:	48 c7 80 48 02 00 00 	movq   $0x0,0x248(%rax)
  6b:	00 00 00 00 
  6f:	b9 52 00 00 00       	mov    $0x52,%ecx
  74:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7b <ShowFileTFTP::FileClose()+0x7b>
  7b:	48 89 c2             	mov    %rax,%rdx
  7e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 85 <ShowFileTFTP::FileClose()+0x85>
  85:	48 89 c6             	mov    %rax,%rsi
  88:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8f <ShowFileTFTP::FileClose()+0x8f>
  8f:	48 89 c7             	mov    %rax,%rdi
  92:	b8 00 00 00 00       	mov    $0x0,%eax
  97:	e8 00 00 00 00       	call   9c <ShowFileTFTP::FileClose()+0x9c>
  9c:	b8 01 00 00 00       	mov    $0x1,%eax
  a1:	c9                   	leave  
  a2:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTP8FileReadEPvmj:

0000000000000000 <ShowFileTFTP::FileRead(void*, unsigned long, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  18:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	48 8b 88 48 02 00 00 	mov    0x248(%rax),%rcx
  26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2e:	be 01 00 00 00       	mov    $0x1,%esi
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	call   3b <ShowFileTFTP::FileRead(void*, unsigned long, unsigned int)+0x3b>
  3b:	c9                   	leave  
  3c:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTP9FileWriteEPKvmj:

0000000000000000 <ShowFileTFTP::FileWrite(void const*, unsigned long, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  18:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	48 8b 88 48 02 00 00 	mov    0x248(%rax),%rcx
  26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2e:	be 01 00 00 00       	mov    $0x1,%esi
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	call   3b <ShowFileTFTP::FileWrite(void const*, unsigned long, unsigned int)+0x3b>
  3b:	c9                   	leave  
  3c:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTPD2Ev:

0000000000000000 <ShowFileTFTP::~ShowFileTFTP()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <ShowFileTFTP::~ShowFileTFTP()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <ShowFileTFTP::~ShowFileTFTP()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN12ShowFileTFTPD0Ev:

0000000000000000 <ShowFileTFTP::~ShowFileTFTP()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <ShowFileTFTP::~ShowFileTFTP()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <ShowFileTFTP::~ShowFileTFTP()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    
