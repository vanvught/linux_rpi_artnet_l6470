In archive lib/libdevice.a:

font_cp437.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <cp437_font_size>:
   0:	e3a0007f 	mov	r0, #127	; 0x7f
   4:	e12fff1e 	bx	lr

Disassembly of section .rodata:

00000000 <cp437_font>:
	...
   8:	b195817e 	orrslt	r8, r5, lr, ror r1
   c:	7e8195b1 	mcrvc	5, 4, r9, cr1, cr1, {5}
  10:	cfebff7e 	svcgt	0x00ebff7e
  14:	7effebcf 	vcvtvc.u32.f64	d30, d30, #2
  18:	7e3f1f0e 	cdpvc	15, 3, cr1, cr15, cr14, {0}
  1c:	000e1f3f 	andeq	r1, lr, pc, lsr pc
  20:	7f3e1c08 	svcvc	0x003e1c08
  24:	00081c3e 	andeq	r1, r8, lr, lsr ip
  28:	ffffba18 			; <UNDEFINED> instruction: 0xffffba18
  2c:	0018baff 			; <UNDEFINED> instruction: 0x0018baff
  30:	fffcb810 			; <UNDEFINED> instruction: 0xfffcb810
  34:	0010b8fc 			; <UNDEFINED> instruction: 0x0010b8fc
  38:	3c180000 	ldccc	0, cr0, [r8], {-0}
  3c:	0000183c 	andeq	r1, r0, ip, lsr r8
  40:	c3e7ffff 	mvngt	pc, #1020	; 0x3fc
  44:	ffffe7c3 			; <UNDEFINED> instruction: 0xffffe7c3
  48:	42663c00 	rsbmi	r3, r6, #0, 24
  4c:	003c6642 	eorseq	r6, ip, r2, asr #12
  50:	bd99c3ff 	ldclt	3, cr12, [r9, #1020]	; 0x3fc
  54:	ffc399bd 			; <UNDEFINED> instruction: 0xffc399bd
  58:	8888f870 	stmhi	r8, {r4, r5, r6, fp, ip, sp, lr, pc}
  5c:	0f077ffd 	svceq	0x00077ffd
  60:	f15f4e00 			; <UNDEFINED> instruction: 0xf15f4e00
  64:	004e5ff1 	strdeq	r5, [lr], #-241	; 0xffffff0f
  68:	7fffe0c0 	svcvc	0x00ffe0c0
  6c:	07070505 	streq	r0, [r7, -r5, lsl #10]
  70:	057fffc0 	ldrbeq	pc, [pc, #-4032]!	; fffff0b8 <cp437_font+0xfffff0b8>	; <UNPREDICTABLE>
  74:	3f7f6505 	svccc	0x007f6505
  78:	e73c5a99 			; <UNDEFINED> instruction: 0xe73c5a99
  7c:	995a3ce7 	ldmdbls	sl, {r0, r1, r2, r5, r6, r7, sl, fp, ip, sp}^
  80:	1c3e3e7f 	ldcne	14, cr3, [lr], #-508	; 0xfffffe04
  84:	0008081c 	andeq	r0, r8, ip, lsl r8
  88:	1c1c0808 	ldcne	8, cr0, [ip], {8}
  8c:	007f3e3e 	rsbseq	r3, pc, lr, lsr lr	; <UNPREDICTABLE>
  90:	ff662400 			; <UNDEFINED> instruction: 0xff662400
  94:	002466ff 	strdeq	r6, [r4], -pc	; <UNPREDICTABLE>
  98:	005f5f00 	subseq	r5, pc, r0, lsl #30
  9c:	005f5f00 	subseq	r5, pc, r0, lsl #30
  a0:	7f090f06 	svcvc	0x00090f06
  a4:	7f7f017f 	svcvc	0x007f017f
  a8:	a5bfda40 	ldrge	sp, [pc, #2624]!	; af0 <cp437_font+0xaf0>
  ac:	020359fd 	andeq	r5, r3, #4145152	; 0x3f4000
  b0:	70707000 	rsbsvc	r7, r0, r0
  b4:	00707070 	rsbseq	r7, r0, r0, ror r0
  b8:	ffb69480 			; <UNDEFINED> instruction: 0xffb69480
  bc:	8094b6ff 			; <UNDEFINED> instruction: 0x8094b6ff
  c0:	7f060400 	svcvc	0x00060400
  c4:	0004067f 	andeq	r0, r4, pc, ror r6
  c8:	7f301000 	svcvc	0x00301000
  cc:	0010307f 	andseq	r3, r0, pc, ror r0
  d0:	2a080808 	bcs	2020f8 <cp437_font+0x2020f8>
  d4:	00081c3e 	andeq	r1, r8, lr, lsr ip
  d8:	2a3e1c08 	bcs	f87100 <cp437_font+0xf87100>
  dc:	00080808 	andeq	r0, r8, r8, lsl #16
  e0:	20203c3c 	eorcs	r3, r0, ip, lsr ip
  e4:	00202020 	eoreq	r2, r0, r0, lsr #32
  e8:	083e1c08 	ldmdaeq	lr!, {r3, sl, fp, ip}
  ec:	081c3e08 	ldmdaeq	ip, {r3, r9, sl, fp, ip, sp}
  f0:	3e3c3830 	mrccc	8, 1, r3, cr12, cr0, {1}
  f4:	30383c3e 	eorscc	r3, r8, lr, lsr ip
  f8:	3e1e0e06 	cdpcc	14, 1, cr0, cr14, cr6, {0}
  fc:	060e1e3e 			; <UNDEFINED> instruction: 0x060e1e3e
	...
 108:	5f5f0600 	svcpl	0x005f0600
 10c:	00000006 	andeq	r0, r0, r6
 110:	00070700 	andeq	r0, r7, r0, lsl #14
 114:	00000707 	andeq	r0, r0, r7, lsl #14
 118:	147f7f14 	ldrbtne	r7, [pc], #-3860	; 120 <cp437_font+0x120>
 11c:	00147f7f 	andseq	r7, r4, pc, ror pc
 120:	6b6b2e24 	blvs	1acb9b8 <cp437_font+0x1acb9b8>
 124:	0000123a 	andeq	r1, r0, sl, lsr r2
 128:	18306646 	ldmdane	r0!, {r1, r2, r6, r9, sl, sp, lr}
 12c:	0062660c 	rsbeq	r6, r2, ip, lsl #12
 130:	5d4f7a30 	vstrpl	s15, [pc, #-192]	; 78 <cp437_font+0x78>
 134:	00487a37 	subeq	r7, r8, r7, lsr sl
 138:	00030704 	andeq	r0, r3, r4, lsl #14
 13c:	00000000 	andeq	r0, r0, r0
 140:	633e1c00 	teqvs	lr, #0, 24
 144:	00000041 	andeq	r0, r0, r1, asr #32
 148:	3e634100 	powccs	f4, f3, f0
 14c:	0000001c 	andeq	r0, r0, ip, lsl r0
 150:	1c3e2a08 			; <UNDEFINED> instruction: 0x1c3e2a08
 154:	082a3e1c 	stmdaeq	sl!, {r2, r3, r4, r9, sl, fp, ip, sp}
 158:	3e3e0808 	cdpcc	8, 3, cr0, cr14, cr8, {0}
 15c:	00000808 	andeq	r0, r0, r8, lsl #16
 160:	60e08000 	rscvs	r8, r0, r0
 164:	00000000 	andeq	r0, r0, r0
 168:	08080808 	stmdaeq	r8, {r3, fp}
 16c:	00000808 	andeq	r0, r0, r8, lsl #16
 170:	60600000 	rsbvs	r0, r0, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	0c183060 	ldceq	0, cr3, [r8], {96}	; 0x60
 17c:	00010306 	andeq	r0, r1, r6, lsl #6
 180:	59717f3e 	ldmdbpl	r1!, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
 184:	003e7f4d 	eorseq	r7, lr, sp, asr #30
 188:	7f7f4240 	svcvc	0x007f4240
 18c:	00004040 	andeq	r4, r0, r0, asr #32
 190:	49597362 	ldmdbmi	r9, {r1, r5, r6, r8, r9, ip, sp, lr}^
 194:	0000666f 	andeq	r6, r0, pc, ror #12
 198:	49496322 	stmdbmi	r9, {r1, r5, r8, r9, sp, lr}^
 19c:	0000367f 	andeq	r3, r0, pc, ror r6
 1a0:	53161c18 	tstpl	r6, #24, 24	; 0x1800
 1a4:	00507f7f 	subseq	r7, r0, pc, ror pc
 1a8:	45456727 	strbmi	r6, [r5, #-1831]	; 0xfffff8d9
 1ac:	0000397d 	andeq	r3, r0, sp, ror r9
 1b0:	494b7e3c 	stmdbmi	fp, {r2, r3, r4, r5, r9, sl, fp, ip, sp, lr}^
 1b4:	00003079 	andeq	r3, r0, r9, ror r0
 1b8:	79710303 	ldmdbvc	r1!, {r0, r1, r8, r9}^
 1bc:	0000070f 	andeq	r0, r0, pc, lsl #14
 1c0:	49497f36 	stmdbmi	r9, {r1, r2, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
 1c4:	0000367f 	andeq	r3, r0, pc, ror r6
 1c8:	69494f06 	stmdbvs	r9, {r1, r2, r8, r9, sl, fp, lr}^
 1cc:	00001e3f 	andeq	r1, r0, pc, lsr lr
 1d0:	66660000 	strbtvs	r0, [r6], -r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	66e68000 	strbtvs	r8, [r6], r0
 1dc:	00000000 	andeq	r0, r0, r0
 1e0:	63361c08 	teqvs	r6, #8, 24	; 0x800
 1e4:	00000041 	andeq	r0, r0, r1, asr #32
 1e8:	24242424 	strtcs	r2, [r4], #-1060	; 0xfffffbdc
 1ec:	00002424 	andeq	r2, r0, r4, lsr #8
 1f0:	36634100 	strbtcc	r4, [r3], -r0, lsl #2
 1f4:	0000081c 	andeq	r0, r0, ip, lsl r8
 1f8:	59510302 	ldmdbpl	r1, {r1, r8, r9}^
 1fc:	0000060f 	andeq	r0, r0, pc, lsl #12
 200:	5d417f3e 	stclpl	15, cr7, [r1, #-248]	; 0xffffff08
 204:	001e1f5d 	andseq	r1, lr, sp, asr pc
 208:	13137e7c 	tstne	r3, #124, 28	; 0x7c0
 20c:	00007c7e 	andeq	r7, r0, lr, ror ip
 210:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 214:	00367f49 	eorseq	r7, r6, r9, asr #30
 218:	41633e1c 	cmnmi	r3, ip, lsl lr
 21c:	00226341 	eoreq	r6, r2, r1, asr #6
 220:	417f7f41 	cmnmi	pc, r1, asr #30
 224:	001c3e63 	andseq	r3, ip, r3, ror #28
 228:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 22c:	0063415d 	rsbeq	r4, r3, sp, asr r1
 230:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 234:	0003011d 	andeq	r0, r3, sp, lsl r1
 238:	41633e1c 	cmnmi	r3, ip, lsl lr
 23c:	00727351 	rsbseq	r7, r2, r1, asr r3
 240:	08087f7f 	stmdaeq	r8, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 244:	00007f7f 	andeq	r7, r0, pc, ror pc
 248:	7f7f4100 	svcvc	0x007f4100
 24c:	00000041 	andeq	r0, r0, r1, asr #32
 250:	41407030 	cmpmi	r0, r0, lsr r0
 254:	00013f7f 	andeq	r3, r1, pc, ror pc
 258:	087f7f41 	ldmdaeq	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 25c:	0063771c 	rsbeq	r7, r3, ip, lsl r7
 260:	417f7f41 	cmnmi	pc, r1, asr #30
 264:	00706040 	rsbseq	r6, r0, r0, asr #32
 268:	1c0e7f7f 	stcne	15, cr7, [lr], {127}	; 0x7f
 26c:	007f7f0e 	rsbseq	r7, pc, lr, lsl #30
 270:	0c067f7f 	stceq	15, cr7, [r6], {127}	; 0x7f
 274:	007f7f18 	rsbseq	r7, pc, r8, lsl pc	; <UNPREDICTABLE>
 278:	41633e1c 	cmnmi	r3, ip, lsl lr
 27c:	001c3e63 	andseq	r3, ip, r3, ror #28
 280:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 284:	00060f09 	andeq	r0, r6, r9, lsl #30
 288:	71213f1e 			; <UNDEFINED> instruction: 0x71213f1e
 28c:	00005e7f 	andeq	r5, r0, pc, ror lr
 290:	097f7f41 	ldmdbeq	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 294:	00667f19 	rsbeq	r7, r6, r9, lsl pc
 298:	594d6f26 	stmdbpl	sp, {r1, r2, r5, r8, r9, sl, fp, sp, lr}^
 29c:	00003273 	andeq	r3, r0, r3, ror r2
 2a0:	7f7f4103 	svcvc	0x007f4103
 2a4:	00000341 	andeq	r0, r0, r1, asr #6
 2a8:	40407f7f 	submi	r7, r0, pc, ror pc
 2ac:	00007f7f 	andeq	r7, r0, pc, ror pc
 2b0:	60603f1f 	rsbvs	r3, r0, pc, lsl pc
 2b4:	00001f3f 	andeq	r1, r0, pc, lsr pc
 2b8:	18307f7f 	ldmdane	r0!, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 2bc:	007f7f30 	rsbseq	r7, pc, r0, lsr pc	; <UNPREDICTABLE>
 2c0:	183c6743 	ldmdane	ip!, {r0, r1, r6, r8, r9, sl, sp, lr}
 2c4:	0043673c 	subeq	r6, r3, ip, lsr r7
 2c8:	78784f07 	ldmdavc	r8!, {r0, r1, r2, r8, r9, sl, fp, lr}^
 2cc:	0000074f 	andeq	r0, r0, pc, asr #14
 2d0:	59716347 	ldmdbpl	r1!, {r0, r1, r2, r6, r8, r9, sp, lr}^
 2d4:	0073674d 	rsbseq	r6, r3, sp, asr #14
 2d8:	417f7f00 	cmnmi	pc, r0, lsl #30
 2dc:	00000041 	andeq	r0, r0, r1, asr #32
 2e0:	0c060301 	stceq	3, cr0, [r6], {1}
 2e4:	00603018 	rsbeq	r3, r0, r8, lsl r0
 2e8:	7f414100 	svcvc	0x00414100
 2ec:	0000007f 	andeq	r0, r0, pc, ror r0
 2f0:	03060c08 	movweq	r0, #27656	; 0x6c08
 2f4:	00080c06 	andeq	r0, r8, r6, lsl #24
 2f8:	80808080 	addhi	r8, r0, r0, lsl #1
 2fc:	80808080 	addhi	r8, r0, r0, lsl #1
 300:	07030000 	streq	r0, [r3, -r0]
 304:	00000004 	andeq	r0, r0, r4
 308:	54547420 	ldrbpl	r7, [r4], #-1056	; 0xfffffbe0
 30c:	0040783c 	subeq	r7, r0, ip, lsr r8
 310:	483f7f41 	ldmdami	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}	; <UNPREDICTABLE>
 314:	00307848 	eorseq	r7, r0, r8, asr #16
 318:	44447c38 	strbmi	r7, [r4], #-3128	; 0xfffff3c8
 31c:	0000286c 	andeq	r2, r0, ip, ror #16
 320:	49487830 	stmdbmi	r8, {r4, r5, fp, ip, sp, lr}^
 324:	00407f3f 	subeq	r7, r0, pc, lsr pc
 328:	54547c38 	ldrbpl	r7, [r4], #-3128	; 0xfffff3c8
 32c:	0000185c 	andeq	r1, r0, ip, asr r8
 330:	497f7e48 	ldmdbmi	pc!, {r3, r6, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 334:	00000203 	andeq	r0, r0, r3, lsl #4
 338:	a4a4bc98 	strtge	fp, [r4], #3224	; 0xc98
 33c:	00047cf8 	strdeq	r7, [r4], -r8
 340:	087f7f41 	ldmdaeq	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 344:	00787c04 	rsbseq	r7, r8, r4, lsl #24
 348:	7d7d4400 	cfldrdvc	mvd4, [sp, #-0]
 34c:	00000040 	andeq	r0, r0, r0, asr #32
 350:	8080e060 	addhi	lr, r0, r0, rrx
 354:	00007dfd 	strdeq	r7, [r0], -sp
 358:	107f7f41 	rsbsne	r7, pc, r1, asr #30
 35c:	00446c38 	subeq	r6, r4, r8, lsr ip
 360:	7f7f4100 	svcvc	0x007f4100
 364:	00000040 	andeq	r0, r0, r0, asr #32
 368:	38187c7c 	ldmdacc	r8, {r2, r3, r4, r5, r6, sl, fp, ip, sp, lr}
 36c:	00787c1c 	rsbseq	r7, r8, ip, lsl ip
 370:	04047c7c 	streq	r7, [r4], #-3196	; 0xfffff384
 374:	0000787c 	andeq	r7, r0, ip, ror r8
 378:	44447c38 	strbmi	r7, [r4], #-3128	; 0xfffff3c8
 37c:	0000387c 	andeq	r3, r0, ip, ror r8
 380:	a4f8fc84 	ldrbtge	pc, [r8], #3204	; 0xc84	; <UNPREDICTABLE>
 384:	00183c24 	andseq	r3, r8, r4, lsr #24
 388:	a4243c18 	strtge	r3, [r4], #-3096	; 0xfffff3e8
 38c:	0084fcf8 	strdeq	pc, [r4], r8
 390:	4c787c44 	ldclmi	12, cr7, [r8], #-272	; 0xfffffef0
 394:	00181c04 	andseq	r1, r8, r4, lsl #24
 398:	54545c48 	ldrbpl	r5, [r4], #-3144	; 0xfffff3b8
 39c:	00002474 	andeq	r2, r0, r4, ror r4
 3a0:	7f3e0400 	svcvc	0x003e0400
 3a4:	00002444 	andeq	r2, r0, r4, asr #8
 3a8:	40407c3c 	submi	r7, r0, ip, lsr ip
 3ac:	00407c3c 	subeq	r7, r0, ip, lsr ip
 3b0:	60603c1c 	rsbvs	r3, r0, ip, lsl ip
 3b4:	00001c3c 	andeq	r1, r0, ip, lsr ip
 3b8:	38707c3c 	ldmdacc	r0!, {r2, r3, r4, r5, sl, fp, ip, sp, lr}^
 3bc:	003c7c70 	eorseq	r7, ip, r0, ror ip
 3c0:	10386c44 	eorsne	r6, r8, r4, asr #24
 3c4:	00446c38 	subeq	r6, r4, r8, lsr ip
 3c8:	a0a0bc9c 	umlalge	fp, r0, ip, ip
 3cc:	00007cfc 	strdeq	r7, [r0], -ip
 3d0:	5c74644c 	cfldrdpl	mvd6, [r4], #-304	; 0xfffffed0
 3d4:	0000644c 	andeq	r6, r0, ip, asr #8
 3d8:	773e0808 	ldrvc	r0, [lr, -r8, lsl #16]!
 3dc:	00004141 	andeq	r4, r0, r1, asr #2
 3e0:	77000000 	strvc	r0, [r0, -r0]
 3e4:	00000077 	andeq	r0, r0, r7, ror r0
 3e8:	3e774141 	rpwccsm	f4, f7, f1
 3ec:	00000808 	andeq	r0, r0, r8, lsl #16
 3f0:	03010302 	movweq	r0, #4866	; 0x1302
 3f4:	00010302 	andeq	r0, r1, r2, lsl #6

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <cp437_font_size+0x168d82c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <cp437_font_size+0x42424>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


bh1750.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <sensor::BH170::BH170(unsigned char)>:
   0:	e92d4070 	push	{r4, r5, r6, lr}
   4:	e2515000 	subs	r5, r1, #0
   8:	e1a04000 	mov	r4, r0
   c:	e24dd008 	sub	sp, sp, #8
  10:	0a000017 	beq	74 <sensor::BH170::BH170(unsigned char)+0x74>
  14:	e3a02000 	mov	r2, #0
  18:	e59f30ec 	ldr	r3, [pc, #236]	; 10c <sensor::BH170::BH170(unsigned char)+0x10c>
  1c:	e59f00ec 	ldr	r0, [pc, #236]	; 110 <sensor::BH170::BH170(unsigned char)+0x110>
  20:	e5c45000 	strb	r5, [r4]
  24:	e5840004 	str	r0, [r4, #4]
  28:	e5c42008 	strb	r2, [r4, #8]
  2c:	e583500c 	str	r5, [r3, #12]
  30:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  34:	e2453030 	sub	r3, r5, #48	; 0x30
  38:	e2455050 	sub	r5, r5, #80	; 0x50
  3c:	e355000f 	cmp	r5, #15
  40:	83530007 	cmphi	r3, #7
  44:	8a000012 	bhi	94 <sensor::BH170::BH170(unsigned char)+0x94>
  48:	e3a01001 	mov	r1, #1
  4c:	e28d0007 	add	r0, sp, #7
  50:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  54:	e16f0f10 	clz	r0, r0
  58:	e1a002a0 	lsr	r0, r0, #5
  5c:	e3500000 	cmp	r0, #0
  60:	e5c40008 	strb	r0, [r4, #8]
  64:	1a000012 	bne	b4 <sensor::BH170::BH170(unsigned char)+0xb4>
  68:	e1a00004 	mov	r0, r4
  6c:	e28dd008 	add	sp, sp, #8
  70:	e8bd8070 	pop	{r4, r5, r6, pc}
  74:	e3a03023 	mov	r3, #35	; 0x23
  78:	e59f0090 	ldr	r0, [pc, #144]	; 110 <sensor::BH170::BH170(unsigned char)+0x110>
  7c:	e59f2088 	ldr	r2, [pc, #136]	; 10c <sensor::BH170::BH170(unsigned char)+0x10c>
  80:	e5840004 	str	r0, [r4, #4]
  84:	e5c45008 	strb	r5, [r4, #8]
  88:	e5c43000 	strb	r3, [r4]
  8c:	e582300c 	str	r3, [r2, #12]
  90:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  94:	e3a01000 	mov	r1, #0
  98:	e1a00001 	mov	r0, r1
  9c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  a0:	e16f0f10 	clz	r0, r0
  a4:	e1a002a0 	lsr	r0, r0, #5
  a8:	e3500000 	cmp	r0, #0
  ac:	e5c40008 	strb	r0, [r4, #8]
  b0:	0affffec 	beq	68 <sensor::BH170::BH170(unsigned char)+0x68>
  b4:	e3a05001 	mov	r5, #1
  b8:	e5d43000 	ldrb	r3, [r4]
  bc:	e59f6048 	ldr	r6, [pc, #72]	; 10c <sensor::BH170::BH170(unsigned char)+0x10c>
  c0:	e5940004 	ldr	r0, [r4, #4]
  c4:	e5cd5007 	strb	r5, [sp, #7]
  c8:	e586300c 	str	r3, [r6, #12]
  cc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  d0:	e1a01005 	mov	r1, r5
  d4:	e28d0007 	add	r0, sp, #7
  d8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  dc:	e3a02010 	mov	r2, #16
  e0:	e5d43000 	ldrb	r3, [r4]
  e4:	e5940004 	ldr	r0, [r4, #4]
  e8:	e5cd2007 	strb	r2, [sp, #7]
  ec:	e586300c 	str	r3, [r6, #12]
  f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  f4:	e1a01005 	mov	r1, r5
  f8:	e28d0007 	add	r0, sp, #7
  fc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 100:	e1a00004 	mov	r0, r4
 104:	e28dd008 	add	sp, sp, #8
 108:	e8bd8070 	pop	{r4, r5, r6, pc}
 10c:	20804000 	addcs	r4, r0, r0
 110:	00061a80 	andeq	r1, r6, r0, lsl #21

00000114 <sensor::BH170::Get()>:
 114:	e1a03000 	mov	r3, r0
 118:	e3a01000 	mov	r1, #0
 11c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 120:	e59f2054 	ldr	r2, [pc, #84]	; 17c <sensor::BH170::Get()+0x68>
 124:	e5d33000 	ldrb	r3, [r3]
 128:	e24dd00c 	sub	sp, sp, #12
 12c:	e1cd10b4 	strh	r1, [sp, #4]
 130:	e5900004 	ldr	r0, [r0, #4]
 134:	e582300c 	str	r3, [r2, #12]
 138:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 13c:	e3a01002 	mov	r1, #2
 140:	e28d0004 	add	r0, sp, #4
 144:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 148:	e1dd30b4 	ldrh	r3, [sp, #4]
 14c:	eddf6a09 	vldr	s13, [pc, #36]	; 178 <sensor::BH170::Get()+0x64>
 150:	e6bf3fb3 	rev16	r3, r3
 154:	e6ff3073 	uxth	r3, r3
 158:	ee073a90 	vmov	s15, r3
 15c:	eef87a67 	vcvt.f32.u32	s15, s15
 160:	ee877aa6 	vdiv.f32	s14, s15, s13
 164:	eefc7ac7 	vcvt.u32.f32	s15, s14
 168:	ee173a90 	vmov	r3, s15
 16c:	e6ff0073 	uxth	r0, r3
 170:	e28dd00c 	add	sp, sp, #12
 174:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 178:	3f99999a 	svccc	0x0099999a
 17c:	20804000 	addcs	r4, r0, r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <sensor::BH170::Get()+0x168d718>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <sensor::BH170::Get()+0x42310>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


htu21d.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <sensor::HTU21D::HTU21D(unsigned char)>:
   0:	e92d4030 	push	{r4, r5, lr}
   4:	e2515000 	subs	r5, r1, #0
   8:	e1a04000 	mov	r4, r0
   c:	e24dd00c 	sub	sp, sp, #12
  10:	0a000015 	beq	6c <sensor::HTU21D::HTU21D(unsigned char)+0x6c>
  14:	e3a02000 	mov	r2, #0
  18:	e59f3090 	ldr	r3, [pc, #144]	; b0 <sensor::HTU21D::HTU21D(unsigned char)+0xb0>
  1c:	e59f0090 	ldr	r0, [pc, #144]	; b4 <sensor::HTU21D::HTU21D(unsigned char)+0xb4>
  20:	e5c45000 	strb	r5, [r4]
  24:	e5840004 	str	r0, [r4, #4]
  28:	e5c42008 	strb	r2, [r4, #8]
  2c:	e583500c 	str	r5, [r3, #12]
  30:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  34:	e2453030 	sub	r3, r5, #48	; 0x30
  38:	e2455050 	sub	r5, r5, #80	; 0x50
  3c:	e355000f 	cmp	r5, #15
  40:	83530007 	cmphi	r3, #7
  44:	8a000010 	bhi	8c <sensor::HTU21D::HTU21D(unsigned char)+0x8c>
  48:	e3a01001 	mov	r1, #1
  4c:	e28d0007 	add	r0, sp, #7
  50:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  54:	e16f0f10 	clz	r0, r0
  58:	e1a002a0 	lsr	r0, r0, #5
  5c:	e5c40008 	strb	r0, [r4, #8]
  60:	e1a00004 	mov	r0, r4
  64:	e28dd00c 	add	sp, sp, #12
  68:	e8bd8030 	pop	{r4, r5, pc}
  6c:	e3a03040 	mov	r3, #64	; 0x40
  70:	e59f003c 	ldr	r0, [pc, #60]	; b4 <sensor::HTU21D::HTU21D(unsigned char)+0xb4>
  74:	e59f2034 	ldr	r2, [pc, #52]	; b0 <sensor::HTU21D::HTU21D(unsigned char)+0xb0>
  78:	e5840004 	str	r0, [r4, #4]
  7c:	e5c45008 	strb	r5, [r4, #8]
  80:	e5c43000 	strb	r3, [r4]
  84:	e582300c 	str	r3, [r2, #12]
  88:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  8c:	e3a01000 	mov	r1, #0
  90:	e1a00001 	mov	r0, r1
  94:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  98:	e16f0f10 	clz	r0, r0
  9c:	e1a002a0 	lsr	r0, r0, #5
  a0:	e5c40008 	strb	r0, [r4, #8]
  a4:	e1a00004 	mov	r0, r4
  a8:	e28dd00c 	add	sp, sp, #12
  ac:	e8bd8030 	pop	{r4, r5, pc}
  b0:	20804000 	addcs	r4, r0, r0
  b4:	00061a80 	andeq	r1, r6, r0, lsl #21

000000b8 <sensor::HTU21D::ReadRaw(unsigned char)>:
  b8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  bc:	e1a05000 	mov	r5, r0
  c0:	e59f6090 	ldr	r6, [pc, #144]	; 158 <sensor::HTU21D::ReadRaw(unsigned char)+0xa0>
  c4:	e5d53000 	ldrb	r3, [r5]
  c8:	e24dd00c 	sub	sp, sp, #12
  cc:	e5900004 	ldr	r0, [r0, #4]
  d0:	e5cd1004 	strb	r1, [sp, #4]
  d4:	e586300c 	str	r3, [r6, #12]
  d8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  dc:	e3a01001 	mov	r1, #1
  e0:	e28d0004 	add	r0, sp, #4
  e4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  e8:	e3a03000 	mov	r3, #0
  ec:	e3a04008 	mov	r4, #8
  f0:	e5cd3006 	strb	r3, [sp, #6]
  f4:	e59f3060 	ldr	r3, [pc, #96]	; 15c <sensor::HTU21D::ReadRaw(unsigned char)+0xa4>
  f8:	e59f7060 	ldr	r7, [pc, #96]	; 160 <sensor::HTU21D::ReadRaw(unsigned char)+0xa8>
  fc:	e1d330b0 	ldrh	r3, [r3]
 100:	e1cd30b4 	strh	r3, [sp, #4]
 104:	e1a00007 	mov	r0, r7
 108:	ebfffffe 	bl	0 <udelay>
 10c:	e5d53000 	ldrb	r3, [r5]
 110:	e5950004 	ldr	r0, [r5, #4]
 114:	e586300c 	str	r3, [r6, #12]
 118:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 11c:	e3a01003 	mov	r1, #3
 120:	e28d0004 	add	r0, sp, #4
 124:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 128:	e5dd3004 	ldrb	r3, [sp, #4]
 12c:	e2033003 	and	r3, r3, #3
 130:	e3530002 	cmp	r3, #2
 134:	0a000001 	beq	140 <sensor::HTU21D::ReadRaw(unsigned char)+0x88>
 138:	e2544001 	subs	r4, r4, #1
 13c:	1afffff0 	bne	104 <sensor::HTU21D::ReadRaw(unsigned char)+0x4c>
 140:	e1dd00b4 	ldrh	r0, [sp, #4]
 144:	e6bf0fb0 	rev16	r0, r0
 148:	e3c00003 	bic	r0, r0, #3
 14c:	e6ff0070 	uxth	r0, r0
 150:	e28dd00c 	add	sp, sp, #12
 154:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 158:	20804000 	addcs	r4, r0, r0
 15c:	00000000 	andeq	r0, r0, r0
 160:	00002710 	andeq	r2, r0, r0, lsl r7

00000164 <sensor::HTU21D::GetTemperature()>:
 164:	e3a010f3 	mov	r1, #243	; 0xf3
 168:	e92d4010 	push	{r4, lr}
 16c:	ebfffffe 	bl	b8 <sensor::HTU21D::ReadRaw(unsigned char)>
 170:	ee070a90 	vmov	s15, r0
 174:	eddf6a05 	vldr	s13, [pc, #20]	; 190 <sensor::HTU21D::GetTemperature()+0x2c>
 178:	eef87a67 	vcvt.f32.u32	s15, s15
 17c:	ed9f7a04 	vldr	s14, [pc, #16]	; 194 <sensor::HTU21D::GetTemperature()+0x30>
 180:	ee677aa6 	vmul.f32	s15, s15, s13
 184:	ed9f0a03 	vldr	s0, [pc, #12]	; 198 <sensor::HTU21D::GetTemperature()+0x34>
 188:	ee170a87 	vnmls.f32	s0, s15, s14
 18c:	e8bd8010 	pop	{r4, pc}
 190:	37800000 	strcc	r0, [r0, r0]
 194:	432fb852 			; <UNDEFINED> instruction: 0x432fb852
 198:	423b6666 	eorsmi	r6, fp, #106954752	; 0x6600000

0000019c <sensor::HTU21D::GetHumidity()>:
 19c:	e3a010f5 	mov	r1, #245	; 0xf5
 1a0:	e92d4010 	push	{r4, lr}
 1a4:	ebfffffe 	bl	b8 <sensor::HTU21D::ReadRaw(unsigned char)>
 1a8:	ee070a90 	vmov	s15, r0
 1ac:	eddf6a05 	vldr	s13, [pc, #20]	; 1c8 <sensor::HTU21D::GetHumidity()+0x2c>
 1b0:	eef87a67 	vcvt.f32.u32	s15, s15
 1b4:	ed9f7a04 	vldr	s14, [pc, #16]	; 1cc <sensor::HTU21D::GetHumidity()+0x30>
 1b8:	ee677aa6 	vmul.f32	s15, s15, s13
 1bc:	ed9f0a03 	vldr	s0, [pc, #12]	; 1d0 <sensor::HTU21D::GetHumidity()+0x34>
 1c0:	ee170a87 	vnmls.f32	s0, s15, s14
 1c4:	e8bd8010 	pop	{r4, pc}
 1c8:	37800000 	strcc	r0, [r0, r0]
 1cc:	42fa0000 	rscsmi	r0, sl, #0
 1d0:	40c00000 	sbcmi	r0, r0, r0

Disassembly of section .rodata:

00000000 <.rodata>:
   0:	Address 0x0000000000000000 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <sensor::HTU21D::GetHumidity()+0x168d690>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <sensor::HTU21D::GetHumidity()+0x42288>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


ina219.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <sensor::INA219::Configure(sensor::ina219::Config&)>:
   0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   4:	e1d130b0 	ldrh	r3, [r1]
   8:	e1a0e000 	mov	lr, r0
   c:	e3530000 	cmp	r3, #0
  10:	e24dd00c 	sub	sp, sp, #12
  14:	0a000025 	beq	b0 <sensor::INA219::Configure(sensor::ina219::Config&)+0xb0>
  18:	e3530a02 	cmp	r3, #8192	; 0x2000
  1c:	03a02442 	moveq	r2, #1107296256	; 0x42000000
  20:	05802018 	streq	r2, [r0, #24]
  24:	e1d120b2 	ldrh	r2, [r1, #2]
  28:	e3520a01 	cmp	r2, #4096	; 0x1000
  2c:	0a000024 	beq	c4 <sensor::INA219::Configure(sensor::ina219::Config&)+0xc4>
  30:	8a00001a 	bhi	a0 <sensor::INA219::Configure(sensor::ina219::Config&)+0xa0>
  34:	e3520000 	cmp	r2, #0
  38:	0a000024 	beq	d0 <sensor::INA219::Configure(sensor::ina219::Config&)+0xd0>
  3c:	e3520b02 	cmp	r2, #2048	; 0x800
  40:	059f0094 	ldreq	r0, [pc, #148]	; dc <sensor::INA219::Configure(sensor::ina219::Config&)+0xdc>
  44:	058e0014 	streq	r0, [lr, #20]
  48:	e1d1c0b4 	ldrh	ip, [r1, #4]
  4c:	e1833002 	orr	r3, r3, r2
  50:	e183300c 	orr	r3, r3, ip
  54:	e1d1c0b6 	ldrh	ip, [r1, #6]
  58:	e1d120b8 	ldrh	r2, [r1, #8]
  5c:	e183300c 	orr	r3, r3, ip
  60:	e3a0c000 	mov	ip, #0
  64:	e1833002 	orr	r3, r3, r2
  68:	e5de1000 	ldrb	r1, [lr]
  6c:	e59f206c 	ldr	r2, [pc, #108]	; e0 <sensor::INA219::Configure(sensor::ina219::Config&)+0xe0>
  70:	e59e0004 	ldr	r0, [lr, #4]
  74:	e1a0e423 	lsr	lr, r3, #8
  78:	e5cde005 	strb	lr, [sp, #5]
  7c:	e5cd3006 	strb	r3, [sp, #6]
  80:	e5cdc004 	strb	ip, [sp, #4]
  84:	e582100c 	str	r1, [r2, #12]
  88:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  8c:	e3a01003 	mov	r1, #3
  90:	e28d0004 	add	r0, sp, #4
  94:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  98:	e28dd00c 	add	sp, sp, #12
  9c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
  a0:	e3520b06 	cmp	r2, #6144	; 0x1800
  a4:	059f0038 	ldreq	r0, [pc, #56]	; e4 <sensor::INA219::Configure(sensor::ina219::Config&)+0xe4>
  a8:	058e0014 	streq	r0, [lr, #20]
  ac:	eaffffe5 	b	48 <sensor::INA219::Configure(sensor::ina219::Config&)+0x48>
  b0:	e59f2030 	ldr	r2, [pc, #48]	; e8 <sensor::INA219::Configure(sensor::ina219::Config&)+0xe8>
  b4:	e5802018 	str	r2, [r0, #24]
  b8:	e1d120b2 	ldrh	r2, [r1, #2]
  bc:	e3520a01 	cmp	r2, #4096	; 0x1000
  c0:	1affffda 	bne	30 <sensor::INA219::Configure(sensor::ina219::Config&)+0x30>
  c4:	e59f0020 	ldr	r0, [pc, #32]	; ec <sensor::INA219::Configure(sensor::ina219::Config&)+0xec>
  c8:	e58e0014 	str	r0, [lr, #20]
  cc:	eaffffdd 	b	48 <sensor::INA219::Configure(sensor::ina219::Config&)+0x48>
  d0:	e59f0018 	ldr	r0, [pc, #24]	; f0 <sensor::INA219::Configure(sensor::ina219::Config&)+0xf0>
  d4:	e58e0014 	str	r0, [lr, #20]
  d8:	eaffffda 	b	48 <sensor::INA219::Configure(sensor::ina219::Config&)+0x48>
  dc:	3da3d70a 	stccc	7, cr13, [r3, #40]!	; 0x28
  e0:	20804000 	addcs	r4, r0, r0
  e4:	3ea3d70a 	cdpcc	7, 10, cr13, cr3, cr10, {0}
  e8:	41800000 	orrmi	r0, r0, r0
  ec:	3e23d70a 	cdpcc	7, 2, cr13, cr3, cr10, {0}
  f0:	3d23d70a 	stccc	7, cr13, [r3, #-40]!	; 0xffffffd8

000000f4 <sensor::INA219::INA219(unsigned char)>:
  f4:	e92d4030 	push	{r4, r5, lr}
  f8:	e2515000 	subs	r5, r1, #0
  fc:	e1a04000 	mov	r4, r0
 100:	e24dd014 	sub	sp, sp, #20
 104:	0a000017 	beq	168 <sensor::INA219::INA219(unsigned char)+0x74>
 108:	e3a02000 	mov	r2, #0
 10c:	e59f3110 	ldr	r3, [pc, #272]	; 224 <sensor::INA219::INA219(unsigned char)+0x130>
 110:	e59f0110 	ldr	r0, [pc, #272]	; 228 <sensor::INA219::INA219(unsigned char)+0x134>
 114:	e5c45000 	strb	r5, [r4]
 118:	e5840004 	str	r0, [r4, #4]
 11c:	e5c42008 	strb	r2, [r4, #8]
 120:	e583500c 	str	r5, [r3, #12]
 124:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 128:	e2453030 	sub	r3, r5, #48	; 0x30
 12c:	e2455050 	sub	r5, r5, #80	; 0x50
 130:	e355000f 	cmp	r5, #15
 134:	83530007 	cmphi	r3, #7
 138:	8a000012 	bhi	188 <sensor::INA219::INA219(unsigned char)+0x94>
 13c:	e3a01001 	mov	r1, #1
 140:	e28d0004 	add	r0, sp, #4
 144:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 148:	e16f0f10 	clz	r0, r0
 14c:	e1a002a0 	lsr	r0, r0, #5
 150:	e3500000 	cmp	r0, #0
 154:	e5c40008 	strb	r0, [r4, #8]
 158:	1a000012 	bne	1a8 <sensor::INA219::INA219(unsigned char)+0xb4>
 15c:	e1a00004 	mov	r0, r4
 160:	e28dd014 	add	sp, sp, #20
 164:	e8bd8030 	pop	{r4, r5, pc}
 168:	e3a03040 	mov	r3, #64	; 0x40
 16c:	e59f00b4 	ldr	r0, [pc, #180]	; 228 <sensor::INA219::INA219(unsigned char)+0x134>
 170:	e59f20ac 	ldr	r2, [pc, #172]	; 224 <sensor::INA219::INA219(unsigned char)+0x130>
 174:	e5840004 	str	r0, [r4, #4]
 178:	e5c45008 	strb	r5, [r4, #8]
 17c:	e5c43000 	strb	r3, [r4]
 180:	e582300c 	str	r3, [r2, #12]
 184:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 188:	e3a01000 	mov	r1, #0
 18c:	e1a00001 	mov	r0, r1
 190:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 194:	e16f0f10 	clz	r0, r0
 198:	e1a002a0 	lsr	r0, r0, #5
 19c:	e3500000 	cmp	r0, #0
 1a0:	e5c40008 	strb	r0, [r4, #8]
 1a4:	0affffec 	beq	15c <sensor::INA219::INA219(unsigned char)+0x68>
 1a8:	e59f207c 	ldr	r2, [pc, #124]	; 22c <sensor::INA219::INA219(unsigned char)+0x138>
 1ac:	e28d3004 	add	r3, sp, #4
 1b0:	e8920007 	ldm	r2, {r0, r1, r2}
 1b4:	e8a30003 	stmia	r3!, {r0, r1}
 1b8:	e1a00004 	mov	r0, r4
 1bc:	e28d1004 	add	r1, sp, #4
 1c0:	e1c320b0 	strh	r2, [r3]
 1c4:	ebfffffe 	bl	0 <sensor::INA219::Configure(sensor::ina219::Config&)>
 1c8:	e59fc060 	ldr	ip, [pc, #96]	; 230 <sensor::INA219::INA219(unsigned char)+0x13c>
 1cc:	e59f1060 	ldr	r1, [pc, #96]	; 234 <sensor::INA219::INA219(unsigned char)+0x140>
 1d0:	e3a0e005 	mov	lr, #5
 1d4:	e584c01c 	str	ip, [r4, #28]
 1d8:	e584100c 	str	r1, [r4, #12]
 1dc:	e3a0c010 	mov	ip, #16
 1e0:	e3a01000 	mov	r1, #0
 1e4:	e59f304c 	ldr	r3, [pc, #76]	; 238 <sensor::INA219::INA219(unsigned char)+0x144>
 1e8:	e5d42000 	ldrb	r2, [r4]
 1ec:	e5843010 	str	r3, [r4, #16]
 1f0:	e59f302c 	ldr	r3, [pc, #44]	; 224 <sensor::INA219::INA219(unsigned char)+0x130>
 1f4:	e5940004 	ldr	r0, [r4, #4]
 1f8:	e5cde000 	strb	lr, [sp]
 1fc:	e5cdc001 	strb	ip, [sp, #1]
 200:	e5cd1002 	strb	r1, [sp, #2]
 204:	e583200c 	str	r2, [r3, #12]
 208:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 20c:	e3a01003 	mov	r1, #3
 210:	e1a0000d 	mov	r0, sp
 214:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 218:	e1a00004 	mov	r0, r4
 21c:	e28dd014 	add	sp, sp, #20
 220:	e8bd8030 	pop	{r4, r5, pc}
 224:	20804000 	addcs	r4, r0, r0
 228:	00061a80 	andeq	r1, r6, r0, lsl #21
 22c:	00000000 	andeq	r0, r0, r0
 230:	3dcccccd 	stclcc	12, cr12, [ip, #820]	; 0x334
 234:	38d1b717 	ldmcc	r1, {r0, r1, r2, r4, r8, r9, sl, ip, sp, pc}^
 238:	3b03126e 	blcc	c4bf8 <sensor::INA219::GetBusPower()+0xc476c>

0000023c <sensor::INA219::Calibrate(float, float)>:
 23c:	eddf6a31 	vldr	s13, [pc, #196]	; 308 <sensor::INA219::Calibrate(float, float)+0xcc>
 240:	ed9f7a31 	vldr	s14, [pc, #196]	; 30c <sensor::INA219::Calibrate(float, float)+0xd0>
 244:	eec07aa6 	vdiv.f32	s15, s1, s13
 248:	ee677a87 	vmul.f32	s15, s15, s14
 24c:	eefc7ae7 	vcvt.u32.f32	s15, s15
 250:	ee172a90 	vmov	r2, s15
 254:	e6ff2072 	uxth	r2, r2
 258:	ee072a90 	vmov	s15, r2
 25c:	eef87a67 	vcvt.f32.u32	s15, s15
 260:	ed9f6a2a 	vldr	s12, [pc, #168]	; 310 <sensor::INA219::Calibrate(float, float)+0xd4>
 264:	eec75a87 	vdiv.f32	s11, s15, s14
 268:	eec56a86 	vdiv.f32	s13, s11, s12
 26c:	eebd7ae6 	vcvt.s32.f32	s14, s13
 270:	eef87ac7 	vcvt.f32.s32	s15, s14
 274:	eef46a67 	vcmp.f32	s13, s15
 278:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 27c:	1e172a10 	vmovne	r2, s14
 280:	12822001 	addne	r2, r2, #1
 284:	1e072a90 	vmovne	s15, r2
 288:	ed9f6a20 	vldr	s12, [pc, #128]	; 310 <sensor::INA219::Calibrate(float, float)+0xd4>
 28c:	1ef87ae7 	vcvtne.f32.s32	s15, s15
 290:	ee677a86 	vmul.f32	s15, s15, s12
 294:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 298:	e1a03000 	mov	r3, r0
 29c:	ed800a07 	vstr	s0, [r0, #28]
 2a0:	eddf6a1b 	vldr	s13, [pc, #108]	; 314 <sensor::INA219::Calibrate(float, float)+0xd8>
 2a4:	ee270a80 	vmul.f32	s0, s15, s0
 2a8:	ed9f7a1a 	vldr	s14, [pc, #104]	; 318 <sensor::INA219::Calibrate(float, float)+0xdc>
 2ac:	e5900004 	ldr	r0, [r0, #4]
 2b0:	ee277a87 	vmul.f32	s14, s15, s14
 2b4:	edc37a03 	vstr	s15, [r3, #12]
 2b8:	eec67a80 	vdiv.f32	s15, s13, s0
 2bc:	eefc7ae7 	vcvt.u32.f32	s15, s15
 2c0:	ed837a04 	vstr	s14, [r3, #16]
 2c4:	e5d31000 	ldrb	r1, [r3]
 2c8:	ee173a90 	vmov	r3, s15
 2cc:	e3a0c005 	mov	ip, #5
 2d0:	e24dd00c 	sub	sp, sp, #12
 2d4:	e59f2040 	ldr	r2, [pc, #64]	; 31c <sensor::INA219::Calibrate(float, float)+0xe0>
 2d8:	e6ff3073 	uxth	r3, r3
 2dc:	e5cd3006 	strb	r3, [sp, #6]
 2e0:	e1a03423 	lsr	r3, r3, #8
 2e4:	e5cdc004 	strb	ip, [sp, #4]
 2e8:	e5cd3005 	strb	r3, [sp, #5]
 2ec:	e582100c 	str	r1, [r2, #12]
 2f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2f4:	e3a01003 	mov	r1, #3
 2f8:	e28d0004 	add	r0, sp, #4
 2fc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 300:	e28dd00c 	add	sp, sp, #12
 304:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 308:	46fffe00 	ldrbtmi	pc, [pc], r0, lsl #28	; <UNPREDICTABLE>
 30c:	4cbebc20 	ldcmi	12, cr11, [lr], #128	; 0x80
 310:	38d1b717 	ldmcc	r1, {r0, r1, r2, r4, r8, r9, sl, ip, sp, pc}^
 314:	3d27c5ac 	cfstr32cc	mvfx12, [r7, #-688]!	; 0xfffffd50
 318:	41a00000 	movmi	r0, r0
 31c:	20804000 	addcs	r4, r0, r0

00000320 <sensor::INA219::GetShuntCurrent()>:
 320:	e92d4010 	push	{r4, lr}
 324:	e3a01000 	mov	r1, #0
 328:	e1a04000 	mov	r4, r0
 32c:	e3a02004 	mov	r2, #4
 330:	e24dd008 	sub	sp, sp, #8
 334:	e59f3058 	ldr	r3, [pc, #88]	; 394 <sensor::INA219::GetShuntCurrent()+0x74>
 338:	e1cd10b4 	strh	r1, [sp, #4]
 33c:	e5cd2004 	strb	r2, [sp, #4]
 340:	e5d42000 	ldrb	r2, [r4]
 344:	e5900004 	ldr	r0, [r0, #4]
 348:	e583200c 	str	r2, [r3, #12]
 34c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 350:	e3a01001 	mov	r1, #1
 354:	e28d0004 	add	r0, sp, #4
 358:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 35c:	e3a00e32 	mov	r0, #800	; 0x320
 360:	ebfffffe 	bl	0 <udelay>
 364:	e3a01002 	mov	r1, #2
 368:	e28d0004 	add	r0, sp, #4
 36c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 370:	e1dd30b4 	ldrh	r3, [sp, #4]
 374:	ed940a03 	vldr	s0, [r4, #12]
 378:	e6bf3fb3 	rev16	r3, r3
 37c:	e6ff3073 	uxth	r3, r3
 380:	ee073a90 	vmov	s15, r3
 384:	eef87ae7 	vcvt.f32.s32	s15, s15
 388:	ee270a80 	vmul.f32	s0, s15, s0
 38c:	e28dd008 	add	sp, sp, #8
 390:	e8bd8010 	pop	{r4, pc}
 394:	20804000 	addcs	r4, r0, r0

00000398 <sensor::INA219::GetBusVoltageRaw()>:
 398:	e1a03000 	mov	r3, r0
 39c:	e92d4010 	push	{r4, lr}
 3a0:	e3a01000 	mov	r1, #0
 3a4:	e3a04002 	mov	r4, #2
 3a8:	e59f2054 	ldr	r2, [pc, #84]	; 404 <sensor::INA219::GetBusVoltageRaw()+0x6c>
 3ac:	e5d33000 	ldrb	r3, [r3]
 3b0:	e24dd008 	sub	sp, sp, #8
 3b4:	e1cd10b4 	strh	r1, [sp, #4]
 3b8:	e5900004 	ldr	r0, [r0, #4]
 3bc:	e5cd4004 	strb	r4, [sp, #4]
 3c0:	e582300c 	str	r3, [r2, #12]
 3c4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3c8:	e3a01001 	mov	r1, #1
 3cc:	e28d0004 	add	r0, sp, #4
 3d0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3d4:	e3a00e32 	mov	r0, #800	; 0x320
 3d8:	ebfffffe 	bl	0 <udelay>
 3dc:	e1a01004 	mov	r1, r4
 3e0:	e28d0004 	add	r0, sp, #4
 3e4:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 3e8:	e1dd00b4 	ldrh	r0, [sp, #4]
 3ec:	e6bf0fb0 	rev16	r0, r0
 3f0:	e6ff0070 	uxth	r0, r0
 3f4:	e1a001a0 	lsr	r0, r0, #3
 3f8:	e1a00410 	lsl	r0, r0, r4
 3fc:	e28dd008 	add	sp, sp, #8
 400:	e8bd8010 	pop	{r4, pc}
 404:	20804000 	addcs	r4, r0, r0

00000408 <sensor::INA219::GetBusVoltage()>:
 408:	e1a03000 	mov	r3, r0
 40c:	e92d4010 	push	{r4, lr}
 410:	e3a01000 	mov	r1, #0
 414:	e3a04002 	mov	r4, #2
 418:	e59f2068 	ldr	r2, [pc, #104]	; 488 <sensor::INA219::GetBusVoltage()+0x80>
 41c:	e5d33000 	ldrb	r3, [r3]
 420:	e24dd008 	sub	sp, sp, #8
 424:	e1cd10b4 	strh	r1, [sp, #4]
 428:	e5900004 	ldr	r0, [r0, #4]
 42c:	e5cd4004 	strb	r4, [sp, #4]
 430:	e582300c 	str	r3, [r2, #12]
 434:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 438:	e3a01001 	mov	r1, #1
 43c:	e28d0004 	add	r0, sp, #4
 440:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 444:	e3a00e32 	mov	r0, #800	; 0x320
 448:	ebfffffe 	bl	0 <udelay>
 44c:	e1a01004 	mov	r1, r4
 450:	e28d0004 	add	r0, sp, #4
 454:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 458:	e1dd30b4 	ldrh	r3, [sp, #4]
 45c:	ed9f0a08 	vldr	s0, [pc, #32]	; 484 <sensor::INA219::GetBusVoltage()+0x7c>
 460:	e6bf3fb3 	rev16	r3, r3
 464:	e6ff3073 	uxth	r3, r3
 468:	e1a031a3 	lsr	r3, r3, #3
 46c:	e1a03413 	lsl	r3, r3, r4
 470:	ee073a90 	vmov	s15, r3
 474:	eef87ae7 	vcvt.f32.s32	s15, s15
 478:	ee270a80 	vmul.f32	s0, s15, s0
 47c:	e28dd008 	add	sp, sp, #8
 480:	e8bd8010 	pop	{r4, pc}
 484:	3a83126f 	bcc	fe0c4e48 <sensor::INA219::GetBusPower()+0xfe0c49bc>
 488:	20804000 	addcs	r4, r0, r0

0000048c <sensor::INA219::GetBusPower()>:
 48c:	e92d4010 	push	{r4, lr}
 490:	e3a01000 	mov	r1, #0
 494:	e1a04000 	mov	r4, r0
 498:	e3a02003 	mov	r2, #3
 49c:	e24dd008 	sub	sp, sp, #8
 4a0:	e59f3058 	ldr	r3, [pc, #88]	; 500 <sensor::INA219::GetBusPower()+0x74>
 4a4:	e1cd10b4 	strh	r1, [sp, #4]
 4a8:	e5cd2004 	strb	r2, [sp, #4]
 4ac:	e5d42000 	ldrb	r2, [r4]
 4b0:	e5900004 	ldr	r0, [r0, #4]
 4b4:	e583200c 	str	r2, [r3, #12]
 4b8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4bc:	e3a01001 	mov	r1, #1
 4c0:	e28d0004 	add	r0, sp, #4
 4c4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4c8:	e3a00e32 	mov	r0, #800	; 0x320
 4cc:	ebfffffe 	bl	0 <udelay>
 4d0:	e3a01002 	mov	r1, #2
 4d4:	e28d0004 	add	r0, sp, #4
 4d8:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 4dc:	e1dd30b4 	ldrh	r3, [sp, #4]
 4e0:	ed940a04 	vldr	s0, [r4, #16]
 4e4:	e6bf3fb3 	rev16	r3, r3
 4e8:	e6ff3073 	uxth	r3, r3
 4ec:	ee073a90 	vmov	s15, r3
 4f0:	eef87ae7 	vcvt.f32.s32	s15, s15
 4f4:	ee270a80 	vmul.f32	s0, s15, s0
 4f8:	e28dd008 	add	sp, sp, #8
 4fc:	e8bd8010 	pop	{r4, pc}
 500:	20804000 	addcs	r4, r0, r0

Disassembly of section .rodata:

00000000 <.rodata>:
   0:	18002000 	stmdane	r0, {sp}
   4:	00180400 	andseq	r0, r8, r0, lsl #8
   8:	Address 0x0000000000000008 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <sensor::INA219::GetBusPower()+0x168d3a0>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <sensor::INA219::GetBusPower()+0x41f98>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


max7219matrix.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <Max7219Matrix::Max7219Matrix()>:
   0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	e3a0a000 	mov	sl, #0
   8:	e59f30b4 	ldr	r3, [pc, #180]	; c4 <Max7219Matrix::Max7219Matrix()+0xc4>
   c:	e24dd00c 	sub	sp, sp, #12
  10:	e5803000 	str	r3, [r0]
  14:	e1c0a0b4 	strh	sl, [r0, #4]
  18:	e1a04000 	mov	r4, r0
  1c:	e58d0004 	str	r0, [sp, #4]
  20:	ebfffffe 	bl	0 <bcm2835_spi_begin>
  24:	ebfffffe 	bl	0 <cp437_font_size>
  28:	e3a03004 	mov	r3, #4
  2c:	e5840008 	str	r0, [r4, #8]
  30:	e1c431b0 	strh	r3, [r4, #16]
  34:	e1a00180 	lsl	r0, r0, #3
  38:	ebfffffe 	bl	0 <operator new[](unsigned int)>
  3c:	e594b008 	ldr	fp, [r4, #8]
  40:	e584000c 	str	r0, [r4, #12]
  44:	e15b000a 	cmp	fp, sl
  48:	0a00001a 	beq	b8 <Max7219Matrix::Max7219Matrix()+0xb8>
  4c:	e1a09000 	mov	r9, r0
  50:	e3a04001 	mov	r4, #1
  54:	e59f606c 	ldr	r6, [pc, #108]	; c8 <Max7219Matrix::Max7219Matrix()+0xc8>
  58:	e2807007 	add	r7, r0, #7
  5c:	e2495001 	sub	r5, r9, #1
  60:	e2898006 	add	r8, r9, #6
  64:	e3a03000 	mov	r3, #0
  68:	e1a02006 	mov	r2, r6
  6c:	e1a00003 	mov	r0, r3
  70:	e048e005 	sub	lr, r8, r5
  74:	e1a0ee14 	lsl	lr, r4, lr
  78:	e5f21001 	ldrb	r1, [r2, #1]!
  7c:	e180c314 	orr	ip, r0, r4, lsl r3
  80:	e111000e 	tst	r1, lr
  84:	e2833001 	add	r3, r3, #1
  88:	16ef007c 	uxtbne	r0, ip
  8c:	e3530008 	cmp	r3, #8
  90:	1afffff8 	bne	78 <Max7219Matrix::Max7219Matrix()+0x78>
  94:	e5e50001 	strb	r0, [r5, #1]!
  98:	e1550007 	cmp	r5, r7
  9c:	1afffff0 	bne	64 <Max7219Matrix::Max7219Matrix()+0x64>
  a0:	e28aa001 	add	sl, sl, #1
  a4:	e15a000b 	cmp	sl, fp
  a8:	e2899008 	add	r9, r9, #8
  ac:	e2877008 	add	r7, r7, #8
  b0:	e2866008 	add	r6, r6, #8
  b4:	1affffe8 	bne	5c <Max7219Matrix::Max7219Matrix()+0x5c>
  b8:	e59d0004 	ldr	r0, [sp, #4]
  bc:	e28dd00c 	add	sp, sp, #12
  c0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
  c4:	001e8480 	andseq	r8, lr, r0, lsl #9
  c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

000000cc <Max7219Matrix::~Max7219Matrix()>:
  cc:	e92d4010 	push	{r4, lr}
  d0:	e1a04000 	mov	r4, r0
  d4:	e590000c 	ldr	r0, [r0, #12]
  d8:	e3500000 	cmp	r0, #0
  dc:	0a000000 	beq	e4 <Max7219Matrix::~Max7219Matrix()+0x18>
  e0:	ebfffffe 	bl	0 <operator delete[](void*)>
  e4:	e1a00004 	mov	r0, r4
  e8:	e8bd8010 	pop	{r4, pc}

000000ec <Max7219Matrix::Write(char const*, unsigned short)>:
  ec:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  f0:	e1d041b0 	ldrh	r4, [r0, #16]
  f4:	e3a03001 	mov	r3, #1
  f8:	e1540002 	cmp	r4, r2
  fc:	31a07004 	movcc	r7, r4
 100:	21a07002 	movcs	r7, r2
 104:	e1a05000 	mov	r5, r0
 108:	e1a08001 	mov	r8, r1
 10c:	e24dd00c 	sub	sp, sp, #12
 110:	e58d3000 	str	r3, [sp]
 114:	e59f6134 	ldr	r6, [pc, #308]	; 250 <Max7219Matrix::Write(char const*, unsigned short)+0x164>
 118:	e2473001 	sub	r3, r7, #1
 11c:	e59f9130 	ldr	r9, [pc, #304]	; 254 <Max7219Matrix::Write(char const*, unsigned short)+0x168>
 120:	e58d3004 	str	r3, [sp, #4]
 124:	e0444007 	sub	r4, r4, r7
 128:	e1b04084 	lsls	r4, r4, #1
 12c:	13a04000 	movne	r4, #0
 130:	11a02004 	movne	r2, r4
 134:	0a000008 	beq	15c <Max7219Matrix::Write(char const*, unsigned short)+0x70>
 138:	e1a03006 	mov	r3, r6
 13c:	e7e32004 	strb	r2, [r3, r4]!
 140:	e5c32001 	strb	r2, [r3, #1]
 144:	e1d531b0 	ldrh	r3, [r5, #16]
 148:	e2841002 	add	r1, r4, #2
 14c:	e6ff4071 	uxth	r4, r1
 150:	e0433007 	sub	r3, r3, r7
 154:	e1540083 	cmp	r4, r3, lsl #1
 158:	3afffff6 	bcc	138 <Max7219Matrix::Write(char const*, unsigned short)+0x4c>
 15c:	e59d3004 	ldr	r3, [sp, #4]
 160:	e3730001 	cmn	r3, #1
 164:	0a000019 	beq	1d0 <Max7219Matrix::Write(char const*, unsigned short)+0xe4>
 168:	e59d3000 	ldr	r3, [sp]
 16c:	e6efb073 	uxtb	fp, r3
 170:	e243a001 	sub	sl, r3, #1
 174:	e59d3004 	ldr	r3, [sp, #4]
 178:	e0881003 	add	r1, r8, r3
 17c:	e1a03004 	mov	r3, r4
 180:	e5d12000 	ldrb	r2, [r1]
 184:	e5950008 	ldr	r0, [r5, #8]
 188:	e1a0c001 	mov	ip, r1
 18c:	e1500002 	cmp	r0, r2
 190:	93a02c01 	movls	r2, #256	; 0x100
 194:	e595e00c 	ldr	lr, [r5, #12]
 198:	81a02182 	lslhi	r2, r2, #3
 19c:	e7c6b003 	strb	fp, [r6, r3]
 1a0:	e08ee00a 	add	lr, lr, sl
 1a4:	e7dee002 	ldrb	lr, [lr, r2]
 1a8:	e2830001 	add	r0, r3, #1
 1ac:	e6ff2070 	uxth	r2, r0
 1b0:	e2833002 	add	r3, r3, #2
 1b4:	e158000c 	cmp	r8, ip
 1b8:	e2411001 	sub	r1, r1, #1
 1bc:	e6ff3073 	uxth	r3, r3
 1c0:	e7c6e002 	strb	lr, [r6, r2]
 1c4:	1affffed 	bne	180 <Max7219Matrix::Write(char const*, unsigned short)+0x94>
 1c8:	e0844087 	add	r4, r4, r7, lsl #1
 1cc:	e6ff4074 	uxth	r4, r4
 1d0:	e5993000 	ldr	r3, [r9]
 1d4:	e5d52004 	ldrb	r2, [r5, #4]
 1d8:	e3c33003 	bic	r3, r3, #3
 1dc:	e2022003 	and	r2, r2, #3
 1e0:	e1822003 	orr	r2, r2, r3
 1e4:	e5951000 	ldr	r1, [r5]
 1e8:	e5d53005 	ldrb	r3, [r5, #5]
 1ec:	e5892000 	str	r2, [r9]
 1f0:	e5992000 	ldr	r2, [r9]
 1f4:	e1a03103 	lsl	r3, r3, #2
 1f8:	e3c2200c 	bic	r2, r2, #12
 1fc:	e203300c 	and	r3, r3, #12
 200:	e1833002 	orr	r3, r3, r2
 204:	e5893000 	str	r3, [r9]
 208:	e59f0048 	ldr	r0, [pc, #72]	; 258 <Max7219Matrix::Write(char const*, unsigned short)+0x16c>
 20c:	ebfffffe 	bl	0 <__aeabi_uidiv>
 210:	e59dc000 	ldr	ip, [sp]
 214:	e1a02000 	mov	r2, r0
 218:	e28cc001 	add	ip, ip, #1
 21c:	e1a01004 	mov	r1, r4
 220:	e1a0400c 	mov	r4, ip
 224:	e59f3030 	ldr	r3, [pc, #48]	; 25c <Max7219Matrix::Write(char const*, unsigned short)+0x170>
 228:	e58dc000 	str	ip, [sp]
 22c:	e0033002 	and	r3, r3, r2
 230:	e1a00006 	mov	r0, r6
 234:	e5893008 	str	r3, [r9, #8]
 238:	ebfffffe 	bl	0 <bcm2835_spi_writenb>
 23c:	e3540009 	cmp	r4, #9
 240:	11d541b0 	ldrhne	r4, [r5, #16]
 244:	1affffb6 	bne	124 <Max7219Matrix::Write(char const*, unsigned short)+0x38>
 248:	e28dd00c 	add	sp, sp, #12
 24c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 250:	00000000 	andeq	r0, r0, r0
 254:	20204000 	eorcs	r4, r0, r0
 258:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
 25c:	0000fffe 	strdeq	pc, [r0], -lr

00000260 <Max7219Matrix::UpdateCharacter(unsigned int, unsigned char const*)>:
 260:	e5903008 	ldr	r3, [r0, #8]
 264:	e1530001 	cmp	r3, r1
 268:	312fff1e 	bxcc	lr
 26c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 270:	e3a05007 	mov	r5, #7
 274:	e3a0e001 	mov	lr, #1
 278:	e590300c 	ldr	r3, [r0, #12]
 27c:	e2427001 	sub	r7, r2, #1
 280:	e0836181 	add	r6, r3, r1, lsl #3
 284:	e3a03000 	mov	r3, #0
 288:	e1a02007 	mov	r2, r7
 28c:	e1a00003 	mov	r0, r3
 290:	e1a0451e 	lsl	r4, lr, r5
 294:	e5f21001 	ldrb	r1, [r2, #1]!
 298:	e180c31e 	orr	ip, r0, lr, lsl r3
 29c:	e1110004 	tst	r1, r4
 2a0:	e2833001 	add	r3, r3, #1
 2a4:	16ef007c 	uxtbne	r0, ip
 2a8:	e3530008 	cmp	r3, #8
 2ac:	1afffff8 	bne	294 <Max7219Matrix::UpdateCharacter(unsigned int, unsigned char const*)+0x34>
 2b0:	e2455001 	sub	r5, r5, #1
 2b4:	e3750001 	cmn	r5, #1
 2b8:	e4c60001 	strb	r0, [r6], #1
 2bc:	1afffff0 	bne	284 <Max7219Matrix::UpdateCharacter(unsigned int, unsigned char const*)+0x24>
 2c0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

000002c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>:
 2c4:	e1d031b0 	ldrh	r3, [r0, #16]
 2c8:	e92d4070 	push	{r4, r5, r6, lr}
 2cc:	e3530000 	cmp	r3, #0
 2d0:	0a000022 	beq	360 <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0x9c>
 2d4:	e3a0c000 	mov	ip, #0
 2d8:	e59fe088 	ldr	lr, [pc, #136]	; 368 <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0xa4>
 2dc:	e1a0300e 	mov	r3, lr
 2e0:	e7e3100c 	strb	r1, [r3, ip]!
 2e4:	e5c32001 	strb	r2, [r3, #1]
 2e8:	e1d031b0 	ldrh	r3, [r0, #16]
 2ec:	e28cc002 	add	ip, ip, #2
 2f0:	e15c0083 	cmp	ip, r3, lsl #1
 2f4:	e1a04083 	lsl	r4, r3, #1
 2f8:	3afffff7 	bcc	2dc <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0x18>
 2fc:	e59f5068 	ldr	r5, [pc, #104]	; 36c <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0xa8>
 300:	e5d02004 	ldrb	r2, [r0, #4]
 304:	e5953000 	ldr	r3, [r5]
 308:	e2022003 	and	r2, r2, #3
 30c:	e3c33003 	bic	r3, r3, #3
 310:	e1822003 	orr	r2, r2, r3
 314:	e5901000 	ldr	r1, [r0]
 318:	e5d03005 	ldrb	r3, [r0, #5]
 31c:	e5852000 	str	r2, [r5]
 320:	e5952000 	ldr	r2, [r5]
 324:	e1a03103 	lsl	r3, r3, #2
 328:	e3c2200c 	bic	r2, r2, #12
 32c:	e203300c 	and	r3, r3, #12
 330:	e1833002 	orr	r3, r3, r2
 334:	e5853000 	str	r3, [r5]
 338:	e59f0030 	ldr	r0, [pc, #48]	; 370 <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0xac>
 33c:	ebfffffe 	bl	0 <__aeabi_uidiv>
 340:	e1a02000 	mov	r2, r0
 344:	e59f3028 	ldr	r3, [pc, #40]	; 374 <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0xb0>
 348:	e1a01004 	mov	r1, r4
 34c:	e0033002 	and	r3, r3, r2
 350:	e5853008 	str	r3, [r5, #8]
 354:	e59f000c 	ldr	r0, [pc, #12]	; 368 <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0xa4>
 358:	e8bd4070 	pop	{r4, r5, r6, lr}
 35c:	eafffffe 	b	0 <bcm2835_spi_writenb>
 360:	e1a04003 	mov	r4, r3
 364:	eaffffe4 	b	2fc <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0x38>
 368:	00000000 	andeq	r0, r0, r0
 36c:	20204000 	eorcs	r4, r0, r0
 370:	0ee6b280 	cdpeq	2, 14, cr11, cr6, cr0, {4}
 374:	0000fffe 	strdeq	pc, [r0], -lr

00000378 <Max7219Matrix::Cls()>:
 378:	e92d4010 	push	{r4, lr}
 37c:	e1a04000 	mov	r4, r0
 380:	e3a02000 	mov	r2, #0
 384:	e3a01001 	mov	r1, #1
 388:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 38c:	e1a00004 	mov	r0, r4
 390:	e3a02000 	mov	r2, #0
 394:	e3a01002 	mov	r1, #2
 398:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 39c:	e1a00004 	mov	r0, r4
 3a0:	e3a02000 	mov	r2, #0
 3a4:	e3a01003 	mov	r1, #3
 3a8:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 3ac:	e1a00004 	mov	r0, r4
 3b0:	e3a02000 	mov	r2, #0
 3b4:	e3a01004 	mov	r1, #4
 3b8:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 3bc:	e1a00004 	mov	r0, r4
 3c0:	e3a02000 	mov	r2, #0
 3c4:	e3a01005 	mov	r1, #5
 3c8:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 3cc:	e1a00004 	mov	r0, r4
 3d0:	e3a02000 	mov	r2, #0
 3d4:	e3a01006 	mov	r1, #6
 3d8:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 3dc:	e1a00004 	mov	r0, r4
 3e0:	e3a02000 	mov	r2, #0
 3e4:	e3a01007 	mov	r1, #7
 3e8:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 3ec:	e1a00004 	mov	r0, r4
 3f0:	e8bd4010 	pop	{r4, lr}
 3f4:	e3a02000 	mov	r2, #0
 3f8:	e3a01008 	mov	r1, #8
 3fc:	eafffffe 	b	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>

00000400 <Max7219Matrix::Init(unsigned short, unsigned char)>:
 400:	e1a03001 	mov	r3, r1
 404:	e3530020 	cmp	r3, #32
 408:	23a03020 	movcs	r3, #32
 40c:	e92d4070 	push	{r4, r5, r6, lr}
 410:	e1a04000 	mov	r4, r0
 414:	e1a05002 	mov	r5, r2
 418:	e1c031b0 	strh	r3, [r0, #16]
 41c:	e3a0100c 	mov	r1, #12
 420:	e3a02001 	mov	r2, #1
 424:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 428:	e1a00004 	mov	r0, r4
 42c:	e3a02000 	mov	r2, #0
 430:	e3a0100f 	mov	r1, #15
 434:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 438:	e1a00004 	mov	r0, r4
 43c:	e3a02000 	mov	r2, #0
 440:	e3a01009 	mov	r1, #9
 444:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 448:	e1a00004 	mov	r0, r4
 44c:	e3a02007 	mov	r2, #7
 450:	e3a0100b 	mov	r1, #11
 454:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 458:	e1a00004 	mov	r0, r4
 45c:	e205200f 	and	r2, r5, #15
 460:	e3a0100a 	mov	r1, #10
 464:	ebfffffe 	bl	2c4 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 468:	e1a00004 	mov	r0, r4
 46c:	e8bd4070 	pop	{r4, r5, r6, lr}
 470:	eafffffe 	b	378 <Max7219Matrix::Cls()>

00000474 <Max7219Matrix::Rotate(unsigned int, unsigned int)>:
 474:	e3a03000 	mov	r3, #0
 478:	e59f0030 	ldr	r0, [pc, #48]	; 4b0 <Max7219Matrix::Rotate(unsigned int, unsigned int)+0x3c>
 47c:	e92d4010 	push	{r4, lr}
 480:	e3a04001 	mov	r4, #1
 484:	e0801181 	add	r1, r0, r1, lsl #3
 488:	e1a00003 	mov	r0, r3
 48c:	e1a02214 	lsl	r2, r4, r2
 490:	e5f1c001 	ldrb	ip, [r1, #1]!
 494:	e180e314 	orr	lr, r0, r4, lsl r3
 498:	e11c0002 	tst	ip, r2
 49c:	e2833001 	add	r3, r3, #1
 4a0:	16ef007e 	uxtbne	r0, lr
 4a4:	e3530008 	cmp	r3, #8
 4a8:	1afffff8 	bne	490 <Max7219Matrix::Rotate(unsigned int, unsigned int)+0x1c>
 4ac:	e8bd8010 	pop	{r4, pc}
 4b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

Disassembly of section .bss:

00000000 <spi_data>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <Max7219Matrix::Rotate(unsigned int, unsigned int)+0x168d3b8>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <Max7219Matrix::Rotate(unsigned int, unsigned int)+0x41fb0>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


mcp9808.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <sensor::MCP9808::MCP9808(unsigned char)>:
   0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   4:	e2515000 	subs	r5, r1, #0
   8:	e1a04000 	mov	r4, r0
   c:	e24dd008 	sub	sp, sp, #8
  10:	0a000017 	beq	74 <sensor::MCP9808::MCP9808(unsigned char)+0x74>
  14:	e3a02000 	mov	r2, #0
  18:	e59f3164 	ldr	r3, [pc, #356]	; 184 <sensor::MCP9808::MCP9808(unsigned char)+0x184>
  1c:	e59f0164 	ldr	r0, [pc, #356]	; 188 <sensor::MCP9808::MCP9808(unsigned char)+0x188>
  20:	e5c45000 	strb	r5, [r4]
  24:	e5840004 	str	r0, [r4, #4]
  28:	e5c42008 	strb	r2, [r4, #8]
  2c:	e583500c 	str	r5, [r3, #12]
  30:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  34:	e2453030 	sub	r3, r5, #48	; 0x30
  38:	e2455050 	sub	r5, r5, #80	; 0x50
  3c:	e355000f 	cmp	r5, #15
  40:	83530007 	cmphi	r3, #7
  44:	8a000012 	bhi	94 <sensor::MCP9808::MCP9808(unsigned char)+0x94>
  48:	e3a01001 	mov	r1, #1
  4c:	e28d0004 	add	r0, sp, #4
  50:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  54:	e16f0f10 	clz	r0, r0
  58:	e1a002a0 	lsr	r0, r0, #5
  5c:	e3500000 	cmp	r0, #0
  60:	e5c40008 	strb	r0, [r4, #8]
  64:	1a000012 	bne	b4 <sensor::MCP9808::MCP9808(unsigned char)+0xb4>
  68:	e1a00004 	mov	r0, r4
  6c:	e28dd008 	add	sp, sp, #8
  70:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
  74:	e3a03018 	mov	r3, #24
  78:	e59f0108 	ldr	r0, [pc, #264]	; 188 <sensor::MCP9808::MCP9808(unsigned char)+0x188>
  7c:	e59f2100 	ldr	r2, [pc, #256]	; 184 <sensor::MCP9808::MCP9808(unsigned char)+0x184>
  80:	e5840004 	str	r0, [r4, #4]
  84:	e5c45008 	strb	r5, [r4, #8]
  88:	e5c43000 	strb	r3, [r4]
  8c:	e582300c 	str	r3, [r2, #12]
  90:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  94:	e3a01000 	mov	r1, #0
  98:	e1a00001 	mov	r0, r1
  9c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  a0:	e16f0f10 	clz	r0, r0
  a4:	e1a002a0 	lsr	r0, r0, #5
  a8:	e3500000 	cmp	r0, #0
  ac:	e5c40008 	strb	r0, [r4, #8]
  b0:	0affffec 	beq	68 <sensor::MCP9808::MCP9808(unsigned char)+0x68>
  b4:	e3a03006 	mov	r3, #6
  b8:	e3a08000 	mov	r8, #0
  bc:	e5947004 	ldr	r7, [r4, #4]
  c0:	e5d46000 	ldrb	r6, [r4]
  c4:	e59f50b8 	ldr	r5, [pc, #184]	; 184 <sensor::MCP9808::MCP9808(unsigned char)+0x184>
  c8:	e5cd3000 	strb	r3, [sp]
  cc:	e1a00007 	mov	r0, r7
  d0:	e585600c 	str	r6, [r5, #12]
  d4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  d8:	e3a01001 	mov	r1, #1
  dc:	e1a0000d 	mov	r0, sp
  e0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  e4:	e1a00007 	mov	r0, r7
  e8:	e1cd80b4 	strh	r8, [sp, #4]
  ec:	e585600c 	str	r6, [r5, #12]
  f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  f4:	e3a01002 	mov	r1, #2
  f8:	e28d0004 	add	r0, sp, #4
  fc:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 100:	e1dd30b4 	ldrh	r3, [sp, #4]
 104:	e6bf3fb3 	rev16	r3, r3
 108:	e6ff3073 	uxth	r3, r3
 10c:	e3530054 	cmp	r3, #84	; 0x54
 110:	03a03001 	moveq	r3, #1
 114:	11a03008 	movne	r3, r8
 118:	e5c43008 	strb	r3, [r4, #8]
 11c:	1affffd1 	bne	68 <sensor::MCP9808::MCP9808(unsigned char)+0x68>
 120:	e3a03007 	mov	r3, #7
 124:	e5947004 	ldr	r7, [r4, #4]
 128:	e5d46000 	ldrb	r6, [r4]
 12c:	e5cd3000 	strb	r3, [sp]
 130:	e1a00007 	mov	r0, r7
 134:	e585600c 	str	r6, [r5, #12]
 138:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 13c:	e3a01001 	mov	r1, #1
 140:	e1a0000d 	mov	r0, sp
 144:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 148:	e1a00007 	mov	r0, r7
 14c:	e1cd80b4 	strh	r8, [sp, #4]
 150:	e585600c 	str	r6, [r5, #12]
 154:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 158:	e3a01002 	mov	r1, #2
 15c:	e28d0004 	add	r0, sp, #4
 160:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 164:	e1dd30b4 	ldrh	r3, [sp, #4]
 168:	e1a00004 	mov	r0, r4
 16c:	e2433004 	sub	r3, r3, #4
 170:	e16f3f13 	clz	r3, r3
 174:	e1a032a3 	lsr	r3, r3, #5
 178:	e5c43008 	strb	r3, [r4, #8]
 17c:	e28dd008 	add	sp, sp, #8
 180:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 184:	20804000 	addcs	r4, r0, r0
 188:	00061a80 	andeq	r1, r6, r0, lsl #21

0000018c <sensor::MCP9808::Get()>:
 18c:	e3a03005 	mov	r3, #5
 190:	e92d4070 	push	{r4, r5, r6, lr}
 194:	e5906004 	ldr	r6, [r0, #4]
 198:	e5d05000 	ldrb	r5, [r0]
 19c:	e59f4078 	ldr	r4, [pc, #120]	; 21c <sensor::MCP9808::Get()+0x90>
 1a0:	e24dd008 	sub	sp, sp, #8
 1a4:	e5cd3000 	strb	r3, [sp]
 1a8:	e1a00006 	mov	r0, r6
 1ac:	e584500c 	str	r5, [r4, #12]
 1b0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1b4:	e3a01001 	mov	r1, #1
 1b8:	e1a0000d 	mov	r0, sp
 1bc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1c0:	e3a03000 	mov	r3, #0
 1c4:	e1a00006 	mov	r0, r6
 1c8:	e1cd30b4 	strh	r3, [sp, #4]
 1cc:	e584500c 	str	r5, [r4, #12]
 1d0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1d4:	e3a01002 	mov	r1, #2
 1d8:	e28d0004 	add	r0, sp, #4
 1dc:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 1e0:	e1dd20b4 	ldrh	r2, [sp, #4]
 1e4:	eddf7a0a 	vldr	s15, [pc, #40]	; 214 <sensor::MCP9808::Get()+0x88>
 1e8:	e6bf2fb2 	rev16	r2, r2
 1ec:	e1a03a02 	lsl	r3, r2, #20
 1f0:	e1a03a23 	lsr	r3, r3, #20
 1f4:	ee073a10 	vmov	s14, r3
 1f8:	eeb80ac7 	vcvt.f32.s32	s0, s14
 1fc:	e3120a01 	tst	r2, #4096	; 0x1000
 200:	ee200a27 	vmul.f32	s0, s0, s15
 204:	1ddf7a03 	vldrne	s15, [pc, #12]	; 218 <sensor::MCP9808::Get()+0x8c>
 208:	1e300a67 	vsubne.f32	s0, s0, s15
 20c:	e28dd008 	add	sp, sp, #8
 210:	e8bd8070 	pop	{r4, r5, r6, pc}
 214:	3d800000 	stccc	0, cr0, [r0]
 218:	43800000 	orrmi	r0, r0, #0
 21c:	20804000 	addcs	r4, r0, r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <sensor::MCP9808::Get()+0x168d6a0>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <sensor::MCP9808::Get()+0x42298>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


sc16is740.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)>:
   0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   4:	e2411005 	sub	r1, r1, #5
   8:	e3510003 	cmp	r1, #3
   c:	e2422001 	sub	r2, r2, #1
  10:	e1a0c000 	mov	ip, r0
  14:	83a01003 	movhi	r1, #3
  18:	e24dd00c 	sub	sp, sp, #12
  1c:	96ef1071 	uxtbls	r1, r1
  20:	e3520003 	cmp	r2, #3
  24:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
  28:	ea000004 	b	40 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)+0x40>
  2c:	0000008c 	andeq	r0, r0, ip, lsl #1
  30:	00000084 	andeq	r0, r0, r4, lsl #1
  34:	0000003c 	andeq	r0, r0, ip, lsr r0
  38:	0000007c 	andeq	r0, r0, ip, ror r0
  3c:	e3811038 	orr	r1, r1, #56	; 0x38
  40:	e3a0e018 	mov	lr, #24
  44:	e3530002 	cmp	r3, #2
  48:	e5dc2000 	ldrb	r2, [ip]
  4c:	e59f3040 	ldr	r3, [pc, #64]	; 94 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)+0x94>
  50:	03811004 	orreq	r1, r1, #4
  54:	e59c0004 	ldr	r0, [ip, #4]
  58:	e5cd1005 	strb	r1, [sp, #5]
  5c:	e5cde004 	strb	lr, [sp, #4]
  60:	e583200c 	str	r2, [r3, #12]
  64:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  68:	e3a01002 	mov	r1, #2
  6c:	e28d0004 	add	r0, sp, #4
  70:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  74:	e28dd00c 	add	sp, sp, #12
  78:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
  7c:	e3811028 	orr	r1, r1, #40	; 0x28
  80:	eaffffee 	b	40 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)+0x40>
  84:	e3811018 	orr	r1, r1, #24
  88:	eaffffec 	b	40 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)+0x40>
  8c:	e3811008 	orr	r1, r1, #8
  90:	eaffffea 	b	40 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)+0x40>
  94:	20804000 	addcs	r4, r0, r0

00000098 <SC16IS740::SetBaud(unsigned int)>:
  98:	e3a03020 	mov	r3, #32
  9c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  a0:	e3a08000 	mov	r8, #0
  a4:	e1a04000 	mov	r4, r0
  a8:	e1a06001 	mov	r6, r1
  ac:	e59f5154 	ldr	r5, [pc, #340]	; 208 <SC16IS740::SetBaud(unsigned int)+0x170>
  b0:	e590a004 	ldr	sl, [r0, #4]
  b4:	e5d09000 	ldrb	r9, [r0]
  b8:	e24dd008 	sub	sp, sp, #8
  bc:	e5cd3000 	strb	r3, [sp]
  c0:	e1a0000a 	mov	r0, sl
  c4:	e585900c 	str	r9, [r5, #12]
  c8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  cc:	e3a01001 	mov	r1, #1
  d0:	e1a0000d 	mov	r0, sp
  d4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  d8:	e1a0000a 	mov	r0, sl
  dc:	e5cd8004 	strb	r8, [sp, #4]
  e0:	e585900c 	str	r9, [r5, #12]
  e4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  e8:	e3a01001 	mov	r1, #1
  ec:	e28d0004 	add	r0, sp, #4
  f0:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  f4:	e1dd30d4 	ldrsb	r3, [sp, #4]
  f8:	e5940008 	ldr	r0, [r4, #8]
  fc:	e1530008 	cmp	r3, r8
 100:	b3a01004 	movlt	r1, #4
 104:	a3a01001 	movge	r1, #1
 108:	ebfffffe 	bl	0 <__aeabi_uidiv>
 10c:	e1a01206 	lsl	r1, r6, #4
 110:	ebfffffe 	bl	0 <__aeabi_uidiv>
 114:	e3a07018 	mov	r7, #24
 118:	e594a004 	ldr	sl, [r4, #4]
 11c:	e5d49000 	ldrb	r9, [r4]
 120:	e1a06000 	mov	r6, r0
 124:	e5cd7000 	strb	r7, [sp]
 128:	e1a0000a 	mov	r0, sl
 12c:	e585900c 	str	r9, [r5, #12]
 130:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 134:	e3a01001 	mov	r1, #1
 138:	e1a0000d 	mov	r0, sp
 13c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 140:	e1a0000a 	mov	r0, sl
 144:	e5cd8004 	strb	r8, [sp, #4]
 148:	e585900c 	str	r9, [r5, #12]
 14c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 150:	e3a01001 	mov	r1, #1
 154:	e28d0004 	add	r0, sp, #4
 158:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 15c:	e5dd9004 	ldrb	r9, [sp, #4]
 160:	e5d42000 	ldrb	r2, [r4]
 164:	e1e03c89 	mvn	r3, r9, lsl #25
 168:	e1e03ca3 	mvn	r3, r3, lsr #25
 16c:	e5940004 	ldr	r0, [r4, #4]
 170:	e5cd3005 	strb	r3, [sp, #5]
 174:	e5cd7004 	strb	r7, [sp, #4]
 178:	e585200c 	str	r2, [r5, #12]
 17c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 180:	e3a01002 	mov	r1, #2
 184:	e28d0004 	add	r0, sp, #4
 188:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 18c:	e5d43000 	ldrb	r3, [r4]
 190:	e5940004 	ldr	r0, [r4, #4]
 194:	e5cd6005 	strb	r6, [sp, #5]
 198:	e5cd8004 	strb	r8, [sp, #4]
 19c:	e585300c 	str	r3, [r5, #12]
 1a0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1a4:	e3a01002 	mov	r1, #2
 1a8:	e28d0004 	add	r0, sp, #4
 1ac:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1b0:	e3a03008 	mov	r3, #8
 1b4:	e5cd3004 	strb	r3, [sp, #4]
 1b8:	e5d43000 	ldrb	r3, [r4]
 1bc:	e1a06426 	lsr	r6, r6, #8
 1c0:	e5940004 	ldr	r0, [r4, #4]
 1c4:	e5cd6005 	strb	r6, [sp, #5]
 1c8:	e585300c 	str	r3, [r5, #12]
 1cc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1d0:	e3a01002 	mov	r1, #2
 1d4:	e28d0004 	add	r0, sp, #4
 1d8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1dc:	e5d43000 	ldrb	r3, [r4]
 1e0:	e5940004 	ldr	r0, [r4, #4]
 1e4:	e5cd7004 	strb	r7, [sp, #4]
 1e8:	e5cd9005 	strb	r9, [sp, #5]
 1ec:	e585300c 	str	r3, [r5, #12]
 1f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1f4:	e3a01002 	mov	r1, #2
 1f8:	e28d0004 	add	r0, sp, #4
 1fc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 200:	e28dd008 	add	sp, sp, #8
 204:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 208:	20804000 	addcs	r4, r0, r0

0000020c <SC16IS740::SC16IS740(unsigned char, unsigned int)>:
 20c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 210:	e3a0c000 	mov	ip, #0
 214:	e1a04000 	mov	r4, r0
 218:	e1a05001 	mov	r5, r1
 21c:	e59f02e8 	ldr	r0, [pc, #744]	; 50c <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x300>
 220:	e59f32e8 	ldr	r3, [pc, #744]	; 510 <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x304>
 224:	e5c41000 	strb	r1, [r4]
 228:	e9840005 	stmib	r4, {r0, r2}
 22c:	e5c4c00c 	strb	ip, [r4, #12]
 230:	e24dd00c 	sub	sp, sp, #12
 234:	e583100c 	str	r1, [r3, #12]
 238:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 23c:	e2451030 	sub	r1, r5, #48	; 0x30
 240:	e2455050 	sub	r5, r5, #80	; 0x50
 244:	e355000f 	cmp	r5, #15
 248:	83510007 	cmphi	r1, #7
 24c:	93a01001 	movls	r1, #1
 250:	83a01000 	movhi	r1, #0
 254:	8a00000a 	bhi	284 <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x78>
 258:	e3a01001 	mov	r1, #1
 25c:	e28d0004 	add	r0, sp, #4
 260:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 264:	e16f0f10 	clz	r0, r0
 268:	e1a002a0 	lsr	r0, r0, #5
 26c:	e3500000 	cmp	r0, #0
 270:	e5c4000c 	strb	r0, [r4, #12]
 274:	1a000009 	bne	2a0 <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x94>
 278:	e1a00004 	mov	r0, r4
 27c:	e28dd00c 	add	sp, sp, #12
 280:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 284:	e1a00001 	mov	r0, r1
 288:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 28c:	e16f0f10 	clz	r0, r0
 290:	e1a002a0 	lsr	r0, r0, #5
 294:	e3500000 	cmp	r0, #0
 298:	e5c4000c 	strb	r0, [r4, #12]
 29c:	0afffff5 	beq	278 <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x6c>
 2a0:	e3a02003 	mov	r2, #3
 2a4:	e3a01018 	mov	r1, #24
 2a8:	e5d43000 	ldrb	r3, [r4]
 2ac:	e59f525c 	ldr	r5, [pc, #604]	; 510 <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x304>
 2b0:	e5cd2005 	strb	r2, [sp, #5]
 2b4:	e5940004 	ldr	r0, [r4, #4]
 2b8:	e5cd1004 	strb	r1, [sp, #4]
 2bc:	e585300c 	str	r3, [r5, #12]
 2c0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2c4:	e3a01002 	mov	r1, #2
 2c8:	e28d0004 	add	r0, sp, #4
 2cc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 2d0:	e59f123c 	ldr	r1, [pc, #572]	; 514 <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x308>
 2d4:	e1a00004 	mov	r0, r4
 2d8:	ebfffffe 	bl	98 <SC16IS740::SetBaud(unsigned int)>
 2dc:	e3a06038 	mov	r6, #56	; 0x38
 2e0:	e3a02041 	mov	r2, #65	; 0x41
 2e4:	e3a07000 	mov	r7, #0
 2e8:	e5d43000 	ldrb	r3, [r4]
 2ec:	e5cd2005 	strb	r2, [sp, #5]
 2f0:	e5940004 	ldr	r0, [r4, #4]
 2f4:	e5cd6004 	strb	r6, [sp, #4]
 2f8:	e585300c 	str	r3, [r5, #12]
 2fc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 300:	e3a01002 	mov	r1, #2
 304:	e28d0004 	add	r0, sp, #4
 308:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 30c:	e5949004 	ldr	r9, [r4, #4]
 310:	e5d48000 	ldrb	r8, [r4]
 314:	e1a00009 	mov	r0, r9
 318:	e5cd6000 	strb	r6, [sp]
 31c:	e585800c 	str	r8, [r5, #12]
 320:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 324:	e3a01001 	mov	r1, #1
 328:	e1a0000d 	mov	r0, sp
 32c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 330:	e1a00009 	mov	r0, r9
 334:	e5cd7004 	strb	r7, [sp, #4]
 338:	e585800c 	str	r8, [r5, #12]
 33c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 340:	e3a01001 	mov	r1, #1
 344:	e28d0004 	add	r0, sp, #4
 348:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 34c:	e5dd3004 	ldrb	r3, [sp, #4]
 350:	e3530041 	cmp	r3, #65	; 0x41
 354:	15c4700c 	strbne	r7, [r4, #12]
 358:	1affffc6 	bne	278 <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x6c>
 35c:	e3a09020 	mov	r9, #32
 360:	e3a08010 	mov	r8, #16
 364:	e594b004 	ldr	fp, [r4, #4]
 368:	e5d4a000 	ldrb	sl, [r4]
 36c:	e5cd9000 	strb	r9, [sp]
 370:	e1a0000b 	mov	r0, fp
 374:	e585a00c 	str	sl, [r5, #12]
 378:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 37c:	e3a01001 	mov	r1, #1
 380:	e1a0000d 	mov	r0, sp
 384:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 388:	e5cd7004 	strb	r7, [sp, #4]
 38c:	e1a0000b 	mov	r0, fp
 390:	e585a00c 	str	sl, [r5, #12]
 394:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 398:	e3a01001 	mov	r1, #1
 39c:	e28d0004 	add	r0, sp, #4
 3a0:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 3a4:	e5dd3004 	ldrb	r3, [sp, #4]
 3a8:	e5940004 	ldr	r0, [r4, #4]
 3ac:	e3833004 	orr	r3, r3, #4
 3b0:	e5cd3005 	strb	r3, [sp, #5]
 3b4:	e5d43000 	ldrb	r3, [r4]
 3b8:	e5cd9004 	strb	r9, [sp, #4]
 3bc:	e585300c 	str	r3, [r5, #12]
 3c0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3c4:	e3a01002 	mov	r1, #2
 3c8:	e28d0004 	add	r0, sp, #4
 3cc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3d0:	e5949004 	ldr	r9, [r4, #4]
 3d4:	e5d4a000 	ldrb	sl, [r4]
 3d8:	e1a00009 	mov	r0, r9
 3dc:	e5cd8000 	strb	r8, [sp]
 3e0:	e585a00c 	str	sl, [r5, #12]
 3e4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3e8:	e3a01001 	mov	r1, #1
 3ec:	e1a0000d 	mov	r0, sp
 3f0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3f4:	e5cd7004 	strb	r7, [sp, #4]
 3f8:	e1a00009 	mov	r0, r9
 3fc:	e585a00c 	str	sl, [r5, #12]
 400:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 404:	e3a01001 	mov	r1, #1
 408:	e28d0004 	add	r0, sp, #4
 40c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 410:	e5dd7004 	ldrb	r7, [sp, #4]
 414:	e5d43000 	ldrb	r3, [r4]
 418:	e1872008 	orr	r2, r7, r8
 41c:	e5cd2005 	strb	r2, [sp, #5]
 420:	e5940004 	ldr	r0, [r4, #4]
 424:	e5cd8004 	strb	r8, [sp, #4]
 428:	e585300c 	str	r3, [r5, #12]
 42c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 430:	e3a01002 	mov	r1, #2
 434:	e28d0004 	add	r0, sp, #4
 438:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 43c:	e5d43000 	ldrb	r3, [r4]
 440:	e5940004 	ldr	r0, [r4, #4]
 444:	e5cd6004 	strb	r6, [sp, #4]
 448:	e5cd8005 	strb	r8, [sp, #5]
 44c:	e585300c 	str	r3, [r5, #12]
 450:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 454:	e3a01002 	mov	r1, #2
 458:	e28d0004 	add	r0, sp, #4
 45c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 460:	e5d43000 	ldrb	r3, [r4]
 464:	e5940004 	ldr	r0, [r4, #4]
 468:	e5cd7005 	strb	r7, [sp, #5]
 46c:	e5cd8004 	strb	r8, [sp, #4]
 470:	e585300c 	str	r3, [r5, #12]
 474:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 478:	e3a01002 	mov	r1, #2
 47c:	e28d0004 	add	r0, sp, #4
 480:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 484:	e3a02006 	mov	r2, #6
 488:	e5d43000 	ldrb	r3, [r4]
 48c:	e5cd2005 	strb	r2, [sp, #5]
 490:	e5940004 	ldr	r0, [r4, #4]
 494:	e5cd8004 	strb	r8, [sp, #4]
 498:	e585300c 	str	r3, [r5, #12]
 49c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4a0:	e3a01002 	mov	r1, #2
 4a4:	e28d0004 	add	r0, sp, #4
 4a8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4ac:	e3a02001 	mov	r2, #1
 4b0:	e5d43000 	ldrb	r3, [r4]
 4b4:	e5cd2005 	strb	r2, [sp, #5]
 4b8:	e5940004 	ldr	r0, [r4, #4]
 4bc:	e5cd8004 	strb	r8, [sp, #4]
 4c0:	e585300c 	str	r3, [r5, #12]
 4c4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4c8:	e3a01002 	mov	r1, #2
 4cc:	e28d0004 	add	r0, sp, #4
 4d0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4d4:	e3a02008 	mov	r2, #8
 4d8:	e5cd2004 	strb	r2, [sp, #4]
 4dc:	e3a02005 	mov	r2, #5
 4e0:	e5d43000 	ldrb	r3, [r4]
 4e4:	e5940004 	ldr	r0, [r4, #4]
 4e8:	e5cd2005 	strb	r2, [sp, #5]
 4ec:	e585300c 	str	r3, [r5, #12]
 4f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4f4:	e3a01002 	mov	r1, #2
 4f8:	e28d0004 	add	r0, sp, #4
 4fc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 500:	e1a00004 	mov	r0, r4
 504:	e28dd00c 	add	sp, sp, #12
 508:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 50c:	00061a80 	andeq	r1, r6, r0, lsl #21
 510:	20804000 	addcs	r4, r0, r0
 514:	0001c200 	andeq	ip, r1, r0, lsl #4

00000518 <SC16IS740::WriteBytes(unsigned char const*, unsigned int)>:
 518:	e5d0300c 	ldrb	r3, [r0, #12]
 51c:	e3530000 	cmp	r3, #0
 520:	012fff1e 	bxeq	lr
 524:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 528:	e3520000 	cmp	r2, #0
 52c:	e1a05002 	mov	r5, r2
 530:	e24dd00c 	sub	sp, sp, #12
 534:	0a00002d 	beq	5f0 <SC16IS740::WriteBytes(unsigned char const*, unsigned int)+0xd8>
 538:	e1a0a000 	mov	sl, r0
 53c:	e1a0b001 	mov	fp, r1
 540:	e3a09040 	mov	r9, #64	; 0x40
 544:	e59f70ac 	ldr	r7, [pc, #172]	; 5f8 <SC16IS740::WriteBytes(unsigned char const*, unsigned int)+0xe0>
 548:	e3a08000 	mov	r8, #0
 54c:	e59a6004 	ldr	r6, [sl, #4]
 550:	e5da4000 	ldrb	r4, [sl]
 554:	e1a00006 	mov	r0, r6
 558:	e5cd9000 	strb	r9, [sp]
 55c:	e587400c 	str	r4, [r7, #12]
 560:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 564:	e3a01001 	mov	r1, #1
 568:	e1a0000d 	mov	r0, sp
 56c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 570:	e1a00006 	mov	r0, r6
 574:	e5cd8004 	strb	r8, [sp, #4]
 578:	e587400c 	str	r4, [r7, #12]
 57c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 580:	e3a01001 	mov	r1, #1
 584:	e28d0004 	add	r0, sp, #4
 588:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 58c:	e5dd6004 	ldrb	r6, [sp, #4]
 590:	e1560008 	cmp	r6, r8
 594:	11a0400b 	movne	r4, fp
 598:	10846006 	addne	r6, r4, r6
 59c:	0affffe9 	beq	548 <SC16IS740::WriteBytes(unsigned char const*, unsigned int)+0x30>
 5a0:	e4d42001 	ldrb	r2, [r4], #1
 5a4:	e5da3000 	ldrb	r3, [sl]
 5a8:	e59a0004 	ldr	r0, [sl, #4]
 5ac:	e5cd2005 	strb	r2, [sp, #5]
 5b0:	e5cd8004 	strb	r8, [sp, #4]
 5b4:	e587300c 	str	r3, [r7, #12]
 5b8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 5bc:	e3a01002 	mov	r1, #2
 5c0:	e28d0004 	add	r0, sp, #4
 5c4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 5c8:	e2555001 	subs	r5, r5, #1
 5cc:	03a03001 	moveq	r3, #1
 5d0:	13a03000 	movne	r3, #0
 5d4:	e1540006 	cmp	r4, r6
 5d8:	03833001 	orreq	r3, r3, #1
 5dc:	e3530000 	cmp	r3, #0
 5e0:	e1a0b004 	mov	fp, r4
 5e4:	0affffed 	beq	5a0 <SC16IS740::WriteBytes(unsigned char const*, unsigned int)+0x88>
 5e8:	e3550000 	cmp	r5, #0
 5ec:	1affffd5 	bne	548 <SC16IS740::WriteBytes(unsigned char const*, unsigned int)+0x30>
 5f0:	e28dd00c 	add	sp, sp, #12
 5f4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 5f8:	20804000 	addcs	r4, r0, r0

000005fc <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)>:
 5fc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 600:	e24dd01c 	sub	sp, sp, #28
 604:	e58d3004 	str	r3, [sp, #4]
 608:	e5d0300c 	ldrb	r3, [r0, #12]
 60c:	e58d1008 	str	r1, [sp, #8]
 610:	e3530000 	cmp	r3, #0
 614:	e58d200c 	str	r2, [sp, #12]
 618:	05823000 	streq	r3, [r2]
 61c:	0a00004c 	beq	754 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x158>
 620:	e59d300c 	ldr	r3, [sp, #12]
 624:	e5934000 	ldr	r4, [r3]
 628:	e3540000 	cmp	r4, #0
 62c:	0a000046 	beq	74c <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x150>
 630:	e1a07000 	mov	r7, r0
 634:	e59d3008 	ldr	r3, [sp, #8]
 638:	e59f812c 	ldr	r8, [pc, #300]	; 76c <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x170>
 63c:	e58d3000 	str	r3, [sp]
 640:	ebfffffe 	bl	0 <millis>
 644:	e59d9004 	ldr	r9, [sp, #4]
 648:	e1a05000 	mov	r5, r0
 64c:	ea000003 	b	660 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x64>
 650:	ebfffffe 	bl	0 <millis>
 654:	e0400009 	sub	r0, r0, r9
 658:	e1500005 	cmp	r0, r5
 65c:	8a000036 	bhi	73c <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x140>
 660:	e3a03048 	mov	r3, #72	; 0x48
 664:	e3a0b000 	mov	fp, #0
 668:	e597a004 	ldr	sl, [r7, #4]
 66c:	e5d76000 	ldrb	r6, [r7]
 670:	e5cd3010 	strb	r3, [sp, #16]
 674:	e1a0000a 	mov	r0, sl
 678:	e588600c 	str	r6, [r8, #12]
 67c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 680:	e3a01001 	mov	r1, #1
 684:	e28d0010 	add	r0, sp, #16
 688:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 68c:	e1a0000a 	mov	r0, sl
 690:	e5cdb014 	strb	fp, [sp, #20]
 694:	e588600c 	str	r6, [r8, #12]
 698:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 69c:	e3a01001 	mov	r1, #1
 6a0:	e28d0014 	add	r0, sp, #20
 6a4:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 6a8:	e5dd6014 	ldrb	r6, [sp, #20]
 6ac:	e156000b 	cmp	r6, fp
 6b0:	0affffe6 	beq	650 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x54>
 6b4:	e3540000 	cmp	r4, #0
 6b8:	0a00001f 	beq	73c <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x140>
 6bc:	e59d5000 	ldr	r5, [sp]
 6c0:	e5979004 	ldr	r9, [r7, #4]
 6c4:	e5d7a000 	ldrb	sl, [r7]
 6c8:	e1a00009 	mov	r0, r9
 6cc:	e5cdb010 	strb	fp, [sp, #16]
 6d0:	e588a00c 	str	sl, [r8, #12]
 6d4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 6d8:	e3a01001 	mov	r1, #1
 6dc:	e28d0010 	add	r0, sp, #16
 6e0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 6e4:	e1a00009 	mov	r0, r9
 6e8:	e5cdb014 	strb	fp, [sp, #20]
 6ec:	e588a00c 	str	sl, [r8, #12]
 6f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 6f4:	e3a01001 	mov	r1, #1
 6f8:	e28d0014 	add	r0, sp, #20
 6fc:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 700:	e5dd3014 	ldrb	r3, [sp, #20]
 704:	e4c53001 	strb	r3, [r5], #1
 708:	e59d3000 	ldr	r3, [sp]
 70c:	e0433005 	sub	r3, r3, r5
 710:	e1730006 	cmn	r3, r6
 714:	03a03001 	moveq	r3, #1
 718:	13a03000 	movne	r3, #0
 71c:	e2544001 	subs	r4, r4, #1
 720:	03833001 	orreq	r3, r3, #1
 724:	e3530000 	cmp	r3, #0
 728:	0affffe4 	beq	6c0 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0xc4>
 72c:	e3540000 	cmp	r4, #0
 730:	0a000009 	beq	75c <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x160>
 734:	e58d5000 	str	r5, [sp]
 738:	eaffffc0 	b	640 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x44>
 73c:	e59d3000 	ldr	r3, [sp]
 740:	e59d2008 	ldr	r2, [sp, #8]
 744:	e0434002 	sub	r4, r3, r2
 748:	e6ff4074 	uxth	r4, r4
 74c:	e59d300c 	ldr	r3, [sp, #12]
 750:	e5834000 	str	r4, [r3]
 754:	e28dd01c 	add	sp, sp, #28
 758:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 75c:	e59d3008 	ldr	r3, [sp, #8]
 760:	e0454003 	sub	r4, r5, r3
 764:	e6ff4074 	uxth	r4, r4
 768:	eafffff7 	b	74c <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x150>
 76c:	20804000 	addcs	r4, r0, r0

00000770 <SC16IS740::FlushRead(unsigned int)>:
 770:	e5d0300c 	ldrb	r3, [r0, #12]
 774:	e3530000 	cmp	r3, #0
 778:	012fff1e 	bxeq	lr
 77c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 780:	e1a05000 	mov	r5, r0
 784:	e1a09001 	mov	r9, r1
 788:	e3a08048 	mov	r8, #72	; 0x48
 78c:	e59f60c0 	ldr	r6, [pc, #192]	; 854 <SC16IS740::FlushRead(unsigned int)+0xe4>
 790:	e24dd00c 	sub	sp, sp, #12
 794:	ebfffffe 	bl	0 <millis>
 798:	e1a07000 	mov	r7, r0
 79c:	ea000003 	b	7b0 <SC16IS740::FlushRead(unsigned int)+0x40>
 7a0:	ebfffffe 	bl	0 <millis>
 7a4:	e0400009 	sub	r0, r0, r9
 7a8:	e1500007 	cmp	r0, r7
 7ac:	8a000026 	bhi	84c <SC16IS740::FlushRead(unsigned int)+0xdc>
 7b0:	e3a0a000 	mov	sl, #0
 7b4:	e595b004 	ldr	fp, [r5, #4]
 7b8:	e5d54000 	ldrb	r4, [r5]
 7bc:	e1a0000b 	mov	r0, fp
 7c0:	e5cd8000 	strb	r8, [sp]
 7c4:	e586400c 	str	r4, [r6, #12]
 7c8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7cc:	e3a01001 	mov	r1, #1
 7d0:	e1a0000d 	mov	r0, sp
 7d4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7d8:	e1a0000b 	mov	r0, fp
 7dc:	e5cda004 	strb	sl, [sp, #4]
 7e0:	e586400c 	str	r4, [r6, #12]
 7e4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7e8:	e3a01001 	mov	r1, #1
 7ec:	e28d0004 	add	r0, sp, #4
 7f0:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 7f4:	e5dd4004 	ldrb	r4, [sp, #4]
 7f8:	e154000a 	cmp	r4, sl
 7fc:	0affffe7 	beq	7a0 <SC16IS740::FlushRead(unsigned int)+0x30>
 800:	e595b004 	ldr	fp, [r5, #4]
 804:	e5d57000 	ldrb	r7, [r5]
 808:	e1a0000b 	mov	r0, fp
 80c:	e5cda000 	strb	sl, [sp]
 810:	e586700c 	str	r7, [r6, #12]
 814:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 818:	e3a01001 	mov	r1, #1
 81c:	e1a0000d 	mov	r0, sp
 820:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 824:	e1a0000b 	mov	r0, fp
 828:	e5cda004 	strb	sl, [sp, #4]
 82c:	e586700c 	str	r7, [r6, #12]
 830:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 834:	e3a01001 	mov	r1, #1
 838:	e28d0004 	add	r0, sp, #4
 83c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 840:	e2544001 	subs	r4, r4, #1
 844:	1affffed 	bne	800 <SC16IS740::FlushRead(unsigned int)+0x90>
 848:	eaffffd1 	b	794 <SC16IS740::FlushRead(unsigned int)+0x24>
 84c:	e28dd00c 	add	sp, sp, #12
 850:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 854:	20804000 	addcs	r4, r0, r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <SC16IS740::FlushRead(unsigned int)+0x168d0bc>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <SC16IS740::FlushRead(unsigned int)+0x41cb4>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


si5351a.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <SI5351A::SI5351A(unsigned char)>:
   0:	e92d4030 	push	{r4, r5, lr}
   4:	e2515000 	subs	r5, r1, #0
   8:	e1a04000 	mov	r4, r0
   c:	e24dd00c 	sub	sp, sp, #12
  10:	0a000015 	beq	6c <SI5351A::SI5351A(unsigned char)+0x6c>
  14:	e3a02000 	mov	r2, #0
  18:	e59f3090 	ldr	r3, [pc, #144]	; b0 <SI5351A::SI5351A(unsigned char)+0xb0>
  1c:	e59f0090 	ldr	r0, [pc, #144]	; b4 <SI5351A::SI5351A(unsigned char)+0xb4>
  20:	e5c45000 	strb	r5, [r4]
  24:	e5840004 	str	r0, [r4, #4]
  28:	e5c42008 	strb	r2, [r4, #8]
  2c:	e583500c 	str	r5, [r3, #12]
  30:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  34:	e2453030 	sub	r3, r5, #48	; 0x30
  38:	e2455050 	sub	r5, r5, #80	; 0x50
  3c:	e355000f 	cmp	r5, #15
  40:	83530007 	cmphi	r3, #7
  44:	8a000010 	bhi	8c <SI5351A::SI5351A(unsigned char)+0x8c>
  48:	e3a01001 	mov	r1, #1
  4c:	e28d0007 	add	r0, sp, #7
  50:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  54:	e16f0f10 	clz	r0, r0
  58:	e1a002a0 	lsr	r0, r0, #5
  5c:	e5c40008 	strb	r0, [r4, #8]
  60:	e1a00004 	mov	r0, r4
  64:	e28dd00c 	add	sp, sp, #12
  68:	e8bd8030 	pop	{r4, r5, pc}
  6c:	e3a03060 	mov	r3, #96	; 0x60
  70:	e59f003c 	ldr	r0, [pc, #60]	; b4 <SI5351A::SI5351A(unsigned char)+0xb4>
  74:	e59f2034 	ldr	r2, [pc, #52]	; b0 <SI5351A::SI5351A(unsigned char)+0xb0>
  78:	e5840004 	str	r0, [r4, #4]
  7c:	e5c45008 	strb	r5, [r4, #8]
  80:	e5c43000 	strb	r3, [r4]
  84:	e582300c 	str	r3, [r2, #12]
  88:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  8c:	e3a01000 	mov	r1, #0
  90:	e1a00001 	mov	r0, r1
  94:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  98:	e16f0f10 	clz	r0, r0
  9c:	e1a002a0 	lsr	r0, r0, #5
  a0:	e5c40008 	strb	r0, [r4, #8]
  a4:	e1a00004 	mov	r0, r4
  a8:	e28dd00c 	add	sp, sp, #12
  ac:	e8bd8030 	pop	{r4, r5, pc}
  b0:	20804000 	addcs	r4, r0, r0
  b4:	00061a80 	andeq	r1, r6, r0, lsl #21

000000b8 <SI5351A::Pre()>:
  b8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  bc:	e3e03000 	mvn	r3, #0
  c0:	e1a05000 	mov	r5, r0
  c4:	e3a02003 	mov	r2, #3
  c8:	e24dd00c 	sub	sp, sp, #12
  cc:	e5cd3005 	strb	r3, [sp, #5]
  d0:	e59f605c 	ldr	r6, [pc, #92]	; 134 <SI5351A::Pre()+0x7c>
  d4:	e5d53000 	ldrb	r3, [r5]
  d8:	e5900004 	ldr	r0, [r0, #4]
  dc:	e5cd2004 	strb	r2, [sp, #4]
  e0:	e586300c 	str	r3, [r6, #12]
  e4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  e8:	e3a01002 	mov	r1, #2
  ec:	e28d0004 	add	r0, sp, #4
  f0:	e3a04010 	mov	r4, #16
  f4:	e3e0707f 	mvn	r7, #127	; 0x7f
  f8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  fc:	e5d53000 	ldrb	r3, [r5]
 100:	e5950004 	ldr	r0, [r5, #4]
 104:	e5cd4004 	strb	r4, [sp, #4]
 108:	e5cd7005 	strb	r7, [sp, #5]
 10c:	e586300c 	str	r3, [r6, #12]
 110:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 114:	e2844001 	add	r4, r4, #1
 118:	e3a01002 	mov	r1, #2
 11c:	e28d0004 	add	r0, sp, #4
 120:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 124:	e3540018 	cmp	r4, #24
 128:	1afffff3 	bne	fc <SI5351A::Pre()+0x44>
 12c:	e28dd00c 	add	sp, sp, #12
 130:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 134:	20804000 	addcs	r4, r0, r0

00000138 <SI5351A::Post()>:
 138:	e92d4030 	push	{r4, r5, lr}
 13c:	e3e03053 	mvn	r3, #83	; 0x53
 140:	e1a04000 	mov	r4, r0
 144:	e3e0204e 	mvn	r2, #78	; 0x4e
 148:	e24dd00c 	sub	sp, sp, #12
 14c:	e5cd3005 	strb	r3, [sp, #5]
 150:	e59f5050 	ldr	r5, [pc, #80]	; 1a8 <SI5351A::Post()+0x70>
 154:	e5d43000 	ldrb	r3, [r4]
 158:	e5cd2004 	strb	r2, [sp, #4]
 15c:	e5900004 	ldr	r0, [r0, #4]
 160:	e585300c 	str	r3, [r5, #12]
 164:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 168:	e3a01002 	mov	r1, #2
 16c:	e28d0004 	add	r0, sp, #4
 170:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 174:	e3a02003 	mov	r2, #3
 178:	e3a01000 	mov	r1, #0
 17c:	e5d43000 	ldrb	r3, [r4]
 180:	e5940004 	ldr	r0, [r4, #4]
 184:	e5cd1005 	strb	r1, [sp, #5]
 188:	e5cd2004 	strb	r2, [sp, #4]
 18c:	e585300c 	str	r3, [r5, #12]
 190:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 194:	e3a01002 	mov	r1, #2
 198:	e28d0004 	add	r0, sp, #4
 19c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1a0:	e28dd00c 	add	sp, sp, #12
 1a4:	e8bd8030 	pop	{r4, r5, pc}
 1a8:	20804000 	addcs	r4, r0, r0

000001ac <SI5351A::ClockBuilder()>:
 1ac:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 1b0:	e59f4064 	ldr	r4, [pc, #100]	; 21c <SI5351A::ClockBuilder()+0x70>
 1b4:	e24dd00c 	sub	sp, sp, #12
 1b8:	e1a05000 	mov	r5, r0
 1bc:	e59f605c 	ldr	r6, [pc, #92]	; 220 <SI5351A::ClockBuilder()+0x74>
 1c0:	ebfffffe 	bl	b8 <SI5351A::Pre()>
 1c4:	e2847072 	add	r7, r4, #114	; 0x72
 1c8:	e3a02053 	mov	r2, #83	; 0x53
 1cc:	e3a03002 	mov	r3, #2
 1d0:	ea000001 	b	1dc <SI5351A::ClockBuilder()+0x30>
 1d4:	e5543002 	ldrb	r3, [r4, #-2]
 1d8:	e5542001 	ldrb	r2, [r4, #-1]
 1dc:	e5d51000 	ldrb	r1, [r5]
 1e0:	e5950004 	ldr	r0, [r5, #4]
 1e4:	e5cd3004 	strb	r3, [sp, #4]
 1e8:	e5cd2005 	strb	r2, [sp, #5]
 1ec:	e586100c 	str	r1, [r6, #12]
 1f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1f4:	e2844002 	add	r4, r4, #2
 1f8:	e3a01002 	mov	r1, #2
 1fc:	e28d0004 	add	r0, sp, #4
 200:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 204:	e1540007 	cmp	r4, r7
 208:	1afffff1 	bne	1d4 <SI5351A::ClockBuilder()+0x28>
 20c:	e1a00005 	mov	r0, r5
 210:	e28dd00c 	add	sp, sp, #12
 214:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
 218:	eafffffe 	b	138 <SI5351A::Post()>
 21c:	00000002 	andeq	r0, r0, r2
 220:	20804000 	addcs	r4, r0, r0

Disassembly of section .rodata:

00000000 <registers>:
   0:	00035302 	andeq	r5, r3, r2, lsl #6
   4:	000f0007 	andeq	r0, pc, r7
   8:	0f110f10 	svceq	0x00110f10
   c:	8c130f12 	ldchi	15, cr0, [r3], {18}
  10:	8c158c14 	ldchi	12, cr8, [r5], {20}
  14:	8c178c16 	ldchi	12, cr8, [r7], {22}
  18:	7d1b001a 	ldcvc	0, cr0, [fp, #-104]	; 0xffffff98
  1c:	0f1d001c 	svceq	0x001d001c
  20:	001ffb1e 	andseq	pc, pc, lr, lsl fp	; <UNPREDICTABLE>
  24:	71210020 			; <UNDEFINED> instruction: 0x71210020
  28:	012b002a 			; <UNDEFINED> instruction: 0x012b002a
  2c:	302d122c 	eorcc	r1, sp, ip, lsr #4
  30:	002f002e 	eoreq	r0, pc, lr, lsr #32
  34:	00310030 	eorseq	r0, r1, r0, lsr r0
  38:	01330032 	teqeq	r3, r2, lsr r0
  3c:	30350234 	eorscc	r0, r5, r4, lsr r2
  40:	00370036 	eorseq	r0, r7, r6, lsr r0
  44:	00390038 	eorseq	r0, r9, r8, lsr r0
  48:	023b003a 	eorseq	r0, fp, #58	; 0x3a
  4c:	443d003c 	ldrtmi	r0, [sp], #-60	; 0xffffffc4
  50:	003f403e 	eorseq	r4, pc, lr, lsr r0	; <UNPREDICTABLE>
  54:	00410040 	subeq	r0, r1, r0, asr #32
  58:	005b005a 	subseq	r0, fp, sl, asr r0
  5c:	00960095 	umullseq	r0, r6, r5, r0
  60:	00980097 	umullseq	r0, r8, r7, r0
  64:	009a0099 	umullseq	r0, sl, r9, r0
  68:	00a2009b 	umlaleq	r0, r2, fp, r0
  6c:	00a400a3 	adceq	r0, r4, r3, lsr #1
  70:	Address 0x0000000000000070 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <SI5351A::ClockBuilder()+0x168d680>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <SI5351A::ClockBuilder()+0x42278>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


si7021.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <sensor::SI7021::SI7021(unsigned char)>:
   0:	e92d4030 	push	{r4, r5, lr}
   4:	e2515000 	subs	r5, r1, #0
   8:	e1a04000 	mov	r4, r0
   c:	e24dd00c 	sub	sp, sp, #12
  10:	0a000015 	beq	6c <sensor::SI7021::SI7021(unsigned char)+0x6c>
  14:	e3a02000 	mov	r2, #0
  18:	e59f3090 	ldr	r3, [pc, #144]	; b0 <sensor::SI7021::SI7021(unsigned char)+0xb0>
  1c:	e59f0090 	ldr	r0, [pc, #144]	; b4 <sensor::SI7021::SI7021(unsigned char)+0xb4>
  20:	e5c45000 	strb	r5, [r4]
  24:	e5840004 	str	r0, [r4, #4]
  28:	e5c42008 	strb	r2, [r4, #8]
  2c:	e583500c 	str	r5, [r3, #12]
  30:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  34:	e2453030 	sub	r3, r5, #48	; 0x30
  38:	e2455050 	sub	r5, r5, #80	; 0x50
  3c:	e355000f 	cmp	r5, #15
  40:	83530007 	cmphi	r3, #7
  44:	8a000010 	bhi	8c <sensor::SI7021::SI7021(unsigned char)+0x8c>
  48:	e3a01001 	mov	r1, #1
  4c:	e28d0007 	add	r0, sp, #7
  50:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  54:	e16f0f10 	clz	r0, r0
  58:	e1a002a0 	lsr	r0, r0, #5
  5c:	e5c40008 	strb	r0, [r4, #8]
  60:	e1a00004 	mov	r0, r4
  64:	e28dd00c 	add	sp, sp, #12
  68:	e8bd8030 	pop	{r4, r5, pc}
  6c:	e3a03040 	mov	r3, #64	; 0x40
  70:	e59f003c 	ldr	r0, [pc, #60]	; b4 <sensor::SI7021::SI7021(unsigned char)+0xb4>
  74:	e59f2034 	ldr	r2, [pc, #52]	; b0 <sensor::SI7021::SI7021(unsigned char)+0xb0>
  78:	e5840004 	str	r0, [r4, #4]
  7c:	e5c45008 	strb	r5, [r4, #8]
  80:	e5c43000 	strb	r3, [r4]
  84:	e582300c 	str	r3, [r2, #12]
  88:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  8c:	e3a01000 	mov	r1, #0
  90:	e1a00001 	mov	r0, r1
  94:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  98:	e16f0f10 	clz	r0, r0
  9c:	e1a002a0 	lsr	r0, r0, #5
  a0:	e5c40008 	strb	r0, [r4, #8]
  a4:	e1a00004 	mov	r0, r4
  a8:	e28dd00c 	add	sp, sp, #12
  ac:	e8bd8030 	pop	{r4, r5, pc}
  b0:	20804000 	addcs	r4, r0, r0
  b4:	00061a80 	andeq	r1, r6, r0, lsl #21

000000b8 <sensor::SI7021::ReadRaw(unsigned char)>:
  b8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  bc:	e1a05000 	mov	r5, r0
  c0:	e59f6090 	ldr	r6, [pc, #144]	; 158 <sensor::SI7021::ReadRaw(unsigned char)+0xa0>
  c4:	e5d53000 	ldrb	r3, [r5]
  c8:	e24dd00c 	sub	sp, sp, #12
  cc:	e5900004 	ldr	r0, [r0, #4]
  d0:	e5cd1004 	strb	r1, [sp, #4]
  d4:	e586300c 	str	r3, [r6, #12]
  d8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  dc:	e3a01001 	mov	r1, #1
  e0:	e28d0004 	add	r0, sp, #4
  e4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  e8:	e3a03000 	mov	r3, #0
  ec:	e3a04008 	mov	r4, #8
  f0:	e5cd3006 	strb	r3, [sp, #6]
  f4:	e59f3060 	ldr	r3, [pc, #96]	; 15c <sensor::SI7021::ReadRaw(unsigned char)+0xa4>
  f8:	e59f7060 	ldr	r7, [pc, #96]	; 160 <sensor::SI7021::ReadRaw(unsigned char)+0xa8>
  fc:	e1d330b0 	ldrh	r3, [r3]
 100:	e1cd30b4 	strh	r3, [sp, #4]
 104:	e1a00007 	mov	r0, r7
 108:	ebfffffe 	bl	0 <udelay>
 10c:	e5d53000 	ldrb	r3, [r5]
 110:	e5950004 	ldr	r0, [r5, #4]
 114:	e586300c 	str	r3, [r6, #12]
 118:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 11c:	e3a01003 	mov	r1, #3
 120:	e28d0004 	add	r0, sp, #4
 124:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 128:	e5dd3004 	ldrb	r3, [sp, #4]
 12c:	e2033003 	and	r3, r3, #3
 130:	e3530002 	cmp	r3, #2
 134:	0a000001 	beq	140 <sensor::SI7021::ReadRaw(unsigned char)+0x88>
 138:	e2544001 	subs	r4, r4, #1
 13c:	1afffff0 	bne	104 <sensor::SI7021::ReadRaw(unsigned char)+0x4c>
 140:	e1dd00b4 	ldrh	r0, [sp, #4]
 144:	e6bf0fb0 	rev16	r0, r0
 148:	e3c00003 	bic	r0, r0, #3
 14c:	e6ff0070 	uxth	r0, r0
 150:	e28dd00c 	add	sp, sp, #12
 154:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 158:	20804000 	addcs	r4, r0, r0
 15c:	00000000 	andeq	r0, r0, r0
 160:	00002710 	andeq	r2, r0, r0, lsl r7

00000164 <sensor::SI7021::GetTemperature()>:
 164:	e3a010f3 	mov	r1, #243	; 0xf3
 168:	e92d4010 	push	{r4, lr}
 16c:	ebfffffe 	bl	b8 <sensor::SI7021::ReadRaw(unsigned char)>
 170:	ee070a90 	vmov	s15, r0
 174:	eddf6a05 	vldr	s13, [pc, #20]	; 190 <sensor::SI7021::GetTemperature()+0x2c>
 178:	eef87a67 	vcvt.f32.u32	s15, s15
 17c:	ed9f7a04 	vldr	s14, [pc, #16]	; 194 <sensor::SI7021::GetTemperature()+0x30>
 180:	ee677aa6 	vmul.f32	s15, s15, s13
 184:	ed9f0a03 	vldr	s0, [pc, #12]	; 198 <sensor::SI7021::GetTemperature()+0x34>
 188:	ee170a87 	vnmls.f32	s0, s15, s14
 18c:	e8bd8010 	pop	{r4, pc}
 190:	37800000 	strcc	r0, [r0, r0]
 194:	432fb852 			; <UNDEFINED> instruction: 0x432fb852
 198:	423b6666 	eorsmi	r6, fp, #106954752	; 0x6600000

0000019c <sensor::SI7021::GetHumidity()>:
 19c:	e3a010f5 	mov	r1, #245	; 0xf5
 1a0:	e92d4010 	push	{r4, lr}
 1a4:	ebfffffe 	bl	b8 <sensor::SI7021::ReadRaw(unsigned char)>
 1a8:	ee070a90 	vmov	s15, r0
 1ac:	eddf6a05 	vldr	s13, [pc, #20]	; 1c8 <sensor::SI7021::GetHumidity()+0x2c>
 1b0:	eef87a67 	vcvt.f32.u32	s15, s15
 1b4:	ed9f7a04 	vldr	s14, [pc, #16]	; 1cc <sensor::SI7021::GetHumidity()+0x30>
 1b8:	ee677aa6 	vmul.f32	s15, s15, s13
 1bc:	ed9f0a03 	vldr	s0, [pc, #12]	; 1d0 <sensor::SI7021::GetHumidity()+0x34>
 1c0:	ee170a87 	vnmls.f32	s0, s15, s14
 1c4:	e8bd8010 	pop	{r4, pc}
 1c8:	37800000 	strcc	r0, [r0, r0]
 1cc:	42fa0000 	rscsmi	r0, sl, #0
 1d0:	40c00000 	sbcmi	r0, r0, r0

Disassembly of section .rodata:

00000000 <.rodata>:
   0:	Address 0x0000000000000000 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <sensor::SI7021::GetHumidity()+0x168d690>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <sensor::SI7021::GetHumidity()+0x42288>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.

