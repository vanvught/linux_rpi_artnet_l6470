In archive lib7/libdevice.a:

font_cp437.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <cp437_font_size>:
   0:	e3a0007f 	mov	r0, #127	; 0x7f
   4:	e12fff1e 	bx	lr

Disassembly of section .rodata:

00000000 <cp437_font>:
	...
   8:	b195817e 	orrslt	r8, r5, lr, ror r1
   c:	7e8195b1 	mcrvc	5, 4, r9, cr1, cr1, {5}
  10:	cfebff7e 	svcgt	0x00ebff7e
  14:	7effebcf 	vcvtvc.u32.f64	d30, d30, #2
  18:	7e3f1f0e 	cdpvc	15, 3, cr1, cr15, cr14, {0}
  1c:	000e1f3f 	andeq	r1, lr, pc, lsr pc
  20:	7f3e1c08 	svcvc	0x003e1c08
  24:	00081c3e 	andeq	r1, r8, lr, lsr ip
  28:	ffffba18 			; <UNDEFINED> instruction: 0xffffba18
  2c:	0018baff 			; <UNDEFINED> instruction: 0x0018baff
  30:	fffcb810 			; <UNDEFINED> instruction: 0xfffcb810
  34:	0010b8fc 			; <UNDEFINED> instruction: 0x0010b8fc
  38:	3c180000 	ldccc	0, cr0, [r8], {-0}
  3c:	0000183c 	andeq	r1, r0, ip, lsr r8
  40:	c3e7ffff 	mvngt	pc, #1020	; 0x3fc
  44:	ffffe7c3 			; <UNDEFINED> instruction: 0xffffe7c3
  48:	42663c00 	rsbmi	r3, r6, #0, 24
  4c:	003c6642 	eorseq	r6, ip, r2, asr #12
  50:	bd99c3ff 	ldclt	3, cr12, [r9, #1020]	; 0x3fc
  54:	ffc399bd 			; <UNDEFINED> instruction: 0xffc399bd
  58:	8888f870 	stmhi	r8, {r4, r5, r6, fp, ip, sp, lr, pc}
  5c:	0f077ffd 	svceq	0x00077ffd
  60:	f15f4e00 			; <UNDEFINED> instruction: 0xf15f4e00
  64:	004e5ff1 	strdeq	r5, [lr], #-241	; 0xffffff0f
  68:	7fffe0c0 	svcvc	0x00ffe0c0
  6c:	07070505 	streq	r0, [r7, -r5, lsl #10]
  70:	057fffc0 	ldrbeq	pc, [pc, #-4032]!	; fffff0b8 <cp437_font+0xfffff0b8>	; <UNPREDICTABLE>
  74:	3f7f6505 	svccc	0x007f6505
  78:	e73c5a99 			; <UNDEFINED> instruction: 0xe73c5a99
  7c:	995a3ce7 	ldmdbls	sl, {r0, r1, r2, r5, r6, r7, sl, fp, ip, sp}^
  80:	1c3e3e7f 	ldcne	14, cr3, [lr], #-508	; 0xfffffe04
  84:	0008081c 	andeq	r0, r8, ip, lsl r8
  88:	1c1c0808 	ldcne	8, cr0, [ip], {8}
  8c:	007f3e3e 	rsbseq	r3, pc, lr, lsr lr	; <UNPREDICTABLE>
  90:	ff662400 			; <UNDEFINED> instruction: 0xff662400
  94:	002466ff 	strdeq	r6, [r4], -pc	; <UNPREDICTABLE>
  98:	005f5f00 	subseq	r5, pc, r0, lsl #30
  9c:	005f5f00 	subseq	r5, pc, r0, lsl #30
  a0:	7f090f06 	svcvc	0x00090f06
  a4:	7f7f017f 	svcvc	0x007f017f
  a8:	a5bfda40 	ldrge	sp, [pc, #2624]!	; af0 <cp437_font+0xaf0>
  ac:	020359fd 	andeq	r5, r3, #4145152	; 0x3f4000
  b0:	70707000 	rsbsvc	r7, r0, r0
  b4:	00707070 	rsbseq	r7, r0, r0, ror r0
  b8:	ffb69480 			; <UNDEFINED> instruction: 0xffb69480
  bc:	8094b6ff 			; <UNDEFINED> instruction: 0x8094b6ff
  c0:	7f060400 	svcvc	0x00060400
  c4:	0004067f 	andeq	r0, r4, pc, ror r6
  c8:	7f301000 	svcvc	0x00301000
  cc:	0010307f 	andseq	r3, r0, pc, ror r0
  d0:	2a080808 	bcs	2020f8 <cp437_font+0x2020f8>
  d4:	00081c3e 	andeq	r1, r8, lr, lsr ip
  d8:	2a3e1c08 	bcs	f87100 <cp437_font+0xf87100>
  dc:	00080808 	andeq	r0, r8, r8, lsl #16
  e0:	20203c3c 	eorcs	r3, r0, ip, lsr ip
  e4:	00202020 	eoreq	r2, r0, r0, lsr #32
  e8:	083e1c08 	ldmdaeq	lr!, {r3, sl, fp, ip}
  ec:	081c3e08 	ldmdaeq	ip, {r3, r9, sl, fp, ip, sp}
  f0:	3e3c3830 	mrccc	8, 1, r3, cr12, cr0, {1}
  f4:	30383c3e 	eorscc	r3, r8, lr, lsr ip
  f8:	3e1e0e06 	cdpcc	14, 1, cr0, cr14, cr6, {0}
  fc:	060e1e3e 			; <UNDEFINED> instruction: 0x060e1e3e
	...
 108:	5f5f0600 	svcpl	0x005f0600
 10c:	00000006 	andeq	r0, r0, r6
 110:	00070700 	andeq	r0, r7, r0, lsl #14
 114:	00000707 	andeq	r0, r0, r7, lsl #14
 118:	147f7f14 	ldrbtne	r7, [pc], #-3860	; 120 <cp437_font+0x120>
 11c:	00147f7f 	andseq	r7, r4, pc, ror pc
 120:	6b6b2e24 	blvs	1acb9b8 <cp437_font+0x1acb9b8>
 124:	0000123a 	andeq	r1, r0, sl, lsr r2
 128:	18306646 	ldmdane	r0!, {r1, r2, r6, r9, sl, sp, lr}
 12c:	0062660c 	rsbeq	r6, r2, ip, lsl #12
 130:	5d4f7a30 	vstrpl	s15, [pc, #-192]	; 78 <cp437_font+0x78>
 134:	00487a37 	subeq	r7, r8, r7, lsr sl
 138:	00030704 	andeq	r0, r3, r4, lsl #14
 13c:	00000000 	andeq	r0, r0, r0
 140:	633e1c00 	teqvs	lr, #0, 24
 144:	00000041 	andeq	r0, r0, r1, asr #32
 148:	3e634100 	powccs	f4, f3, f0
 14c:	0000001c 	andeq	r0, r0, ip, lsl r0
 150:	1c3e2a08 			; <UNDEFINED> instruction: 0x1c3e2a08
 154:	082a3e1c 	stmdaeq	sl!, {r2, r3, r4, r9, sl, fp, ip, sp}
 158:	3e3e0808 	cdpcc	8, 3, cr0, cr14, cr8, {0}
 15c:	00000808 	andeq	r0, r0, r8, lsl #16
 160:	60e08000 	rscvs	r8, r0, r0
 164:	00000000 	andeq	r0, r0, r0
 168:	08080808 	stmdaeq	r8, {r3, fp}
 16c:	00000808 	andeq	r0, r0, r8, lsl #16
 170:	60600000 	rsbvs	r0, r0, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	0c183060 	ldceq	0, cr3, [r8], {96}	; 0x60
 17c:	00010306 	andeq	r0, r1, r6, lsl #6
 180:	59717f3e 	ldmdbpl	r1!, {r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
 184:	003e7f4d 	eorseq	r7, lr, sp, asr #30
 188:	7f7f4240 	svcvc	0x007f4240
 18c:	00004040 	andeq	r4, r0, r0, asr #32
 190:	49597362 	ldmdbmi	r9, {r1, r5, r6, r8, r9, ip, sp, lr}^
 194:	0000666f 	andeq	r6, r0, pc, ror #12
 198:	49496322 	stmdbmi	r9, {r1, r5, r8, r9, sp, lr}^
 19c:	0000367f 	andeq	r3, r0, pc, ror r6
 1a0:	53161c18 	tstpl	r6, #24, 24	; 0x1800
 1a4:	00507f7f 	subseq	r7, r0, pc, ror pc
 1a8:	45456727 	strbmi	r6, [r5, #-1831]	; 0xfffff8d9
 1ac:	0000397d 	andeq	r3, r0, sp, ror r9
 1b0:	494b7e3c 	stmdbmi	fp, {r2, r3, r4, r5, r9, sl, fp, ip, sp, lr}^
 1b4:	00003079 	andeq	r3, r0, r9, ror r0
 1b8:	79710303 	ldmdbvc	r1!, {r0, r1, r8, r9}^
 1bc:	0000070f 	andeq	r0, r0, pc, lsl #14
 1c0:	49497f36 	stmdbmi	r9, {r1, r2, r4, r5, r8, r9, sl, fp, ip, sp, lr}^
 1c4:	0000367f 	andeq	r3, r0, pc, ror r6
 1c8:	69494f06 	stmdbvs	r9, {r1, r2, r8, r9, sl, fp, lr}^
 1cc:	00001e3f 	andeq	r1, r0, pc, lsr lr
 1d0:	66660000 	strbtvs	r0, [r6], -r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	66e68000 	strbtvs	r8, [r6], r0
 1dc:	00000000 	andeq	r0, r0, r0
 1e0:	63361c08 	teqvs	r6, #8, 24	; 0x800
 1e4:	00000041 	andeq	r0, r0, r1, asr #32
 1e8:	24242424 	strtcs	r2, [r4], #-1060	; 0xfffffbdc
 1ec:	00002424 	andeq	r2, r0, r4, lsr #8
 1f0:	36634100 	strbtcc	r4, [r3], -r0, lsl #2
 1f4:	0000081c 	andeq	r0, r0, ip, lsl r8
 1f8:	59510302 	ldmdbpl	r1, {r1, r8, r9}^
 1fc:	0000060f 	andeq	r0, r0, pc, lsl #12
 200:	5d417f3e 	stclpl	15, cr7, [r1, #-248]	; 0xffffff08
 204:	001e1f5d 	andseq	r1, lr, sp, asr pc
 208:	13137e7c 	tstne	r3, #124, 28	; 0x7c0
 20c:	00007c7e 	andeq	r7, r0, lr, ror ip
 210:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 214:	00367f49 	eorseq	r7, r6, r9, asr #30
 218:	41633e1c 	cmnmi	r3, ip, lsl lr
 21c:	00226341 	eoreq	r6, r2, r1, asr #6
 220:	417f7f41 	cmnmi	pc, r1, asr #30
 224:	001c3e63 	andseq	r3, ip, r3, ror #28
 228:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 22c:	0063415d 	rsbeq	r4, r3, sp, asr r1
 230:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 234:	0003011d 	andeq	r0, r3, sp, lsl r1
 238:	41633e1c 	cmnmi	r3, ip, lsl lr
 23c:	00727351 	rsbseq	r7, r2, r1, asr r3
 240:	08087f7f 	stmdaeq	r8, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 244:	00007f7f 	andeq	r7, r0, pc, ror pc
 248:	7f7f4100 	svcvc	0x007f4100
 24c:	00000041 	andeq	r0, r0, r1, asr #32
 250:	41407030 	cmpmi	r0, r0, lsr r0
 254:	00013f7f 	andeq	r3, r1, pc, ror pc
 258:	087f7f41 	ldmdaeq	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 25c:	0063771c 	rsbeq	r7, r3, ip, lsl r7
 260:	417f7f41 	cmnmi	pc, r1, asr #30
 264:	00706040 	rsbseq	r6, r0, r0, asr #32
 268:	1c0e7f7f 	stcne	15, cr7, [lr], {127}	; 0x7f
 26c:	007f7f0e 	rsbseq	r7, pc, lr, lsl #30
 270:	0c067f7f 	stceq	15, cr7, [r6], {127}	; 0x7f
 274:	007f7f18 	rsbseq	r7, pc, r8, lsl pc	; <UNPREDICTABLE>
 278:	41633e1c 	cmnmi	r3, ip, lsl lr
 27c:	001c3e63 	andseq	r3, ip, r3, ror #28
 280:	497f7f41 	ldmdbmi	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 284:	00060f09 	andeq	r0, r6, r9, lsl #30
 288:	71213f1e 			; <UNDEFINED> instruction: 0x71213f1e
 28c:	00005e7f 	andeq	r5, r0, pc, ror lr
 290:	097f7f41 	ldmdbeq	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 294:	00667f19 	rsbeq	r7, r6, r9, lsl pc
 298:	594d6f26 	stmdbpl	sp, {r1, r2, r5, r8, r9, sl, fp, sp, lr}^
 29c:	00003273 	andeq	r3, r0, r3, ror r2
 2a0:	7f7f4103 	svcvc	0x007f4103
 2a4:	00000341 	andeq	r0, r0, r1, asr #6
 2a8:	40407f7f 	submi	r7, r0, pc, ror pc
 2ac:	00007f7f 	andeq	r7, r0, pc, ror pc
 2b0:	60603f1f 	rsbvs	r3, r0, pc, lsl pc
 2b4:	00001f3f 	andeq	r1, r0, pc, lsr pc
 2b8:	18307f7f 	ldmdane	r0!, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 2bc:	007f7f30 	rsbseq	r7, pc, r0, lsr pc	; <UNPREDICTABLE>
 2c0:	183c6743 	ldmdane	ip!, {r0, r1, r6, r8, r9, sl, sp, lr}
 2c4:	0043673c 	subeq	r6, r3, ip, lsr r7
 2c8:	78784f07 	ldmdavc	r8!, {r0, r1, r2, r8, r9, sl, fp, lr}^
 2cc:	0000074f 	andeq	r0, r0, pc, asr #14
 2d0:	59716347 	ldmdbpl	r1!, {r0, r1, r2, r6, r8, r9, sp, lr}^
 2d4:	0073674d 	rsbseq	r6, r3, sp, asr #14
 2d8:	417f7f00 	cmnmi	pc, r0, lsl #30
 2dc:	00000041 	andeq	r0, r0, r1, asr #32
 2e0:	0c060301 	stceq	3, cr0, [r6], {1}
 2e4:	00603018 	rsbeq	r3, r0, r8, lsl r0
 2e8:	7f414100 	svcvc	0x00414100
 2ec:	0000007f 	andeq	r0, r0, pc, ror r0
 2f0:	03060c08 	movweq	r0, #27656	; 0x6c08
 2f4:	00080c06 	andeq	r0, r8, r6, lsl #24
 2f8:	80808080 	addhi	r8, r0, r0, lsl #1
 2fc:	80808080 	addhi	r8, r0, r0, lsl #1
 300:	07030000 	streq	r0, [r3, -r0]
 304:	00000004 	andeq	r0, r0, r4
 308:	54547420 	ldrbpl	r7, [r4], #-1056	; 0xfffffbe0
 30c:	0040783c 	subeq	r7, r0, ip, lsr r8
 310:	483f7f41 	ldmdami	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}	; <UNPREDICTABLE>
 314:	00307848 	eorseq	r7, r0, r8, asr #16
 318:	44447c38 	strbmi	r7, [r4], #-3128	; 0xfffff3c8
 31c:	0000286c 	andeq	r2, r0, ip, ror #16
 320:	49487830 	stmdbmi	r8, {r4, r5, fp, ip, sp, lr}^
 324:	00407f3f 	subeq	r7, r0, pc, lsr pc
 328:	54547c38 	ldrbpl	r7, [r4], #-3128	; 0xfffff3c8
 32c:	0000185c 	andeq	r1, r0, ip, asr r8
 330:	497f7e48 	ldmdbmi	pc!, {r3, r6, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 334:	00000203 	andeq	r0, r0, r3, lsl #4
 338:	a4a4bc98 	strtge	fp, [r4], #3224	; 0xc98
 33c:	00047cf8 	strdeq	r7, [r4], -r8
 340:	087f7f41 	ldmdaeq	pc!, {r0, r6, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 344:	00787c04 	rsbseq	r7, r8, r4, lsl #24
 348:	7d7d4400 	cfldrdvc	mvd4, [sp, #-0]
 34c:	00000040 	andeq	r0, r0, r0, asr #32
 350:	8080e060 	addhi	lr, r0, r0, rrx
 354:	00007dfd 	strdeq	r7, [r0], -sp
 358:	107f7f41 	rsbsne	r7, pc, r1, asr #30
 35c:	00446c38 	subeq	r6, r4, r8, lsr ip
 360:	7f7f4100 	svcvc	0x007f4100
 364:	00000040 	andeq	r0, r0, r0, asr #32
 368:	38187c7c 	ldmdacc	r8, {r2, r3, r4, r5, r6, sl, fp, ip, sp, lr}
 36c:	00787c1c 	rsbseq	r7, r8, ip, lsl ip
 370:	04047c7c 	streq	r7, [r4], #-3196	; 0xfffff384
 374:	0000787c 	andeq	r7, r0, ip, ror r8
 378:	44447c38 	strbmi	r7, [r4], #-3128	; 0xfffff3c8
 37c:	0000387c 	andeq	r3, r0, ip, ror r8
 380:	a4f8fc84 	ldrbtge	pc, [r8], #3204	; 0xc84	; <UNPREDICTABLE>
 384:	00183c24 	andseq	r3, r8, r4, lsr #24
 388:	a4243c18 	strtge	r3, [r4], #-3096	; 0xfffff3e8
 38c:	0084fcf8 	strdeq	pc, [r4], r8
 390:	4c787c44 	ldclmi	12, cr7, [r8], #-272	; 0xfffffef0
 394:	00181c04 	andseq	r1, r8, r4, lsl #24
 398:	54545c48 	ldrbpl	r5, [r4], #-3144	; 0xfffff3b8
 39c:	00002474 	andeq	r2, r0, r4, ror r4
 3a0:	7f3e0400 	svcvc	0x003e0400
 3a4:	00002444 	andeq	r2, r0, r4, asr #8
 3a8:	40407c3c 	submi	r7, r0, ip, lsr ip
 3ac:	00407c3c 	subeq	r7, r0, ip, lsr ip
 3b0:	60603c1c 	rsbvs	r3, r0, ip, lsl ip
 3b4:	00001c3c 	andeq	r1, r0, ip, lsr ip
 3b8:	38707c3c 	ldmdacc	r0!, {r2, r3, r4, r5, sl, fp, ip, sp, lr}^
 3bc:	003c7c70 	eorseq	r7, ip, r0, ror ip
 3c0:	10386c44 	eorsne	r6, r8, r4, asr #24
 3c4:	00446c38 	subeq	r6, r4, r8, lsr ip
 3c8:	a0a0bc9c 	umlalge	fp, r0, ip, ip
 3cc:	00007cfc 	strdeq	r7, [r0], -ip
 3d0:	5c74644c 	cfldrdpl	mvd6, [r4], #-304	; 0xfffffed0
 3d4:	0000644c 	andeq	r6, r0, ip, asr #8
 3d8:	773e0808 	ldrvc	r0, [lr, -r8, lsl #16]!
 3dc:	00004141 	andeq	r4, r0, r1, asr #2
 3e0:	77000000 	strvc	r0, [r0, -r0]
 3e4:	00000077 	andeq	r0, r0, r7, ror r0
 3e8:	3e774141 	rpwccsm	f4, f7, f1
 3ec:	00000808 	andeq	r0, r0, r8, lsl #16
 3f0:	03010302 	movweq	r0, #4866	; 0x1302
 3f4:	00010302 	andeq	r0, r1, r2, lsl #6

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


bh1750.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <sensor::BH170::BH170(unsigned char)>:
   0:	e92d4070 	push	{r4, r5, r6, lr}
   4:	e2515000 	subs	r5, r1, #0
   8:	e24dd008 	sub	sp, sp, #8
   c:	e1a04000 	mov	r4, r0
  10:	0a000019 	beq	7c <sensor::BH170::BH170(unsigned char)+0x7c>
  14:	e5c05000 	strb	r5, [r0]
  18:	e3a03901 	mov	r3, #16384	; 0x4000
  1c:	e3433f80 	movt	r3, #16256	; 0x3f80
  20:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  24:	e3400006 	movt	r0, #6
  28:	e3a02000 	mov	r2, #0
  2c:	e5840004 	str	r0, [r4, #4]
  30:	e5c42008 	strb	r2, [r4, #8]
  34:	e583500c 	str	r5, [r3, #12]
  38:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  3c:	e2453030 	sub	r3, r5, #48	; 0x30
  40:	e2455050 	sub	r5, r5, #80	; 0x50
  44:	e355000f 	cmp	r5, #15
  48:	83530007 	cmphi	r3, #7
  4c:	8a000014 	bhi	a4 <sensor::BH170::BH170(unsigned char)+0xa4>
  50:	e3a01001 	mov	r1, #1
  54:	e28d0007 	add	r0, sp, #7
  58:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  5c:	e16f0f10 	clz	r0, r0
  60:	e1a002a0 	lsr	r0, r0, #5
  64:	e5c40008 	strb	r0, [r4, #8]
  68:	e3500000 	cmp	r0, #0
  6c:	1a000014 	bne	c4 <sensor::BH170::BH170(unsigned char)+0xc4>
  70:	e1a00004 	mov	r0, r4
  74:	e28dd008 	add	sp, sp, #8
  78:	e8bd8070 	pop	{r4, r5, r6, pc}
  7c:	e5c05008 	strb	r5, [r0, #8]
  80:	e3a03901 	mov	r3, #16384	; 0x4000
  84:	e3433f80 	movt	r3, #16256	; 0x3f80
  88:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  8c:	e3400006 	movt	r0, #6
  90:	e3a02023 	mov	r2, #35	; 0x23
  94:	e5c42000 	strb	r2, [r4]
  98:	e5840004 	str	r0, [r4, #4]
  9c:	e583200c 	str	r2, [r3, #12]
  a0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  a4:	e3a01000 	mov	r1, #0
  a8:	e1a00001 	mov	r0, r1
  ac:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  b0:	e16f0f10 	clz	r0, r0
  b4:	e1a002a0 	lsr	r0, r0, #5
  b8:	e5c40008 	strb	r0, [r4, #8]
  bc:	e3500000 	cmp	r0, #0
  c0:	0affffea 	beq	70 <sensor::BH170::BH170(unsigned char)+0x70>
  c4:	e5d43000 	ldrb	r3, [r4]
  c8:	e3a06901 	mov	r6, #16384	; 0x4000
  cc:	e3436f80 	movt	r6, #16256	; 0x3f80
  d0:	e3a05001 	mov	r5, #1
  d4:	e5940004 	ldr	r0, [r4, #4]
  d8:	e5cd5007 	strb	r5, [sp, #7]
  dc:	e586300c 	str	r3, [r6, #12]
  e0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  e4:	e1a01005 	mov	r1, r5
  e8:	e28d0007 	add	r0, sp, #7
  ec:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  f0:	e5d43000 	ldrb	r3, [r4]
  f4:	e3a02010 	mov	r2, #16
  f8:	e5940004 	ldr	r0, [r4, #4]
  fc:	e5cd2007 	strb	r2, [sp, #7]
 100:	e586300c 	str	r3, [r6, #12]
 104:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 108:	e1a01005 	mov	r1, r5
 10c:	e28d0007 	add	r0, sp, #7
 110:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 114:	e1a00004 	mov	r0, r4
 118:	e28dd008 	add	sp, sp, #8
 11c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000120 <sensor::BH170::Get()>:
 120:	e1a03000 	mov	r3, r0
 124:	e3a02901 	mov	r2, #16384	; 0x4000
 128:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 12c:	e24dd00c 	sub	sp, sp, #12
 130:	e3432f80 	movt	r2, #16256	; 0x3f80
 134:	e3a01000 	mov	r1, #0
 138:	e5d33000 	ldrb	r3, [r3]
 13c:	e1cd10b4 	strh	r1, [sp, #4]
 140:	e5900004 	ldr	r0, [r0, #4]
 144:	e582300c 	str	r3, [r2, #12]
 148:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 14c:	e3a01002 	mov	r1, #2
 150:	e28d0004 	add	r0, sp, #4
 154:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 158:	e1dd30b4 	ldrh	r3, [sp, #4]
 15c:	eddf6a09 	vldr	s13, [pc, #36]	; 188 <sensor::BH170::Get()+0x68>
 160:	e6bf3fb3 	rev16	r3, r3
 164:	e6ff3073 	uxth	r3, r3
 168:	ee073a90 	vmov	s15, r3
 16c:	eef87a67 	vcvt.f32.u32	s15, s15
 170:	ee877aa6 	vdiv.f32	s14, s15, s13
 174:	eefc7ac7 	vcvt.u32.f32	s15, s14
 178:	ee173a90 	vmov	r3, s15
 17c:	e6ff0073 	uxth	r0, r3
 180:	e28dd00c 	add	sp, sp, #12
 184:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 188:	3f99999a 	svccc	0x0099999a

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


htu21d.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <sensor::HTU21D::HTU21D(unsigned char)>:
   0:	e92d4030 	push	{r4, r5, lr}
   4:	e2515000 	subs	r5, r1, #0
   8:	e24dd00c 	sub	sp, sp, #12
   c:	e1a04000 	mov	r4, r0
  10:	0a000017 	beq	74 <sensor::HTU21D::HTU21D(unsigned char)+0x74>
  14:	e5c05000 	strb	r5, [r0]
  18:	e3a03901 	mov	r3, #16384	; 0x4000
  1c:	e3433f80 	movt	r3, #16256	; 0x3f80
  20:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  24:	e3400006 	movt	r0, #6
  28:	e3a02000 	mov	r2, #0
  2c:	e5840004 	str	r0, [r4, #4]
  30:	e5c42008 	strb	r2, [r4, #8]
  34:	e583500c 	str	r5, [r3, #12]
  38:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  3c:	e2453030 	sub	r3, r5, #48	; 0x30
  40:	e2455050 	sub	r5, r5, #80	; 0x50
  44:	e355000f 	cmp	r5, #15
  48:	83530007 	cmphi	r3, #7
  4c:	8a000012 	bhi	9c <sensor::HTU21D::HTU21D(unsigned char)+0x9c>
  50:	e3a01001 	mov	r1, #1
  54:	e28d0007 	add	r0, sp, #7
  58:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  5c:	e16f0f10 	clz	r0, r0
  60:	e1a002a0 	lsr	r0, r0, #5
  64:	e5c40008 	strb	r0, [r4, #8]
  68:	e1a00004 	mov	r0, r4
  6c:	e28dd00c 	add	sp, sp, #12
  70:	e8bd8030 	pop	{r4, r5, pc}
  74:	e5c05008 	strb	r5, [r0, #8]
  78:	e3a03901 	mov	r3, #16384	; 0x4000
  7c:	e3433f80 	movt	r3, #16256	; 0x3f80
  80:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  84:	e3400006 	movt	r0, #6
  88:	e3a02040 	mov	r2, #64	; 0x40
  8c:	e5c42000 	strb	r2, [r4]
  90:	e5840004 	str	r0, [r4, #4]
  94:	e583200c 	str	r2, [r3, #12]
  98:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  9c:	e3a01000 	mov	r1, #0
  a0:	e1a00001 	mov	r0, r1
  a4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  a8:	e16f0f10 	clz	r0, r0
  ac:	e1a002a0 	lsr	r0, r0, #5
  b0:	e5c40008 	strb	r0, [r4, #8]
  b4:	e1a00004 	mov	r0, r4
  b8:	e28dd00c 	add	sp, sp, #12
  bc:	e8bd8030 	pop	{r4, r5, pc}

000000c0 <sensor::HTU21D::ReadRaw(unsigned char)>:
  c0:	e92d4070 	push	{r4, r5, r6, lr}
  c4:	e1a05000 	mov	r5, r0
  c8:	e5900004 	ldr	r0, [r0, #4]
  cc:	e3a06901 	mov	r6, #16384	; 0x4000
  d0:	e5d53000 	ldrb	r3, [r5]
  d4:	e24dd008 	sub	sp, sp, #8
  d8:	e3436f80 	movt	r6, #16256	; 0x3f80
  dc:	e3a04008 	mov	r4, #8
  e0:	e5cd1004 	strb	r1, [sp, #4]
  e4:	e586300c 	str	r3, [r6, #12]
  e8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  ec:	e3a01001 	mov	r1, #1
  f0:	e28d0004 	add	r0, sp, #4
  f4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  f8:	e3003000 	movw	r3, #0
  fc:	e3a02000 	mov	r2, #0
 100:	e3403000 	movt	r3, #0
 104:	e5cd2006 	strb	r2, [sp, #6]
 108:	e1d330b0 	ldrh	r3, [r3]
 10c:	e1cd30b4 	strh	r3, [sp, #4]
 110:	e3020710 	movw	r0, #10000	; 0x2710
 114:	ebfffffe 	bl	0 <udelay>
 118:	e5d53000 	ldrb	r3, [r5]
 11c:	e5950004 	ldr	r0, [r5, #4]
 120:	e586300c 	str	r3, [r6, #12]
 124:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 128:	e3a01003 	mov	r1, #3
 12c:	e28d0004 	add	r0, sp, #4
 130:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 134:	e5dd3004 	ldrb	r3, [sp, #4]
 138:	e2033003 	and	r3, r3, #3
 13c:	e3530002 	cmp	r3, #2
 140:	0a000001 	beq	14c <sensor::HTU21D::ReadRaw(unsigned char)+0x8c>
 144:	e2544001 	subs	r4, r4, #1
 148:	1afffff0 	bne	110 <sensor::HTU21D::ReadRaw(unsigned char)+0x50>
 14c:	e1dd00b4 	ldrh	r0, [sp, #4]
 150:	e6bf0fb0 	rev16	r0, r0
 154:	e3c00003 	bic	r0, r0, #3
 158:	e1a00800 	lsl	r0, r0, #16
 15c:	e1a00820 	lsr	r0, r0, #16
 160:	e28dd008 	add	sp, sp, #8
 164:	e8bd8070 	pop	{r4, r5, r6, pc}

00000168 <sensor::HTU21D::GetTemperature()>:
 168:	e3a010f3 	mov	r1, #243	; 0xf3
 16c:	e92d4010 	push	{r4, lr}
 170:	ebfffffe 	bl	c0 <sensor::HTU21D::ReadRaw(unsigned char)>
 174:	ee070a90 	vmov	s15, r0
 178:	ed9f7a03 	vldr	s14, [pc, #12]	; 18c <sensor::HTU21D::GetTemperature()+0x24>
 17c:	ed9f0a03 	vldr	s0, [pc, #12]	; 190 <sensor::HTU21D::GetTemperature()+0x28>
 180:	eefb7ac8 	vcvt.f32.u32	s15, s15, #16
 184:	eea70a87 	vfma.f32	s0, s15, s14
 188:	e8bd8010 	pop	{r4, pc}
 18c:	432fb852 			; <UNDEFINED> instruction: 0x432fb852
 190:	c23b6666 	eorsgt	r6, fp, #106954752	; 0x6600000

00000194 <sensor::HTU21D::GetHumidity()>:
 194:	e3a010f5 	mov	r1, #245	; 0xf5
 198:	e92d4010 	push	{r4, lr}
 19c:	ebfffffe 	bl	c0 <sensor::HTU21D::ReadRaw(unsigned char)>
 1a0:	ee070a90 	vmov	s15, r0
 1a4:	eeb90a08 	vmov.f32	s0, #152	; 0xc0c00000 -6.0
 1a8:	ed9f7a02 	vldr	s14, [pc, #8]	; 1b8 <sensor::HTU21D::GetHumidity()+0x24>
 1ac:	eefb7ac8 	vcvt.f32.u32	s15, s15, #16
 1b0:	eea70a87 	vfma.f32	s0, s15, s14
 1b4:	e8bd8010 	pop	{r4, pc}
 1b8:	42fa0000 	rscsmi	r0, sl, #0

Disassembly of section .rodata:

00000000 <.LANCHOR0>:
   0:	Address 0x0000000000000000 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


ina219.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <sensor::INA219::Configure(sensor::ina219::Config&)>:
   0:	e1d130b0 	ldrh	r3, [r1]
   4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   8:	e3530000 	cmp	r3, #0
   c:	e24dd00c 	sub	sp, sp, #12
  10:	e1a0e000 	mov	lr, r0
  14:	0a000028 	beq	bc <sensor::INA219::Configure(sensor::ina219::Config&)+0xbc>
  18:	e3530a02 	cmp	r3, #8192	; 0x2000
  1c:	03a02442 	moveq	r2, #1107296256	; 0x42000000
  20:	05802018 	streq	r2, [r0, #24]
  24:	e1d120b2 	ldrh	r2, [r1, #2]
  28:	e3520a01 	cmp	r2, #4096	; 0x1000
  2c:	0a000028 	beq	d4 <sensor::INA219::Configure(sensor::ina219::Config&)+0xd4>
  30:	8a00001c 	bhi	a8 <sensor::INA219::Configure(sensor::ina219::Config&)+0xa8>
  34:	e3520000 	cmp	r2, #0
  38:	0a000029 	beq	e4 <sensor::INA219::Configure(sensor::ina219::Config&)+0xe4>
  3c:	e3520b02 	cmp	r2, #2048	; 0x800
  40:	030d070a 	movweq	r0, #55050	; 0xd70a
  44:	03430da3 	movteq	r0, #15779	; 0x3da3
  48:	058e0014 	streq	r0, [lr, #20]
  4c:	e1d1c0b4 	ldrh	ip, [r1, #4]
  50:	e1833002 	orr	r3, r3, r2
  54:	e183300c 	orr	r3, r3, ip
  58:	e1d1c0b6 	ldrh	ip, [r1, #6]
  5c:	e1d120b8 	ldrh	r2, [r1, #8]
  60:	e183300c 	orr	r3, r3, ip
  64:	e3a0c000 	mov	ip, #0
  68:	e1833002 	orr	r3, r3, r2
  6c:	e3a02901 	mov	r2, #16384	; 0x4000
  70:	e5de1000 	ldrb	r1, [lr]
  74:	e3432f80 	movt	r2, #16256	; 0x3f80
  78:	e5cdc004 	strb	ip, [sp, #4]
  7c:	e1a0c423 	lsr	ip, r3, #8
  80:	e59e0004 	ldr	r0, [lr, #4]
  84:	e5cdc005 	strb	ip, [sp, #5]
  88:	e5cd3006 	strb	r3, [sp, #6]
  8c:	e582100c 	str	r1, [r2, #12]
  90:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  94:	e3a01003 	mov	r1, #3
  98:	e28d0004 	add	r0, sp, #4
  9c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  a0:	e28dd00c 	add	sp, sp, #12
  a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
  a8:	e3520b06 	cmp	r2, #6144	; 0x1800
  ac:	030d070a 	movweq	r0, #55050	; 0xd70a
  b0:	03430ea3 	movteq	r0, #16035	; 0x3ea3
  b4:	058e0014 	streq	r0, [lr, #20]
  b8:	eaffffe3 	b	4c <sensor::INA219::Configure(sensor::ina219::Config&)+0x4c>
  bc:	e3a02000 	mov	r2, #0
  c0:	e3442180 	movt	r2, #16768	; 0x4180
  c4:	e5802018 	str	r2, [r0, #24]
  c8:	e1d120b2 	ldrh	r2, [r1, #2]
  cc:	e3520a01 	cmp	r2, #4096	; 0x1000
  d0:	1affffd6 	bne	30 <sensor::INA219::Configure(sensor::ina219::Config&)+0x30>
  d4:	e30d070a 	movw	r0, #55050	; 0xd70a
  d8:	e3430e23 	movt	r0, #15907	; 0x3e23
  dc:	e58e0014 	str	r0, [lr, #20]
  e0:	eaffffd9 	b	4c <sensor::INA219::Configure(sensor::ina219::Config&)+0x4c>
  e4:	e30d070a 	movw	r0, #55050	; 0xd70a
  e8:	e3430d23 	movt	r0, #15651	; 0x3d23
  ec:	e58e0014 	str	r0, [lr, #20]
  f0:	eaffffd5 	b	4c <sensor::INA219::Configure(sensor::ina219::Config&)+0x4c>

000000f4 <sensor::INA219::INA219(unsigned char)>:
  f4:	e92d4030 	push	{r4, r5, lr}
  f8:	e2515000 	subs	r5, r1, #0
  fc:	e24dd014 	sub	sp, sp, #20
 100:	e1a04000 	mov	r4, r0
 104:	0a000019 	beq	170 <sensor::INA219::INA219(unsigned char)+0x7c>
 108:	e5c05000 	strb	r5, [r0]
 10c:	e3a03901 	mov	r3, #16384	; 0x4000
 110:	e3433f80 	movt	r3, #16256	; 0x3f80
 114:	e3a00d6a 	mov	r0, #6784	; 0x1a80
 118:	e3400006 	movt	r0, #6
 11c:	e3a02000 	mov	r2, #0
 120:	e5840004 	str	r0, [r4, #4]
 124:	e5c42008 	strb	r2, [r4, #8]
 128:	e583500c 	str	r5, [r3, #12]
 12c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 130:	e2453030 	sub	r3, r5, #48	; 0x30
 134:	e2455050 	sub	r5, r5, #80	; 0x50
 138:	e355000f 	cmp	r5, #15
 13c:	83530007 	cmphi	r3, #7
 140:	8a000014 	bhi	198 <sensor::INA219::INA219(unsigned char)+0xa4>
 144:	e3a01001 	mov	r1, #1
 148:	e28d0004 	add	r0, sp, #4
 14c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 150:	e16f0f10 	clz	r0, r0
 154:	e1a002a0 	lsr	r0, r0, #5
 158:	e5c40008 	strb	r0, [r4, #8]
 15c:	e3500000 	cmp	r0, #0
 160:	1a000014 	bne	1b8 <sensor::INA219::INA219(unsigned char)+0xc4>
 164:	e1a00004 	mov	r0, r4
 168:	e28dd014 	add	sp, sp, #20
 16c:	e8bd8030 	pop	{r4, r5, pc}
 170:	e5c05008 	strb	r5, [r0, #8]
 174:	e3a03901 	mov	r3, #16384	; 0x4000
 178:	e3433f80 	movt	r3, #16256	; 0x3f80
 17c:	e3a00d6a 	mov	r0, #6784	; 0x1a80
 180:	e3400006 	movt	r0, #6
 184:	e3a02040 	mov	r2, #64	; 0x40
 188:	e5c42000 	strb	r2, [r4]
 18c:	e5840004 	str	r0, [r4, #4]
 190:	e583200c 	str	r2, [r3, #12]
 194:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 198:	e3a01000 	mov	r1, #0
 19c:	e1a00001 	mov	r0, r1
 1a0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1a4:	e16f0f10 	clz	r0, r0
 1a8:	e1a002a0 	lsr	r0, r0, #5
 1ac:	e5c40008 	strb	r0, [r4, #8]
 1b0:	e3500000 	cmp	r0, #0
 1b4:	0affffea 	beq	164 <sensor::INA219::INA219(unsigned char)+0x70>
 1b8:	e3002000 	movw	r2, #0
 1bc:	e28d3004 	add	r3, sp, #4
 1c0:	e3402000 	movt	r2, #0
 1c4:	e8920007 	ldm	r2, {r0, r1, r2}
 1c8:	e8a30003 	stmia	r3!, {r0, r1}
 1cc:	e1c320b0 	strh	r2, [r3]
 1d0:	e28d1004 	add	r1, sp, #4
 1d4:	e1a00004 	mov	r0, r4
 1d8:	ebfffffe 	bl	0 <sensor::INA219::Configure(sensor::ina219::Config&)>
 1dc:	e5d42000 	ldrb	r2, [r4]
 1e0:	e30b3717 	movw	r3, #46871	; 0xb717
 1e4:	e34338d1 	movt	r3, #14545	; 0x38d1
 1e8:	e301126e 	movw	r1, #4718	; 0x126e
 1ec:	e584300c 	str	r3, [r4, #12]
 1f0:	e3a03005 	mov	r3, #5
 1f4:	e5cd3000 	strb	r3, [sp]
 1f8:	e3a03901 	mov	r3, #16384	; 0x4000
 1fc:	e3431b03 	movt	r1, #15107	; 0x3b03
 200:	e30ccccd 	movw	ip, #52429	; 0xcccd
 204:	e3433f80 	movt	r3, #16256	; 0x3f80
 208:	e5841010 	str	r1, [r4, #16]
 20c:	e3a01010 	mov	r1, #16
 210:	e343cdcc 	movt	ip, #15820	; 0x3dcc
 214:	e5cd1001 	strb	r1, [sp, #1]
 218:	e3a01000 	mov	r1, #0
 21c:	e5940004 	ldr	r0, [r4, #4]
 220:	e584c01c 	str	ip, [r4, #28]
 224:	e5cd1002 	strb	r1, [sp, #2]
 228:	e583200c 	str	r2, [r3, #12]
 22c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 230:	e3a01003 	mov	r1, #3
 234:	e1a0000d 	mov	r0, sp
 238:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 23c:	e1a00004 	mov	r0, r4
 240:	e28dd014 	add	sp, sp, #20
 244:	e8bd8030 	pop	{r4, r5, pc}

00000248 <sensor::INA219::Calibrate(float, float)>:
 248:	eddf6a32 	vldr	s13, [pc, #200]	; 318 <sensor::INA219::Calibrate(float, float)+0xd0>
 24c:	e1a03000 	mov	r3, r0
 250:	ed9f7a31 	vldr	s14, [pc, #196]	; 31c <sensor::INA219::Calibrate(float, float)+0xd4>
 254:	eec07aa6 	vdiv.f32	s15, s1, s13
 258:	ed9f6a30 	vldr	s12, [pc, #192]	; 320 <sensor::INA219::Calibrate(float, float)+0xd8>
 25c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 260:	e24dd00c 	sub	sp, sp, #12
 264:	ed800a07 	vstr	s0, [r0, #28]
 268:	e5900004 	ldr	r0, [r0, #4]
 26c:	e5d31000 	ldrb	r1, [r3]
 270:	ee677a87 	vmul.f32	s15, s15, s14
 274:	eefc7ae7 	vcvt.u32.f32	s15, s15
 278:	ee172a90 	vmov	r2, s15
 27c:	e6ff2072 	uxth	r2, r2
 280:	ee072a90 	vmov	s15, r2
 284:	eef87a67 	vcvt.f32.u32	s15, s15
 288:	eec75a87 	vdiv.f32	s11, s15, s14
 28c:	eec56a86 	vdiv.f32	s13, s11, s12
 290:	ed9f6a22 	vldr	s12, [pc, #136]	; 320 <sensor::INA219::Calibrate(float, float)+0xd8>
 294:	eebd7ae6 	vcvt.s32.f32	s14, s13
 298:	eef87ac7 	vcvt.f32.s32	s15, s14
 29c:	eef46a67 	vcmp.f32	s13, s15
 2a0:	eddf6a1f 	vldr	s13, [pc, #124]	; 324 <sensor::INA219::Calibrate(float, float)+0xdc>
 2a4:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 2a8:	1e172a10 	vmovne	r2, s14
 2ac:	eeb37a04 	vmov.f32	s14, #52	; 0x41a00000  20.0
 2b0:	12822001 	addne	r2, r2, #1
 2b4:	1e072a90 	vmovne	s15, r2
 2b8:	e3a02005 	mov	r2, #5
 2bc:	e5cd2004 	strb	r2, [sp, #4]
 2c0:	e3a02901 	mov	r2, #16384	; 0x4000
 2c4:	e3432f80 	movt	r2, #16256	; 0x3f80
 2c8:	1ef87ae7 	vcvtne.f32.s32	s15, s15
 2cc:	ee677a86 	vmul.f32	s15, s15, s12
 2d0:	ee270a80 	vmul.f32	s0, s15, s0
 2d4:	ee277a87 	vmul.f32	s14, s15, s14
 2d8:	edc37a03 	vstr	s15, [r3, #12]
 2dc:	eec67a80 	vdiv.f32	s15, s13, s0
 2e0:	ed837a04 	vstr	s14, [r3, #16]
 2e4:	eefc7ae7 	vcvt.u32.f32	s15, s15
 2e8:	ee173a90 	vmov	r3, s15
 2ec:	e6ff3073 	uxth	r3, r3
 2f0:	e5cd3006 	strb	r3, [sp, #6]
 2f4:	e1a03423 	lsr	r3, r3, #8
 2f8:	e5cd3005 	strb	r3, [sp, #5]
 2fc:	e582100c 	str	r1, [r2, #12]
 300:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 304:	e3a01003 	mov	r1, #3
 308:	e28d0004 	add	r0, sp, #4
 30c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 310:	e28dd00c 	add	sp, sp, #12
 314:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 318:	46fffe00 	ldrbtmi	pc, [pc], r0, lsl #28	; <UNPREDICTABLE>
 31c:	4cbebc20 	ldcmi	12, cr11, [lr], #128	; 0x80
 320:	38d1b717 	ldmcc	r1, {r0, r1, r2, r4, r8, r9, sl, ip, sp, pc}^
 324:	3d27c5ac 	cfstr32cc	mvfx12, [r7, #-688]!	; 0xfffffd50

00000328 <sensor::INA219::GetShuntCurrent()>:
 328:	e92d4010 	push	{r4, lr}
 32c:	e1a04000 	mov	r4, r0
 330:	e5900004 	ldr	r0, [r0, #4]
 334:	e24dd008 	sub	sp, sp, #8
 338:	e5d42000 	ldrb	r2, [r4]
 33c:	e3a03901 	mov	r3, #16384	; 0x4000
 340:	e3433f80 	movt	r3, #16256	; 0x3f80
 344:	e3a01000 	mov	r1, #0
 348:	e1cd10b4 	strh	r1, [sp, #4]
 34c:	e3a01004 	mov	r1, #4
 350:	e5cd1004 	strb	r1, [sp, #4]
 354:	e583200c 	str	r2, [r3, #12]
 358:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 35c:	e3a01001 	mov	r1, #1
 360:	e28d0004 	add	r0, sp, #4
 364:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 368:	e3a00e32 	mov	r0, #800	; 0x320
 36c:	ebfffffe 	bl	0 <udelay>
 370:	e3a01002 	mov	r1, #2
 374:	e28d0004 	add	r0, sp, #4
 378:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 37c:	e1dd30b4 	ldrh	r3, [sp, #4]
 380:	ed940a03 	vldr	s0, [r4, #12]
 384:	e6bf3fb3 	rev16	r3, r3
 388:	e6ff3073 	uxth	r3, r3
 38c:	ee073a90 	vmov	s15, r3
 390:	eef87ae7 	vcvt.f32.s32	s15, s15
 394:	ee270a80 	vmul.f32	s0, s15, s0
 398:	e28dd008 	add	sp, sp, #8
 39c:	e8bd8010 	pop	{r4, pc}

000003a0 <sensor::INA219::GetBusVoltageRaw()>:
 3a0:	e1a03000 	mov	r3, r0
 3a4:	e3a02901 	mov	r2, #16384	; 0x4000
 3a8:	e92d4010 	push	{r4, lr}
 3ac:	e24dd008 	sub	sp, sp, #8
 3b0:	e3432f80 	movt	r2, #16256	; 0x3f80
 3b4:	e3a04002 	mov	r4, #2
 3b8:	e5d33000 	ldrb	r3, [r3]
 3bc:	e3a01000 	mov	r1, #0
 3c0:	e1cd10b4 	strh	r1, [sp, #4]
 3c4:	e5900004 	ldr	r0, [r0, #4]
 3c8:	e5cd4004 	strb	r4, [sp, #4]
 3cc:	e582300c 	str	r3, [r2, #12]
 3d0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3d4:	e3a01001 	mov	r1, #1
 3d8:	e28d0004 	add	r0, sp, #4
 3dc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3e0:	e3a00e32 	mov	r0, #800	; 0x320
 3e4:	ebfffffe 	bl	0 <udelay>
 3e8:	e1a01004 	mov	r1, r4
 3ec:	e28d0004 	add	r0, sp, #4
 3f0:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 3f4:	e1dd00b4 	ldrh	r0, [sp, #4]
 3f8:	e6bf0fb0 	rev16	r0, r0
 3fc:	e7ec01d0 	ubfx	r0, r0, #3, #13
 400:	e1a00410 	lsl	r0, r0, r4
 404:	e28dd008 	add	sp, sp, #8
 408:	e8bd8010 	pop	{r4, pc}

0000040c <sensor::INA219::GetBusVoltage()>:
 40c:	e1a03000 	mov	r3, r0
 410:	e3a02901 	mov	r2, #16384	; 0x4000
 414:	e92d4010 	push	{r4, lr}
 418:	e24dd008 	sub	sp, sp, #8
 41c:	e3432f80 	movt	r2, #16256	; 0x3f80
 420:	e3a04002 	mov	r4, #2
 424:	e5d33000 	ldrb	r3, [r3]
 428:	e3a01000 	mov	r1, #0
 42c:	e1cd10b4 	strh	r1, [sp, #4]
 430:	e5900004 	ldr	r0, [r0, #4]
 434:	e5cd4004 	strb	r4, [sp, #4]
 438:	e582300c 	str	r3, [r2, #12]
 43c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 440:	e3a01001 	mov	r1, #1
 444:	e28d0004 	add	r0, sp, #4
 448:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 44c:	e3a00e32 	mov	r0, #800	; 0x320
 450:	ebfffffe 	bl	0 <udelay>
 454:	e1a01004 	mov	r1, r4
 458:	e28d0004 	add	r0, sp, #4
 45c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 460:	e1dd30b4 	ldrh	r3, [sp, #4]
 464:	ed9f0a07 	vldr	s0, [pc, #28]	; 488 <sensor::INA219::GetBusVoltage()+0x7c>
 468:	e6bf3fb3 	rev16	r3, r3
 46c:	e7ec31d3 	ubfx	r3, r3, #3, #13
 470:	e1a03413 	lsl	r3, r3, r4
 474:	ee073a90 	vmov	s15, r3
 478:	eef87ae7 	vcvt.f32.s32	s15, s15
 47c:	ee270a80 	vmul.f32	s0, s15, s0
 480:	e28dd008 	add	sp, sp, #8
 484:	e8bd8010 	pop	{r4, pc}
 488:	3a83126f 	bcc	fe0c4e4c <sensor::INA219::GetBusPower()+0xfe0c49c0>

0000048c <sensor::INA219::GetBusPower()>:
 48c:	e92d4010 	push	{r4, lr}
 490:	e1a04000 	mov	r4, r0
 494:	e5900004 	ldr	r0, [r0, #4]
 498:	e24dd008 	sub	sp, sp, #8
 49c:	e5d42000 	ldrb	r2, [r4]
 4a0:	e3a03901 	mov	r3, #16384	; 0x4000
 4a4:	e3433f80 	movt	r3, #16256	; 0x3f80
 4a8:	e3a01000 	mov	r1, #0
 4ac:	e1cd10b4 	strh	r1, [sp, #4]
 4b0:	e3a01003 	mov	r1, #3
 4b4:	e5cd1004 	strb	r1, [sp, #4]
 4b8:	e583200c 	str	r2, [r3, #12]
 4bc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4c0:	e3a01001 	mov	r1, #1
 4c4:	e28d0004 	add	r0, sp, #4
 4c8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4cc:	e3a00e32 	mov	r0, #800	; 0x320
 4d0:	ebfffffe 	bl	0 <udelay>
 4d4:	e3a01002 	mov	r1, #2
 4d8:	e28d0004 	add	r0, sp, #4
 4dc:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 4e0:	e1dd30b4 	ldrh	r3, [sp, #4]
 4e4:	ed940a04 	vldr	s0, [r4, #16]
 4e8:	e6bf3fb3 	rev16	r3, r3
 4ec:	e6ff3073 	uxth	r3, r3
 4f0:	ee073a90 	vmov	s15, r3
 4f4:	eef87ae7 	vcvt.f32.s32	s15, s15
 4f8:	ee270a80 	vmul.f32	s0, s15, s0
 4fc:	e28dd008 	add	sp, sp, #8
 500:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata:

00000000 <.LANCHOR0>:
   0:	18002000 	stmdane	r0, {sp}
   4:	00180400 	andseq	r0, r8, r0, lsl #8
   8:	Address 0x0000000000000008 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


max7219matrix.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <Max7219Matrix::Max7219Matrix()>:
   0:	e3083480 	movw	r3, #33920	; 0x8480
   4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8:	e3a0a000 	mov	sl, #0
   c:	e340301e 	movt	r3, #30
  10:	e24dd00c 	sub	sp, sp, #12
  14:	e5803000 	str	r3, [r0]
  18:	e1a04000 	mov	r4, r0
  1c:	e1c0a0b4 	strh	sl, [r0, #4]
  20:	e58d0004 	str	r0, [sp, #4]
  24:	ebfffffe 	bl	0 <bcm2835_spi_begin>
  28:	ebfffffe 	bl	0 <cp437_font_size>
  2c:	e5840008 	str	r0, [r4, #8]
  30:	e3a03004 	mov	r3, #4
  34:	e1a00180 	lsl	r0, r0, #3
  38:	e1c431b0 	strh	r3, [r4, #16]
  3c:	ebfffffe 	bl	0 <operator new[](unsigned int)>
  40:	e594b008 	ldr	fp, [r4, #8]
  44:	e584000c 	str	r0, [r4, #12]
  48:	e15b000a 	cmp	fp, sl
  4c:	0a00001a 	beq	bc <Max7219Matrix::Max7219Matrix()+0xbc>
  50:	e59f7070 	ldr	r7, [pc, #112]	; c8 <Max7219Matrix::Max7219Matrix()+0xc8>
  54:	e1a09000 	mov	r9, r0
  58:	e2806007 	add	r6, r0, #7
  5c:	e3a04001 	mov	r4, #1
  60:	e2495001 	sub	r5, r9, #1
  64:	e2898006 	add	r8, r9, #6
  68:	e048e005 	sub	lr, r8, r5
  6c:	e3a03000 	mov	r3, #0
  70:	e1a02007 	mov	r2, r7
  74:	e1a00003 	mov	r0, r3
  78:	e1a0ee14 	lsl	lr, r4, lr
  7c:	e5f21001 	ldrb	r1, [r2, #1]!
  80:	e180c314 	orr	ip, r0, r4, lsl r3
  84:	e2833001 	add	r3, r3, #1
  88:	e111000e 	tst	r1, lr
  8c:	16ef007c 	uxtbne	r0, ip
  90:	e3530008 	cmp	r3, #8
  94:	1afffff8 	bne	7c <Max7219Matrix::Max7219Matrix()+0x7c>
  98:	e5e50001 	strb	r0, [r5, #1]!
  9c:	e1550006 	cmp	r5, r6
  a0:	1afffff0 	bne	68 <Max7219Matrix::Max7219Matrix()+0x68>
  a4:	e28aa001 	add	sl, sl, #1
  a8:	e2899008 	add	r9, r9, #8
  ac:	e15a000b 	cmp	sl, fp
  b0:	e2866008 	add	r6, r6, #8
  b4:	e2877008 	add	r7, r7, #8
  b8:	1affffe8 	bne	60 <Max7219Matrix::Max7219Matrix()+0x60>
  bc:	e59d0004 	ldr	r0, [sp, #4]
  c0:	e28dd00c 	add	sp, sp, #12
  c4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
  c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

000000cc <Max7219Matrix::~Max7219Matrix()>:
  cc:	e92d4010 	push	{r4, lr}
  d0:	e1a04000 	mov	r4, r0
  d4:	e590000c 	ldr	r0, [r0, #12]
  d8:	e3500000 	cmp	r0, #0
  dc:	0a000000 	beq	e4 <Max7219Matrix::~Max7219Matrix()+0x18>
  e0:	ebfffffe 	bl	0 <operator delete[](void*)>
  e4:	e1a00004 	mov	r0, r4
  e8:	e8bd8010 	pop	{r4, pc}

000000ec <Max7219Matrix::Write(char const*, unsigned short)>:
  ec:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  f0:	e30b3280 	movw	r3, #45696	; 0xb280
  f4:	e1d041b0 	ldrh	r4, [r0, #16]
  f8:	e24dd014 	sub	sp, sp, #20
  fc:	e3403ee6 	movt	r3, #3814	; 0xee6
 100:	e3006000 	movw	r6, #0
 104:	e1540002 	cmp	r4, r2
 108:	e3a09901 	mov	r9, #16384	; 0x4000
 10c:	e58d300c 	str	r3, [sp, #12]
 110:	31a07004 	movcc	r7, r4
 114:	e3406000 	movt	r6, #0
 118:	21a07002 	movcs	r7, r2
 11c:	e3439f20 	movt	r9, #16160	; 0x3f20
 120:	e2473001 	sub	r3, r7, #1
 124:	e58d3008 	str	r3, [sp, #8]
 128:	e1a05000 	mov	r5, r0
 12c:	e1a08001 	mov	r8, r1
 130:	e3a03001 	mov	r3, #1
 134:	e58d3004 	str	r3, [sp, #4]
 138:	e0444007 	sub	r4, r4, r7
 13c:	e1b04084 	lsls	r4, r4, #1
 140:	13a04000 	movne	r4, #0
 144:	11a02004 	movne	r2, r4
 148:	0a000008 	beq	170 <Max7219Matrix::Write(char const*, unsigned short)+0x84>
 14c:	e1a03006 	mov	r3, r6
 150:	e2841002 	add	r1, r4, #2
 154:	e7e32004 	strb	r2, [r3, r4]!
 158:	e6ff4071 	uxth	r4, r1
 15c:	e5c32001 	strb	r2, [r3, #1]
 160:	e1d531b0 	ldrh	r3, [r5, #16]
 164:	e0433007 	sub	r3, r3, r7
 168:	e1540083 	cmp	r4, r3, lsl #1
 16c:	3afffff6 	bcc	14c <Max7219Matrix::Write(char const*, unsigned short)+0x60>
 170:	e59d3008 	ldr	r3, [sp, #8]
 174:	e3730001 	cmn	r3, #1
 178:	0a000019 	beq	1e4 <Max7219Matrix::Write(char const*, unsigned short)+0xf8>
 17c:	e59d3008 	ldr	r3, [sp, #8]
 180:	e0882003 	add	r2, r8, r3
 184:	e59d3004 	ldr	r3, [sp, #4]
 188:	e6efb073 	uxtb	fp, r3
 18c:	e243a001 	sub	sl, r3, #1
 190:	e1a03004 	mov	r3, r4
 194:	e5d21000 	ldrb	r1, [r2]
 198:	e3a0cc01 	mov	ip, #256	; 0x100
 19c:	e5950008 	ldr	r0, [r5, #8]
 1a0:	e1a0e002 	mov	lr, r2
 1a4:	e2422001 	sub	r2, r2, #1
 1a8:	e1500001 	cmp	r0, r1
 1ac:	e595000c 	ldr	r0, [r5, #12]
 1b0:	81a0c181 	lslhi	ip, r1, #3
 1b4:	e2831001 	add	r1, r3, #1
 1b8:	e080000a 	add	r0, r0, sl
 1bc:	e6ff1071 	uxth	r1, r1
 1c0:	e7c6b003 	strb	fp, [r6, r3]
 1c4:	e2833002 	add	r3, r3, #2
 1c8:	e7d0000c 	ldrb	r0, [r0, ip]
 1cc:	e6ff3073 	uxth	r3, r3
 1d0:	e158000e 	cmp	r8, lr
 1d4:	e7c60001 	strb	r0, [r6, r1]
 1d8:	1affffed 	bne	194 <Max7219Matrix::Write(char const*, unsigned short)+0xa8>
 1dc:	e0844087 	add	r4, r4, r7, lsl #1
 1e0:	e6ff4074 	uxth	r4, r4
 1e4:	e5990000 	ldr	r0, [r9]
 1e8:	e5d52004 	ldrb	r2, [r5, #4]
 1ec:	e3c00003 	bic	r0, r0, #3
 1f0:	e5d53005 	ldrb	r3, [r5, #5]
 1f4:	e2022003 	and	r2, r2, #3
 1f8:	e1822000 	orr	r2, r2, r0
 1fc:	e5951000 	ldr	r1, [r5]
 200:	e5892000 	str	r2, [r9]
 204:	e5992000 	ldr	r2, [r9]
 208:	e1a03103 	lsl	r3, r3, #2
 20c:	e3c2200c 	bic	r2, r2, #12
 210:	e203300c 	and	r3, r3, #12
 214:	e1833002 	orr	r3, r3, r2
 218:	e59d000c 	ldr	r0, [sp, #12]
 21c:	e5893000 	str	r3, [r9]
 220:	ebfffffe 	bl	0 <__aeabi_uidiv>
 224:	e30f3ffe 	movw	r3, #65534	; 0xfffe
 228:	e1a01004 	mov	r1, r4
 22c:	e0033000 	and	r3, r3, r0
 230:	e1a00006 	mov	r0, r6
 234:	e5893008 	str	r3, [r9, #8]
 238:	e59d3004 	ldr	r3, [sp, #4]
 23c:	e2833001 	add	r3, r3, #1
 240:	e58d3004 	str	r3, [sp, #4]
 244:	e1a04003 	mov	r4, r3
 248:	ebfffffe 	bl	0 <bcm2835_spi_writenb>
 24c:	e3540009 	cmp	r4, #9
 250:	11d541b0 	ldrhne	r4, [r5, #16]
 254:	1affffb7 	bne	138 <Max7219Matrix::Write(char const*, unsigned short)+0x4c>
 258:	e28dd014 	add	sp, sp, #20
 25c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00000260 <Max7219Matrix::UpdateCharacter(unsigned int, unsigned char const*)>:
 260:	e5903008 	ldr	r3, [r0, #8]
 264:	e1530001 	cmp	r3, r1
 268:	312fff1e 	bxcc	lr
 26c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 270:	e3a05007 	mov	r5, #7
 274:	e590600c 	ldr	r6, [r0, #12]
 278:	e2427001 	sub	r7, r2, #1
 27c:	e3a0e001 	mov	lr, #1
 280:	e0866181 	add	r6, r6, r1, lsl #3
 284:	e3a03000 	mov	r3, #0
 288:	e1a02007 	mov	r2, r7
 28c:	e1a0451e 	lsl	r4, lr, r5
 290:	e1a00003 	mov	r0, r3
 294:	e5f21001 	ldrb	r1, [r2, #1]!
 298:	e180c31e 	orr	ip, r0, lr, lsl r3
 29c:	e2833001 	add	r3, r3, #1
 2a0:	e1110004 	tst	r1, r4
 2a4:	16ef007c 	uxtbne	r0, ip
 2a8:	e3530008 	cmp	r3, #8
 2ac:	1afffff8 	bne	294 <Max7219Matrix::UpdateCharacter(unsigned int, unsigned char const*)+0x34>
 2b0:	e2555001 	subs	r5, r5, #1
 2b4:	e4c60001 	strb	r0, [r6], #1
 2b8:	38bd80f0 	popcc	{r4, r5, r6, r7, pc}
 2bc:	eafffff0 	b	284 <Max7219Matrix::UpdateCharacter(unsigned int, unsigned char const*)+0x24>

000002c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>:
 2c0:	e92d4070 	push	{r4, r5, r6, lr}
 2c4:	e1d041b0 	ldrh	r4, [r0, #16]
 2c8:	e3540000 	cmp	r4, #0
 2cc:	0a00000a 	beq	2fc <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0x3c>
 2d0:	e300e000 	movw	lr, #0
 2d4:	e3a0c000 	mov	ip, #0
 2d8:	e340e000 	movt	lr, #0
 2dc:	e1a0300e 	mov	r3, lr
 2e0:	e7e3100c 	strb	r1, [r3, ip]!
 2e4:	e28cc002 	add	ip, ip, #2
 2e8:	e5c32001 	strb	r2, [r3, #1]
 2ec:	e1d041b0 	ldrh	r4, [r0, #16]
 2f0:	e1a04084 	lsl	r4, r4, #1
 2f4:	e154000c 	cmp	r4, ip
 2f8:	8afffff7 	bhi	2dc <Max7219Matrix::WriteAll(unsigned char, unsigned char)+0x1c>
 2fc:	e5901000 	ldr	r1, [r0]
 300:	e3a05901 	mov	r5, #16384	; 0x4000
 304:	e3435f20 	movt	r5, #16160	; 0x3f20
 308:	e5d03005 	ldrb	r3, [r0, #5]
 30c:	e5d02004 	ldrb	r2, [r0, #4]
 310:	e5950000 	ldr	r0, [r5]
 314:	e1a03103 	lsl	r3, r3, #2
 318:	e2022003 	and	r2, r2, #3
 31c:	e3c00003 	bic	r0, r0, #3
 320:	e203300c 	and	r3, r3, #12
 324:	e1822000 	orr	r2, r2, r0
 328:	e30b0280 	movw	r0, #45696	; 0xb280
 32c:	e5852000 	str	r2, [r5]
 330:	e5952000 	ldr	r2, [r5]
 334:	e3400ee6 	movt	r0, #3814	; 0xee6
 338:	e3c2200c 	bic	r2, r2, #12
 33c:	e1833002 	orr	r3, r3, r2
 340:	e5853000 	str	r3, [r5]
 344:	ebfffffe 	bl	0 <__aeabi_uidiv>
 348:	e1a02000 	mov	r2, r0
 34c:	e30f3ffe 	movw	r3, #65534	; 0xfffe
 350:	e3000000 	movw	r0, #0
 354:	e0033002 	and	r3, r3, r2
 358:	e5853008 	str	r3, [r5, #8]
 35c:	e1a01004 	mov	r1, r4
 360:	e3400000 	movt	r0, #0
 364:	e8bd4070 	pop	{r4, r5, r6, lr}
 368:	eafffffe 	b	0 <bcm2835_spi_writenb>

0000036c <Max7219Matrix::Cls()>:
 36c:	e92d4010 	push	{r4, lr}
 370:	e3a02000 	mov	r2, #0
 374:	e1a04000 	mov	r4, r0
 378:	e3a01001 	mov	r1, #1
 37c:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 380:	e1a00004 	mov	r0, r4
 384:	e3a02000 	mov	r2, #0
 388:	e3a01002 	mov	r1, #2
 38c:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 390:	e1a00004 	mov	r0, r4
 394:	e3a02000 	mov	r2, #0
 398:	e3a01003 	mov	r1, #3
 39c:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 3a0:	e1a00004 	mov	r0, r4
 3a4:	e3a02000 	mov	r2, #0
 3a8:	e3a01004 	mov	r1, #4
 3ac:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 3b0:	e1a00004 	mov	r0, r4
 3b4:	e3a02000 	mov	r2, #0
 3b8:	e3a01005 	mov	r1, #5
 3bc:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 3c0:	e1a00004 	mov	r0, r4
 3c4:	e3a02000 	mov	r2, #0
 3c8:	e3a01006 	mov	r1, #6
 3cc:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 3d0:	e1a00004 	mov	r0, r4
 3d4:	e3a02000 	mov	r2, #0
 3d8:	e3a01007 	mov	r1, #7
 3dc:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 3e0:	e1a00004 	mov	r0, r4
 3e4:	e3a02000 	mov	r2, #0
 3e8:	e8bd4010 	pop	{r4, lr}
 3ec:	e3a01008 	mov	r1, #8
 3f0:	eafffffe 	b	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>

000003f4 <Max7219Matrix::Init(unsigned short, unsigned char)>:
 3f4:	e3510020 	cmp	r1, #32
 3f8:	23a01020 	movcs	r1, #32
 3fc:	e92d4070 	push	{r4, r5, r6, lr}
 400:	e1a04000 	mov	r4, r0
 404:	e1c011b0 	strh	r1, [r0, #16]
 408:	e1a05002 	mov	r5, r2
 40c:	e3a0100c 	mov	r1, #12
 410:	e3a02001 	mov	r2, #1
 414:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 418:	e1a00004 	mov	r0, r4
 41c:	e3a02000 	mov	r2, #0
 420:	e3a0100f 	mov	r1, #15
 424:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 428:	e1a00004 	mov	r0, r4
 42c:	e3a02000 	mov	r2, #0
 430:	e3a01009 	mov	r1, #9
 434:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 438:	e1a00004 	mov	r0, r4
 43c:	e3a02007 	mov	r2, #7
 440:	e3a0100b 	mov	r1, #11
 444:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 448:	e1a00004 	mov	r0, r4
 44c:	e205200f 	and	r2, r5, #15
 450:	e3a0100a 	mov	r1, #10
 454:	ebfffffe 	bl	2c0 <Max7219Matrix::WriteAll(unsigned char, unsigned char)>
 458:	e1a00004 	mov	r0, r4
 45c:	e8bd4070 	pop	{r4, r5, r6, lr}
 460:	eafffffe 	b	36c <Max7219Matrix::Cls()>

00000464 <Max7219Matrix::Rotate(unsigned int, unsigned int)>:
 464:	e59f0034 	ldr	r0, [pc, #52]	; 4a0 <Max7219Matrix::Rotate(unsigned int, unsigned int)+0x3c>
 468:	e3a03000 	mov	r3, #0
 46c:	e92d4010 	push	{r4, lr}
 470:	e3a04001 	mov	r4, #1
 474:	e0801181 	add	r1, r0, r1, lsl #3
 478:	e1a00003 	mov	r0, r3
 47c:	e1a02214 	lsl	r2, r4, r2
 480:	e5f1c001 	ldrb	ip, [r1, #1]!
 484:	e180e314 	orr	lr, r0, r4, lsl r3
 488:	e2833001 	add	r3, r3, #1
 48c:	e11c0002 	tst	ip, r2
 490:	16ef007e 	uxtbne	r0, lr
 494:	e3530008 	cmp	r3, #8
 498:	1afffff8 	bne	480 <Max7219Matrix::Rotate(unsigned int, unsigned int)+0x1c>
 49c:	e8bd8010 	pop	{r4, pc}
 4a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

Disassembly of section .bss:

00000000 <spi_data>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


mcp9808.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <sensor::MCP9808::MCP9808(unsigned char)>:
   0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   4:	e2515000 	subs	r5, r1, #0
   8:	e24dd008 	sub	sp, sp, #8
   c:	e1a04000 	mov	r4, r0
  10:	0a000019 	beq	7c <sensor::MCP9808::MCP9808(unsigned char)+0x7c>
  14:	e5c05000 	strb	r5, [r0]
  18:	e3a03901 	mov	r3, #16384	; 0x4000
  1c:	e3433f80 	movt	r3, #16256	; 0x3f80
  20:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  24:	e3400006 	movt	r0, #6
  28:	e3a02000 	mov	r2, #0
  2c:	e5840004 	str	r0, [r4, #4]
  30:	e5c42008 	strb	r2, [r4, #8]
  34:	e583500c 	str	r5, [r3, #12]
  38:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  3c:	e2453030 	sub	r3, r5, #48	; 0x30
  40:	e2455050 	sub	r5, r5, #80	; 0x50
  44:	e355000f 	cmp	r5, #15
  48:	83530007 	cmphi	r3, #7
  4c:	8a000014 	bhi	a4 <sensor::MCP9808::MCP9808(unsigned char)+0xa4>
  50:	e3a01001 	mov	r1, #1
  54:	e28d0004 	add	r0, sp, #4
  58:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  5c:	e16f0f10 	clz	r0, r0
  60:	e1a002a0 	lsr	r0, r0, #5
  64:	e5c40008 	strb	r0, [r4, #8]
  68:	e3500000 	cmp	r0, #0
  6c:	1a000014 	bne	c4 <sensor::MCP9808::MCP9808(unsigned char)+0xc4>
  70:	e1a00004 	mov	r0, r4
  74:	e28dd008 	add	sp, sp, #8
  78:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
  7c:	e5c05008 	strb	r5, [r0, #8]
  80:	e3a03901 	mov	r3, #16384	; 0x4000
  84:	e3433f80 	movt	r3, #16256	; 0x3f80
  88:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  8c:	e3400006 	movt	r0, #6
  90:	e3a02018 	mov	r2, #24
  94:	e5c42000 	strb	r2, [r4]
  98:	e5840004 	str	r0, [r4, #4]
  9c:	e583200c 	str	r2, [r3, #12]
  a0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  a4:	e3a01000 	mov	r1, #0
  a8:	e1a00001 	mov	r0, r1
  ac:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  b0:	e16f0f10 	clz	r0, r0
  b4:	e1a002a0 	lsr	r0, r0, #5
  b8:	e5c40008 	strb	r0, [r4, #8]
  bc:	e3500000 	cmp	r0, #0
  c0:	0affffea 	beq	70 <sensor::MCP9808::MCP9808(unsigned char)+0x70>
  c4:	e5947004 	ldr	r7, [r4, #4]
  c8:	e3a05901 	mov	r5, #16384	; 0x4000
  cc:	e5d46000 	ldrb	r6, [r4]
  d0:	e3a03006 	mov	r3, #6
  d4:	e3435f80 	movt	r5, #16256	; 0x3f80
  d8:	e1a00007 	mov	r0, r7
  dc:	e5cd3000 	strb	r3, [sp]
  e0:	e3a08000 	mov	r8, #0
  e4:	e585600c 	str	r6, [r5, #12]
  e8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  ec:	e3a01001 	mov	r1, #1
  f0:	e1a0000d 	mov	r0, sp
  f4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  f8:	e1cd80b4 	strh	r8, [sp, #4]
  fc:	e1a00007 	mov	r0, r7
 100:	e585600c 	str	r6, [r5, #12]
 104:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 108:	e3a01002 	mov	r1, #2
 10c:	e28d0004 	add	r0, sp, #4
 110:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 114:	e1dd30b4 	ldrh	r3, [sp, #4]
 118:	e6bf3fb3 	rev16	r3, r3
 11c:	e6ff3073 	uxth	r3, r3
 120:	e3530054 	cmp	r3, #84	; 0x54
 124:	03a03001 	moveq	r3, #1
 128:	11a03008 	movne	r3, r8
 12c:	e5c43008 	strb	r3, [r4, #8]
 130:	1affffce 	bne	70 <sensor::MCP9808::MCP9808(unsigned char)+0x70>
 134:	e5946004 	ldr	r6, [r4, #4]
 138:	e3a03007 	mov	r3, #7
 13c:	e5d47000 	ldrb	r7, [r4]
 140:	e5cd3000 	strb	r3, [sp]
 144:	e1a00006 	mov	r0, r6
 148:	e585700c 	str	r7, [r5, #12]
 14c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 150:	e3a01001 	mov	r1, #1
 154:	e1a0000d 	mov	r0, sp
 158:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 15c:	e1cd80b4 	strh	r8, [sp, #4]
 160:	e1a00006 	mov	r0, r6
 164:	e585700c 	str	r7, [r5, #12]
 168:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 16c:	e3a01002 	mov	r1, #2
 170:	e28d0004 	add	r0, sp, #4
 174:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 178:	e1dd30b4 	ldrh	r3, [sp, #4]
 17c:	e1a00004 	mov	r0, r4
 180:	e2433004 	sub	r3, r3, #4
 184:	e16f3f13 	clz	r3, r3
 188:	e1a032a3 	lsr	r3, r3, #5
 18c:	e5c43008 	strb	r3, [r4, #8]
 190:	e28dd008 	add	sp, sp, #8
 194:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00000198 <sensor::MCP9808::Get()>:
 198:	e92d4070 	push	{r4, r5, r6, lr}
 19c:	e3a04901 	mov	r4, #16384	; 0x4000
 1a0:	e5906004 	ldr	r6, [r0, #4]
 1a4:	e24dd008 	sub	sp, sp, #8
 1a8:	e5d05000 	ldrb	r5, [r0]
 1ac:	e3a03005 	mov	r3, #5
 1b0:	e3434f80 	movt	r4, #16256	; 0x3f80
 1b4:	e1a00006 	mov	r0, r6
 1b8:	e5cd3000 	strb	r3, [sp]
 1bc:	e584500c 	str	r5, [r4, #12]
 1c0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1c4:	e3a01001 	mov	r1, #1
 1c8:	e1a0000d 	mov	r0, sp
 1cc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1d0:	e3a03000 	mov	r3, #0
 1d4:	e1a00006 	mov	r0, r6
 1d8:	e1cd30b4 	strh	r3, [sp, #4]
 1dc:	e584500c 	str	r5, [r4, #12]
 1e0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1e4:	e3a01002 	mov	r1, #2
 1e8:	e28d0004 	add	r0, sp, #4
 1ec:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 1f0:	e1dd30b4 	ldrh	r3, [sp, #4]
 1f4:	e6bf3fb3 	rev16	r3, r3
 1f8:	e7eb2053 	ubfx	r2, r3, #0, #12
 1fc:	e3130a01 	tst	r3, #4096	; 0x1000
 200:	ee002a10 	vmov	s0, r2
 204:	1ddf7a03 	vldrne	s15, [pc, #12]	; 218 <sensor::MCP9808::Get()+0x80>
 208:	eeba0ace 	vcvt.f32.s32	s0, s0, #4
 20c:	1e300a67 	vsubne.f32	s0, s0, s15
 210:	e28dd008 	add	sp, sp, #8
 214:	e8bd8070 	pop	{r4, r5, r6, pc}
 218:	43800000 	orrmi	r0, r0, #0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


sc16is740.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)>:
   0:	e2411005 	sub	r1, r1, #5
   4:	e2422001 	sub	r2, r2, #1
   8:	e3510003 	cmp	r1, #3
   c:	e1a0c000 	mov	ip, r0
  10:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  14:	96ef1071 	uxtbls	r1, r1
  18:	e24dd00c 	sub	sp, sp, #12
  1c:	83a01003 	movhi	r1, #3
  20:	e3520003 	cmp	r2, #3
  24:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
  28:	ea000004 	b	40 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)+0x40>
  2c:	00000090 	muleq	r0, r0, r0
  30:	00000088 	andeq	r0, r0, r8, lsl #1
  34:	0000003c 	andeq	r0, r0, ip, lsr r0
  38:	00000080 	andeq	r0, r0, r0, lsl #1
  3c:	e3811038 	orr	r1, r1, #56	; 0x38
  40:	e5dc2000 	ldrb	r2, [ip]
  44:	e3530002 	cmp	r3, #2
  48:	e59c0004 	ldr	r0, [ip, #4]
  4c:	e3a03901 	mov	r3, #16384	; 0x4000
  50:	e3433f80 	movt	r3, #16256	; 0x3f80
  54:	03811004 	orreq	r1, r1, #4
  58:	e5cd1005 	strb	r1, [sp, #5]
  5c:	e3a01018 	mov	r1, #24
  60:	e5cd1004 	strb	r1, [sp, #4]
  64:	e583200c 	str	r2, [r3, #12]
  68:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  6c:	e3a01002 	mov	r1, #2
  70:	e28d0004 	add	r0, sp, #4
  74:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  78:	e28dd00c 	add	sp, sp, #12
  7c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
  80:	e3811028 	orr	r1, r1, #40	; 0x28
  84:	eaffffed 	b	40 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)+0x40>
  88:	e3811018 	orr	r1, r1, #24
  8c:	eaffffeb 	b	40 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)+0x40>
  90:	e3811008 	orr	r1, r1, #8
  94:	eaffffe9 	b	40 <SC16IS740::SetFormat(unsigned int, SC16IS740::SerialParity, unsigned int)+0x40>

00000098 <SC16IS740::SetBaud(unsigned int)>:
  98:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
  9c:	e3a05901 	mov	r5, #16384	; 0x4000
  a0:	e3435f80 	movt	r5, #16256	; 0x3f80
  a4:	e24dd008 	sub	sp, sp, #8
  a8:	e5909004 	ldr	r9, [r0, #4]
  ac:	e3a03020 	mov	r3, #32
  b0:	e5d07000 	ldrb	r7, [r0]
  b4:	e1a04000 	mov	r4, r0
  b8:	e5cd3000 	strb	r3, [sp]
  bc:	e1a00009 	mov	r0, r9
  c0:	e585700c 	str	r7, [r5, #12]
  c4:	e3a08000 	mov	r8, #0
  c8:	e1a06001 	mov	r6, r1
  cc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  d0:	e3a01001 	mov	r1, #1
  d4:	e1a0000d 	mov	r0, sp
  d8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  dc:	e5cd8004 	strb	r8, [sp, #4]
  e0:	e1a00009 	mov	r0, r9
  e4:	e585700c 	str	r7, [r5, #12]
  e8:	e3a07018 	mov	r7, #24
  ec:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  f0:	e3a01001 	mov	r1, #1
  f4:	e28d0004 	add	r0, sp, #4
  f8:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  fc:	e1dd30d4 	ldrsb	r3, [sp, #4]
 100:	e5940008 	ldr	r0, [r4, #8]
 104:	e1530008 	cmp	r3, r8
 108:	b3a01004 	movlt	r1, #4
 10c:	a3a01001 	movge	r1, #1
 110:	ebfffffe 	bl	0 <__aeabi_uidiv>
 114:	e1a01206 	lsl	r1, r6, #4
 118:	ebfffffe 	bl	0 <__aeabi_uidiv>
 11c:	e594a004 	ldr	sl, [r4, #4]
 120:	e1a06000 	mov	r6, r0
 124:	e5d49000 	ldrb	r9, [r4]
 128:	e5cd7000 	strb	r7, [sp]
 12c:	e1a0000a 	mov	r0, sl
 130:	e585900c 	str	r9, [r5, #12]
 134:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 138:	e3a01001 	mov	r1, #1
 13c:	e1a0000d 	mov	r0, sp
 140:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 144:	e5cd8004 	strb	r8, [sp, #4]
 148:	e1a0000a 	mov	r0, sl
 14c:	e585900c 	str	r9, [r5, #12]
 150:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 154:	e3a01001 	mov	r1, #1
 158:	e28d0004 	add	r0, sp, #4
 15c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 160:	e5dd9004 	ldrb	r9, [sp, #4]
 164:	e5d42000 	ldrb	r2, [r4]
 168:	e1e03c89 	mvn	r3, r9, lsl #25
 16c:	e5940004 	ldr	r0, [r4, #4]
 170:	e1e03ca3 	mvn	r3, r3, lsr #25
 174:	e5cd3005 	strb	r3, [sp, #5]
 178:	e5cd7004 	strb	r7, [sp, #4]
 17c:	e585200c 	str	r2, [r5, #12]
 180:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 184:	e3a01002 	mov	r1, #2
 188:	e28d0004 	add	r0, sp, #4
 18c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 190:	e5d43000 	ldrb	r3, [r4]
 194:	e5940004 	ldr	r0, [r4, #4]
 198:	e5cd6005 	strb	r6, [sp, #5]
 19c:	e5cd8004 	strb	r8, [sp, #4]
 1a0:	e585300c 	str	r3, [r5, #12]
 1a4:	e1a06426 	lsr	r6, r6, #8
 1a8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1ac:	e3a01002 	mov	r1, #2
 1b0:	e28d0004 	add	r0, sp, #4
 1b4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1b8:	e5d43000 	ldrb	r3, [r4]
 1bc:	e3a02008 	mov	r2, #8
 1c0:	e5cd2004 	strb	r2, [sp, #4]
 1c4:	e5940004 	ldr	r0, [r4, #4]
 1c8:	e5cd6005 	strb	r6, [sp, #5]
 1cc:	e585300c 	str	r3, [r5, #12]
 1d0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1d4:	e3a01002 	mov	r1, #2
 1d8:	e28d0004 	add	r0, sp, #4
 1dc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1e0:	e5d43000 	ldrb	r3, [r4]
 1e4:	e5940004 	ldr	r0, [r4, #4]
 1e8:	e5cd7004 	strb	r7, [sp, #4]
 1ec:	e5cd9005 	strb	r9, [sp, #5]
 1f0:	e585300c 	str	r3, [r5, #12]
 1f4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1f8:	e3a01002 	mov	r1, #2
 1fc:	e28d0004 	add	r0, sp, #4
 200:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 204:	e28dd008 	add	sp, sp, #8
 208:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0000020c <SC16IS740::SC16IS740(unsigned char, unsigned int)>:
 20c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 210:	e3a03901 	mov	r3, #16384	; 0x4000
 214:	e3433f80 	movt	r3, #16256	; 0x3f80
 218:	e1a04000 	mov	r4, r0
 21c:	e3a00d6a 	mov	r0, #6784	; 0x1a80
 220:	e1a05001 	mov	r5, r1
 224:	e3400006 	movt	r0, #6
 228:	e24dd008 	sub	sp, sp, #8
 22c:	e9840005 	stmib	r4, {r0, r2}
 230:	e5c41000 	strb	r1, [r4]
 234:	e3a02000 	mov	r2, #0
 238:	e5c4200c 	strb	r2, [r4, #12]
 23c:	e583100c 	str	r1, [r3, #12]
 240:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 244:	e2451030 	sub	r1, r5, #48	; 0x30
 248:	e2455050 	sub	r5, r5, #80	; 0x50
 24c:	e355000f 	cmp	r5, #15
 250:	83510007 	cmphi	r1, #7
 254:	93a01001 	movls	r1, #1
 258:	83a01000 	movhi	r1, #0
 25c:	8a00000a 	bhi	28c <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x80>
 260:	e3a01001 	mov	r1, #1
 264:	e28d0004 	add	r0, sp, #4
 268:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 26c:	e16f0f10 	clz	r0, r0
 270:	e1a002a0 	lsr	r0, r0, #5
 274:	e5c4000c 	strb	r0, [r4, #12]
 278:	e3500000 	cmp	r0, #0
 27c:	1a000009 	bne	2a8 <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x9c>
 280:	e1a00004 	mov	r0, r4
 284:	e28dd008 	add	sp, sp, #8
 288:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 28c:	e1a00001 	mov	r0, r1
 290:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 294:	e16f0f10 	clz	r0, r0
 298:	e1a002a0 	lsr	r0, r0, #5
 29c:	e5c4000c 	strb	r0, [r4, #12]
 2a0:	e3500000 	cmp	r0, #0
 2a4:	0afffff5 	beq	280 <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x74>
 2a8:	e5d43000 	ldrb	r3, [r4]
 2ac:	e3a05901 	mov	r5, #16384	; 0x4000
 2b0:	e3435f80 	movt	r5, #16256	; 0x3f80
 2b4:	e3a02018 	mov	r2, #24
 2b8:	e5cd2004 	strb	r2, [sp, #4]
 2bc:	e3a02003 	mov	r2, #3
 2c0:	e5cd2005 	strb	r2, [sp, #5]
 2c4:	e3a06038 	mov	r6, #56	; 0x38
 2c8:	e5940004 	ldr	r0, [r4, #4]
 2cc:	e3a07000 	mov	r7, #0
 2d0:	e585300c 	str	r3, [r5, #12]
 2d4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2d8:	e3a01002 	mov	r1, #2
 2dc:	e28d0004 	add	r0, sp, #4
 2e0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 2e4:	e3a01cc2 	mov	r1, #49664	; 0xc200
 2e8:	e1a00004 	mov	r0, r4
 2ec:	e3401001 	movt	r1, #1
 2f0:	ebfffffe 	bl	98 <SC16IS740::SetBaud(unsigned int)>
 2f4:	e5d43000 	ldrb	r3, [r4]
 2f8:	e3a02041 	mov	r2, #65	; 0x41
 2fc:	e5cd2005 	strb	r2, [sp, #5]
 300:	e5940004 	ldr	r0, [r4, #4]
 304:	e5cd6004 	strb	r6, [sp, #4]
 308:	e585300c 	str	r3, [r5, #12]
 30c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 310:	e3a01002 	mov	r1, #2
 314:	e28d0004 	add	r0, sp, #4
 318:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 31c:	e5949004 	ldr	r9, [r4, #4]
 320:	e5d48000 	ldrb	r8, [r4]
 324:	e5cd6000 	strb	r6, [sp]
 328:	e1a00009 	mov	r0, r9
 32c:	e585800c 	str	r8, [r5, #12]
 330:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 334:	e3a01001 	mov	r1, #1
 338:	e1a0000d 	mov	r0, sp
 33c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 340:	e5cd7004 	strb	r7, [sp, #4]
 344:	e1a00009 	mov	r0, r9
 348:	e585800c 	str	r8, [r5, #12]
 34c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 350:	e3a01001 	mov	r1, #1
 354:	e28d0004 	add	r0, sp, #4
 358:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 35c:	e5dd3004 	ldrb	r3, [sp, #4]
 360:	e3530041 	cmp	r3, #65	; 0x41
 364:	15c4700c 	strbne	r7, [r4, #12]
 368:	1affffc4 	bne	280 <SC16IS740::SC16IS740(unsigned char, unsigned int)+0x74>
 36c:	e594a004 	ldr	sl, [r4, #4]
 370:	e3a08020 	mov	r8, #32
 374:	e5d49000 	ldrb	r9, [r4]
 378:	e5cd8000 	strb	r8, [sp]
 37c:	e1a0000a 	mov	r0, sl
 380:	e585900c 	str	r9, [r5, #12]
 384:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 388:	e3a01001 	mov	r1, #1
 38c:	e1a0000d 	mov	r0, sp
 390:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 394:	e5cd7004 	strb	r7, [sp, #4]
 398:	e1a0000a 	mov	r0, sl
 39c:	e585900c 	str	r9, [r5, #12]
 3a0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3a4:	e3a01001 	mov	r1, #1
 3a8:	e28d0004 	add	r0, sp, #4
 3ac:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 3b0:	e5dd3004 	ldrb	r3, [sp, #4]
 3b4:	e5940004 	ldr	r0, [r4, #4]
 3b8:	e5cd8004 	strb	r8, [sp, #4]
 3bc:	e3833004 	orr	r3, r3, #4
 3c0:	e5cd3005 	strb	r3, [sp, #5]
 3c4:	e3a08010 	mov	r8, #16
 3c8:	e5d43000 	ldrb	r3, [r4]
 3cc:	e585300c 	str	r3, [r5, #12]
 3d0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3d4:	e3a01002 	mov	r1, #2
 3d8:	e28d0004 	add	r0, sp, #4
 3dc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3e0:	e5949004 	ldr	r9, [r4, #4]
 3e4:	e5d4a000 	ldrb	sl, [r4]
 3e8:	e5cd8000 	strb	r8, [sp]
 3ec:	e1a00009 	mov	r0, r9
 3f0:	e585a00c 	str	sl, [r5, #12]
 3f4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3f8:	e3a01001 	mov	r1, #1
 3fc:	e1a0000d 	mov	r0, sp
 400:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 404:	e5cd7004 	strb	r7, [sp, #4]
 408:	e1a00009 	mov	r0, r9
 40c:	e585a00c 	str	sl, [r5, #12]
 410:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 414:	e3a01001 	mov	r1, #1
 418:	e28d0004 	add	r0, sp, #4
 41c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 420:	e5dd7004 	ldrb	r7, [sp, #4]
 424:	e5d43000 	ldrb	r3, [r4]
 428:	e1872008 	orr	r2, r7, r8
 42c:	e5cd2005 	strb	r2, [sp, #5]
 430:	e5940004 	ldr	r0, [r4, #4]
 434:	e5cd8004 	strb	r8, [sp, #4]
 438:	e585300c 	str	r3, [r5, #12]
 43c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 440:	e3a01002 	mov	r1, #2
 444:	e28d0004 	add	r0, sp, #4
 448:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 44c:	e5d43000 	ldrb	r3, [r4]
 450:	e5940004 	ldr	r0, [r4, #4]
 454:	e5cd6004 	strb	r6, [sp, #4]
 458:	e5cd8005 	strb	r8, [sp, #5]
 45c:	e585300c 	str	r3, [r5, #12]
 460:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 464:	e3a01002 	mov	r1, #2
 468:	e28d0004 	add	r0, sp, #4
 46c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 470:	e5d43000 	ldrb	r3, [r4]
 474:	e5940004 	ldr	r0, [r4, #4]
 478:	e5cd7005 	strb	r7, [sp, #5]
 47c:	e5cd8004 	strb	r8, [sp, #4]
 480:	e585300c 	str	r3, [r5, #12]
 484:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 488:	e3a01002 	mov	r1, #2
 48c:	e28d0004 	add	r0, sp, #4
 490:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 494:	e5d43000 	ldrb	r3, [r4]
 498:	e3a02006 	mov	r2, #6
 49c:	e5cd2005 	strb	r2, [sp, #5]
 4a0:	e5940004 	ldr	r0, [r4, #4]
 4a4:	e5cd8004 	strb	r8, [sp, #4]
 4a8:	e585300c 	str	r3, [r5, #12]
 4ac:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4b0:	e3a01002 	mov	r1, #2
 4b4:	e28d0004 	add	r0, sp, #4
 4b8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4bc:	e5d43000 	ldrb	r3, [r4]
 4c0:	e3a02001 	mov	r2, #1
 4c4:	e5cd2005 	strb	r2, [sp, #5]
 4c8:	e5940004 	ldr	r0, [r4, #4]
 4cc:	e5cd8004 	strb	r8, [sp, #4]
 4d0:	e585300c 	str	r3, [r5, #12]
 4d4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4d8:	e3a01002 	mov	r1, #2
 4dc:	e28d0004 	add	r0, sp, #4
 4e0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4e4:	e5d43000 	ldrb	r3, [r4]
 4e8:	e3a02008 	mov	r2, #8
 4ec:	e5cd2004 	strb	r2, [sp, #4]
 4f0:	e3a02005 	mov	r2, #5
 4f4:	e5940004 	ldr	r0, [r4, #4]
 4f8:	e5cd2005 	strb	r2, [sp, #5]
 4fc:	e585300c 	str	r3, [r5, #12]
 500:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 504:	e3a01002 	mov	r1, #2
 508:	e28d0004 	add	r0, sp, #4
 50c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 510:	e1a00004 	mov	r0, r4
 514:	e28dd008 	add	sp, sp, #8
 518:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0000051c <SC16IS740::WriteBytes(unsigned char const*, unsigned int)>:
 51c:	e5d0300c 	ldrb	r3, [r0, #12]
 520:	e3530000 	cmp	r3, #0
 524:	012fff1e 	bxeq	lr
 528:	e3520000 	cmp	r2, #0
 52c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 530:	e1a04002 	mov	r4, r2
 534:	e24dd00c 	sub	sp, sp, #12
 538:	0a00002e 	beq	5f8 <SC16IS740::WriteBytes(unsigned char const*, unsigned int)+0xdc>
 53c:	e3a07901 	mov	r7, #16384	; 0x4000
 540:	e1a0a000 	mov	sl, r0
 544:	e3437f80 	movt	r7, #16256	; 0x3f80
 548:	e1a05001 	mov	r5, r1
 54c:	e3a09040 	mov	r9, #64	; 0x40
 550:	e59ab004 	ldr	fp, [sl, #4]
 554:	e3a08000 	mov	r8, #0
 558:	e5da6000 	ldrb	r6, [sl]
 55c:	e5cd9000 	strb	r9, [sp]
 560:	e1a0000b 	mov	r0, fp
 564:	e587600c 	str	r6, [r7, #12]
 568:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 56c:	e3a01001 	mov	r1, #1
 570:	e1a0000d 	mov	r0, sp
 574:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 578:	e5cd8004 	strb	r8, [sp, #4]
 57c:	e1a0000b 	mov	r0, fp
 580:	e587600c 	str	r6, [r7, #12]
 584:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 588:	e3a01001 	mov	r1, #1
 58c:	e28d0004 	add	r0, sp, #4
 590:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 594:	e5dd6004 	ldrb	r6, [sp, #4]
 598:	e1560008 	cmp	r6, r8
 59c:	11a0b005 	movne	fp, r5
 5a0:	108b6006 	addne	r6, fp, r6
 5a4:	0affffe9 	beq	550 <SC16IS740::WriteBytes(unsigned char const*, unsigned int)+0x34>
 5a8:	e4db2001 	ldrb	r2, [fp], #1
 5ac:	e5da3000 	ldrb	r3, [sl]
 5b0:	e59a0004 	ldr	r0, [sl, #4]
 5b4:	e1a0500b 	mov	r5, fp
 5b8:	e5cd2005 	strb	r2, [sp, #5]
 5bc:	e5cd8004 	strb	r8, [sp, #4]
 5c0:	e587300c 	str	r3, [r7, #12]
 5c4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 5c8:	e3a01002 	mov	r1, #2
 5cc:	e28d0004 	add	r0, sp, #4
 5d0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 5d4:	e2544001 	subs	r4, r4, #1
 5d8:	03a03001 	moveq	r3, #1
 5dc:	13a03000 	movne	r3, #0
 5e0:	e15b0006 	cmp	fp, r6
 5e4:	03833001 	orreq	r3, r3, #1
 5e8:	e3530000 	cmp	r3, #0
 5ec:	0affffed 	beq	5a8 <SC16IS740::WriteBytes(unsigned char const*, unsigned int)+0x8c>
 5f0:	e3540000 	cmp	r4, #0
 5f4:	1affffd5 	bne	550 <SC16IS740::WriteBytes(unsigned char const*, unsigned int)+0x34>
 5f8:	e28dd00c 	add	sp, sp, #12
 5fc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00000600 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)>:
 600:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 604:	e1a07000 	mov	r7, r0
 608:	e5d0000c 	ldrb	r0, [r0, #12]
 60c:	e24dd01c 	sub	sp, sp, #28
 610:	e58d3004 	str	r3, [sp, #4]
 614:	e3500000 	cmp	r0, #0
 618:	e58d1008 	str	r1, [sp, #8]
 61c:	01a03002 	moveq	r3, r2
 620:	e58d200c 	str	r2, [sp, #12]
 624:	05830000 	streq	r0, [r3]
 628:	0a00004c 	beq	760 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x160>
 62c:	e59d300c 	ldr	r3, [sp, #12]
 630:	e5934000 	ldr	r4, [r3]
 634:	e3540000 	cmp	r4, #0
 638:	0a000046 	beq	758 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x158>
 63c:	e59d3008 	ldr	r3, [sp, #8]
 640:	e3a08901 	mov	r8, #16384	; 0x4000
 644:	e3438f80 	movt	r8, #16256	; 0x3f80
 648:	e58d3000 	str	r3, [sp]
 64c:	ebfffffe 	bl	0 <millis>
 650:	e59d9004 	ldr	r9, [sp, #4]
 654:	e1a05000 	mov	r5, r0
 658:	ea000003 	b	66c <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x6c>
 65c:	ebfffffe 	bl	0 <millis>
 660:	e0400009 	sub	r0, r0, r9
 664:	e1500005 	cmp	r0, r5
 668:	8a000036 	bhi	748 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x148>
 66c:	e597a004 	ldr	sl, [r7, #4]
 670:	e3a03048 	mov	r3, #72	; 0x48
 674:	e5d76000 	ldrb	r6, [r7]
 678:	e3a0b000 	mov	fp, #0
 67c:	e5cd3010 	strb	r3, [sp, #16]
 680:	e1a0000a 	mov	r0, sl
 684:	e588600c 	str	r6, [r8, #12]
 688:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 68c:	e3a01001 	mov	r1, #1
 690:	e28d0010 	add	r0, sp, #16
 694:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 698:	e5cdb014 	strb	fp, [sp, #20]
 69c:	e1a0000a 	mov	r0, sl
 6a0:	e588600c 	str	r6, [r8, #12]
 6a4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 6a8:	e3a01001 	mov	r1, #1
 6ac:	e28d0014 	add	r0, sp, #20
 6b0:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 6b4:	e5dd6014 	ldrb	r6, [sp, #20]
 6b8:	e156000b 	cmp	r6, fp
 6bc:	0affffe6 	beq	65c <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x5c>
 6c0:	e3540000 	cmp	r4, #0
 6c4:	0a00001f 	beq	748 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x148>
 6c8:	e59d5000 	ldr	r5, [sp]
 6cc:	e5979004 	ldr	r9, [r7, #4]
 6d0:	e5d7a000 	ldrb	sl, [r7]
 6d4:	e5cdb010 	strb	fp, [sp, #16]
 6d8:	e1a00009 	mov	r0, r9
 6dc:	e588a00c 	str	sl, [r8, #12]
 6e0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 6e4:	e3a01001 	mov	r1, #1
 6e8:	e28d0010 	add	r0, sp, #16
 6ec:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 6f0:	e5cdb014 	strb	fp, [sp, #20]
 6f4:	e1a00009 	mov	r0, r9
 6f8:	e588a00c 	str	sl, [r8, #12]
 6fc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 700:	e3a01001 	mov	r1, #1
 704:	e28d0014 	add	r0, sp, #20
 708:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 70c:	e5dd3014 	ldrb	r3, [sp, #20]
 710:	e4c53001 	strb	r3, [r5], #1
 714:	e59d3000 	ldr	r3, [sp]
 718:	e0433005 	sub	r3, r3, r5
 71c:	e1730006 	cmn	r3, r6
 720:	03a03001 	moveq	r3, #1
 724:	13a03000 	movne	r3, #0
 728:	e2544001 	subs	r4, r4, #1
 72c:	03833001 	orreq	r3, r3, #1
 730:	e3530000 	cmp	r3, #0
 734:	0affffe4 	beq	6cc <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0xcc>
 738:	e3540000 	cmp	r4, #0
 73c:	0a000009 	beq	768 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x168>
 740:	e58d5000 	str	r5, [sp]
 744:	eaffffc0 	b	64c <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x4c>
 748:	e59d3000 	ldr	r3, [sp]
 74c:	e59d2008 	ldr	r2, [sp, #8]
 750:	e0434002 	sub	r4, r3, r2
 754:	e6ff4074 	uxth	r4, r4
 758:	e59d300c 	ldr	r3, [sp, #12]
 75c:	e5834000 	str	r4, [r3]
 760:	e28dd01c 	add	sp, sp, #28
 764:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 768:	e59d3008 	ldr	r3, [sp, #8]
 76c:	e0454003 	sub	r4, r5, r3
 770:	e6ff4074 	uxth	r4, r4
 774:	eafffff7 	b	758 <SC16IS740::ReadBytes(unsigned char*, unsigned int&, unsigned int)+0x158>

00000778 <SC16IS740::FlushRead(unsigned int)>:
 778:	e5d0300c 	ldrb	r3, [r0, #12]
 77c:	e3530000 	cmp	r3, #0
 780:	012fff1e 	bxeq	lr
 784:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 788:	e3a06901 	mov	r6, #16384	; 0x4000
 78c:	e3436f80 	movt	r6, #16256	; 0x3f80
 790:	e24dd00c 	sub	sp, sp, #12
 794:	e1a05000 	mov	r5, r0
 798:	e1a09001 	mov	r9, r1
 79c:	e3a08048 	mov	r8, #72	; 0x48
 7a0:	ebfffffe 	bl	0 <millis>
 7a4:	e1a07000 	mov	r7, r0
 7a8:	ea000003 	b	7bc <SC16IS740::FlushRead(unsigned int)+0x44>
 7ac:	ebfffffe 	bl	0 <millis>
 7b0:	e0400009 	sub	r0, r0, r9
 7b4:	e1500007 	cmp	r0, r7
 7b8:	8a000026 	bhi	858 <SC16IS740::FlushRead(unsigned int)+0xe0>
 7bc:	e595b004 	ldr	fp, [r5, #4]
 7c0:	e3a0a000 	mov	sl, #0
 7c4:	e5d54000 	ldrb	r4, [r5]
 7c8:	e5cd8000 	strb	r8, [sp]
 7cc:	e1a0000b 	mov	r0, fp
 7d0:	e586400c 	str	r4, [r6, #12]
 7d4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7d8:	e3a01001 	mov	r1, #1
 7dc:	e1a0000d 	mov	r0, sp
 7e0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7e4:	e5cda004 	strb	sl, [sp, #4]
 7e8:	e1a0000b 	mov	r0, fp
 7ec:	e586400c 	str	r4, [r6, #12]
 7f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7f4:	e3a01001 	mov	r1, #1
 7f8:	e28d0004 	add	r0, sp, #4
 7fc:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 800:	e5dd4004 	ldrb	r4, [sp, #4]
 804:	e154000a 	cmp	r4, sl
 808:	0affffe7 	beq	7ac <SC16IS740::FlushRead(unsigned int)+0x34>
 80c:	e595b004 	ldr	fp, [r5, #4]
 810:	e5d57000 	ldrb	r7, [r5]
 814:	e5cda000 	strb	sl, [sp]
 818:	e1a0000b 	mov	r0, fp
 81c:	e586700c 	str	r7, [r6, #12]
 820:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 824:	e3a01001 	mov	r1, #1
 828:	e1a0000d 	mov	r0, sp
 82c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 830:	e5cda004 	strb	sl, [sp, #4]
 834:	e1a0000b 	mov	r0, fp
 838:	e586700c 	str	r7, [r6, #12]
 83c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 840:	e3a01001 	mov	r1, #1
 844:	e28d0004 	add	r0, sp, #4
 848:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 84c:	e2544001 	subs	r4, r4, #1
 850:	1affffed 	bne	80c <SC16IS740::FlushRead(unsigned int)+0x94>
 854:	eaffffd1 	b	7a0 <SC16IS740::FlushRead(unsigned int)+0x28>
 858:	e28dd00c 	add	sp, sp, #12
 85c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


si5351a.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <SI5351A::SI5351A(unsigned char)>:
   0:	e92d4030 	push	{r4, r5, lr}
   4:	e2515000 	subs	r5, r1, #0
   8:	e24dd00c 	sub	sp, sp, #12
   c:	e1a04000 	mov	r4, r0
  10:	0a000017 	beq	74 <SI5351A::SI5351A(unsigned char)+0x74>
  14:	e5c05000 	strb	r5, [r0]
  18:	e3a03901 	mov	r3, #16384	; 0x4000
  1c:	e3433f80 	movt	r3, #16256	; 0x3f80
  20:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  24:	e3400006 	movt	r0, #6
  28:	e3a02000 	mov	r2, #0
  2c:	e5840004 	str	r0, [r4, #4]
  30:	e5c42008 	strb	r2, [r4, #8]
  34:	e583500c 	str	r5, [r3, #12]
  38:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  3c:	e2453030 	sub	r3, r5, #48	; 0x30
  40:	e2455050 	sub	r5, r5, #80	; 0x50
  44:	e355000f 	cmp	r5, #15
  48:	83530007 	cmphi	r3, #7
  4c:	8a000012 	bhi	9c <SI5351A::SI5351A(unsigned char)+0x9c>
  50:	e3a01001 	mov	r1, #1
  54:	e28d0007 	add	r0, sp, #7
  58:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  5c:	e16f0f10 	clz	r0, r0
  60:	e1a002a0 	lsr	r0, r0, #5
  64:	e5c40008 	strb	r0, [r4, #8]
  68:	e1a00004 	mov	r0, r4
  6c:	e28dd00c 	add	sp, sp, #12
  70:	e8bd8030 	pop	{r4, r5, pc}
  74:	e5c05008 	strb	r5, [r0, #8]
  78:	e3a03901 	mov	r3, #16384	; 0x4000
  7c:	e3433f80 	movt	r3, #16256	; 0x3f80
  80:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  84:	e3400006 	movt	r0, #6
  88:	e3a02060 	mov	r2, #96	; 0x60
  8c:	e5c42000 	strb	r2, [r4]
  90:	e5840004 	str	r0, [r4, #4]
  94:	e583200c 	str	r2, [r3, #12]
  98:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  9c:	e3a01000 	mov	r1, #0
  a0:	e1a00001 	mov	r0, r1
  a4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  a8:	e16f0f10 	clz	r0, r0
  ac:	e1a002a0 	lsr	r0, r0, #5
  b0:	e5c40008 	strb	r0, [r4, #8]
  b4:	e1a00004 	mov	r0, r4
  b8:	e28dd00c 	add	sp, sp, #12
  bc:	e8bd8030 	pop	{r4, r5, pc}

000000c0 <SI5351A::Pre()>:
  c0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  c4:	e1a05000 	mov	r5, r0
  c8:	e5900004 	ldr	r0, [r0, #4]
  cc:	e24dd00c 	sub	sp, sp, #12
  d0:	e5d53000 	ldrb	r3, [r5]
  d4:	e3a06901 	mov	r6, #16384	; 0x4000
  d8:	e3436f80 	movt	r6, #16256	; 0x3f80
  dc:	e3a02003 	mov	r2, #3
  e0:	e5cd2004 	strb	r2, [sp, #4]
  e4:	e3e02000 	mvn	r2, #0
  e8:	e5cd2005 	strb	r2, [sp, #5]
  ec:	e3a04010 	mov	r4, #16
  f0:	e586300c 	str	r3, [r6, #12]
  f4:	e3e0707f 	mvn	r7, #127	; 0x7f
  f8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  fc:	e3a01002 	mov	r1, #2
 100:	e28d0004 	add	r0, sp, #4
 104:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 108:	e5d53000 	ldrb	r3, [r5]
 10c:	e5950004 	ldr	r0, [r5, #4]
 110:	e5cd4004 	strb	r4, [sp, #4]
 114:	e2844001 	add	r4, r4, #1
 118:	e5cd7005 	strb	r7, [sp, #5]
 11c:	e586300c 	str	r3, [r6, #12]
 120:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 124:	e3a01002 	mov	r1, #2
 128:	e28d0004 	add	r0, sp, #4
 12c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 130:	e3540018 	cmp	r4, #24
 134:	1afffff3 	bne	108 <SI5351A::Pre()+0x48>
 138:	e28dd00c 	add	sp, sp, #12
 13c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

00000140 <SI5351A::Post()>:
 140:	e92d4030 	push	{r4, r5, lr}
 144:	e1a04000 	mov	r4, r0
 148:	e5900004 	ldr	r0, [r0, #4]
 14c:	e24dd00c 	sub	sp, sp, #12
 150:	e5d43000 	ldrb	r3, [r4]
 154:	e3a05901 	mov	r5, #16384	; 0x4000
 158:	e3435f80 	movt	r5, #16256	; 0x3f80
 15c:	e3e0204e 	mvn	r2, #78	; 0x4e
 160:	e5cd2004 	strb	r2, [sp, #4]
 164:	e3e02053 	mvn	r2, #83	; 0x53
 168:	e5cd2005 	strb	r2, [sp, #5]
 16c:	e585300c 	str	r3, [r5, #12]
 170:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 174:	e3a01002 	mov	r1, #2
 178:	e28d0004 	add	r0, sp, #4
 17c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 180:	e5d43000 	ldrb	r3, [r4]
 184:	e3a02003 	mov	r2, #3
 188:	e5cd2004 	strb	r2, [sp, #4]
 18c:	e3a02000 	mov	r2, #0
 190:	e5940004 	ldr	r0, [r4, #4]
 194:	e5cd2005 	strb	r2, [sp, #5]
 198:	e585300c 	str	r3, [r5, #12]
 19c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1a0:	e3a01002 	mov	r1, #2
 1a4:	e28d0004 	add	r0, sp, #4
 1a8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1ac:	e28dd00c 	add	sp, sp, #12
 1b0:	e8bd8030 	pop	{r4, r5, pc}

000001b4 <SI5351A::ClockBuilder()>:
 1b4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 1b8:	e3a06901 	mov	r6, #16384	; 0x4000
 1bc:	e59f4064 	ldr	r4, [pc, #100]	; 228 <SI5351A::ClockBuilder()+0x74>
 1c0:	e24dd00c 	sub	sp, sp, #12
 1c4:	e3436f80 	movt	r6, #16256	; 0x3f80
 1c8:	e1a05000 	mov	r5, r0
 1cc:	e2847072 	add	r7, r4, #114	; 0x72
 1d0:	ebfffffe 	bl	c0 <SI5351A::Pre()>
 1d4:	e3a02053 	mov	r2, #83	; 0x53
 1d8:	e3a03002 	mov	r3, #2
 1dc:	ea000001 	b	1e8 <SI5351A::ClockBuilder()+0x34>
 1e0:	e5543002 	ldrb	r3, [r4, #-2]
 1e4:	e5542001 	ldrb	r2, [r4, #-1]
 1e8:	e5d51000 	ldrb	r1, [r5]
 1ec:	e2844002 	add	r4, r4, #2
 1f0:	e5950004 	ldr	r0, [r5, #4]
 1f4:	e5cd3004 	strb	r3, [sp, #4]
 1f8:	e5cd2005 	strb	r2, [sp, #5]
 1fc:	e586100c 	str	r1, [r6, #12]
 200:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 204:	e3a01002 	mov	r1, #2
 208:	e28d0004 	add	r0, sp, #4
 20c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 210:	e1540007 	cmp	r4, r7
 214:	1afffff1 	bne	1e0 <SI5351A::ClockBuilder()+0x2c>
 218:	e1a00005 	mov	r0, r5
 21c:	e28dd00c 	add	sp, sp, #12
 220:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
 224:	eafffffe 	b	140 <SI5351A::Post()>
 228:	00000002 	andeq	r0, r0, r2

Disassembly of section .rodata:

00000000 <registers>:
   0:	00035302 	andeq	r5, r3, r2, lsl #6
   4:	000f0007 	andeq	r0, pc, r7
   8:	0f110f10 	svceq	0x00110f10
   c:	8c130f12 	ldchi	15, cr0, [r3], {18}
  10:	8c158c14 	ldchi	12, cr8, [r5], {20}
  14:	8c178c16 	ldchi	12, cr8, [r7], {22}
  18:	7d1b001a 	ldcvc	0, cr0, [fp, #-104]	; 0xffffff98
  1c:	0f1d001c 	svceq	0x001d001c
  20:	001ffb1e 	andseq	pc, pc, lr, lsl fp	; <UNPREDICTABLE>
  24:	71210020 			; <UNDEFINED> instruction: 0x71210020
  28:	012b002a 			; <UNDEFINED> instruction: 0x012b002a
  2c:	302d122c 	eorcc	r1, sp, ip, lsr #4
  30:	002f002e 	eoreq	r0, pc, lr, lsr #32
  34:	00310030 	eorseq	r0, r1, r0, lsr r0
  38:	01330032 	teqeq	r3, r2, lsr r0
  3c:	30350234 	eorscc	r0, r5, r4, lsr r2
  40:	00370036 	eorseq	r0, r7, r6, lsr r0
  44:	00390038 	eorseq	r0, r9, r8, lsr r0
  48:	023b003a 	eorseq	r0, fp, #58	; 0x3a
  4c:	443d003c 	ldrtmi	r0, [sp], #-60	; 0xffffffc4
  50:	003f403e 	eorseq	r4, pc, lr, lsr r0	; <UNPREDICTABLE>
  54:	00410040 	subeq	r0, r1, r0, asr #32
  58:	005b005a 	subseq	r0, fp, sl, asr r0
  5c:	00960095 	umullseq	r0, r6, r5, r0
  60:	00980097 	umullseq	r0, r8, r7, r0
  64:	009a0099 	umullseq	r0, sl, r9, r0
  68:	00a2009b 	umlaleq	r0, r2, fp, r0
  6c:	00a400a3 	adceq	r0, r4, r3, lsr #1
  70:	Address 0x0000000000000070 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


si7021.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <sensor::SI7021::SI7021(unsigned char)>:
   0:	e92d4030 	push	{r4, r5, lr}
   4:	e2515000 	subs	r5, r1, #0
   8:	e24dd00c 	sub	sp, sp, #12
   c:	e1a04000 	mov	r4, r0
  10:	0a000017 	beq	74 <sensor::SI7021::SI7021(unsigned char)+0x74>
  14:	e5c05000 	strb	r5, [r0]
  18:	e3a03901 	mov	r3, #16384	; 0x4000
  1c:	e3433f80 	movt	r3, #16256	; 0x3f80
  20:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  24:	e3400006 	movt	r0, #6
  28:	e3a02000 	mov	r2, #0
  2c:	e5840004 	str	r0, [r4, #4]
  30:	e5c42008 	strb	r2, [r4, #8]
  34:	e583500c 	str	r5, [r3, #12]
  38:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  3c:	e2453030 	sub	r3, r5, #48	; 0x30
  40:	e2455050 	sub	r5, r5, #80	; 0x50
  44:	e355000f 	cmp	r5, #15
  48:	83530007 	cmphi	r3, #7
  4c:	8a000012 	bhi	9c <sensor::SI7021::SI7021(unsigned char)+0x9c>
  50:	e3a01001 	mov	r1, #1
  54:	e28d0007 	add	r0, sp, #7
  58:	ebfffffe 	bl	0 <bcm2835_i2c_read>
  5c:	e16f0f10 	clz	r0, r0
  60:	e1a002a0 	lsr	r0, r0, #5
  64:	e5c40008 	strb	r0, [r4, #8]
  68:	e1a00004 	mov	r0, r4
  6c:	e28dd00c 	add	sp, sp, #12
  70:	e8bd8030 	pop	{r4, r5, pc}
  74:	e5c05008 	strb	r5, [r0, #8]
  78:	e3a03901 	mov	r3, #16384	; 0x4000
  7c:	e3433f80 	movt	r3, #16256	; 0x3f80
  80:	e3a00d6a 	mov	r0, #6784	; 0x1a80
  84:	e3400006 	movt	r0, #6
  88:	e3a02040 	mov	r2, #64	; 0x40
  8c:	e5c42000 	strb	r2, [r4]
  90:	e5840004 	str	r0, [r4, #4]
  94:	e583200c 	str	r2, [r3, #12]
  98:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  9c:	e3a01000 	mov	r1, #0
  a0:	e1a00001 	mov	r0, r1
  a4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  a8:	e16f0f10 	clz	r0, r0
  ac:	e1a002a0 	lsr	r0, r0, #5
  b0:	e5c40008 	strb	r0, [r4, #8]
  b4:	e1a00004 	mov	r0, r4
  b8:	e28dd00c 	add	sp, sp, #12
  bc:	e8bd8030 	pop	{r4, r5, pc}

000000c0 <sensor::SI7021::ReadRaw(unsigned char)>:
  c0:	e92d4070 	push	{r4, r5, r6, lr}
  c4:	e1a05000 	mov	r5, r0
  c8:	e5900004 	ldr	r0, [r0, #4]
  cc:	e3a06901 	mov	r6, #16384	; 0x4000
  d0:	e5d53000 	ldrb	r3, [r5]
  d4:	e24dd008 	sub	sp, sp, #8
  d8:	e3436f80 	movt	r6, #16256	; 0x3f80
  dc:	e3a04008 	mov	r4, #8
  e0:	e5cd1004 	strb	r1, [sp, #4]
  e4:	e586300c 	str	r3, [r6, #12]
  e8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  ec:	e3a01001 	mov	r1, #1
  f0:	e28d0004 	add	r0, sp, #4
  f4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  f8:	e3003000 	movw	r3, #0
  fc:	e3a02000 	mov	r2, #0
 100:	e3403000 	movt	r3, #0
 104:	e5cd2006 	strb	r2, [sp, #6]
 108:	e1d330b0 	ldrh	r3, [r3]
 10c:	e1cd30b4 	strh	r3, [sp, #4]
 110:	e3020710 	movw	r0, #10000	; 0x2710
 114:	ebfffffe 	bl	0 <udelay>
 118:	e5d53000 	ldrb	r3, [r5]
 11c:	e5950004 	ldr	r0, [r5, #4]
 120:	e586300c 	str	r3, [r6, #12]
 124:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 128:	e3a01003 	mov	r1, #3
 12c:	e28d0004 	add	r0, sp, #4
 130:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 134:	e5dd3004 	ldrb	r3, [sp, #4]
 138:	e2033003 	and	r3, r3, #3
 13c:	e3530002 	cmp	r3, #2
 140:	0a000001 	beq	14c <sensor::SI7021::ReadRaw(unsigned char)+0x8c>
 144:	e2544001 	subs	r4, r4, #1
 148:	1afffff0 	bne	110 <sensor::SI7021::ReadRaw(unsigned char)+0x50>
 14c:	e1dd00b4 	ldrh	r0, [sp, #4]
 150:	e6bf0fb0 	rev16	r0, r0
 154:	e3c00003 	bic	r0, r0, #3
 158:	e1a00800 	lsl	r0, r0, #16
 15c:	e1a00820 	lsr	r0, r0, #16
 160:	e28dd008 	add	sp, sp, #8
 164:	e8bd8070 	pop	{r4, r5, r6, pc}

00000168 <sensor::SI7021::GetTemperature()>:
 168:	e3a010f3 	mov	r1, #243	; 0xf3
 16c:	e92d4010 	push	{r4, lr}
 170:	ebfffffe 	bl	c0 <sensor::SI7021::ReadRaw(unsigned char)>
 174:	ee070a90 	vmov	s15, r0
 178:	ed9f7a03 	vldr	s14, [pc, #12]	; 18c <sensor::SI7021::GetTemperature()+0x24>
 17c:	ed9f0a03 	vldr	s0, [pc, #12]	; 190 <sensor::SI7021::GetTemperature()+0x28>
 180:	eefb7ac8 	vcvt.f32.u32	s15, s15, #16
 184:	eea70a87 	vfma.f32	s0, s15, s14
 188:	e8bd8010 	pop	{r4, pc}
 18c:	432fb852 			; <UNDEFINED> instruction: 0x432fb852
 190:	c23b6666 	eorsgt	r6, fp, #106954752	; 0x6600000

00000194 <sensor::SI7021::GetHumidity()>:
 194:	e3a010f5 	mov	r1, #245	; 0xf5
 198:	e92d4010 	push	{r4, lr}
 19c:	ebfffffe 	bl	c0 <sensor::SI7021::ReadRaw(unsigned char)>
 1a0:	ee070a90 	vmov	s15, r0
 1a4:	eeb90a08 	vmov.f32	s0, #152	; 0xc0c00000 -6.0
 1a8:	ed9f7a02 	vldr	s14, [pc, #8]	; 1b8 <sensor::SI7021::GetHumidity()+0x24>
 1ac:	eefb7ac8 	vcvt.f32.u32	s15, s15, #16
 1b0:	eea70a87 	vfma.f32	s0, s15, s14
 1b4:	e8bd8010 	pop	{r4, pc}
 1b8:	42fa0000 	rscsmi	r0, sl, #0

Disassembly of section .rodata:

00000000 <.LANCHOR0>:
   0:	Address 0x0000000000000000 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.

