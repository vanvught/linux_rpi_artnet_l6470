In archive lib/libe131.a:

e131bridgediscoverypacket.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <E131Bridge::FillDiscoveryPacket()>:
   0:	e3a02000 	mov	r2, #0
   4:	e92d4010 	push	{r4, lr}
   8:	e5d0350a 	ldrb	r3, [r0, #1290]	; 0x50a
   c:	e590101c 	ldr	r1, [r0, #28]
  10:	e283303c 	add	r3, r3, #60	; 0x3c
  14:	e280cc05 	add	ip, r0, #1280	; 0x500
  18:	e1a03083 	lsl	r3, r3, #1
  1c:	e59fe1d4 	ldr	lr, [pc, #468]	; 1f8 <E131Bridge::FillDiscoveryPacket()+0x1f8>
  20:	e1cc30b4 	strh	r3, [ip, #4]
  24:	e2811020 	add	r1, r1, #32
  28:	e24ee020 	sub	lr, lr, #32
  2c:	e35e0017 	cmp	lr, #23
  30:	f5d1f002 	pld	[r1, #2]
  34:	e5412020 	strb	r2, [r1, #-32]	; 0xffffffe0
  38:	e541201f 	strb	r2, [r1, #-31]	; 0xffffffe1
  3c:	e541201e 	strb	r2, [r1, #-30]	; 0xffffffe2
  40:	e541201d 	strb	r2, [r1, #-29]	; 0xffffffe3
  44:	e541201c 	strb	r2, [r1, #-28]	; 0xffffffe4
  48:	e541201b 	strb	r2, [r1, #-27]	; 0xffffffe5
  4c:	e541201a 	strb	r2, [r1, #-26]	; 0xffffffe6
  50:	e5412019 	strb	r2, [r1, #-25]	; 0xffffffe7
  54:	e5412018 	strb	r2, [r1, #-24]	; 0xffffffe8
  58:	e5412017 	strb	r2, [r1, #-23]	; 0xffffffe9
  5c:	e5412016 	strb	r2, [r1, #-22]	; 0xffffffea
  60:	e5412015 	strb	r2, [r1, #-21]	; 0xffffffeb
  64:	e5412014 	strb	r2, [r1, #-20]	; 0xffffffec
  68:	e5412013 	strb	r2, [r1, #-19]	; 0xffffffed
  6c:	e5412012 	strb	r2, [r1, #-18]	; 0xffffffee
  70:	e5412011 	strb	r2, [r1, #-17]	; 0xffffffef
  74:	e5412010 	strb	r2, [r1, #-16]
  78:	e541200f 	strb	r2, [r1, #-15]
  7c:	e541200e 	strb	r2, [r1, #-14]
  80:	e541200d 	strb	r2, [r1, #-13]
  84:	e541200c 	strb	r2, [r1, #-12]
  88:	e541200b 	strb	r2, [r1, #-11]
  8c:	e541200a 	strb	r2, [r1, #-10]
  90:	e5412009 	strb	r2, [r1, #-9]
  94:	e5412008 	strb	r2, [r1, #-8]
  98:	e5412007 	strb	r2, [r1, #-7]
  9c:	e5412006 	strb	r2, [r1, #-6]
  a0:	e5412005 	strb	r2, [r1, #-5]
  a4:	e5412004 	strb	r2, [r1, #-4]
  a8:	e5412003 	strb	r2, [r1, #-3]
  ac:	e5412002 	strb	r2, [r1, #-2]
  b0:	e1a03001 	mov	r3, r1
  b4:	e5412001 	strb	r2, [r1, #-1]
  b8:	e2811020 	add	r1, r1, #32
  bc:	1affffd9 	bne	28 <E131Bridge::FillDiscoveryPacket()+0x28>
  c0:	e3a01000 	mov	r1, #0
  c4:	e2832018 	add	r2, r3, #24
  c8:	e4c31001 	strb	r1, [r3], #1
  cc:	e1530002 	cmp	r3, r2
  d0:	1afffffc 	bne	c8 <E131Bridge::FillDiscoveryPacket()+0xc8>
  d4:	e3a04010 	mov	r4, #16
  d8:	e590e01c 	ldr	lr, [r0, #28]
  dc:	e59f2118 	ldr	r2, [pc, #280]	; 1fc <E131Bridge::FillDiscoveryPacket()+0x1fc>
  e0:	e5ce1000 	strb	r1, [lr]
  e4:	e28e3003 	add	r3, lr, #3
  e8:	e28ec00f 	add	ip, lr, #15
  ec:	e5ce4001 	strb	r4, [lr, #1]
  f0:	e4d21001 	ldrb	r1, [r2], #1
  f4:	e5e31001 	strb	r1, [r3, #1]!
  f8:	e15c0003 	cmp	ip, r3
  fc:	1afffffb 	bne	f0 <E131Bridge::FillDiscoveryPacket()+0xf0>
 100:	e590101c 	ldr	r1, [r0, #28]
 104:	e3a0e008 	mov	lr, #8
 108:	e3a0c000 	mov	ip, #0
 10c:	e1a02001 	mov	r2, r1
 110:	e5d0350a 	ldrb	r3, [r0, #1290]	; 0x50a
 114:	e5c1c012 	strb	ip, [r1, #18]
 118:	e2833034 	add	r3, r3, #52	; 0x34
 11c:	e1a03083 	lsl	r3, r3, #1
 120:	e3833a07 	orr	r3, r3, #28672	; 0x7000
 124:	e6bf3fb3 	rev16	r3, r3
 128:	e5c13010 	strb	r3, [r1, #16]
 12c:	e6ff3073 	uxth	r3, r3
 130:	e1a03e33 	lsr	r3, r3, lr
 134:	e5c13011 	strb	r3, [r1, #17]
 138:	e5c1c013 	strb	ip, [r1, #19]
 13c:	e5c1c014 	strb	ip, [r1, #20]
 140:	e2803024 	add	r3, r0, #36	; 0x24
 144:	e5e2e015 	strb	lr, [r2, #21]!
 148:	e280c034 	add	ip, r0, #52	; 0x34
 14c:	e4d31001 	ldrb	r1, [r3], #1
 150:	e153000c 	cmp	r3, ip
 154:	e5e21001 	strb	r1, [r2, #1]!
 158:	1afffffb 	bne	14c <E131Bridge::FillDiscoveryPacket()+0x14c>
 15c:	e5d0250a 	ldrb	r2, [r0, #1290]	; 0x50a
 160:	e590101c 	ldr	r1, [r0, #28]
 164:	e2822029 	add	r2, r2, #41	; 0x29
 168:	e1a02082 	lsl	r2, r2, #1
 16c:	e3822a07 	orr	r2, r2, #28672	; 0x7000
 170:	e6bf2fb2 	rev16	r2, r2
 174:	e6ffc072 	uxth	ip, r2
 178:	e5c12026 	strb	r2, [r1, #38]	; 0x26
 17c:	e1a0242c 	lsr	r2, ip, #8
 180:	e3a0e000 	mov	lr, #0
 184:	e5c12027 	strb	r2, [r1, #39]	; 0x27
 188:	e3a04002 	mov	r4, #2
 18c:	e1a02001 	mov	r2, r1
 190:	e5c1e028 	strb	lr, [r1, #40]	; 0x28
 194:	e5c1e029 	strb	lr, [r1, #41]	; 0x29
 198:	e5c1e02a 	strb	lr, [r1, #42]	; 0x2a
 19c:	e280c074 	add	ip, r0, #116	; 0x74
 1a0:	e5e2402b 	strb	r4, [r2, #43]!	; 0x2b
 1a4:	e4d31001 	ldrb	r1, [r3], #1
 1a8:	e153000c 	cmp	r3, ip
 1ac:	e5e21001 	strb	r1, [r2, #1]!
 1b0:	1afffffb 	bne	1a4 <E131Bridge::FillDiscoveryPacket()+0x1a4>
 1b4:	e3a0c001 	mov	ip, #1
 1b8:	e3a01000 	mov	r1, #0
 1bc:	e5d0350a 	ldrb	r3, [r0, #1290]	; 0x50a
 1c0:	e590201c 	ldr	r2, [r0, #28]
 1c4:	e2833004 	add	r3, r3, #4
 1c8:	e1a03c13 	lsl	r3, r3, ip
 1cc:	e3833a07 	orr	r3, r3, #28672	; 0x7000
 1d0:	e6bf3fb3 	rev16	r3, r3
 1d4:	e6ff0073 	uxth	r0, r3
 1d8:	e1a00420 	lsr	r0, r0, #8
 1dc:	e5c23070 	strb	r3, [r2, #112]	; 0x70
 1e0:	e5c20071 	strb	r0, [r2, #113]	; 0x71
 1e4:	e5c21072 	strb	r1, [r2, #114]	; 0x72
 1e8:	e5c21073 	strb	r1, [r2, #115]	; 0x73
 1ec:	e5c21074 	strb	r1, [r2, #116]	; 0x74
 1f0:	e5c2c075 	strb	ip, [r2, #117]	; 0x75
 1f4:	e8bd8010 	pop	{r4, pc}
 1f8:	00000477 	andeq	r0, r0, r7, ror r4
 1fc:	00000000 	andeq	r0, r0, r0

00000200 <E131Bridge::SendDiscoveryPacket()>:
 200:	e590200c 	ldr	r2, [r0, #12]
 204:	e5903500 	ldr	r3, [r0, #1280]	; 0x500
 208:	e59f10b0 	ldr	r1, [pc, #176]	; 2c0 <E131Bridge::SendDiscoveryPacket()+0xc0>
 20c:	e0423003 	sub	r3, r2, r3
 210:	e1530001 	cmp	r3, r1
 214:	912fff1e 	bxls	lr
 218:	e92d4070 	push	{r4, r5, r6, lr}
 21c:	e5d0350a 	ldrb	r3, [r0, #1290]	; 0x50a
 220:	e1a04000 	mov	r4, r0
 224:	e3530000 	cmp	r3, #0
 228:	e24dd010 	sub	sp, sp, #16
 22c:	e5802500 	str	r2, [r0, #1280]	; 0x500
 230:	0a000015 	beq	28c <E131Bridge::SendDiscoveryPacket()+0x8c>
 234:	e3a05000 	mov	r5, #0
 238:	e1a06005 	mov	r6, r5
 23c:	e1a01005 	mov	r1, r5
 240:	e3a03000 	mov	r3, #0
 244:	e1a00004 	mov	r0, r4
 248:	e28d200e 	add	r2, sp, #14
 24c:	ebfffffe 	bl	0 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 250:	e3500000 	cmp	r0, #0
 254:	e2855001 	add	r5, r5, #1
 258:	e286103c 	add	r1, r6, #60	; 0x3c
 25c:	0a000008 	beq	284 <E131Bridge::SendDiscoveryPacket()+0x84>
 260:	e1dd30be 	ldrh	r3, [sp, #14]
 264:	e594201c 	ldr	r2, [r4, #28]
 268:	e6bf3fb3 	rev16	r3, r3
 26c:	e7c23081 	strb	r3, [r2, r1, lsl #1]
 270:	e6ff3073 	uxth	r3, r3
 274:	e0822081 	add	r2, r2, r1, lsl #1
 278:	e1a03423 	lsr	r3, r3, #8
 27c:	e2866001 	add	r6, r6, #1
 280:	e5c23001 	strb	r3, [r2, #1]
 284:	e3550004 	cmp	r5, #4
 288:	1affffeb 	bne	23c <E131Bridge::SendDiscoveryPacket()+0x3c>
 28c:	e3a0cd57 	mov	ip, #5568	; 0x15c0
 290:	e5942020 	ldr	r2, [r4, #32]
 294:	e59f1028 	ldr	r1, [pc, #40]	; 2c4 <E131Bridge::SendDiscoveryPacket()+0xc4>
 298:	e2843c05 	add	r3, r4, #1280	; 0x500
 29c:	e5910000 	ldr	r0, [r1]
 2a0:	e1d330b4 	ldrh	r3, [r3, #4]
 2a4:	e58d2000 	str	r2, [sp]
 2a8:	e594201c 	ldr	r2, [r4, #28]
 2ac:	e5941000 	ldr	r1, [r4]
 2b0:	e58dc004 	str	ip, [sp, #4]
 2b4:	ebfffffe 	bl	0 <Network::SendTo(int, void const*, unsigned short, unsigned int, unsigned short)>
 2b8:	e28dd010 	add	sp, sp, #16
 2bc:	e8bd8070 	pop	{r4, r5, r6, pc}
 2c0:	0000270f 	andeq	r2, r0, pc, lsl #14
 2c4:	00000000 	andeq	r0, r0, r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <E131Bridge::SendDiscoveryPacket()+0x168d62c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <E131Bridge::SendDiscoveryPacket()+0x42224>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


e131bridgeconst.o:     file format elf32-littlearm


Disassembly of section .rodata:

00000000 <E131BridgeConst::VERSION>:
   0:	Address 0x0000000000000000 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003b41 	andeq	r3, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000031 	andeq	r0, r0, r1, lsr r0
  10:	4d524105 	ldfmie	f4, [r2, #-20]	; 0xffffffec
  14:	36373131 			; <UNDEFINED> instruction: 0x36373131
  18:	2d465a4a 	vstrcs	s11, [r6, #-296]	; 0xfffffed8
  1c:	07060053 	smlsdeq	r6, r3, r0, r0
  20:	01090108 	tsteq	r9, r8, lsl #2
  24:	0412020a 	ldreq	r0, [r2], #-522	; 0xfffffdf6
  28:	01150114 	tsteq	r5, r4, lsl r1
  2c:	01180317 	tsteq	r8, r7, lsl r3
  30:	011a0119 	tsteq	sl, r9, lsl r1
  34:	021e011c 	andseq	r0, lr, #28, 2
  38:	01440122 	cmpeq	r4, r2, lsr #2

e131paramsdump.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <E131Params::Dump()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <E131Params::Dump()+0x168d82c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <E131Params::Dump()+0x42424>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


e131controller.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <E131Controller::E131Controller()>:
   0:	e3a02000 	mov	r2, #0
   4:	e3a010ff 	mov	r1, #255	; 0xff
   8:	e3e0c000 	mvn	ip, #0
   c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  10:	e1a05000 	mov	r5, r0
  14:	e59f3188 	ldr	r3, [pc, #392]	; 1a4 <E131Controller::E131Controller()+0x1a4>
  18:	e5801080 	str	r1, [r0, #128]	; 0x80
  1c:	e5830000 	str	r0, [r3]
  20:	e24dd05c 	sub	sp, sp, #92	; 0x5c
  24:	e580c000 	str	ip, [r0]
  28:	e5802004 	str	r2, [r0, #4]
  2c:	e5802020 	str	r2, [r0, #32]
  30:	e5802024 	str	r2, [r0, #36]	; 0x24
  34:	e5802028 	str	r2, [r0, #40]	; 0x28
  38:	e580202c 	str	r2, [r0, #44]	; 0x2c
  3c:	e2803008 	add	r3, r0, #8
  40:	e2801020 	add	r1, r0, #32
  44:	e4c32001 	strb	r2, [r3], #1
  48:	e1530001 	cmp	r3, r1
  4c:	1afffffc 	bne	44 <E131Controller::E131Controller()+0x44>
  50:	e3a02064 	mov	r2, #100	; 0x64
  54:	e59f614c 	ldr	r6, [pc, #332]	; 1a8 <E131Controller::E131Controller()+0x1a8>
  58:	e59f714c 	ldr	r7, [pc, #332]	; 1ac <E131Controller::E131Controller()+0x1ac>
  5c:	e5963000 	ldr	r3, [r6]
  60:	e28d1013 	add	r1, sp, #19
  64:	e2833010 	add	r3, r3, #16
  68:	e5c52010 	strb	r2, [r5, #16]
  6c:	e5970000 	ldr	r0, [r7]
  70:	e58d300c 	str	r3, [sp, #12]
  74:	ebfffffe 	bl	0 <Hardware::GetBoardName(unsigned char&)>
  78:	e1a0c000 	mov	ip, r0
  7c:	e3a01040 	mov	r1, #64	; 0x40
  80:	e59d300c 	ldr	r3, [sp, #12]
  84:	e58dc000 	str	ip, [sp]
  88:	e59f2120 	ldr	r2, [pc, #288]	; 1b0 <E131Controller::E131Controller()+0x1b0>
  8c:	e28d0018 	add	r0, sp, #24
  90:	ebfffffe 	bl	0 <snprintf>
  94:	e2853040 	add	r3, r5, #64	; 0x40
  98:	e28d1017 	add	r1, sp, #23
  9c:	e28de056 	add	lr, sp, #86	; 0x56
  a0:	e285c07f 	add	ip, r5, #127	; 0x7f
  a4:	e5f12001 	ldrb	r2, [r1, #1]!
  a8:	e04c0003 	sub	r0, ip, r3
  ac:	e3520000 	cmp	r2, #0
  b0:	0a000034 	beq	188 <E131Controller::E131Controller()+0x188>
  b4:	e151000e 	cmp	r1, lr
  b8:	e4c32001 	strb	r2, [r3], #1
  bc:	1afffff8 	bne	a4 <E131Controller::E131Controller()+0xa4>
  c0:	e3a04000 	mov	r4, #0
  c4:	e2851030 	add	r1, r5, #48	; 0x30
  c8:	e5970000 	ldr	r0, [r7]
  cc:	e5c5407f 	strb	r4, [r5, #127]	; 0x7f
  d0:	ebfffffe 	bl	0 <Hardware::GetUuid(unsigned char*)>
  d4:	e59f20d8 	ldr	r2, [pc, #216]	; 1b4 <E131Controller::E131Controller()+0x1b4>
  d8:	e2821a01 	add	r1, r2, #4096	; 0x1000
  dc:	e2423008 	sub	r3, r2, #8
  e0:	e4c34001 	strb	r4, [r3], #1
  e4:	e1530002 	cmp	r3, r2
  e8:	1afffffc 	bne	e0 <E131Controller::E131Controller()+0xe0>
  ec:	e2832008 	add	r2, r3, #8
  f0:	e1520001 	cmp	r2, r1
  f4:	1afffff8 	bne	dc <E131Controller::E131Controller()+0xdc>
  f8:	e59f30b8 	ldr	r3, [pc, #184]	; 1b8 <E131Controller::E131Controller()+0x1b8>
  fc:	e28d1014 	add	r1, sp, #20
 100:	e1c531b4 	strh	r3, [r5, #20]
 104:	e59f00b0 	ldr	r0, [pc, #176]	; 1bc <E131Controller::E131Controller()+0x1bc>
 108:	ebfffffe 	bl	0 <inet_aton>
 10c:	e59d3014 	ldr	r3, [sp, #20]
 110:	e28d1014 	add	r1, sp, #20
 114:	e3833322 	orr	r3, r3, #-2013265920	; 0x88000000
 118:	e3833813 	orr	r3, r3, #1245184	; 0x130000
 11c:	e5853018 	str	r3, [r5, #24]
 120:	e59f0094 	ldr	r0, [pc, #148]	; 1bc <E131Controller::E131Controller()+0x1bc>
 124:	ebfffffe 	bl	0 <inet_aton>
 128:	e59d3014 	ldr	r3, [sp, #20]
 12c:	e59f008c 	ldr	r0, [pc, #140]	; 1c0 <E131Controller::E131Controller()+0x1c0>
 130:	e38334d6 	orr	r3, r3, #-704643072	; 0xd6000000
 134:	e38338fa 	orr	r3, r3, #16384000	; 0xfa0000
 138:	e585302c 	str	r3, [r5, #44]	; 0x2c
 13c:	ebfffffe 	bl	0 <operator new(unsigned int)>
 140:	e1a03000 	mov	r3, r0
 144:	e59f0078 	ldr	r0, [pc, #120]	; 1c4 <E131Controller::E131Controller()+0x1c4>
 148:	e5853020 	str	r3, [r5, #32]
 14c:	ebfffffe 	bl	0 <operator new(unsigned int)>
 150:	e1a03000 	mov	r3, r0
 154:	e3a00031 	mov	r0, #49	; 0x31
 158:	e5853024 	str	r3, [r5, #36]	; 0x24
 15c:	ebfffffe 	bl	0 <operator new(unsigned int)>
 160:	e1a03000 	mov	r3, r0
 164:	e3a01d57 	mov	r1, #5568	; 0x15c0
 168:	e5853028 	str	r3, [r5, #40]	; 0x28
 16c:	e5960000 	ldr	r0, [r6]
 170:	ebfffffe 	bl	0 <Network::Begin(unsigned short)>
 174:	e1a03000 	mov	r3, r0
 178:	e1a00005 	mov	r0, r5
 17c:	e5853000 	str	r3, [r5]
 180:	e28dd05c 	add	sp, sp, #92	; 0x5c
 184:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 188:	e3500000 	cmp	r0, #0
 18c:	0affffcb 	beq	c0 <E131Controller::E131Controller()+0xc0>
 190:	e0830000 	add	r0, r3, r0
 194:	e4c32001 	strb	r2, [r3], #1
 198:	e1530000 	cmp	r3, r0
 19c:	1afffffc 	bne	194 <E131Controller::E131Controller()+0x194>
 1a0:	eaffffc6 	b	c0 <E131Controller::E131Controller()+0xc0>
	...
 1b4:	00000010 	andeq	r0, r0, r0, lsl r0
 1b8:	00001388 	andeq	r1, r0, r8, lsl #7
 1bc:	0000000c 	andeq	r0, r0, ip
 1c0:	0000027e 	andeq	r0, r0, lr, ror r2
 1c4:	00000478 	andeq	r0, r0, r8, ror r4

000001c8 <E131Controller::~E131Controller()>:
 1c8:	e92d4010 	push	{r4, lr}
 1cc:	e1a04000 	mov	r4, r0
 1d0:	e59f3050 	ldr	r3, [pc, #80]	; 228 <E131Controller::~E131Controller()+0x60>
 1d4:	e3a01d57 	mov	r1, #5568	; 0x15c0
 1d8:	e5930000 	ldr	r0, [r3]
 1dc:	ebfffffe 	bl	0 <Network::End(unsigned short)>
 1e0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
 1e4:	e3500000 	cmp	r0, #0
 1e8:	0a000002 	beq	1f8 <E131Controller::~E131Controller()+0x30>
 1ec:	ebfffffe 	bl	0 <operator delete(void*)>
 1f0:	e3a03000 	mov	r3, #0
 1f4:	e5843028 	str	r3, [r4, #40]	; 0x28
 1f8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
 1fc:	e3500000 	cmp	r0, #0
 200:	0a000002 	beq	210 <E131Controller::~E131Controller()+0x48>
 204:	ebfffffe 	bl	0 <operator delete(void*)>
 208:	e3a03000 	mov	r3, #0
 20c:	e5843024 	str	r3, [r4, #36]	; 0x24
 210:	e5940020 	ldr	r0, [r4, #32]
 214:	e3500000 	cmp	r0, #0
 218:	0a000000 	beq	220 <E131Controller::~E131Controller()+0x58>
 21c:	ebfffffe 	bl	0 <operator delete(void*)>
 220:	e1a00004 	mov	r0, r4
 224:	e8bd8010 	pop	{r4, pc}
 228:	00000000 	andeq	r0, r0, r0

0000022c <E131Controller::Stop()>:
 22c:	e3a03000 	mov	r3, #0
 230:	e5c03008 	strb	r3, [r0, #8]
 234:	e12fff1e 	bx	lr

00000238 <E131Controller::FillDataPacket()>:
 238:	e3a01000 	mov	r1, #0
 23c:	e3a0c010 	mov	ip, #16
 240:	e5903020 	ldr	r3, [r0, #32]
 244:	e59f20f8 	ldr	r2, [pc, #248]	; 344 <E131Controller::FillDataPacket()+0x10c>
 248:	e92d4010 	push	{r4, lr}
 24c:	e5c3c001 	strb	ip, [r3, #1]
 250:	e5c31000 	strb	r1, [r3]
 254:	e5c31002 	strb	r1, [r3, #2]
 258:	e283c00f 	add	ip, r3, #15
 25c:	e5e31003 	strb	r1, [r3, #3]!
 260:	e4d21001 	ldrb	r1, [r2], #1
 264:	e5e31001 	strb	r1, [r3, #1]!
 268:	e15c0003 	cmp	ip, r3
 26c:	1afffffb 	bne	260 <E131Controller::FillDataPacket()+0x28>
 270:	e5901020 	ldr	r1, [r0, #32]
 274:	e3a0e000 	mov	lr, #0
 278:	e3a04004 	mov	r4, #4
 27c:	e1a02001 	mov	r2, r1
 280:	e5c1e012 	strb	lr, [r1, #18]
 284:	e5c1e013 	strb	lr, [r1, #19]
 288:	e5c1e014 	strb	lr, [r1, #20]
 28c:	e2803030 	add	r3, r0, #48	; 0x30
 290:	e280c040 	add	ip, r0, #64	; 0x40
 294:	e5e24015 	strb	r4, [r2, #21]!
 298:	e4d31001 	ldrb	r1, [r3], #1
 29c:	e153000c 	cmp	r3, ip
 2a0:	e5e21001 	strb	r1, [r2, #1]!
 2a4:	1afffffb 	bne	298 <E131Controller::FillDataPacket()+0x60>
 2a8:	e5901020 	ldr	r1, [r0, #32]
 2ac:	e3a0e000 	mov	lr, #0
 2b0:	e3a04002 	mov	r4, #2
 2b4:	e1a02001 	mov	r2, r1
 2b8:	e5c1e028 	strb	lr, [r1, #40]	; 0x28
 2bc:	e5c1e029 	strb	lr, [r1, #41]	; 0x29
 2c0:	e5c1e02a 	strb	lr, [r1, #42]	; 0x2a
 2c4:	e280c080 	add	ip, r0, #128	; 0x80
 2c8:	e5e2402b 	strb	r4, [r2, #43]!	; 0x2b
 2cc:	e4d31001 	ldrb	r1, [r3], #1
 2d0:	e153000c 	cmp	r3, ip
 2d4:	e5e21001 	strb	r1, [r2, #1]!
 2d8:	1afffffb 	bne	2cc <E131Controller::FillDataPacket()+0x94>
 2dc:	e3a02000 	mov	r2, #0
 2e0:	e3a04002 	mov	r4, #2
 2e4:	e3e0e05e 	mvn	lr, #94	; 0x5e
 2e8:	e3a0c001 	mov	ip, #1
 2ec:	e5903020 	ldr	r3, [r0, #32]
 2f0:	e5d01010 	ldrb	r1, [r0, #16]
 2f4:	e5c3106c 	strb	r1, [r3, #108]	; 0x6c
 2f8:	e1d031b4 	ldrh	r3, [r0, #20]
 2fc:	e5901020 	ldr	r1, [r0, #32]
 300:	e6bf3fb3 	rev16	r3, r3
 304:	e5c1306d 	strb	r3, [r1, #109]	; 0x6d
 308:	e6ff3073 	uxth	r3, r3
 30c:	e5c12070 	strb	r2, [r1, #112]	; 0x70
 310:	e1a03423 	lsr	r3, r3, #8
 314:	e5c1306e 	strb	r3, [r1, #110]	; 0x6e
 318:	e5903020 	ldr	r3, [r0, #32]
 31c:	e5c34075 	strb	r4, [r3, #117]	; 0x75
 320:	e5903020 	ldr	r3, [r0, #32]
 324:	e5c3e076 	strb	lr, [r3, #118]	; 0x76
 328:	e5903020 	ldr	r3, [r0, #32]
 32c:	e5c32077 	strb	r2, [r3, #119]	; 0x77
 330:	e5c32078 	strb	r2, [r3, #120]	; 0x78
 334:	e5c32079 	strb	r2, [r3, #121]	; 0x79
 338:	e5c3c07a 	strb	ip, [r3, #122]	; 0x7a
 33c:	e5c3207d 	strb	r2, [r3, #125]	; 0x7d
 340:	e8bd8010 	pop	{r4, pc}
 344:	00000000 	andeq	r0, r0, r0

00000348 <E131Controller::FillDiscoveryPacket()>:
 348:	e3a02000 	mov	r2, #0
 34c:	e92d4010 	push	{r4, lr}
 350:	e5903024 	ldr	r3, [r0, #36]	; 0x24
 354:	e59fc164 	ldr	ip, [pc, #356]	; 4c0 <E131Controller::FillDiscoveryPacket()+0x178>
 358:	e2831020 	add	r1, r3, #32
 35c:	e24cc020 	sub	ip, ip, #32
 360:	e35c0017 	cmp	ip, #23
 364:	f5d1f002 	pld	[r1, #2]
 368:	e5412020 	strb	r2, [r1, #-32]	; 0xffffffe0
 36c:	e541201f 	strb	r2, [r1, #-31]	; 0xffffffe1
 370:	e541201e 	strb	r2, [r1, #-30]	; 0xffffffe2
 374:	e541201d 	strb	r2, [r1, #-29]	; 0xffffffe3
 378:	e541201c 	strb	r2, [r1, #-28]	; 0xffffffe4
 37c:	e541201b 	strb	r2, [r1, #-27]	; 0xffffffe5
 380:	e541201a 	strb	r2, [r1, #-26]	; 0xffffffe6
 384:	e5412019 	strb	r2, [r1, #-25]	; 0xffffffe7
 388:	e5412018 	strb	r2, [r1, #-24]	; 0xffffffe8
 38c:	e5412017 	strb	r2, [r1, #-23]	; 0xffffffe9
 390:	e5412016 	strb	r2, [r1, #-22]	; 0xffffffea
 394:	e5412015 	strb	r2, [r1, #-21]	; 0xffffffeb
 398:	e5412014 	strb	r2, [r1, #-20]	; 0xffffffec
 39c:	e5412013 	strb	r2, [r1, #-19]	; 0xffffffed
 3a0:	e5412012 	strb	r2, [r1, #-18]	; 0xffffffee
 3a4:	e5412011 	strb	r2, [r1, #-17]	; 0xffffffef
 3a8:	e5412010 	strb	r2, [r1, #-16]
 3ac:	e541200f 	strb	r2, [r1, #-15]
 3b0:	e541200e 	strb	r2, [r1, #-14]
 3b4:	e541200d 	strb	r2, [r1, #-13]
 3b8:	e541200c 	strb	r2, [r1, #-12]
 3bc:	e541200b 	strb	r2, [r1, #-11]
 3c0:	e541200a 	strb	r2, [r1, #-10]
 3c4:	e5412009 	strb	r2, [r1, #-9]
 3c8:	e5412008 	strb	r2, [r1, #-8]
 3cc:	e5412007 	strb	r2, [r1, #-7]
 3d0:	e5412006 	strb	r2, [r1, #-6]
 3d4:	e5412005 	strb	r2, [r1, #-5]
 3d8:	e5412004 	strb	r2, [r1, #-4]
 3dc:	e5412003 	strb	r2, [r1, #-3]
 3e0:	e5412002 	strb	r2, [r1, #-2]
 3e4:	e1a03001 	mov	r3, r1
 3e8:	e5412001 	strb	r2, [r1, #-1]
 3ec:	e2811020 	add	r1, r1, #32
 3f0:	1affffd9 	bne	35c <E131Controller::FillDiscoveryPacket()+0x14>
 3f4:	e3a01000 	mov	r1, #0
 3f8:	e2832018 	add	r2, r3, #24
 3fc:	e4c31001 	strb	r1, [r3], #1
 400:	e1530002 	cmp	r3, r2
 404:	1afffffc 	bne	3fc <E131Controller::FillDiscoveryPacket()+0xb4>
 408:	e3a04010 	mov	r4, #16
 40c:	e590e024 	ldr	lr, [r0, #36]	; 0x24
 410:	e59f20ac 	ldr	r2, [pc, #172]	; 4c4 <E131Controller::FillDiscoveryPacket()+0x17c>
 414:	e5ce1000 	strb	r1, [lr]
 418:	e28e3003 	add	r3, lr, #3
 41c:	e28ec00f 	add	ip, lr, #15
 420:	e5ce4001 	strb	r4, [lr, #1]
 424:	e4d21001 	ldrb	r1, [r2], #1
 428:	e5e31001 	strb	r1, [r3, #1]!
 42c:	e15c0003 	cmp	ip, r3
 430:	1afffffb 	bne	424 <E131Controller::FillDiscoveryPacket()+0xdc>
 434:	e5901024 	ldr	r1, [r0, #36]	; 0x24
 438:	e3a0e000 	mov	lr, #0
 43c:	e3a04008 	mov	r4, #8
 440:	e1a02001 	mov	r2, r1
 444:	e5c1e012 	strb	lr, [r1, #18]
 448:	e5c1e013 	strb	lr, [r1, #19]
 44c:	e5c1e014 	strb	lr, [r1, #20]
 450:	e2803030 	add	r3, r0, #48	; 0x30
 454:	e280c040 	add	ip, r0, #64	; 0x40
 458:	e5e24015 	strb	r4, [r2, #21]!
 45c:	e4d31001 	ldrb	r1, [r3], #1
 460:	e153000c 	cmp	r3, ip
 464:	e5e21001 	strb	r1, [r2, #1]!
 468:	1afffffb 	bne	45c <E131Controller::FillDiscoveryPacket()+0x114>
 46c:	e5901024 	ldr	r1, [r0, #36]	; 0x24
 470:	e3a0e000 	mov	lr, #0
 474:	e3a04002 	mov	r4, #2
 478:	e1a02001 	mov	r2, r1
 47c:	e5c1e028 	strb	lr, [r1, #40]	; 0x28
 480:	e5c1e029 	strb	lr, [r1, #41]	; 0x29
 484:	e5c1e02a 	strb	lr, [r1, #42]	; 0x2a
 488:	e280c080 	add	ip, r0, #128	; 0x80
 48c:	e5e2402b 	strb	r4, [r2, #43]!	; 0x2b
 490:	e4d31001 	ldrb	r1, [r3], #1
 494:	e153000c 	cmp	r3, ip
 498:	e5e21001 	strb	r1, [r2, #1]!
 49c:	1afffffb 	bne	490 <E131Controller::FillDiscoveryPacket()+0x148>
 4a0:	e3a02000 	mov	r2, #0
 4a4:	e3a01001 	mov	r1, #1
 4a8:	e5903024 	ldr	r3, [r0, #36]	; 0x24
 4ac:	e5c32072 	strb	r2, [r3, #114]	; 0x72
 4b0:	e5c32073 	strb	r2, [r3, #115]	; 0x73
 4b4:	e5c32074 	strb	r2, [r3, #116]	; 0x74
 4b8:	e5c31075 	strb	r1, [r3, #117]	; 0x75
 4bc:	e8bd8010 	pop	{r4, pc}
 4c0:	00000477 	andeq	r0, r0, r7, ror r4
 4c4:	00000000 	andeq	r0, r0, r0

000004c8 <E131Controller::FillSynchronizationPacket()>:
 4c8:	e3a01000 	mov	r1, #0
 4cc:	e92d4070 	push	{r4, r5, r6, lr}
 4d0:	e5903028 	ldr	r3, [r0, #40]	; 0x28
 4d4:	e2832031 	add	r2, r3, #49	; 0x31
 4d8:	e4c31001 	strb	r1, [r3], #1
 4dc:	e1530002 	cmp	r3, r2
 4e0:	1afffffc 	bne	4d8 <E131Controller::FillSynchronizationPacket()+0x10>
 4e4:	e3a04010 	mov	r4, #16
 4e8:	e590e028 	ldr	lr, [r0, #40]	; 0x28
 4ec:	e59f20ac 	ldr	r2, [pc, #172]	; 5a0 <E131Controller::FillSynchronizationPacket()+0xd8>
 4f0:	e5ce1000 	strb	r1, [lr]
 4f4:	e28e3003 	add	r3, lr, #3
 4f8:	e28ec00f 	add	ip, lr, #15
 4fc:	e5ce4001 	strb	r4, [lr, #1]
 500:	e4d21001 	ldrb	r1, [r2], #1
 504:	e5e31001 	strb	r1, [r3, #1]!
 508:	e153000c 	cmp	r3, ip
 50c:	1afffffb 	bne	500 <E131Controller::FillSynchronizationPacket()+0x38>
 510:	e5901028 	ldr	r1, [r0, #40]	; 0x28
 514:	e3a0e000 	mov	lr, #0
 518:	e3a06070 	mov	r6, #112	; 0x70
 51c:	e3a05021 	mov	r5, #33	; 0x21
 520:	e3a04008 	mov	r4, #8
 524:	e1a02001 	mov	r2, r1
 528:	e5c1e012 	strb	lr, [r1, #18]
 52c:	e5c16010 	strb	r6, [r1, #16]
 530:	e5c15011 	strb	r5, [r1, #17]
 534:	e5c1e013 	strb	lr, [r1, #19]
 538:	e5c1e014 	strb	lr, [r1, #20]
 53c:	e2803030 	add	r3, r0, #48	; 0x30
 540:	e280c040 	add	ip, r0, #64	; 0x40
 544:	e5e24015 	strb	r4, [r2, #21]!
 548:	e4d31001 	ldrb	r1, [r3], #1
 54c:	e153000c 	cmp	r3, ip
 550:	e5e21001 	strb	r1, [r2, #1]!
 554:	1afffffb 	bne	548 <E131Controller::FillSynchronizationPacket()+0x80>
 558:	e3a01070 	mov	r1, #112	; 0x70
 55c:	e3a0200b 	mov	r2, #11
 560:	e3a0c000 	mov	ip, #0
 564:	e3a0e001 	mov	lr, #1
 568:	e5903028 	ldr	r3, [r0, #40]	; 0x28
 56c:	e5c31026 	strb	r1, [r3, #38]	; 0x26
 570:	e5c32027 	strb	r2, [r3, #39]	; 0x27
 574:	e1d021b4 	ldrh	r2, [r0, #20]
 578:	e5c3c028 	strb	ip, [r3, #40]	; 0x28
 57c:	e6bf2fb2 	rev16	r2, r2
 580:	e6ff1072 	uxth	r1, r2
 584:	e1a01421 	lsr	r1, r1, #8
 588:	e5c3c029 	strb	ip, [r3, #41]	; 0x29
 58c:	e5c3c02a 	strb	ip, [r3, #42]	; 0x2a
 590:	e5c3e02b 	strb	lr, [r3, #43]	; 0x2b
 594:	e5c3202d 	strb	r2, [r3, #45]	; 0x2d
 598:	e5c3102e 	strb	r1, [r3, #46]	; 0x2e
 59c:	e8bd8070 	pop	{r4, r5, r6, pc}
 5a0:	00000000 	andeq	r0, r0, r0

000005a4 <E131Controller::Start()>:
 5a4:	e92d4010 	push	{r4, lr}
 5a8:	ebfffffe 	bl	238 <E131Controller::FillDataPacket()>
 5ac:	ebfffffe 	bl	348 <E131Controller::FillDiscoveryPacket()>
 5b0:	ebfffffe 	bl	4c8 <E131Controller::FillSynchronizationPacket()>
 5b4:	e3a03001 	mov	r3, #1
 5b8:	e1a04000 	mov	r4, r0
 5bc:	e5c03008 	strb	r3, [r0, #8]
 5c0:	e8bd8010 	pop	{r4, pc}

000005c4 <E131Controller::HandleSync()>:
 5c4:	e1d031b4 	ldrh	r3, [r0, #20]
 5c8:	e3530000 	cmp	r3, #0
 5cc:	012fff1e 	bxeq	lr
 5d0:	e1a01000 	mov	r1, r0
 5d4:	e3a0cd57 	mov	ip, #5568	; 0x15c0
 5d8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 5dc:	e5d0301c 	ldrb	r3, [r0, #28]
 5e0:	e5902028 	ldr	r2, [r0, #40]	; 0x28
 5e4:	e2830001 	add	r0, r3, #1
 5e8:	e5c1001c 	strb	r0, [r1, #28]
 5ec:	e5c2302c 	strb	r3, [r2, #44]	; 0x2c
 5f0:	e5912018 	ldr	r2, [r1, #24]
 5f4:	e59f0024 	ldr	r0, [pc, #36]	; 620 <E131Controller::HandleSync()+0x5c>
 5f8:	e24dd00c 	sub	sp, sp, #12
 5fc:	e5900000 	ldr	r0, [r0]
 600:	e58d2000 	str	r2, [sp]
 604:	e5912028 	ldr	r2, [r1, #40]	; 0x28
 608:	e3a03031 	mov	r3, #49	; 0x31
 60c:	e5911000 	ldr	r1, [r1]
 610:	e58dc004 	str	ip, [sp, #4]
 614:	ebfffffe 	bl	0 <Network::SendTo(int, void const*, unsigned short, unsigned int, unsigned short)>
 618:	e28dd00c 	add	sp, sp, #12
 61c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 620:	00000000 	andeq	r0, r0, r0

00000624 <E131Controller::GetSoftwareVersion()>:
 624:	e59f0000 	ldr	r0, [pc]	; 62c <E131Controller::GetSoftwareVersion()+0x8>
 628:	e12fff1e 	bx	lr
 62c:	00000000 	andeq	r0, r0, r0

00000630 <E131Controller::SetSourceName(char const*)>:
 630:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 634:	e2803040 	add	r3, r0, #64	; 0x40
 638:	e2412001 	sub	r2, r1, #1
 63c:	e281c03e 	add	ip, r1, #62	; 0x3e
 640:	e04ce002 	sub	lr, ip, r2
 644:	e5f21001 	ldrb	r1, [r2, #1]!
 648:	e3510000 	cmp	r1, #0
 64c:	0a000005 	beq	668 <E131Controller::SetSourceName(char const*)+0x38>
 650:	e152000c 	cmp	r2, ip
 654:	e4c31001 	strb	r1, [r3], #1
 658:	1afffff8 	bne	640 <E131Controller::SetSourceName(char const*)+0x10>
 65c:	e3a03000 	mov	r3, #0
 660:	e5c0307f 	strb	r3, [r0, #127]	; 0x7f
 664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 668:	e35e0000 	cmp	lr, #0
 66c:	0afffffa 	beq	65c <E131Controller::SetSourceName(char const*)+0x2c>
 670:	e083e00e 	add	lr, r3, lr
 674:	e4c31001 	strb	r1, [r3], #1
 678:	e15e0003 	cmp	lr, r3
 67c:	1afffffc 	bne	674 <E131Controller::SetSourceName(char const*)+0x44>
 680:	eafffff5 	b	65c <E131Controller::SetSourceName(char const*)+0x2c>

00000684 <E131Controller::SetPriority(unsigned char)>:
 684:	e5c01010 	strb	r1, [r0, #16]
 688:	e12fff1e 	bx	lr

0000068c <E131Controller::SendDiscoveryPacket()>:
 68c:	e5901004 	ldr	r1, [r0, #4]
 690:	e590300c 	ldr	r3, [r0, #12]
 694:	e59f210c 	ldr	r2, [pc, #268]	; 7a8 <E131Controller::SendDiscoveryPacket()+0x11c>
 698:	e0413003 	sub	r3, r1, r3
 69c:	e1530002 	cmp	r3, r2
 6a0:	912fff1e 	bxls	lr
 6a4:	e92d4030 	push	{r4, r5, lr}
 6a8:	e1a0e000 	mov	lr, r0
 6ac:	e1d030ba 	ldrh	r3, [r0, #10]
 6b0:	e5902024 	ldr	r2, [r0, #36]	; 0x24
 6b4:	e2833034 	add	r3, r3, #52	; 0x34
 6b8:	e1a03083 	lsl	r3, r3, #1
 6bc:	e3833a07 	orr	r3, r3, #28672	; 0x7000
 6c0:	e6bf3fb3 	rev16	r3, r3
 6c4:	e6ff0073 	uxth	r0, r3
 6c8:	e1a00420 	lsr	r0, r0, #8
 6cc:	e58e100c 	str	r1, [lr, #12]
 6d0:	e5c23010 	strb	r3, [r2, #16]
 6d4:	e5c20011 	strb	r0, [r2, #17]
 6d8:	e1de30ba 	ldrh	r3, [lr, #10]
 6dc:	e24dd00c 	sub	sp, sp, #12
 6e0:	e2833029 	add	r3, r3, #41	; 0x29
 6e4:	e1a03083 	lsl	r3, r3, #1
 6e8:	e3833a07 	orr	r3, r3, #28672	; 0x7000
 6ec:	e6bf3fb3 	rev16	r3, r3
 6f0:	e6ff1073 	uxth	r1, r3
 6f4:	e1a01421 	lsr	r1, r1, #8
 6f8:	e5c21027 	strb	r1, [r2, #39]	; 0x27
 6fc:	e5c23026 	strb	r3, [r2, #38]	; 0x26
 700:	e1de30ba 	ldrh	r3, [lr, #10]
 704:	e2833004 	add	r3, r3, #4
 708:	e1a03083 	lsl	r3, r3, #1
 70c:	e3833a07 	orr	r3, r3, #28672	; 0x7000
 710:	e6bf3fb3 	rev16	r3, r3
 714:	e6ff1073 	uxth	r1, r3
 718:	e1a01421 	lsr	r1, r1, #8
 71c:	e5c23070 	strb	r3, [r2, #112]	; 0x70
 720:	e5c21071 	strb	r1, [r2, #113]	; 0x71
 724:	e1de30ba 	ldrh	r3, [lr, #10]
 728:	e3530000 	cmp	r3, #0
 72c:	0a00001b 	beq	7a0 <E131Controller::SendDiscoveryPacket()+0x114>
 730:	e3a03000 	mov	r3, #0
 734:	e59f5070 	ldr	r5, [pc, #112]	; 7ac <E131Controller::SendDiscoveryPacket()+0x120>
 738:	e1a01183 	lsl	r1, r3, #3
 73c:	e19510b1 	ldrh	r1, [r5, r1]
 740:	e283003c 	add	r0, r3, #60	; 0x3c
 744:	e6bf1fb1 	rev16	r1, r1
 748:	e6ffc071 	uxth	ip, r1
 74c:	e0824080 	add	r4, r2, r0, lsl #1
 750:	e1a0c42c 	lsr	ip, ip, #8
 754:	e7c21080 	strb	r1, [r2, r0, lsl #1]
 758:	e5c4c001 	strb	ip, [r4, #1]
 75c:	e1de10ba 	ldrh	r1, [lr, #10]
 760:	e2833001 	add	r3, r3, #1
 764:	e1510003 	cmp	r1, r3
 768:	8afffff2 	bhi	738 <E131Controller::SendDiscoveryPacket()+0xac>
 76c:	e281303c 	add	r3, r1, #60	; 0x3c
 770:	e1a03083 	lsl	r3, r3, #1
 774:	e6ff3073 	uxth	r3, r3
 778:	e3a0cd57 	mov	ip, #5568	; 0x15c0
 77c:	e59f102c 	ldr	r1, [pc, #44]	; 7b0 <E131Controller::SendDiscoveryPacket()+0x124>
 780:	e5910000 	ldr	r0, [r1]
 784:	e59e102c 	ldr	r1, [lr, #44]	; 0x2c
 788:	e58d1000 	str	r1, [sp]
 78c:	e59e1000 	ldr	r1, [lr]
 790:	e58dc004 	str	ip, [sp, #4]
 794:	ebfffffe 	bl	0 <Network::SendTo(int, void const*, unsigned short, unsigned int, unsigned short)>
 798:	e28dd00c 	add	sp, sp, #12
 79c:	e8bd8030 	pop	{r4, r5, pc}
 7a0:	e3a03078 	mov	r3, #120	; 0x78
 7a4:	eafffff3 	b	778 <E131Controller::SendDiscoveryPacket()+0xec>
 7a8:	0000270f 	andeq	r2, r0, pc, lsl #14
 7ac:	00000008 	andeq	r0, r0, r8
 7b0:	00000000 	andeq	r0, r0, r0

000007b4 <E131Controller::Run()>:
 7b4:	e5d03008 	ldrb	r3, [r0, #8]
 7b8:	e3530000 	cmp	r3, #0
 7bc:	012fff1e 	bxeq	lr
 7c0:	e92d4010 	push	{r4, lr}
 7c4:	e1a04000 	mov	r4, r0
 7c8:	ebfffffe 	bl	0 <millis>
 7cc:	e1a03000 	mov	r3, r0
 7d0:	e1a00004 	mov	r0, r4
 7d4:	e5843004 	str	r3, [r4, #4]
 7d8:	e8bd4010 	pop	{r4, lr}
 7dc:	eafffffe 	b	68c <E131Controller::SendDiscoveryPacket()>

000007e0 <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)>:
 7e0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 7e4:	e1a07000 	mov	r7, r0
 7e8:	e1d000ba 	ldrh	r0, [r0, #10]
 7ec:	e1a08002 	mov	r8, r2
 7f0:	e3a04000 	mov	r4, #0
 7f4:	e1a06001 	mov	r6, r1
 7f8:	e1a02000 	mov	r2, r0
 7fc:	e59f51a0 	ldr	r5, [pc, #416]	; 9a4 <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x1c4>
 800:	e24dd014 	sub	sp, sp, #20
 804:	e0423004 	sub	r3, r2, r4
 808:	e08430c3 	add	r3, r4, r3, asr #1
 80c:	e1a09183 	lsl	r9, r3, #3
 810:	e19510b9 	ldrh	r1, [r5, r9]
 814:	e085c183 	add	ip, r5, r3, lsl #3
 818:	e1510006 	cmp	r1, r6
 81c:	32834001 	addcc	r4, r3, #1
 820:	3a000001 	bcc	82c <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x4c>
 824:	9a000056 	bls	984 <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x1a4>
 828:	e2432001 	sub	r2, r3, #1
 82c:	e1540002 	cmp	r4, r2
 830:	dafffff3 	ble	804 <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x24>
 834:	e3720001 	cmn	r2, #1
 838:	0a00003f 	beq	93c <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x15c>
 83c:	e1500002 	cmp	r0, r2
 840:	0a00003d 	beq	93c <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x15c>
 844:	e2403001 	sub	r3, r0, #1
 848:	e1540003 	cmp	r4, r3
 84c:	ca00002a 	bgt	8fc <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x11c>
 850:	e284e002 	add	lr, r4, #2
 854:	e2402002 	sub	r2, r0, #2
 858:	e15e0002 	cmp	lr, r2
 85c:	aa00001f 	bge	8e0 <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x100>
 860:	e1a01180 	lsl	r1, r0, #3
 864:	e2802202 	add	r2, r0, #536870912	; 0x20000000
 868:	e0600e80 	rsb	r0, r0, r0, lsl #29
 86c:	e2422012 	sub	r2, r2, #18
 870:	e1a00180 	lsl	r0, r0, #3
 874:	e2819088 	add	r9, r1, #136	; 0x88
 878:	e281b080 	add	fp, r1, #128	; 0x80
 87c:	e281a078 	add	sl, r1, #120	; 0x78
 880:	e0852182 	add	r2, r5, r2, lsl #3
 884:	e58d0004 	str	r0, [sp, #4]
 888:	e2811070 	add	r1, r1, #112	; 0x70
 88c:	e59d0004 	ldr	r0, [sp, #4]
 890:	e243c005 	sub	ip, r3, #5
 894:	e0820000 	add	r0, r2, r0
 898:	e15e000c 	cmp	lr, ip
 89c:	e080c009 	add	ip, r0, r9
 8a0:	ed9c7b00 	vldr	d7, [ip]
 8a4:	f5d2f000 	pld	[r2]
 8a8:	e080c00b 	add	ip, r0, fp
 8ac:	ed827b24 	vstr	d7, [r2, #144]	; 0x90
 8b0:	ed9c7b00 	vldr	d7, [ip]
 8b4:	e080c009 	add	ip, r0, r9
 8b8:	ed8c7b00 	vstr	d7, [ip]
 8bc:	e080c00a 	add	ip, r0, sl
 8c0:	ed9c7b00 	vldr	d7, [ip]
 8c4:	ed827b20 	vstr	d7, [r2, #128]	; 0x80
 8c8:	e0800001 	add	r0, r0, r1
 8cc:	ed907b00 	vldr	d7, [r0]
 8d0:	e2422020 	sub	r2, r2, #32
 8d4:	e2433004 	sub	r3, r3, #4
 8d8:	ed827b26 	vstr	d7, [r2, #152]	; 0x98
 8dc:	baffffea 	blt	88c <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0xac>
 8e0:	e2832001 	add	r2, r3, #1
 8e4:	e0852182 	add	r2, r5, r2, lsl #3
 8e8:	e2433001 	sub	r3, r3, #1
 8ec:	e1540003 	cmp	r4, r3
 8f0:	e16200d8 	ldrd	r0, [r2, #-8]!
 8f4:	e1c200f8 	strd	r0, [r2, #8]
 8f8:	dafffffa 	ble	8e8 <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x108>
 8fc:	e28d100c 	add	r1, sp, #12
 900:	e59f00a0 	ldr	r0, [pc, #160]	; 9a8 <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x1c8>
 904:	ebfffffe 	bl	0 <inet_aton>
 908:	e3a01000 	mov	r1, #0
 90c:	e59d300c 	ldr	r3, [sp, #12]
 910:	e1a02406 	lsl	r2, r6, #8
 914:	e20228ff 	and	r2, r2, #16711680	; 0xff0000
 918:	e1833c06 	orr	r3, r3, r6, lsl #24
 91c:	e1833002 	orr	r3, r3, r2
 920:	e0852184 	add	r2, r5, r4, lsl #3
 924:	e1a04184 	lsl	r4, r4, #3
 928:	e18560b4 	strh	r6, [r5, r4]
 92c:	e5823004 	str	r3, [r2, #4]
 930:	e5c21002 	strb	r1, [r2, #2]
 934:	e5883000 	str	r3, [r8]
 938:	ea00000b 	b	96c <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x18c>
 93c:	e59f0064 	ldr	r0, [pc, #100]	; 9a8 <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)+0x1c8>
 940:	e28d100c 	add	r1, sp, #12
 944:	ebfffffe 	bl	0 <inet_aton>
 948:	e59d300c 	ldr	r3, [sp, #12]
 94c:	e18560b9 	strh	r6, [r5, r9]
 950:	e1833c06 	orr	r3, r3, r6, lsl #24
 954:	e1a06406 	lsl	r6, r6, #8
 958:	e20668ff 	and	r6, r6, #16711680	; 0xff0000
 95c:	e1836006 	orr	r6, r3, r6
 960:	e0855009 	add	r5, r5, r9
 964:	e5856004 	str	r6, [r5, #4]
 968:	e5886000 	str	r6, [r8]
 96c:	e3a00000 	mov	r0, #0
 970:	e1d730ba 	ldrh	r3, [r7, #10]
 974:	e2833001 	add	r3, r3, #1
 978:	e1c730ba 	strh	r3, [r7, #10]
 97c:	e28dd014 	add	sp, sp, #20
 980:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 984:	e59c3004 	ldr	r3, [ip, #4]
 988:	e5883000 	str	r3, [r8]
 98c:	e5dc0002 	ldrb	r0, [ip, #2]
 990:	e2800001 	add	r0, r0, #1
 994:	e6ef0070 	uxtb	r0, r0
 998:	e5cc0002 	strb	r0, [ip, #2]
 99c:	e28dd014 	add	sp, sp, #20
 9a0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 9a4:	00000008 	andeq	r0, r0, r8
 9a8:	0000000c 	andeq	r0, r0, ip

000009ac <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)>:
 9ac:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
 9b0:	e6ff7073 	uxth	r7, r3
 9b4:	e1a05003 	mov	r5, r3
 9b8:	e287c06e 	add	ip, r7, #110	; 0x6e
 9bc:	e2873058 	add	r3, r7, #88	; 0x58
 9c0:	e5909020 	ldr	r9, [r0, #32]
 9c4:	e38cca07 	orr	ip, ip, #28672	; 0x7000
 9c8:	e3833a07 	orr	r3, r3, #28672	; 0x7000
 9cc:	e6bfcfbc 	rev16	ip, ip
 9d0:	e6bf3fb3 	rev16	r3, r3
 9d4:	e5c9c010 	strb	ip, [r9, #16]
 9d8:	e5c93026 	strb	r3, [r9, #38]	; 0x26
 9dc:	e6ffc07c 	uxth	ip, ip
 9e0:	e6ff3073 	uxth	r3, r3
 9e4:	e1a03423 	lsr	r3, r3, #8
 9e8:	e24dd014 	sub	sp, sp, #20
 9ec:	e1a0c42c 	lsr	ip, ip, #8
 9f0:	e5c93027 	strb	r3, [r9, #39]	; 0x27
 9f4:	e1a04002 	mov	r4, r2
 9f8:	e5c9c011 	strb	ip, [r9, #17]
 9fc:	e28d200c 	add	r2, sp, #12
 a00:	e1a06000 	mov	r6, r0
 a04:	e1a08001 	mov	r8, r1
 a08:	ebfffffe 	bl	7e0 <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)>
 a0c:	e287300b 	add	r3, r7, #11
 a10:	e5c9006f 	strb	r0, [r9, #111]	; 0x6f
 a14:	e5962020 	ldr	r2, [r6, #32]
 a18:	e3833a07 	orr	r3, r3, #28672	; 0x7000
 a1c:	e5961080 	ldr	r1, [r6, #128]	; 0x80
 a20:	e6bf8fb8 	rev16	r8, r8
 a24:	e6bf3fb3 	rev16	r3, r3
 a28:	e5c28071 	strb	r8, [r2, #113]	; 0x71
 a2c:	e5c23073 	strb	r3, [r2, #115]	; 0x73
 a30:	e6ff8078 	uxth	r8, r8
 a34:	e6ff3073 	uxth	r3, r3
 a38:	e1a08428 	lsr	r8, r8, #8
 a3c:	e1a03423 	lsr	r3, r3, #8
 a40:	e35100ff 	cmp	r1, #255	; 0xff
 a44:	e5c28072 	strb	r8, [r2, #114]	; 0x72
 a48:	e5c23074 	strb	r3, [r2, #116]	; 0x74
 a4c:	1a00001a 	bne	abc <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0x110>
 a50:	e3550000 	cmp	r5, #0
 a54:	0a000006 	beq	a74 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0xc8>
 a58:	e282107d 	add	r1, r2, #125	; 0x7d
 a5c:	e0845005 	add	r5, r4, r5
 a60:	e4d42001 	ldrb	r2, [r4], #1
 a64:	e1540005 	cmp	r4, r5
 a68:	e5e12001 	strb	r2, [r1, #1]!
 a6c:	1afffffb 	bne	a60 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0xb4>
 a70:	e5962020 	ldr	r2, [r6, #32]
 a74:	e3a0cd57 	mov	ip, #5568	; 0x15c0
 a78:	e2871001 	add	r1, r7, #1
 a7c:	e6bf1fb1 	rev16	r1, r1
 a80:	e59fe160 	ldr	lr, [pc, #352]	; be8 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0x23c>
 a84:	e6ff0071 	uxth	r0, r1
 a88:	e1a00420 	lsr	r0, r0, #8
 a8c:	e5c2007c 	strb	r0, [r2, #124]	; 0x7c
 a90:	e59e0000 	ldr	r0, [lr]
 a94:	e59de00c 	ldr	lr, [sp, #12]
 a98:	e287307e 	add	r3, r7, #126	; 0x7e
 a9c:	e5c2107b 	strb	r1, [r2, #123]	; 0x7b
 aa0:	e6ff3073 	uxth	r3, r3
 aa4:	e5961000 	ldr	r1, [r6]
 aa8:	e58de000 	str	lr, [sp]
 aac:	e58dc004 	str	ip, [sp, #4]
 ab0:	ebfffffe 	bl	0 <Network::SendTo(int, void const*, unsigned short, unsigned int, unsigned short)>
 ab4:	e28dd014 	add	sp, sp, #20
 ab8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
 abc:	e3510000 	cmp	r1, #0
 ac0:	1a000034 	bne	b98 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0x1ec>
 ac4:	e3550000 	cmp	r5, #0
 ac8:	e282007e 	add	r0, r2, #126	; 0x7e
 acc:	e2455001 	sub	r5, r5, #1
 ad0:	0affffe7 	beq	a74 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0xc8>
 ad4:	e355001f 	cmp	r5, #31
 ad8:	9a000027 	bls	b7c <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0x1d0>
 adc:	e1a03001 	mov	r3, r1
 ae0:	e282209e 	add	r2, r2, #158	; 0x9e
 ae4:	e2455020 	sub	r5, r5, #32
 ae8:	e355001f 	cmp	r5, #31
 aec:	f5d2f008 	pld	[r2, #8]
 af0:	e5423020 	strb	r3, [r2, #-32]	; 0xffffffe0
 af4:	e542301f 	strb	r3, [r2, #-31]	; 0xffffffe1
 af8:	e542301e 	strb	r3, [r2, #-30]	; 0xffffffe2
 afc:	e542301d 	strb	r3, [r2, #-29]	; 0xffffffe3
 b00:	e542301c 	strb	r3, [r2, #-28]	; 0xffffffe4
 b04:	e542301b 	strb	r3, [r2, #-27]	; 0xffffffe5
 b08:	e542301a 	strb	r3, [r2, #-26]	; 0xffffffe6
 b0c:	e5423019 	strb	r3, [r2, #-25]	; 0xffffffe7
 b10:	e5423018 	strb	r3, [r2, #-24]	; 0xffffffe8
 b14:	e5423017 	strb	r3, [r2, #-23]	; 0xffffffe9
 b18:	e5423016 	strb	r3, [r2, #-22]	; 0xffffffea
 b1c:	e5423015 	strb	r3, [r2, #-21]	; 0xffffffeb
 b20:	e5423014 	strb	r3, [r2, #-20]	; 0xffffffec
 b24:	e5423013 	strb	r3, [r2, #-19]	; 0xffffffed
 b28:	e5423012 	strb	r3, [r2, #-18]	; 0xffffffee
 b2c:	e5423011 	strb	r3, [r2, #-17]	; 0xffffffef
 b30:	e5423010 	strb	r3, [r2, #-16]
 b34:	e542300f 	strb	r3, [r2, #-15]
 b38:	e542300e 	strb	r3, [r2, #-14]
 b3c:	e542300d 	strb	r3, [r2, #-13]
 b40:	e542300c 	strb	r3, [r2, #-12]
 b44:	e542300b 	strb	r3, [r2, #-11]
 b48:	e542300a 	strb	r3, [r2, #-10]
 b4c:	e5423009 	strb	r3, [r2, #-9]
 b50:	e5423008 	strb	r3, [r2, #-8]
 b54:	e5423007 	strb	r3, [r2, #-7]
 b58:	e5423006 	strb	r3, [r2, #-6]
 b5c:	e5423005 	strb	r3, [r2, #-5]
 b60:	e5423004 	strb	r3, [r2, #-4]
 b64:	e5423003 	strb	r3, [r2, #-3]
 b68:	e5423002 	strb	r3, [r2, #-2]
 b6c:	e1a00002 	mov	r0, r2
 b70:	e5423001 	strb	r3, [r2, #-1]
 b74:	e2822020 	add	r2, r2, #32
 b78:	8affffd9 	bhi	ae4 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0x138>
 b7c:	e3a02000 	mov	r2, #0
 b80:	e2855001 	add	r5, r5, #1
 b84:	e0803005 	add	r3, r0, r5
 b88:	e4c02001 	strb	r2, [r0], #1
 b8c:	e1500003 	cmp	r0, r3
 b90:	1afffffc 	bne	b88 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0x1dc>
 b94:	eaffffb5 	b	a70 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0xc4>
 b98:	e3550000 	cmp	r5, #0
 b9c:	0affffb4 	beq	a74 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0xc8>
 ba0:	e2440001 	sub	r0, r4, #1
 ba4:	e59fc040 	ldr	ip, [pc, #64]	; bec <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0x240>
 ba8:	e0805005 	add	r5, r0, r5
 bac:	ea000001 	b	bb8 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0x20c>
 bb0:	e5961080 	ldr	r1, [r6, #128]	; 0x80
 bb4:	e5962020 	ldr	r2, [r6, #32]
 bb8:	e5d03001 	ldrb	r3, [r0, #1]
 bbc:	e0030391 	mul	r3, r1, r3
 bc0:	e083139c 	umull	r1, r3, ip, r3
 bc4:	e2801002 	add	r1, r0, #2
 bc8:	e0411004 	sub	r1, r1, r4
 bcc:	e2800001 	add	r0, r0, #1
 bd0:	e1a033a3 	lsr	r3, r3, #7
 bd4:	e0821001 	add	r1, r2, r1
 bd8:	e1550000 	cmp	r5, r0
 bdc:	e5c1307d 	strb	r3, [r1, #125]	; 0x7d
 be0:	1afffff2 	bne	bb0 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0x204>
 be4:	eaffffa1 	b	a70 <E131Controller::HandleDmxOut(unsigned short, unsigned char const*, unsigned int)+0xc4>
 be8:	00000000 	andeq	r0, r0, r0
 bec:	80808081 	addhi	r8, r0, r1, lsl #1

00000bf0 <E131Controller::HandleBlackout()>:
 bf0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 bf4:	e3a02072 	mov	r2, #114	; 0x72
 bf8:	e3a0706e 	mov	r7, #110	; 0x6e
 bfc:	e3a06058 	mov	r6, #88	; 0x58
 c00:	e3a0500b 	mov	r5, #11
 c04:	e3a0e002 	mov	lr, #2
 c08:	e3a0c001 	mov	ip, #1
 c0c:	e3a01000 	mov	r1, #0
 c10:	e1a04000 	mov	r4, r0
 c14:	e5903020 	ldr	r3, [r0, #32]
 c18:	e59f81b0 	ldr	r8, [pc, #432]	; dd0 <E131Controller::HandleBlackout()+0x1e0>
 c1c:	e5c37011 	strb	r7, [r3, #17]
 c20:	e5c36027 	strb	r6, [r3, #39]	; 0x27
 c24:	e5c35074 	strb	r5, [r3, #116]	; 0x74
 c28:	e5c3e07b 	strb	lr, [r3, #123]	; 0x7b
 c2c:	e5c3c07c 	strb	ip, [r3, #124]	; 0x7c
 c30:	e5c32010 	strb	r2, [r3, #16]
 c34:	e5c32026 	strb	r2, [r3, #38]	; 0x26
 c38:	e5c32073 	strb	r2, [r3, #115]	; 0x73
 c3c:	e24dd014 	sub	sp, sp, #20
 c40:	e283309e 	add	r3, r3, #158	; 0x9e
 c44:	e2488020 	sub	r8, r8, #32
 c48:	e358001f 	cmp	r8, #31
 c4c:	f5d3f002 	pld	[r3, #2]
 c50:	e5431020 	strb	r1, [r3, #-32]	; 0xffffffe0
 c54:	e543101f 	strb	r1, [r3, #-31]	; 0xffffffe1
 c58:	e543101e 	strb	r1, [r3, #-30]	; 0xffffffe2
 c5c:	e543101d 	strb	r1, [r3, #-29]	; 0xffffffe3
 c60:	e543101c 	strb	r1, [r3, #-28]	; 0xffffffe4
 c64:	e543101b 	strb	r1, [r3, #-27]	; 0xffffffe5
 c68:	e543101a 	strb	r1, [r3, #-26]	; 0xffffffe6
 c6c:	e5431019 	strb	r1, [r3, #-25]	; 0xffffffe7
 c70:	e5431018 	strb	r1, [r3, #-24]	; 0xffffffe8
 c74:	e5431017 	strb	r1, [r3, #-23]	; 0xffffffe9
 c78:	e5431016 	strb	r1, [r3, #-22]	; 0xffffffea
 c7c:	e5431015 	strb	r1, [r3, #-21]	; 0xffffffeb
 c80:	e5431014 	strb	r1, [r3, #-20]	; 0xffffffec
 c84:	e5431013 	strb	r1, [r3, #-19]	; 0xffffffed
 c88:	e5431012 	strb	r1, [r3, #-18]	; 0xffffffee
 c8c:	e5431011 	strb	r1, [r3, #-17]	; 0xffffffef
 c90:	e5431010 	strb	r1, [r3, #-16]
 c94:	e543100f 	strb	r1, [r3, #-15]
 c98:	e543100e 	strb	r1, [r3, #-14]
 c9c:	e543100d 	strb	r1, [r3, #-13]
 ca0:	e543100c 	strb	r1, [r3, #-12]
 ca4:	e543100b 	strb	r1, [r3, #-11]
 ca8:	e543100a 	strb	r1, [r3, #-10]
 cac:	e5431009 	strb	r1, [r3, #-9]
 cb0:	e5431008 	strb	r1, [r3, #-8]
 cb4:	e5431007 	strb	r1, [r3, #-7]
 cb8:	e5431006 	strb	r1, [r3, #-6]
 cbc:	e5431005 	strb	r1, [r3, #-5]
 cc0:	e5431004 	strb	r1, [r3, #-4]
 cc4:	e5431003 	strb	r1, [r3, #-3]
 cc8:	e5431002 	strb	r1, [r3, #-2]
 ccc:	e1a02003 	mov	r2, r3
 cd0:	e5431001 	strb	r1, [r3, #-1]
 cd4:	e2833020 	add	r3, r3, #32
 cd8:	1affffd9 	bne	c44 <E131Controller::HandleBlackout()+0x54>
 cdc:	e3a01000 	mov	r1, #0
 ce0:	e4c21001 	strb	r1, [r2], #1
 ce4:	e1520003 	cmp	r2, r3
 ce8:	1afffffc 	bne	ce0 <E131Controller::HandleBlackout()+0xf0>
 cec:	e1d430ba 	ldrh	r3, [r4, #10]
 cf0:	e3530000 	cmp	r3, #0
 cf4:	0a00001f 	beq	d78 <E131Controller::HandleBlackout()+0x188>
 cf8:	e3a06000 	mov	r6, #0
 cfc:	e3a09d57 	mov	r9, #5568	; 0x15c0
 d00:	e59f50cc 	ldr	r5, [pc, #204]	; dd4 <E131Controller::HandleBlackout()+0x1e4>
 d04:	e59f80cc 	ldr	r8, [pc, #204]	; dd8 <E131Controller::HandleBlackout()+0x1e8>
 d08:	e59f70cc 	ldr	r7, [pc, #204]	; ddc <E131Controller::HandleBlackout()+0x1ec>
 d0c:	e155b2b8 	ldrh	fp, [r5, #-40]	; 0xffffffd8
 d10:	e28d200c 	add	r2, sp, #12
 d14:	e1a0100b 	mov	r1, fp
 d18:	e1a00004 	mov	r0, r4
 d1c:	f5d5f000 	pld	[r5]
 d20:	e594a020 	ldr	sl, [r4, #32]
 d24:	ebfffffe 	bl	7e0 <E131Controller::GetSequenceNumber(unsigned short, unsigned int&)>
 d28:	e1a02000 	mov	r2, r0
 d2c:	e6bf1fbb 	rev16	r1, fp
 d30:	e5ca206f 	strb	r2, [sl, #111]	; 0x6f
 d34:	e5942020 	ldr	r2, [r4, #32]
 d38:	e59dc00c 	ldr	ip, [sp, #12]
 d3c:	e6ffe071 	uxth	lr, r1
 d40:	e1a0e42e 	lsr	lr, lr, #8
 d44:	e5c21071 	strb	r1, [r2, #113]	; 0x71
 d48:	e5980000 	ldr	r0, [r8]
 d4c:	e5941000 	ldr	r1, [r4]
 d50:	e5c2e072 	strb	lr, [r2, #114]	; 0x72
 d54:	e1a03007 	mov	r3, r7
 d58:	e58d9004 	str	r9, [sp, #4]
 d5c:	e58dc000 	str	ip, [sp]
 d60:	ebfffffe 	bl	0 <Network::SendTo(int, void const*, unsigned short, unsigned int, unsigned short)>
 d64:	e1d430ba 	ldrh	r3, [r4, #10]
 d68:	e2866001 	add	r6, r6, #1
 d6c:	e1530006 	cmp	r3, r6
 d70:	e2855008 	add	r5, r5, #8
 d74:	8affffe4 	bhi	d0c <E131Controller::HandleBlackout()+0x11c>
 d78:	e1d431b4 	ldrh	r3, [r4, #20]
 d7c:	e3530000 	cmp	r3, #0
 d80:	1a000001 	bne	d8c <E131Controller::HandleBlackout()+0x19c>
 d84:	e28dd014 	add	sp, sp, #20
 d88:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 d8c:	e3a0cd57 	mov	ip, #5568	; 0x15c0
 d90:	e5d4301c 	ldrb	r3, [r4, #28]
 d94:	e5942028 	ldr	r2, [r4, #40]	; 0x28
 d98:	e2831001 	add	r1, r3, #1
 d9c:	e5c4101c 	strb	r1, [r4, #28]
 da0:	e5c2302c 	strb	r3, [r2, #44]	; 0x2c
 da4:	e5942018 	ldr	r2, [r4, #24]
 da8:	e59f1028 	ldr	r1, [pc, #40]	; dd8 <E131Controller::HandleBlackout()+0x1e8>
 dac:	e3a03031 	mov	r3, #49	; 0x31
 db0:	e5910000 	ldr	r0, [r1]
 db4:	e58d2000 	str	r2, [sp]
 db8:	e5942028 	ldr	r2, [r4, #40]	; 0x28
 dbc:	e5941000 	ldr	r1, [r4]
 dc0:	e58dc004 	str	ip, [sp, #4]
 dc4:	ebfffffe 	bl	0 <Network::SendTo(int, void const*, unsigned short, unsigned int, unsigned short)>
 dc8:	e28dd014 	add	sp, sp, #20
 dcc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 dd0:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
 dd4:	00000030 	andeq	r0, r0, r0, lsr r0
 dd8:	00000000 	andeq	r0, r0, r0
 ddc:	0000027e 	andeq	r0, r0, lr, ror r2

00000de0 <E131Controller::Print()>:
 de0:	e92d4010 	push	{r4, lr}
 de4:	e1a04000 	mov	r4, r0
 de8:	e59f0030 	ldr	r0, [pc, #48]	; e20 <E131Controller::Print()+0x40>
 dec:	ebfffffe 	bl	0 <printf>
 df0:	e3a01c02 	mov	r1, #512	; 0x200
 df4:	e59f0028 	ldr	r0, [pc, #40]	; e24 <E131Controller::Print()+0x44>
 df8:	ebfffffe 	bl	0 <printf>
 dfc:	e1d411b4 	ldrh	r1, [r4, #20]
 e00:	e3510000 	cmp	r1, #0
 e04:	0a000002 	beq	e14 <E131Controller::Print()+0x34>
 e08:	e8bd4010 	pop	{r4, lr}
 e0c:	e59f0014 	ldr	r0, [pc, #20]	; e28 <E131Controller::Print()+0x48>
 e10:	eafffffe 	b	0 <printf>
 e14:	e59f0010 	ldr	r0, [pc, #16]	; e2c <E131Controller::Print()+0x4c>
 e18:	e8bd4010 	pop	{r4, lr}
 e1c:	eafffffe 	b	0 <puts>
 e20:	00000018 	andeq	r0, r0, r8, lsl r0
 e24:	00000030 	andeq	r0, r0, r0, lsr r0
 e28:	00000048 	andeq	r0, r0, r8, asr #32
 e2c:	00000068 	andeq	r0, r0, r8, rrx

Disassembly of section .bss:

00000000 <E131Controller::s_pThis>:
	...

00000008 <s_SequenceNumbers>:
	...

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	38342e25 	ldmdacc	r4!, {r0, r2, r5, r9, sl, fp, sp}
   4:	73252073 			; <UNDEFINED> instruction: 0x73252073
   8:	00000000 	andeq	r0, r0, r0
   c:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
  10:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
  14:	00302e30 	eorseq	r2, r0, r0, lsr lr
  18:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
  1c:	2e314520 	cfabs64cs	mvdx4, mvdx1
  20:	43203133 			; <UNDEFINED> instruction: 0x43203133
  24:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
  28:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
  2c:	00000a72 	andeq	r0, r0, r2, ror sl
  30:	78614d20 	stmdavc	r1!, {r5, r8, sl, fp, lr}^
  34:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
  38:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
  3c:	3a207365 	bcc	81cdd8 <E131Controller::Print()+0x81bff8>
  40:	0a642520 	beq	19094c8 <E131Controller::Print()+0x19086e8>
  44:	00000000 	andeq	r0, r0, r0
  48:	6e795320 	cdpvs	3, 7, cr5, cr9, cr0, {1}
  4c:	6f726863 	svcvs	0x00726863
  50:	617a696e 	cmnvs	sl, lr, ror #18
  54:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  58:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
  5c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
  60:	203a2065 	eorscs	r2, sl, r5, rrx
  64:	000a7525 	andeq	r7, sl, r5, lsr #10
  68:	6e795320 	cdpvs	3, 7, cr5, cr9, cr0, {1}
  6c:	6f726863 	svcvs	0x00726863
  70:	617a696e 	cmnvs	sl, lr, ror #18
  74:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  78:	20736920 	rsbscs	r6, r3, r0, lsr #18
  7c:	61736964 	cmnvs	r3, r4, ror #18
  80:	64656c62 	strbtvs	r6, [r5], #-3170	; 0xfffff39e
	...

Disassembly of section .rodata:

00000000 <DEVICE_SOFTWARE_VERSION>:
   0:	Address 0x0000000000000000 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <E131Controller::Print()+0x168ca4c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <E131Controller::Print()+0x41644>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


e131params.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
   0:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
   4:	e1d0c0b6 	ldrh	ip, [r0, #6]
   8:	e1d050b4 	ldrh	r5, [r0, #4]
   c:	e15c0005 	cmp	ip, r5
  10:	2a00001c 	bcs	88 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x88>
  14:	e1a04000 	mov	r4, r0
  18:	e5900000 	ldr	r0, [r0]
  1c:	e3530000 	cmp	r3, #0
  20:	e080000c 	add	r0, r0, ip
  24:	e045500c 	sub	r5, r5, ip
  28:	e5d4c008 	ldrb	ip, [r4, #8]
  2c:	1a000002 	bne	3c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
  30:	e35c0000 	cmp	ip, #0
  34:	1a000002 	bne	44 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>
  38:	ea000009 	b	64 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x64>
  3c:	e35c0000 	cmp	ip, #0
  40:	0a000003 	beq	54 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x54>
  44:	e58d2000 	str	r2, [sp]
  48:	e1a03001 	mov	r3, r1
  4c:	e59f203c 	ldr	r2, [pc, #60]	; 90 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x90>
  50:	ea000006 	b	70 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x70>
  54:	e58d2000 	str	r2, [sp]
  58:	e1a03001 	mov	r3, r1
  5c:	e59f2030 	ldr	r2, [pc, #48]	; 94 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x94>
  60:	ea000002 	b	70 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x70>
  64:	e1a03001 	mov	r3, r1
  68:	e58d2000 	str	r2, [sp]
  6c:	e59f2024 	ldr	r2, [pc, #36]	; 98 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x98>
  70:	e1a01005 	mov	r1, r5
  74:	ebfffffe 	bl	0 <snprintf>
  78:	e1550000 	cmp	r5, r0
  7c:	a1d430b6 	ldrhge	r3, [r4, #6]
  80:	a0830000 	addge	r0, r3, r0
  84:	a1c400b6 	strhge	r0, [r4, #6]
  88:	e28dd00c 	add	sp, sp, #12
  8c:	e8bd8030 	pop	{r4, r5, pc}
  90:	00000000 	andeq	r0, r0, r0
  94:	0000000b 	andeq	r0, r0, fp
  98:	00000012 	andeq	r0, r0, r2, lsl r0

0000009c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
  9c:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
  a0:	e1a03001 	mov	r3, r1
  a4:	e1d050b4 	ldrh	r5, [r0, #4]
  a8:	e1d010b6 	ldrh	r1, [r0, #6]
  ac:	e1510005 	cmp	r1, r5
  b0:	2a00001a 	bcs	120 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x84>
  b4:	e1a04000 	mov	r4, r0
  b8:	e5900000 	ldr	r0, [r0]
  bc:	e3520000 	cmp	r2, #0
  c0:	e0800001 	add	r0, r0, r1
  c4:	e0455001 	sub	r5, r5, r1
  c8:	e5d41008 	ldrb	r1, [r4, #8]
  cc:	1a000002 	bne	dc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x40>
  d0:	e3510000 	cmp	r1, #0
  d4:	1a000002 	bne	e4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>
  d8:	ea000008 	b	100 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x64>
  dc:	e3510000 	cmp	r1, #0
  e0:	0a000002 	beq	f0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x54>
  e4:	e58d2000 	str	r2, [sp]
  e8:	e59f2038 	ldr	r2, [pc, #56]	; 128 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x8c>
  ec:	ea000005 	b	108 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x6c>
  f0:	e3a02001 	mov	r2, #1
  f4:	e58d2000 	str	r2, [sp]
  f8:	e59f202c 	ldr	r2, [pc, #44]	; 12c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x90>
  fc:	ea000001 	b	108 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x6c>
 100:	e59f2028 	ldr	r2, [pc, #40]	; 130 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x94>
 104:	e58d1000 	str	r1, [sp]
 108:	e1a01005 	mov	r1, r5
 10c:	ebfffffe 	bl	0 <snprintf>
 110:	e1550000 	cmp	r5, r0
 114:	a1d430b6 	ldrhge	r3, [r4, #6]
 118:	a0830000 	addge	r0, r3, r0
 11c:	a1c400b6 	strhge	r0, [r4, #6]
 120:	e28dd00c 	add	sp, sp, #12
 124:	e8bd8030 	pop	{r4, r5, pc}
 128:	0000001a 	andeq	r0, r0, sl, lsl r0
 12c:	00000023 	andeq	r0, r0, r3, lsr #32
 130:	0000002a 	andeq	r0, r0, sl, lsr #32

00000134 <E131Params::E131Params(E131ParamsStore*)>:
 134:	e92d4010 	push	{r4, lr}
 138:	e3a0201a 	mov	r2, #26
 13c:	e1a04000 	mov	r4, r0
 140:	e4801004 	str	r1, [r0], #4
 144:	e3a01000 	mov	r1, #0
 148:	ebfffffe 	bl	0 <memset>
 14c:	e3a02001 	mov	r2, #1
 150:	e3a03000 	mov	r3, #0
 154:	e5c4200b 	strb	r2, [r4, #11]
 158:	e3a02002 	mov	r2, #2
 15c:	e5c4300c 	strb	r3, [r4, #12]
 160:	e5c4300e 	strb	r3, [r4, #14]
 164:	e5c43010 	strb	r3, [r4, #16]
 168:	e5c43012 	strb	r3, [r4, #18]
 16c:	e3e03c9b 	mvn	r3, #39680	; 0x9b00
 170:	e5c4200d 	strb	r2, [r4, #13]
 174:	e3a02003 	mov	r2, #3
 178:	e1c431be 	strh	r3, [r4, #30]
 17c:	e59f301c 	ldr	r3, [pc, #28]	; 1a0 <E131Params::E131Params(E131ParamsStore*)+0x6c>
 180:	e5c4200f 	strb	r2, [r4, #15]
 184:	e1c432b0 	strh	r3, [r4, #32]
 188:	e3a02004 	mov	r2, #4
 18c:	e3a03064 	mov	r3, #100	; 0x64
 190:	e1a00004 	mov	r0, r4
 194:	e5c42011 	strb	r2, [r4, #17]
 198:	e5c43022 	strb	r3, [r4, #34]	; 0x22
 19c:	e8bd8010 	pop	{r4, pc}
 1a0:	00006464 	andeq	r6, r0, r4, ror #8

000001a4 <E131Params::Load()>:
 1a4:	e3a03000 	mov	r3, #0
 1a8:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
 1ac:	e1a02000 	mov	r2, r0
 1b0:	e5803004 	str	r3, [r0, #4]
 1b4:	e1a04000 	mov	r4, r0
 1b8:	e59f1068 	ldr	r1, [pc, #104]	; 228 <E131Params::Load()+0x84>
 1bc:	e1a0000d 	mov	r0, sp
 1c0:	ebfffffe 	bl	0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 1c4:	e1a0000d 	mov	r0, sp
 1c8:	e59f105c 	ldr	r1, [pc, #92]	; 22c <E131Params::Load()+0x88>
 1cc:	ebfffffe 	bl	0 <ReadConfigFile::Read(char const*)>
 1d0:	e2505000 	subs	r5, r0, #0
 1d4:	e5940000 	ldr	r0, [r4]
 1d8:	0a000006 	beq	1f8 <E131Params::Load()+0x54>
 1dc:	e3500000 	cmp	r0, #0
 1e0:	0a00000b 	beq	214 <E131Params::Load()+0x70>
 1e4:	e5903000 	ldr	r3, [r0]
 1e8:	e2841004 	add	r1, r4, #4
 1ec:	e5933008 	ldr	r3, [r3, #8]
 1f0:	e12fff33 	blx	r3
 1f4:	ea000006 	b	214 <E131Params::Load()+0x70>
 1f8:	e3500000 	cmp	r0, #0
 1fc:	0a000004 	beq	214 <E131Params::Load()+0x70>
 200:	e5903000 	ldr	r3, [r0]
 204:	e2841004 	add	r1, r4, #4
 208:	e593300c 	ldr	r3, [r3, #12]
 20c:	e12fff33 	blx	r3
 210:	e3a05001 	mov	r5, #1
 214:	e1a0000d 	mov	r0, sp
 218:	ebfffffe 	bl	0 <ReadConfigFile::~ReadConfigFile()>
 21c:	e1a00005 	mov	r0, r5
 220:	e28dd00c 	add	sp, sp, #12
 224:	e8bd8030 	pop	{r4, r5, pc}
	...

00000230 <E131Params::Load(char const*, unsigned int)>:
 230:	e5903000 	ldr	r3, [r0]
 234:	e3530000 	cmp	r3, #0
 238:	012fff1e 	bxeq	lr
 23c:	e3a03000 	mov	r3, #0
 240:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
 244:	e1a05001 	mov	r5, r1
 248:	e1a06002 	mov	r6, r2
 24c:	e1a04000 	mov	r4, r0
 250:	e5803004 	str	r3, [r0, #4]
 254:	e1a02000 	mov	r2, r0
 258:	e59f1038 	ldr	r1, [pc, #56]	; 298 <E131Params::Load(char const*, unsigned int)+0x68>
 25c:	e1a0000d 	mov	r0, sp
 260:	ebfffffe 	bl	0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 264:	e1a02006 	mov	r2, r6
 268:	e1a01005 	mov	r1, r5
 26c:	e1a0000d 	mov	r0, sp
 270:	ebfffffe 	bl	0 <ReadConfigFile::Read(char const*, unsigned int)>
 274:	e1a01004 	mov	r1, r4
 278:	e4910004 	ldr	r0, [r1], #4
 27c:	e5903000 	ldr	r3, [r0]
 280:	e5933008 	ldr	r3, [r3, #8]
 284:	e12fff33 	blx	r3
 288:	e1a0000d 	mov	r0, sp
 28c:	ebfffffe 	bl	0 <ReadConfigFile::~ReadConfigFile()>
 290:	e28dd008 	add	sp, sp, #8
 294:	e8bd8070 	pop	{r4, r5, r6, pc}
 298:	00000000 	andeq	r0, r0, r0

0000029c <E131Params::callbackFunction(char const*)>:
 29c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2a0:	e1a04000 	mov	r4, r0
 2a4:	e1a06001 	mov	r6, r1
 2a8:	e3a05000 	mov	r5, #0
 2ac:	e59f9274 	ldr	r9, [pc, #628]	; 528 <E131Params::callbackFunction(char const*)+0x28c>
 2b0:	e59f8274 	ldr	r8, [pc, #628]	; 52c <E131Params::callbackFunction(char const*)+0x290>
 2b4:	e59fb274 	ldr	fp, [pc, #628]	; 530 <E131Params::callbackFunction(char const*)+0x294>
 2b8:	e59fa274 	ldr	sl, [pc, #628]	; 534 <E131Params::callbackFunction(char const*)+0x298>
 2bc:	e24dd01c 	sub	sp, sp, #28
 2c0:	e1a01009 	mov	r1, r9
 2c4:	e1a00006 	mov	r0, r6
 2c8:	e28d2002 	add	r2, sp, #2
 2cc:	ebfffffe 	bl	0 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 2d0:	e3500000 	cmp	r0, #0
 2d4:	1a000014 	bne	32c <E131Params::callbackFunction(char const*)+0x90>
 2d8:	e3a03010 	mov	r3, #16
 2dc:	e1dd10b2 	ldrh	r1, [sp, #2]
 2e0:	e59fc250 	ldr	ip, [pc, #592]	; 538 <E131Params::callbackFunction(char const*)+0x29c>
 2e4:	e2412001 	sub	r2, r1, #1
 2e8:	e6ff2072 	uxth	r2, r2
 2ec:	e152000c 	cmp	r2, ip
 2f0:	e1a03513 	lsl	r3, r3, r5
 2f4:	e1a02085 	lsl	r2, r5, #1
 2f8:	22855001 	addcs	r5, r5, #1
 2fc:	e5940004 	ldr	r0, [r4, #4]
 300:	e0842002 	add	r2, r4, r2
 304:	26ff1075 	uxthcs	r1, r5
 308:	21a01421 	lsrcs	r1, r1, #8
 30c:	35c2100b 	strbcc	r1, [r2, #11]
 310:	31a01421 	lsrcc	r1, r1, #8
 314:	25c2500b 	strbcs	r5, [r2, #11]
 318:	25c2100c 	strbcs	r1, [r2, #12]
 31c:	21c03003 	biccs	r3, r0, r3
 320:	35c2100c 	strbcc	r1, [r2, #12]
 324:	31833000 	orrcc	r3, r3, r0
 328:	ea00007b 	b	51c <E131Params::callbackFunction(char const*)+0x280>
 32c:	e3a07012 	mov	r7, #18
 330:	e3a03003 	mov	r3, #3
 334:	e0070597 	mul	r7, r7, r5
 338:	e58d3004 	str	r3, [sp, #4]
 33c:	e1a00006 	mov	r0, r6
 340:	e28d3004 	add	r3, sp, #4
 344:	e28d2008 	add	r2, sp, #8
 348:	e08b1007 	add	r1, fp, r7
 34c:	ebfffffe 	bl	0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 350:	e3500000 	cmp	r0, #0
 354:	1a000016 	bne	3b4 <E131Params::callbackFunction(char const*)+0x118>
 358:	e3a03c01 	mov	r3, #256	; 0x100
 35c:	e5dd1008 	ldrb	r1, [sp, #8]
 360:	e1a03513 	lsl	r3, r3, r5
 364:	e3811020 	orr	r1, r1, #32
 368:	e351006c 	cmp	r1, #108	; 0x6c
 36c:	e5942004 	ldr	r2, [r4, #4]
 370:	e0845005 	add	r5, r4, r5
 374:	1a00000a 	bne	3a4 <E131Params::callbackFunction(char const*)+0x108>
 378:	e5dd1009 	ldrb	r1, [sp, #9]
 37c:	e3811020 	orr	r1, r1, #32
 380:	e3510074 	cmp	r1, #116	; 0x74
 384:	1a000006 	bne	3a4 <E131Params::callbackFunction(char const*)+0x108>
 388:	e5dd100a 	ldrb	r1, [sp, #10]
 38c:	e3811020 	orr	r1, r1, #32
 390:	e3510070 	cmp	r1, #112	; 0x70
 394:	03a01001 	moveq	r1, #1
 398:	01833002 	orreq	r3, r3, r2
 39c:	05c51014 	strbeq	r1, [r5, #20]
 3a0:	0a00005d 	beq	51c <E131Params::callbackFunction(char const*)+0x280>
 3a4:	e3a01000 	mov	r1, #0
 3a8:	e1c23003 	bic	r3, r2, r3
 3ac:	e5c51014 	strb	r1, [r5, #20]
 3b0:	ea000059 	b	51c <E131Params::callbackFunction(char const*)+0x280>
 3b4:	e3a03005 	mov	r3, #5
 3b8:	e1a00006 	mov	r0, r6
 3bc:	e58d3004 	str	r3, [sp, #4]
 3c0:	e28d2008 	add	r2, sp, #8
 3c4:	e28d3004 	add	r3, sp, #4
 3c8:	e08a1007 	add	r1, sl, r7
 3cc:	ebfffffe 	bl	0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 3d0:	e3500000 	cmp	r0, #0
 3d4:	1a00001b 	bne	448 <E131Params::callbackFunction(char const*)+0x1ac>
 3d8:	e3a02001 	mov	r2, #1
 3dc:	e5d4301e 	ldrb	r3, [r4, #30]
 3e0:	e1c33512 	bic	r3, r3, r2, lsl r5
 3e4:	e5dd2008 	ldrb	r2, [sp, #8]
 3e8:	e5c4301e 	strb	r3, [r4, #30]
 3ec:	e3822020 	orr	r2, r2, #32
 3f0:	e3520069 	cmp	r2, #105	; 0x69
 3f4:	1a00000f 	bne	438 <E131Params::callbackFunction(char const*)+0x19c>
 3f8:	e5dd2009 	ldrb	r2, [sp, #9]
 3fc:	e3822020 	orr	r2, r2, #32
 400:	e352006e 	cmp	r2, #110	; 0x6e
 404:	1a00000b 	bne	438 <E131Params::callbackFunction(char const*)+0x19c>
 408:	e5dd200a 	ldrb	r2, [sp, #10]
 40c:	e3822020 	orr	r2, r2, #32
 410:	e3520070 	cmp	r2, #112	; 0x70
 414:	1a000007 	bne	438 <E131Params::callbackFunction(char const*)+0x19c>
 418:	e5dd200b 	ldrb	r2, [sp, #11]
 41c:	e3822020 	orr	r2, r2, #32
 420:	e3520075 	cmp	r2, #117	; 0x75
 424:	1a000003 	bne	438 <E131Params::callbackFunction(char const*)+0x19c>
 428:	e5dd200c 	ldrb	r2, [sp, #12]
 42c:	e3822020 	orr	r2, r2, #32
 430:	e3520074 	cmp	r2, #116	; 0x74
 434:	0a000039 	beq	520 <E131Params::callbackFunction(char const*)+0x284>
 438:	e3a02001 	mov	r2, #1
 43c:	e1833512 	orr	r3, r3, r2, lsl r5
 440:	e5c4301e 	strb	r3, [r4, #30]
 444:	ea000035 	b	520 <E131Params::callbackFunction(char const*)+0x284>
 448:	e1a01008 	mov	r1, r8
 44c:	e1a00006 	mov	r0, r6
 450:	e28d2001 	add	r2, sp, #1
 454:	ebfffffe 	bl	0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 458:	e3500000 	cmp	r0, #0
 45c:	1a000012 	bne	4ac <E131Params::callbackFunction(char const*)+0x210>
 460:	e5dd0001 	ldrb	r0, [sp, #1]
 464:	e3a03801 	mov	r3, #65536	; 0x10000
 468:	e2402001 	sub	r2, r0, #1
 46c:	e6ef2072 	uxtb	r2, r2
 470:	e35200c7 	cmp	r2, #199	; 0xc7
 474:	83a02000 	movhi	r2, #0
 478:	93a02001 	movls	r2, #1
 47c:	e3500064 	cmp	r0, #100	; 0x64
 480:	03a02000 	moveq	r2, #0
 484:	e3520000 	cmp	r2, #0
 488:	03a02064 	moveq	r2, #100	; 0x64
 48c:	e5941004 	ldr	r1, [r4, #4]
 490:	e1a03513 	lsl	r3, r3, r5
 494:	e0845005 	add	r5, r4, r5
 498:	15c5001f 	strbne	r0, [r5, #31]
 49c:	11833001 	orrne	r3, r3, r1
 4a0:	05c5201f 	strbeq	r2, [r5, #31]
 4a4:	01c13003 	biceq	r3, r1, r3
 4a8:	ea00001b 	b	51c <E131Params::callbackFunction(char const*)+0x280>
 4ac:	e2855001 	add	r5, r5, #1
 4b0:	e3550004 	cmp	r5, #4
 4b4:	e2899010 	add	r9, r9, #16
 4b8:	e2888012 	add	r8, r8, #18
 4bc:	1affff7f 	bne	2c0 <E131Params::callbackFunction(char const*)+0x24>
 4c0:	e1a00006 	mov	r0, r6
 4c4:	e59f1070 	ldr	r1, [pc, #112]	; 53c <E131Params::callbackFunction(char const*)+0x2a0>
 4c8:	e28d2001 	add	r2, sp, #1
 4cc:	ebfffffe 	bl	0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 4d0:	e3500000 	cmp	r0, #0
 4d4:	1a000005 	bne	4f0 <E131Params::callbackFunction(char const*)+0x254>
 4d8:	e5dd2001 	ldrb	r2, [sp, #1]
 4dc:	e5943004 	ldr	r3, [r4, #4]
 4e0:	e3520000 	cmp	r2, #0
 4e4:	13833a01 	orrne	r3, r3, #4096	; 0x1000
 4e8:	03c33a01 	biceq	r3, r3, #4096	; 0x1000
 4ec:	ea00000a 	b	51c <E131Params::callbackFunction(char const*)+0x280>
 4f0:	e1a00006 	mov	r0, r6
 4f4:	e59f1044 	ldr	r1, [pc, #68]	; 540 <E131Params::callbackFunction(char const*)+0x2a4>
 4f8:	e28d2001 	add	r2, sp, #1
 4fc:	ebfffffe 	bl	0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 500:	e3500000 	cmp	r0, #0
 504:	1a000005 	bne	520 <E131Params::callbackFunction(char const*)+0x284>
 508:	e5dd2001 	ldrb	r2, [sp, #1]
 50c:	e5943004 	ldr	r3, [r4, #4]
 510:	e3520000 	cmp	r2, #0
 514:	13833a02 	orrne	r3, r3, #8192	; 0x2000
 518:	03c33a02 	biceq	r3, r3, #8192	; 0x2000
 51c:	e5843004 	str	r3, [r4, #4]
 520:	e28dd01c 	add	sp, sp, #28
 524:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...
 538:	0000f9ff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
	...

00000544 <E131Params::staticCallbackFunction(void*, char const*)>:
 544:	eafffffe 	b	29c <E131Params::callbackFunction(char const*)>

00000548 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 548:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 54c:	e280c004 	add	ip, r0, #4
 550:	e1a04000 	mov	r4, r0
 554:	e2510000 	subs	r0, r1, #0
 558:	e24dd020 	sub	sp, sp, #32
 55c:	0a00000a 	beq	58c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x44>
 560:	e1a0100c 	mov	r1, ip
 564:	e280c01c 	add	ip, r0, #28
 568:	e490e004 	ldr	lr, [r0], #4
 56c:	e150000c 	cmp	r0, ip
 570:	e481e004 	str	lr, [r1], #4
 574:	1afffffb 	bne	568 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20>
 578:	e1d0c0b0 	ldrh	ip, [r0]
 57c:	e1c1c0b0 	strh	ip, [r1]
 580:	e5d00002 	ldrb	r0, [r0, #2]
 584:	e5c10002 	strb	r0, [r1, #2]
 588:	ea000006 	b	5a8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x60>
 58c:	e5940000 	ldr	r0, [r4]
 590:	e1cd20f8 	strd	r2, [sp, #8]
 594:	e5901000 	ldr	r1, [r0]
 598:	e591500c 	ldr	r5, [r1, #12]
 59c:	e1a0100c 	mov	r1, ip
 5a0:	e12fff35 	blx	r5
 5a4:	e1cd20d8 	ldrd	r2, [sp, #8]
 5a8:	e59f12b4 	ldr	r1, [pc, #692]	; 864 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x31c>
 5ac:	e28d0014 	add	r0, sp, #20
 5b0:	ebfffffe 	bl	0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 5b4:	e3a05000 	mov	r5, #0
 5b8:	e59f62a8 	ldr	r6, [pc, #680]	; 868 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x320>
 5bc:	e59f82a8 	ldr	r8, [pc, #680]	; 86c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x324>
 5c0:	e59f72a8 	ldr	r7, [pc, #680]	; 870 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x328>
 5c4:	e5d4301e 	ldrb	r3, [r4, #30]
 5c8:	e1a01006 	mov	r1, r6
 5cc:	e1a03553 	asr	r3, r3, r5
 5d0:	e3130001 	tst	r3, #1
 5d4:	e1e03003 	mvn	r3, r3
 5d8:	01a02008 	moveq	r2, r8
 5dc:	11a02007 	movne	r2, r7
 5e0:	e2033001 	and	r3, r3, #1
 5e4:	e28d0014 	add	r0, sp, #20
 5e8:	e2855001 	add	r5, r5, #1
 5ec:	ebfffe83 	bl	0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 5f0:	e3550004 	cmp	r5, #4
 5f4:	e2866012 	add	r6, r6, #18
 5f8:	1afffff1 	bne	5c4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x7c>
 5fc:	e3a06000 	mov	r6, #0
 600:	e59fa26c 	ldr	sl, [pc, #620]	; 874 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x32c>
 604:	e59f926c 	ldr	r9, [pc, #620]	; 878 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x330>
 608:	e59f826c 	ldr	r8, [pc, #620]	; 87c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x334>
 60c:	e59f726c 	ldr	r7, [pc, #620]	; 880 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x338>
 610:	e1dd11ba 	ldrh	r1, [sp, #26]
 614:	e1dd51b8 	ldrh	r5, [sp, #24]
 618:	e1510005 	cmp	r1, r5
 61c:	2a000021 	bcs	6a8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x160>
 620:	e3a0c010 	mov	ip, #16
 624:	e0842086 	add	r2, r4, r6, lsl #1
 628:	e5d2300b 	ldrb	r3, [r2, #11]
 62c:	e5d2200c 	ldrb	r2, [r2, #12]
 630:	e59d0014 	ldr	r0, [sp, #20]
 634:	e1833402 	orr	r3, r3, r2, lsl #8
 638:	e5942004 	ldr	r2, [r4, #4]
 63c:	e0800001 	add	r0, r0, r1
 640:	e002261c 	and	r2, r2, ip, lsl r6
 644:	e152061c 	cmp	r2, ip, lsl r6
 648:	e0455001 	sub	r5, r5, r1
 64c:	e5dd101c 	ldrb	r1, [sp, #28]
 650:	0a000002 	beq	660 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x118>
 654:	e3510000 	cmp	r1, #0
 658:	1a000005 	bne	674 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x12c>
 65c:	ea000008 	b	684 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13c>
 660:	e3510000 	cmp	r1, #0
 664:	058d3000 	streq	r3, [sp]
 668:	01a02008 	moveq	r2, r8
 66c:	01a0300a 	moveq	r3, sl
 670:	0a000006 	beq	690 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x148>
 674:	e58d3000 	str	r3, [sp]
 678:	e1a02009 	mov	r2, r9
 67c:	e1a0300a 	mov	r3, sl
 680:	ea000002 	b	690 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x148>
 684:	e58d3000 	str	r3, [sp]
 688:	e1a02007 	mov	r2, r7
 68c:	e1a0300a 	mov	r3, sl
 690:	e1a01005 	mov	r1, r5
 694:	ebfffffe 	bl	0 <snprintf>
 698:	e1550000 	cmp	r5, r0
 69c:	a1dd31ba 	ldrhge	r3, [sp, #26]
 6a0:	a0830000 	addge	r0, r3, r0
 6a4:	a1cd01ba 	strhge	r0, [sp, #26]
 6a8:	e2866001 	add	r6, r6, #1
 6ac:	e3560004 	cmp	r6, #4
 6b0:	e28aa010 	add	sl, sl, #16
 6b4:	1affffd5 	bne	610 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xc8>
 6b8:	e59f11c4 	ldr	r1, [pc, #452]	; 884 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x33c>
 6bc:	e28d0014 	add	r0, sp, #20
 6c0:	ebfffffe 	bl	0 <PropertiesBuilder::AddComment(char const*)>
 6c4:	e3a05000 	mov	r5, #0
 6c8:	e3a07c01 	mov	r7, #256	; 0x100
 6cc:	e59f61b4 	ldr	r6, [pc, #436]	; 888 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x340>
 6d0:	e59fa1b4 	ldr	sl, [pc, #436]	; 88c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x344>
 6d4:	e59f91b4 	ldr	r9, [pc, #436]	; 890 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x348>
 6d8:	e2848014 	add	r8, r4, #20
 6dc:	e5943004 	ldr	r3, [r4, #4]
 6e0:	e4d82001 	ldrb	r2, [r8], #1
 6e4:	e0033517 	and	r3, r3, r7, lsl r5
 6e8:	e1530517 	cmp	r3, r7, lsl r5
 6ec:	03a03001 	moveq	r3, #1
 6f0:	13a03000 	movne	r3, #0
 6f4:	e3520000 	cmp	r2, #0
 6f8:	01a0200a 	moveq	r2, sl
 6fc:	11a02009 	movne	r2, r9
 700:	e1a01006 	mov	r1, r6
 704:	e28d0014 	add	r0, sp, #20
 708:	e2855001 	add	r5, r5, #1
 70c:	ebfffe3b 	bl	0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 710:	e3550004 	cmp	r5, #4
 714:	e2866012 	add	r6, r6, #18
 718:	1affffef 	bne	6dc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x194>
 71c:	e59f1170 	ldr	r1, [pc, #368]	; 894 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x34c>
 720:	e28d0014 	add	r0, sp, #20
 724:	ebfffffe 	bl	0 <PropertiesBuilder::AddComment(char const*)>
 728:	e3a06000 	mov	r6, #0
 72c:	e59fa164 	ldr	sl, [pc, #356]	; 898 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x350>
 730:	e59f9140 	ldr	r9, [pc, #320]	; 878 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x330>
 734:	e59f8140 	ldr	r8, [pc, #320]	; 87c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x334>
 738:	e59f7140 	ldr	r7, [pc, #320]	; 880 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x338>
 73c:	e1dd11ba 	ldrh	r1, [sp, #26]
 740:	e1dd51b8 	ldrh	r5, [sp, #24]
 744:	e1510005 	cmp	r1, r5
 748:	2a00001f 	bcs	7cc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x284>
 74c:	e3a0c801 	mov	ip, #65536	; 0x10000
 750:	e5942004 	ldr	r2, [r4, #4]
 754:	e59d0014 	ldr	r0, [sp, #20]
 758:	e002261c 	and	r2, r2, ip, lsl r6
 75c:	e284301f 	add	r3, r4, #31
 760:	e152061c 	cmp	r2, ip, lsl r6
 764:	e0800001 	add	r0, r0, r1
 768:	e0455001 	sub	r5, r5, r1
 76c:	e7d33006 	ldrb	r3, [r3, r6]
 770:	e5dd101c 	ldrb	r1, [sp, #28]
 774:	0a000002 	beq	784 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x23c>
 778:	e3510000 	cmp	r1, #0
 77c:	1a000005 	bne	798 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x250>
 780:	ea000008 	b	7a8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x260>
 784:	e3510000 	cmp	r1, #0
 788:	058d3000 	streq	r3, [sp]
 78c:	01a02008 	moveq	r2, r8
 790:	01a0300a 	moveq	r3, sl
 794:	0a000006 	beq	7b4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>
 798:	e58d3000 	str	r3, [sp]
 79c:	e1a02009 	mov	r2, r9
 7a0:	e1a0300a 	mov	r3, sl
 7a4:	ea000002 	b	7b4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>
 7a8:	e58d3000 	str	r3, [sp]
 7ac:	e1a02007 	mov	r2, r7
 7b0:	e1a0300a 	mov	r3, sl
 7b4:	e1a01005 	mov	r1, r5
 7b8:	ebfffffe 	bl	0 <snprintf>
 7bc:	e1550000 	cmp	r5, r0
 7c0:	a1dd31ba 	ldrhge	r3, [sp, #26]
 7c4:	a0830000 	addge	r0, r3, r0
 7c8:	a1cd01ba 	strhge	r0, [sp, #26]
 7cc:	e2866001 	add	r6, r6, #1
 7d0:	e3560004 	cmp	r6, #4
 7d4:	e28aa012 	add	sl, sl, #18
 7d8:	1affffd7 	bne	73c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f4>
 7dc:	e59f10b8 	ldr	r1, [pc, #184]	; 89c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x354>
 7e0:	e28d0014 	add	r0, sp, #20
 7e4:	ebfffffe 	bl	0 <PropertiesBuilder::AddComment(char const*)>
 7e8:	e5942004 	ldr	r2, [r4, #4]
 7ec:	e59f10ac 	ldr	r1, [pc, #172]	; 8a0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x358>
 7f0:	e1a02622 	lsr	r2, r2, #12
 7f4:	e2022001 	and	r2, r2, #1
 7f8:	e28d0014 	add	r0, sp, #20
 7fc:	ebfffe26 	bl	9c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800:	e5942004 	ldr	r2, [r4, #4]
 804:	e59f1098 	ldr	r1, [pc, #152]	; 8a4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x35c>
 808:	e1a026a2 	lsr	r2, r2, #13
 80c:	e2022001 	and	r2, r2, #1
 810:	e28d0014 	add	r0, sp, #20
 814:	ebfffe20 	bl	9c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 818:	e5dd301c 	ldrb	r3, [sp, #28]
 81c:	e3530000 	cmp	r3, #0
 820:	0a00000a 	beq	850 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x308>
 824:	e1dd21ba 	ldrh	r2, [sp, #26]
 828:	e59d3014 	ldr	r3, [sp, #20]
 82c:	e0833002 	add	r3, r3, r2
 830:	e3a0207d 	mov	r2, #125	; 0x7d
 834:	e5432001 	strb	r2, [r3, #-1]
 838:	e1dd31ba 	ldrh	r3, [sp, #26]
 83c:	e59d1014 	ldr	r1, [sp, #20]
 840:	e7c12003 	strb	r2, [r1, r3]
 844:	e1dd31ba 	ldrh	r3, [sp, #26]
 848:	e2833001 	add	r3, r3, #1
 84c:	e1cd31ba 	strh	r3, [sp, #26]
 850:	e1dd21ba 	ldrh	r2, [sp, #26]
 854:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
 858:	e5832000 	str	r2, [r3]
 85c:	e28dd020 	add	sp, sp, #32
 860:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
	...
 86c:	00000032 	andeq	r0, r0, r2, lsr r0
 870:	00000038 	andeq	r0, r0, r8, lsr r0
 874:	00000000 	andeq	r0, r0, r0
 878:	0000001a 	andeq	r0, r0, sl, lsl r0
 87c:	00000023 	andeq	r0, r0, r3, lsr #32
 880:	0000002a 	andeq	r0, r0, sl, lsr #32
 884:	00000047 	andeq	r0, r0, r7, asr #32
 888:	00000000 	andeq	r0, r0, r0
 88c:	0000003f 	andeq	r0, r0, pc, lsr r0
 890:	00000043 	andeq	r0, r0, r3, asr #32
 894:	00000052 	andeq	r0, r0, r2, asr r0
 898:	00000000 	andeq	r0, r0, r0
 89c:	0000005c 	andeq	r0, r0, ip, asr r0
	...

000008a8 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 8a8:	e590c000 	ldr	ip, [r0]
 8ac:	e35c0000 	cmp	ip, #0
 8b0:	1a000001 	bne	8bc <E131Params::Save(char*, unsigned int, unsigned int&)+0x14>
 8b4:	e583c000 	str	ip, [r3]
 8b8:	e12fff1e 	bx	lr
 8bc:	e92d4007 	push	{r0, r1, r2, lr}
 8c0:	e58d3000 	str	r3, [sp]
 8c4:	e1a03002 	mov	r3, r2
 8c8:	e1a02001 	mov	r2, r1
 8cc:	e3a01000 	mov	r1, #0
 8d0:	ebfffffe 	bl	548 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 8d4:	e28dd00c 	add	sp, sp, #12
 8d8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000008dc <E131Params::Set(E131Bridge*)>:
 8dc:	e5903004 	ldr	r3, [r0, #4]
 8e0:	e3530000 	cmp	r3, #0
 8e4:	012fff1e 	bxeq	lr
 8e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 8ec:	e3a03000 	mov	r3, #0
 8f0:	e3a05c01 	mov	r5, #256	; 0x100
 8f4:	e3a07044 	mov	r7, #68	; 0x44
 8f8:	e3a04801 	mov	r4, #65536	; 0x10000
 8fc:	e281ed15 	add	lr, r1, #1344	; 0x540
 900:	e2802014 	add	r2, r0, #20
 904:	e28ee00c 	add	lr, lr, #12
 908:	e590c004 	ldr	ip, [r0, #4]
 90c:	e00c6315 	and	r6, ip, r5, lsl r3
 910:	e1560315 	cmp	r6, r5, lsl r3
 914:	00060397 	muleq	r6, r7, r3
 918:	05d28000 	ldrbeq	r8, [r2]
 91c:	e00cc314 	and	ip, ip, r4, lsl r3
 920:	078e8006 	streq	r8, [lr, r6]
 924:	e15c0314 	cmp	ip, r4, lsl r3
 928:	1a000004 	bne	940 <E131Params::Set(E131Bridge*)+0x64>
 92c:	e5d2600b 	ldrb	r6, [r2, #11]
 930:	e246c001 	sub	ip, r6, #1
 934:	e6efc07c 	uxtb	ip, ip
 938:	e35c00c7 	cmp	ip, #199	; 0xc7
 93c:	95c16629 	strbls	r6, [r1, #1577]	; 0x629
 940:	e2833001 	add	r3, r3, #1
 944:	e3530004 	cmp	r3, #4
 948:	e2822001 	add	r2, r2, #1
 94c:	1affffed 	bne	908 <E131Params::Set(E131Bridge*)+0x2c>
 950:	e5903004 	ldr	r3, [r0, #4]
 954:	e3130a01 	tst	r3, #4096	; 0x1000
 958:	13a02001 	movne	r2, #1
 95c:	15c124f9 	strbne	r2, [r1, #1273]	; 0x4f9
 960:	e3130a02 	tst	r3, #8192	; 0x2000
 964:	13a03001 	movne	r3, #1
 968:	15c134fa 	strbne	r3, [r1, #1274]	; 0x4fa
 96c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section .rodata.str1.1:

00000000 <.rodata.str1.1>:
   0:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
   4:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
   8:	25002c22 	strcs	r2, [r0, #-3106]	; 0xfffff3de
   c:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
  10:	2523000a 	strcs	r0, [r3, #-10]!
  14:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
  18:	2522000a 	strcs	r0, [r2, #-10]!
  1c:	253a2273 	ldrcs	r2, [sl, #-627]!	; 0xfffffd8d
  20:	25002c64 	strcs	r2, [r0, #-3172]	; 0xfffff39c
  24:	64253d73 	strtvs	r3, [r5], #-3443	; 0xfffff28d
  28:	2523000a 	strcs	r0, [r3, #-10]!
  2c:	64253d73 	strtvs	r3, [r5], #-3443	; 0xfffff28d
  30:	6e69000a 	cdpvs	0, 6, cr0, cr9, cr10, {0}
  34:	00747570 	rsbseq	r7, r4, r0, ror r5
  38:	7074756f 	rsbsvc	r7, r4, pc, ror #10
  3c:	68007475 	stmdavs	r0, {r0, r2, r4, r5, r6, sl, ip, sp, lr}
  40:	6c007074 	stcvs	0, cr7, [r0], {116}	; 0x74
  44:	44007074 	strmi	r7, [r0], #-116	; 0xffffff8c
  48:	4f20584d 	svcmi	0x0020584d
  4c:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
  50:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
  54:	6e492058 	mcrvs	0, 2, r2, cr9, cr8, {2}
  58:	00747570 	rsbseq	r7, r4, r0, ror r5
  5c:	6568744f 	strbvs	r7, [r8, #-1103]!	; 0xfffffbb1
  60:	Address 0x0000000000000060 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <E131Params::Set(E131Bridge*)+0x168cf50>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <E131Params::Set(E131Bridge*)+0x41b48>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


e117const.o:     file format elf32-littlearm


Disassembly of section .rodata:

00000000 <E117Const::ACN_PACKET_IDENTIFIER>:
   0:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
   4:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
   8:	00000037 	andeq	r0, r0, r7, lsr r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003b41 	andeq	r3, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000031 	andeq	r0, r0, r1, lsr r0
  10:	4d524105 	ldfmie	f4, [r2, #-20]	; 0xffffffec
  14:	36373131 			; <UNDEFINED> instruction: 0x36373131
  18:	2d465a4a 	vstrcs	s11, [r6, #-296]	; 0xfffffed8
  1c:	07060053 	smlsdeq	r6, r3, r0, r0
  20:	01090108 	tsteq	r9, r8, lsl #2
  24:	0412020a 	ldreq	r0, [r2], #-522	; 0xfffffdf6
  28:	01150114 	tsteq	r5, r4, lsl r1
  2c:	01180317 	tsteq	r8, r7, lsl r3
  30:	011a0119 	tsteq	sl, r9, lsl r1
  34:	021e011c 	andseq	r0, lr, #28, 2
  38:	01440122 	cmpeq	r4, r2, lsr #2

e131bridgehandledmxin.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <E131Bridge::FillDataPacket()>:
   0:	e3a01000 	mov	r1, #0
   4:	e3a0c010 	mov	ip, #16
   8:	e5903018 	ldr	r3, [r0, #24]
   c:	e59f20d8 	ldr	r2, [pc, #216]	; ec <E131Bridge::FillDataPacket()+0xec>
  10:	e92d4010 	push	{r4, lr}
  14:	e5c3c001 	strb	ip, [r3, #1]
  18:	e5c31000 	strb	r1, [r3]
  1c:	e5c31002 	strb	r1, [r3, #2]
  20:	e283c00f 	add	ip, r3, #15
  24:	e5e31003 	strb	r1, [r3, #3]!
  28:	e4d21001 	ldrb	r1, [r2], #1
  2c:	e5e31001 	strb	r1, [r3, #1]!
  30:	e15c0003 	cmp	ip, r3
  34:	1afffffb 	bne	28 <E131Bridge::FillDataPacket()+0x28>
  38:	e5901018 	ldr	r1, [r0, #24]
  3c:	e3a0e000 	mov	lr, #0
  40:	e3a04004 	mov	r4, #4
  44:	e1a02001 	mov	r2, r1
  48:	e5c1e012 	strb	lr, [r1, #18]
  4c:	e5c1e013 	strb	lr, [r1, #19]
  50:	e5c1e014 	strb	lr, [r1, #20]
  54:	e2803024 	add	r3, r0, #36	; 0x24
  58:	e280c034 	add	ip, r0, #52	; 0x34
  5c:	e5e24015 	strb	r4, [r2, #21]!
  60:	e4d31001 	ldrb	r1, [r3], #1
  64:	e153000c 	cmp	r3, ip
  68:	e5e21001 	strb	r1, [r2, #1]!
  6c:	1afffffb 	bne	60 <E131Bridge::FillDataPacket()+0x60>
  70:	e5901018 	ldr	r1, [r0, #24]
  74:	e3a0e000 	mov	lr, #0
  78:	e3a04002 	mov	r4, #2
  7c:	e1a02001 	mov	r2, r1
  80:	e5c1e028 	strb	lr, [r1, #40]	; 0x28
  84:	e5c1e029 	strb	lr, [r1, #41]	; 0x29
  88:	e5c1e02a 	strb	lr, [r1, #42]	; 0x2a
  8c:	e280c074 	add	ip, r0, #116	; 0x74
  90:	e5e2402b 	strb	r4, [r2, #43]!	; 0x2b
  94:	e4d31001 	ldrb	r1, [r3], #1
  98:	e153000c 	cmp	r3, ip
  9c:	e5e21001 	strb	r1, [r2, #1]!
  a0:	1afffffb 	bne	94 <E131Bridge::FillDataPacket()+0x94>
  a4:	e3a03000 	mov	r3, #0
  a8:	e3a0e002 	mov	lr, #2
  ac:	e3e0c05e 	mvn	ip, #94	; 0x5e
  b0:	e3a01001 	mov	r1, #1
  b4:	e5902018 	ldr	r2, [r0, #24]
  b8:	e5c23070 	strb	r3, [r2, #112]	; 0x70
  bc:	e5c2306d 	strb	r3, [r2, #109]	; 0x6d
  c0:	e5c2306e 	strb	r3, [r2, #110]	; 0x6e
  c4:	e5902018 	ldr	r2, [r0, #24]
  c8:	e5c2e075 	strb	lr, [r2, #117]	; 0x75
  cc:	e5902018 	ldr	r2, [r0, #24]
  d0:	e5c2c076 	strb	ip, [r2, #118]	; 0x76
  d4:	e5902018 	ldr	r2, [r0, #24]
  d8:	e5c23077 	strb	r3, [r2, #119]	; 0x77
  dc:	e5c23078 	strb	r3, [r2, #120]	; 0x78
  e0:	e5c23079 	strb	r3, [r2, #121]	; 0x79
  e4:	e5c2107a 	strb	r1, [r2, #122]	; 0x7a
  e8:	e8bd8010 	pop	{r4, pc}
  ec:	00000000 	andeq	r0, r0, r0

000000f0 <E131Bridge::HandleDmxIn()>:
  f0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
  f4:	e3a05000 	mov	r5, #0
  f8:	e1a06000 	mov	r6, r0
  fc:	e59f7194 	ldr	r7, [pc, #404]	; 298 <E131Bridge::HandleDmxIn()+0x1a8>
 100:	e59f8194 	ldr	r8, [pc, #404]	; 29c <E131Bridge::HandleDmxIn()+0x1ac>
 104:	e24dd014 	sub	sp, sp, #20
 108:	e2804e62 	add	r4, r0, #1568	; 0x620
 10c:	e5d43002 	ldrb	r3, [r4, #2]
 110:	e3530000 	cmp	r3, #0
 114:	0a000013 	beq	168 <E131Bridge::HandleDmxIn()+0x78>
 118:	e5960014 	ldr	r0, [r6, #20]
 11c:	e28d300c 	add	r3, sp, #12
 120:	e5902000 	ldr	r2, [r0]
 124:	e1a01005 	mov	r1, r5
 128:	e5929010 	ldr	r9, [r2, #16]
 12c:	e28d2008 	add	r2, sp, #8
 130:	e12fff39 	blx	r9
 134:	e2503000 	subs	r3, r0, #0
 138:	1a000010 	bne	180 <E131Bridge::HandleDmxIn()+0x90>
 13c:	e59d300c 	ldr	r3, [sp, #12]
 140:	e3530000 	cmp	r3, #0
 144:	1a000007 	bne	168 <E131Bridge::HandleDmxIn()+0x78>
 148:	e3a02001 	mov	r2, #1
 14c:	e5973000 	ldr	r3, [r7]
 150:	e1c33512 	bic	r3, r3, r2, lsl r5
 154:	e3530000 	cmp	r3, #0
 158:	e5873000 	str	r3, [r7]
 15c:	05d6350d 	ldrbeq	r3, [r6, #1293]	; 0x50d
 160:	03c33001 	biceq	r3, r3, #1
 164:	05c6350d 	strbeq	r3, [r6, #1293]	; 0x50d
 168:	e2855001 	add	r5, r5, #1
 16c:	e3550004 	cmp	r5, #4
 170:	e284400c 	add	r4, r4, #12
 174:	1affffe4 	bne	10c <E131Bridge::HandleDmxIn()+0x1c>
 178:	e28dd014 	add	sp, sp, #20
 17c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
 180:	e59d1008 	ldr	r1, [sp, #8]
 184:	e596e018 	ldr	lr, [r6, #24]
 188:	e6ffc071 	uxth	ip, r1
 18c:	e28c006d 	add	r0, ip, #109	; 0x6d
 190:	e28c2057 	add	r2, ip, #87	; 0x57
 194:	e3800a07 	orr	r0, r0, #28672	; 0x7000
 198:	e3822a07 	orr	r2, r2, #28672	; 0x7000
 19c:	e6bf0fb0 	rev16	r0, r0
 1a0:	e6bf2fb2 	rev16	r2, r2
 1a4:	e5ce0010 	strb	r0, [lr, #16]
 1a8:	e5ce2026 	strb	r2, [lr, #38]	; 0x26
 1ac:	e6ff0070 	uxth	r0, r0
 1b0:	e6ff2072 	uxth	r2, r2
 1b4:	e1a00420 	lsr	r0, r0, #8
 1b8:	e1a02422 	lsr	r2, r2, #8
 1bc:	e5ce0011 	strb	r0, [lr, #17]
 1c0:	e5ce2027 	strb	r2, [lr, #39]	; 0x27
 1c4:	e5d42009 	ldrb	r2, [r4, #9]
 1c8:	e28cc00a 	add	ip, ip, #10
 1cc:	e5ce206c 	strb	r2, [lr, #108]	; 0x6c
 1d0:	e5d42008 	ldrb	r2, [r4, #8]
 1d4:	e38cca07 	orr	ip, ip, #28672	; 0x7000
 1d8:	e2820001 	add	r0, r2, #1
 1dc:	e5c40008 	strb	r0, [r4, #8]
 1e0:	e5960018 	ldr	r0, [r6, #24]
 1e4:	e6bfcfbc 	rev16	ip, ip
 1e8:	e5c0206f 	strb	r2, [r0, #111]	; 0x6f
 1ec:	e1d400b0 	ldrh	r0, [r4]
 1f0:	e5962018 	ldr	r2, [r6, #24]
 1f4:	e6bf0fb0 	rev16	r0, r0
 1f8:	e6ffe07c 	uxth	lr, ip
 1fc:	e5c20071 	strb	r0, [r2, #113]	; 0x71
 200:	e6ff0070 	uxth	r0, r0
 204:	e1a0e42e 	lsr	lr, lr, #8
 208:	e1a00420 	lsr	r0, r0, #8
 20c:	e3510000 	cmp	r1, #0
 210:	e5c2c073 	strb	ip, [r2, #115]	; 0x73
 214:	e5c2e074 	strb	lr, [r2, #116]	; 0x74
 218:	e5c20072 	strb	r0, [r2, #114]	; 0x72
 21c:	0a000007 	beq	240 <E131Bridge::HandleDmxIn()+0x150>
 220:	e282207c 	add	r2, r2, #124	; 0x7c
 224:	e0831001 	add	r1, r3, r1
 228:	e4d30001 	ldrb	r0, [r3], #1
 22c:	e1530001 	cmp	r3, r1
 230:	e5e20001 	strb	r0, [r2, #1]!
 234:	1afffffb 	bne	228 <E131Bridge::HandleDmxIn()+0x138>
 238:	e1dd10b8 	ldrh	r1, [sp, #8]
 23c:	e5962018 	ldr	r2, [r6, #24]
 240:	e3a00d57 	mov	r0, #5568	; 0x15c0
 244:	e6bf3fb1 	rev16	r3, r1
 248:	e5c2307b 	strb	r3, [r2, #123]	; 0x7b
 24c:	e6ff3073 	uxth	r3, r3
 250:	e1a03423 	lsr	r3, r3, #8
 254:	e5c2307c 	strb	r3, [r2, #124]	; 0x7c
 258:	e281107d 	add	r1, r1, #125	; 0x7d
 25c:	e58d0004 	str	r0, [sp, #4]
 260:	e6ff3071 	uxth	r3, r1
 264:	e5941004 	ldr	r1, [r4, #4]
 268:	e5980000 	ldr	r0, [r8]
 26c:	e58d1000 	str	r1, [sp]
 270:	e5961000 	ldr	r1, [r6]
 274:	ebfffffe 	bl	0 <Network::SendTo(int, void const*, unsigned short, unsigned int, unsigned short)>
 278:	e3a02001 	mov	r2, #1
 27c:	e5973000 	ldr	r3, [r7]
 280:	e1833512 	orr	r3, r3, r2, lsl r5
 284:	e5873000 	str	r3, [r7]
 288:	e5d6350d 	ldrb	r3, [r6, #1293]	; 0x50d
 28c:	e1833002 	orr	r3, r3, r2
 290:	e5c6350d 	strb	r3, [r6, #1293]	; 0x50d
 294:	eaffffb3 	b	168 <E131Bridge::HandleDmxIn()+0x78>
	...

Disassembly of section .bss:

00000000 <s_ReceivingMask>:
   0:	00000000 	andeq	r0, r0, r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <E131Bridge::HandleDmxIn()+0x168d73c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <E131Bridge::HandleDmxIn()+0x42334>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


e131bridgeprint.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <E131Bridge::Print()>:
   0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   4:	e3a05000 	mov	r5, #0
   8:	e1a04000 	mov	r4, r0
   c:	e24dd034 	sub	sp, sp, #52	; 0x34
  10:	e28d1008 	add	r1, sp, #8
  14:	e2800024 	add	r0, r0, #36	; 0x24
  18:	e5cd502c 	strb	r5, [sp, #44]	; 0x2c
  1c:	ebfffffe 	bl	0 <uuid_unparse>
  20:	e59f0114 	ldr	r0, [pc, #276]	; 13c <E131Bridge::Print()+0x13c>
  24:	ebfffffe 	bl	0 <printf>
  28:	e59f3110 	ldr	r3, [pc, #272]	; 140 <E131Bridge::Print()+0x140>
  2c:	e59f0110 	ldr	r0, [pc, #272]	; 144 <E131Bridge::Print()+0x144>
  30:	e5d31000 	ldrb	r1, [r3]
  34:	e5d32001 	ldrb	r2, [r3, #1]
  38:	ebfffffe 	bl	0 <printf>
  3c:	e59f0104 	ldr	r0, [pc, #260]	; 148 <E131Bridge::Print()+0x148>
  40:	e28d1008 	add	r1, sp, #8
  44:	ebfffffe 	bl	0 <printf>
  48:	e5d4350b 	ldrb	r3, [r4, #1291]	; 0x50b
  4c:	e1530005 	cmp	r3, r5
  50:	0a000018 	beq	b8 <E131Bridge::Print()+0xb8>
  54:	e59f00f0 	ldr	r0, [pc, #240]	; 14c <E131Bridge::Print()+0x14c>
  58:	ebfffffe 	bl	0 <printf>
  5c:	e2846d15 	add	r6, r4, #1344	; 0x540
  60:	e59f70e8 	ldr	r7, [pc, #232]	; 150 <E131Bridge::Print()+0x150>
  64:	e286600c 	add	r6, r6, #12
  68:	e3a03001 	mov	r3, #1
  6c:	e1a01005 	mov	r1, r5
  70:	e1a00004 	mov	r0, r4
  74:	e28d2006 	add	r2, sp, #6
  78:	ebfffffe 	bl	0 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
  7c:	e3500000 	cmp	r0, #0
  80:	0a000009 	beq	ac <E131Bridge::Print()+0xac>
  84:	e3a03044 	mov	r3, #68	; 0x44
  88:	e0030593 	mul	r3, r3, r5
  8c:	e7962003 	ldr	r2, [r6, r3]
  90:	e1a01005 	mov	r1, r5
  94:	e3520000 	cmp	r2, #0
  98:	e59f30b4 	ldr	r3, [pc, #180]	; 154 <E131Bridge::Print()+0x154>
  9c:	e1dd20b6 	ldrh	r2, [sp, #6]
  a0:	01a03007 	moveq	r3, r7
  a4:	e59f00ac 	ldr	r0, [pc, #172]	; 158 <E131Bridge::Print()+0x158>
  a8:	ebfffffe 	bl	0 <printf>
  ac:	e2855001 	add	r5, r5, #1
  b0:	e3550004 	cmp	r5, #4
  b4:	1affffeb 	bne	68 <E131Bridge::Print()+0x68>
  b8:	e5d4350a 	ldrb	r3, [r4, #1290]	; 0x50a
  bc:	e3530000 	cmp	r3, #0
  c0:	0a000016 	beq	120 <E131Bridge::Print()+0x120>
  c4:	e59f0090 	ldr	r0, [pc, #144]	; 15c <E131Bridge::Print()+0x15c>
  c8:	ebfffffe 	bl	0 <printf>
  cc:	e3a05000 	mov	r5, #0
  d0:	e2846e62 	add	r6, r4, #1568	; 0x620
  d4:	e59f7084 	ldr	r7, [pc, #132]	; 160 <E131Bridge::Print()+0x160>
  d8:	e2866009 	add	r6, r6, #9
  dc:	e3a03000 	mov	r3, #0
  e0:	e1a01005 	mov	r1, r5
  e4:	e1a00004 	mov	r0, r4
  e8:	e28d2006 	add	r2, sp, #6
  ec:	ebfffffe 	bl	0 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
  f0:	e3500000 	cmp	r0, #0
  f4:	0a000006 	beq	114 <E131Bridge::Print()+0x114>
  f8:	e3a0300c 	mov	r3, #12
  fc:	e0030593 	mul	r3, r3, r5
 100:	e1a01005 	mov	r1, r5
 104:	e1a00007 	mov	r0, r7
 108:	e7d63003 	ldrb	r3, [r6, r3]
 10c:	e1dd20b6 	ldrh	r2, [sp, #6]
 110:	ebfffffe 	bl	0 <printf>
 114:	e2855001 	add	r5, r5, #1
 118:	e3550004 	cmp	r5, #4
 11c:	1affffee 	bne	dc <E131Bridge::Print()+0xdc>
 120:	e5d434fb 	ldrb	r3, [r4, #1275]	; 0x4fb
 124:	e3530000 	cmp	r3, #0
 128:	0a000001 	beq	134 <E131Bridge::Print()+0x134>
 12c:	e59f0030 	ldr	r0, [pc, #48]	; 164 <E131Bridge::Print()+0x164>
 130:	ebfffffe 	bl	0 <printf>
 134:	e28dd034 	add	sp, sp, #52	; 0x34
 138:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 13c:	00000008 	andeq	r0, r0, r8
 140:	00000000 	andeq	r0, r0, r0
 144:	00000010 	andeq	r0, r0, r0, lsl r0
 148:	00000023 	andeq	r0, r0, r3, lsr #32
 14c:	00000033 	andeq	r0, r0, r3, lsr r0
 150:	00000000 	andeq	r0, r0, r0
 154:	00000004 	andeq	r0, r0, r4
 158:	0000003c 	andeq	r0, r0, ip, lsr r0
 15c:	0000005b 	andeq	r0, r0, fp, asr r0
 160:	00000063 	andeq	r0, r0, r3, rrx
 164:	00000082 	andeq	r0, r0, r2, lsl #1

Disassembly of section .rodata.str1.1:

00000000 <.rodata.str1.1>:
   0:	00505448 	subseq	r5, r0, r8, asr #8
   4:	0050544c 	subseq	r5, r0, ip, asr #8
   8:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
   c:	000a6567 	andeq	r6, sl, r7, ror #10
  10:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
  14:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
  18:	203a2065 	eorscs	r2, sl, r5, rrx
  1c:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
  20:	20000a64 	andcs	r0, r0, r4, ror #20
  24:	20444943 	subcs	r4, r4, r3, asr #18
  28:	20202020 	eorcs	r2, r0, r0, lsr #32
  2c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
  30:	20000a73 	andcs	r0, r0, r3, ror sl
  34:	7074754f 	rsbsvc	r7, r4, pc, asr #10
  38:	000a7475 	andeq	r7, sl, r5, ror r4
  3c:	6f502020 	svcvs	0x00502020
  40:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
  44:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
  48:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
  4c:	20657372 	rsbcs	r7, r5, r2, ror r3
  50:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
  54:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
  58:	20000a5d 	andcs	r0, r0, sp, asr sl
  5c:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
  60:	20000a74 	andcs	r0, r0, r4, ror sl
  64:	726f5020 	rsbvc	r5, pc, #32
  68:	32252074 	eorcc	r2, r5, #116	; 0x74
  6c:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
  70:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
  74:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
  78:	2064332d 	rsbcs	r3, r4, sp, lsr #6
  7c:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
  80:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
  84:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
  88:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
  8c:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
  90:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
  94:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
  98:	000a6465 	andeq	r6, sl, r5, ror #8

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <E131Bridge::Print()+0x168d82c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <E131Bridge::Print()+0x42424>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


e131msgconst.o:     file format elf32-littlearm


Disassembly of section .rodata:

00000000 <E131MsgConst::STARTED>:
   0:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
   4:	2e314520 	cfabs64cs	mvdx4, mvdx1
   8:	73203133 			; <UNDEFINED> instruction: 0x73203133
   c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  10:	00006465 	andeq	r6, r0, r5, ror #8

00000014 <E131MsgConst::START>:
  14:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
  18:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
  1c:	43417320 	movtmi	r7, #4896	; 0x1320
  20:	3145204e 	cmpcc	r5, lr, asr #32
  24:	0031332e 	eorseq	r3, r1, lr, lsr #6

00000028 <E131MsgConst::PARAMS>:
  28:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
  2c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
  30:	20676e69 	rsbcs	r6, r7, r9, ror #28
  34:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
  38:	2e314520 	cfabs64cs	mvdx4, mvdx1
  3c:	Address 0x000000000000003c is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003b41 	andeq	r3, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000031 	andeq	r0, r0, r1, lsr r0
  10:	4d524105 	ldfmie	f4, [r2, #-20]	; 0xffffffec
  14:	36373131 			; <UNDEFINED> instruction: 0x36373131
  18:	2d465a4a 	vstrcs	s11, [r6, #-296]	; 0xfffffed8
  1c:	07060053 	smlsdeq	r6, r3, r0, r0
  20:	01090108 	tsteq	r9, r8, lsl #2
  24:	0412020a 	ldreq	r0, [r2], #-522	; 0xfffffdf6
  28:	01150114 	tsteq	r5, r4, lsl r1
  2c:	01180317 	tsteq	r8, r7, lsl r3
  30:	011a0119 	tsteq	sl, r9, lsl r1
  34:	021e011c 	andseq	r0, lr, #28, 2
  38:	01440122 	cmpeq	r4, r2, lsr #2

e131bridge.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000008 	andeq	r0, r0, r8

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000009 	andeq	r0, r0, r9

Disassembly of section .text:

00000000 <E131Bridge::E131Bridge()>:
       0:	e3a02000 	mov	r2, #0
       4:	e3e0c000 	mvn	ip, #0
       8:	e3a01001 	mov	r1, #1
       c:	e92d4070 	push	{r4, r5, r6, lr}
      10:	e3a0e064 	mov	lr, #100	; 0x64
      14:	e59f3154 	ldr	r3, [pc, #340]	; 170 <E131Bridge::E131Bridge()+0x170>
      18:	e580c000 	str	ip, [r0]
      1c:	e5c01008 	strb	r1, [r0, #8]
      20:	e5802004 	str	r2, [r0, #4]
      24:	e280ce62 	add	ip, r0, #1568	; 0x620
      28:	e580200c 	str	r2, [r0, #12]
      2c:	e5802010 	str	r2, [r0, #16]
      30:	e5802014 	str	r2, [r0, #20]
      34:	e5802018 	str	r2, [r0, #24]
      38:	e580201c 	str	r2, [r0, #28]
      3c:	e5802020 	str	r2, [r0, #32]
      40:	e5802074 	str	r2, [r0, #116]	; 0x74
      44:	e2801e55 	add	r1, r0, #1360	; 0x550
      48:	e1a04000 	mov	r4, r0
      4c:	e5830000 	str	r0, [r3]
      50:	e2800e65 	add	r0, r0, #1616	; 0x650
      54:	e24dd058 	sub	sp, sp, #88	; 0x58
      58:	e28cc00c 	add	ip, ip, #12
      5c:	e2811004 	add	r1, r1, #4
      60:	e280000c 	add	r0, r0, #12
      64:	e2413044 	sub	r3, r1, #68	; 0x44
      68:	e4c32001 	strb	r2, [r3], #1
      6c:	e1530001 	cmp	r3, r1
      70:	1afffffc 	bne	68 <E131Bridge::E131Bridge()+0x68>
      74:	e24c300c 	sub	r3, ip, #12
      78:	e4c32001 	strb	r2, [r3], #1
      7c:	e153000c 	cmp	r3, ip
      80:	1afffffc 	bne	78 <E131Bridge::E131Bridge()+0x78>
      84:	e283c00c 	add	ip, r3, #12
      88:	e15c0000 	cmp	ip, r0
      8c:	e543e003 	strb	lr, [r3, #-3]
      90:	e2811044 	add	r1, r1, #68	; 0x44
      94:	1afffff2 	bne	64 <E131Bridge::E131Bridge()+0x64>
      98:	e3a01000 	mov	r1, #0
      9c:	e2843e4f 	add	r3, r4, #1264	; 0x4f0
      a0:	e2833004 	add	r3, r3, #4
      a4:	e2842e51 	add	r2, r4, #1296	; 0x510
      a8:	e4c31001 	strb	r1, [r3], #1
      ac:	e1530002 	cmp	r3, r2
      b0:	1afffffc 	bne	a8 <E131Bridge::E131Bridge()+0xa8>
      b4:	e3a02001 	mov	r2, #1
      b8:	e59f60b4 	ldr	r6, [pc, #180]	; 174 <E131Bridge::E131Bridge()+0x174>
      bc:	e59f50b4 	ldr	r5, [pc, #180]	; 178 <E131Bridge::E131Bridge()+0x178>
      c0:	e5963000 	ldr	r3, [r6]
      c4:	e28d1017 	add	r1, sp, #23
      c8:	e2833010 	add	r3, r3, #16
      cc:	e5c4250c 	strb	r2, [r4, #1292]	; 0x50c
      d0:	e5950000 	ldr	r0, [r5]
      d4:	e58d300c 	str	r3, [sp, #12]
      d8:	ebfffffe 	bl	0 <Hardware::GetBoardName(unsigned char&)>
      dc:	e3a01040 	mov	r1, #64	; 0x40
      e0:	e59d300c 	ldr	r3, [sp, #12]
      e4:	e58d0000 	str	r0, [sp]
      e8:	e59f208c 	ldr	r2, [pc, #140]	; 17c <E131Bridge::E131Bridge()+0x17c>
      ec:	e28d0018 	add	r0, sp, #24
      f0:	ebfffffe 	bl	0 <snprintf>
      f4:	e28d1017 	add	r1, sp, #23
      f8:	e2843034 	add	r3, r4, #52	; 0x34
      fc:	e28de056 	add	lr, sp, #86	; 0x56
     100:	e284c073 	add	ip, r4, #115	; 0x73
     104:	e5f12001 	ldrb	r2, [r1, #1]!
     108:	e04c0003 	sub	r0, ip, r3
     10c:	e3520000 	cmp	r2, #0
     110:	0a00000f 	beq	154 <E131Bridge::E131Bridge()+0x154>
     114:	e151000e 	cmp	r1, lr
     118:	e4c32001 	strb	r2, [r3], #1
     11c:	1afffff8 	bne	104 <E131Bridge::E131Bridge()+0x104>
     120:	e3a03000 	mov	r3, #0
     124:	e3a01d57 	mov	r1, #5568	; 0x15c0
     128:	e5c43073 	strb	r3, [r4, #115]	; 0x73
     12c:	e5960000 	ldr	r0, [r6]
     130:	ebfffffe 	bl	0 <Network::Begin(unsigned short)>
     134:	e1a01004 	mov	r1, r4
     138:	e1a03000 	mov	r3, r0
     13c:	e5950000 	ldr	r0, [r5]
     140:	e4813024 	str	r3, [r1], #36	; 0x24
     144:	ebfffffe 	bl	0 <Hardware::GetUuid(unsigned char*)>
     148:	e1a00004 	mov	r0, r4
     14c:	e28dd058 	add	sp, sp, #88	; 0x58
     150:	e8bd8070 	pop	{r4, r5, r6, pc}
     154:	e3500000 	cmp	r0, #0
     158:	0afffff0 	beq	120 <E131Bridge::E131Bridge()+0x120>
     15c:	e0830000 	add	r0, r3, r0
     160:	e4c32001 	strb	r2, [r3], #1
     164:	e1530000 	cmp	r3, r0
     168:	1afffffc 	bne	160 <E131Bridge::E131Bridge()+0x160>
     16c:	eaffffeb 	b	120 <E131Bridge::E131Bridge()+0x120>
	...

00000180 <E131Bridge::Start()>:
     180:	e5903014 	ldr	r3, [r0, #20]
     184:	e3530000 	cmp	r3, #0
     188:	0a000019 	beq	1f4 <E131Bridge::Start()+0x74>
     18c:	e92d4070 	push	{r4, r5, r6, lr}
     190:	e5903018 	ldr	r3, [r0, #24]
     194:	e1a06000 	mov	r6, r0
     198:	e3530000 	cmp	r3, #0
     19c:	e24dd008 	sub	sp, sp, #8
     1a0:	0a000017 	beq	204 <E131Bridge::Start()+0x84>
     1a4:	e1a05006 	mov	r5, r6
     1a8:	e3a04000 	mov	r4, #0
     1ac:	e5d53622 	ldrb	r3, [r5, #1570]	; 0x622
     1b0:	e285500c 	add	r5, r5, #12
     1b4:	e3530000 	cmp	r3, #0
     1b8:	0a000004 	beq	1d0 <E131Bridge::Start()+0x50>
     1bc:	e5960014 	ldr	r0, [r6, #20]
     1c0:	e1a01004 	mov	r1, r4
     1c4:	e5903000 	ldr	r3, [r0]
     1c8:	e5933008 	ldr	r3, [r3, #8]
     1cc:	e12fff33 	blx	r3
     1d0:	e2844001 	add	r4, r4, #1
     1d4:	e3540004 	cmp	r4, #4
     1d8:	1afffff3 	bne	1ac <E131Bridge::Start()+0x2c>
     1dc:	e3a01002 	mov	r1, #2
     1e0:	e59f306c 	ldr	r3, [pc, #108]	; 254 <E131Bridge::Start()+0xd4>
     1e4:	e5930000 	ldr	r0, [r3]
     1e8:	e28dd008 	add	sp, sp, #8
     1ec:	e8bd4070 	pop	{r4, r5, r6, lr}
     1f0:	eafffffe 	b	0 <LedBlink::SetMode(ledblink::Mode)>
     1f4:	e59f3058 	ldr	r3, [pc, #88]	; 254 <E131Bridge::Start()+0xd4>
     1f8:	e3a01002 	mov	r1, #2
     1fc:	e5930000 	ldr	r0, [r3]
     200:	eafffffe 	b	0 <LedBlink::SetMode(ledblink::Mode)>
     204:	e28d1004 	add	r1, sp, #4
     208:	e59f0048 	ldr	r0, [pc, #72]	; 258 <E131Bridge::Start()+0xd8>
     20c:	ebfffffe 	bl	0 <inet_aton>
     210:	e59d3004 	ldr	r3, [sp, #4]
     214:	e59f0040 	ldr	r0, [pc, #64]	; 25c <E131Bridge::Start()+0xdc>
     218:	e38334d6 	orr	r3, r3, #-704643072	; 0xd6000000
     21c:	e38338fa 	orr	r3, r3, #16384000	; 0xfa0000
     220:	e5863020 	str	r3, [r6, #32]
     224:	ebfffffe 	bl	0 <operator new(unsigned int)>
     228:	e1a03000 	mov	r3, r0
     22c:	e1a00006 	mov	r0, r6
     230:	e5863018 	str	r3, [r6, #24]
     234:	ebfffffe 	bl	0 <E131Bridge::FillDataPacket()>
     238:	e59f0020 	ldr	r0, [pc, #32]	; 260 <E131Bridge::Start()+0xe0>
     23c:	ebfffffe 	bl	0 <operator new(unsigned int)>
     240:	e1a03000 	mov	r3, r0
     244:	e1a00006 	mov	r0, r6
     248:	e586301c 	str	r3, [r6, #28]
     24c:	ebfffffe 	bl	0 <E131Bridge::FillDiscoveryPacket()>
     250:	eaffffd3 	b	1a4 <E131Bridge::Start()+0x24>
     254:	00000000 	andeq	r0, r0, r0
     258:	0000000c 	andeq	r0, r0, ip
     25c:	0000027e 	andeq	r0, r0, lr, ror r2
     260:	00000478 	andeq	r0, r0, r8, ror r4

00000264 <E131Bridge::Stop()>:
     264:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
     268:	e3a05000 	mov	r5, #0
     26c:	e3a09001 	mov	r9, #1
     270:	e1a07000 	mov	r7, r0
     274:	e1a0a005 	mov	sl, r5
     278:	e1a08000 	mov	r8, r0
     27c:	e1a06000 	mov	r6, r0
     280:	e59f40a0 	ldr	r4, [pc, #160]	; 328 <E131Bridge::Stop()+0xc4>
     284:	e59fb0a0 	ldr	fp, [pc, #160]	; 32c <E131Bridge::Stop()+0xc8>
     288:	e5c094f4 	strb	r9, [r0, #1268]	; 0x4f4
     28c:	e5970004 	ldr	r0, [r7, #4]
     290:	e3500000 	cmp	r0, #0
     294:	0a000003 	beq	2a8 <E131Bridge::Stop()+0x44>
     298:	e5903000 	ldr	r3, [r0]
     29c:	e1a01005 	mov	r1, r5
     2a0:	e593300c 	ldr	r3, [r3, #12]
     2a4:	e12fff33 	blx	r3
     2a8:	e1a03004 	mov	r3, r4
     2ac:	e59b2000 	ldr	r2, [fp]
     2b0:	e2855001 	add	r5, r5, #1
     2b4:	e3120001 	tst	r2, #1
     2b8:	058b9000 	streq	r9, [fp]
     2bc:	e5a3a600 	str	sl, [r3, #1536]!	; 0x600
     2c0:	e3550004 	cmp	r5, #4
     2c4:	e2866044 	add	r6, r6, #68	; 0x44
     2c8:	e2834004 	add	r4, r3, #4
     2cc:	e5c6a50c 	strb	sl, [r6, #1292]	; 0x50c
     2d0:	1affffed 	bne	28c <E131Bridge::Stop()+0x28>
     2d4:	e5973014 	ldr	r3, [r7, #20]
     2d8:	e3530000 	cmp	r3, #0
     2dc:	0a00000c 	beq	314 <E131Bridge::Stop()+0xb0>
     2e0:	e3a04000 	mov	r4, #0
     2e4:	e5d83622 	ldrb	r3, [r8, #1570]	; 0x622
     2e8:	e288800c 	add	r8, r8, #12
     2ec:	e3530000 	cmp	r3, #0
     2f0:	0a000004 	beq	308 <E131Bridge::Stop()+0xa4>
     2f4:	e5970014 	ldr	r0, [r7, #20]
     2f8:	e1a01004 	mov	r1, r4
     2fc:	e5903000 	ldr	r3, [r0]
     300:	e593300c 	ldr	r3, [r3, #12]
     304:	e12fff33 	blx	r3
     308:	e2844001 	add	r4, r4, #1
     30c:	e3540004 	cmp	r4, #4
     310:	1afffff3 	bne	2e4 <E131Bridge::Stop()+0x80>
     314:	e59f3014 	ldr	r3, [pc, #20]	; 330 <E131Bridge::Stop()+0xcc>
     318:	e3a01000 	mov	r1, #0
     31c:	e5930000 	ldr	r0, [r3]
     320:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
     324:	eafffffe 	b	0 <LedBlink::SetMode(ledblink::Mode)>
	...

00000334 <E131Bridge::SetSourceName(char const*)>:
     334:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     338:	e2803034 	add	r3, r0, #52	; 0x34
     33c:	e2412001 	sub	r2, r1, #1
     340:	e281c03e 	add	ip, r1, #62	; 0x3e
     344:	e04ce002 	sub	lr, ip, r2
     348:	e5f21001 	ldrb	r1, [r2, #1]!
     34c:	e3510000 	cmp	r1, #0
     350:	0a000005 	beq	36c <E131Bridge::SetSourceName(char const*)+0x38>
     354:	e152000c 	cmp	r2, ip
     358:	e4c31001 	strb	r1, [r3], #1
     35c:	1afffff8 	bne	344 <E131Bridge::SetSourceName(char const*)+0x10>
     360:	e3a03000 	mov	r3, #0
     364:	e5c03073 	strb	r3, [r0, #115]	; 0x73
     368:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
     36c:	e35e0000 	cmp	lr, #0
     370:	0afffffa 	beq	360 <E131Bridge::SetSourceName(char const*)+0x2c>
     374:	e083e00e 	add	lr, r3, lr
     378:	e4c31001 	strb	r1, [r3], #1
     37c:	e15e0003 	cmp	lr, r3
     380:	1afffffc 	bne	378 <E131Bridge::SetSourceName(char const*)+0x44>
     384:	eafffff5 	b	360 <E131Bridge::SetSourceName(char const*)+0x2c>

00000388 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
     388:	e92d4070 	push	{r4, r5, r6, lr}
     38c:	e3510000 	cmp	r1, #0
     390:	e1a05000 	mov	r5, r0
     394:	e1a04003 	mov	r4, r3
     398:	e24dd010 	sub	sp, sp, #16
     39c:	0a00002d 	beq	458 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0xd0>
     3a0:	e2806c05 	add	r6, r0, #1280	; 0x500
     3a4:	e1d630b6 	ldrh	r3, [r6, #6]
     3a8:	e2866006 	add	r6, r6, #6
     3ac:	e3530000 	cmp	r3, #0
     3b0:	01c640b0 	strheq	r4, [r6]
     3b4:	028d100c 	addeq	r1, sp, #12
     3b8:	0a000017 	beq	41c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x94>
     3bc:	e1530004 	cmp	r3, r4
     3c0:	0a00002f 	beq	484 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0xfc>
     3c4:	e2852e51 	add	r2, r5, #1296	; 0x510
     3c8:	e1d220b0 	ldrh	r2, [r2]
     3cc:	e1520003 	cmp	r2, r3
     3d0:	0a00002d 	beq	48c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x104>
     3d4:	e2852e55 	add	r2, r5, #1360	; 0x550
     3d8:	e1d220b4 	ldrh	r2, [r2, #4]
     3dc:	e1520003 	cmp	r2, r3
     3e0:	0a000029 	beq	48c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x104>
     3e4:	e2852e59 	add	r2, r5, #1424	; 0x590
     3e8:	e1d220b8 	ldrh	r2, [r2, #8]
     3ec:	e1520003 	cmp	r2, r3
     3f0:	0a000025 	beq	48c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x104>
     3f4:	e2852e5d 	add	r2, r5, #1488	; 0x5d0
     3f8:	e1d220bc 	ldrh	r2, [r2, #12]
     3fc:	e28d100c 	add	r1, sp, #12
     400:	e1520003 	cmp	r2, r3
     404:	0a000003 	beq	418 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x90>
     408:	e59f0084 	ldr	r0, [pc, #132]	; 494 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10c>
     40c:	e58d1004 	str	r1, [sp, #4]
     410:	ebfffffe 	bl	0 <inet_aton>
     414:	e59d1004 	ldr	r1, [sp, #4]
     418:	e1c640b0 	strh	r4, [r6]
     41c:	e59f3074 	ldr	r3, [pc, #116]	; 498 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x110>
     420:	e5956000 	ldr	r6, [r5]
     424:	e5935000 	ldr	r5, [r3]
     428:	e59f0064 	ldr	r0, [pc, #100]	; 494 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10c>
     42c:	ebfffffe 	bl	0 <inet_aton>
     430:	e1a01006 	mov	r1, r6
     434:	e1a00005 	mov	r0, r5
     438:	e59d200c 	ldr	r2, [sp, #12]
     43c:	e1a0c404 	lsl	ip, r4, #8
     440:	e1822c04 	orr	r2, r2, r4, lsl #24
     444:	e20cc8ff 	and	ip, ip, #16711680	; 0xff0000
     448:	e182200c 	orr	r2, r2, ip
     44c:	e28dd010 	add	sp, sp, #16
     450:	e8bd4070 	pop	{r4, r5, r6, lr}
     454:	eafffffe 	b	0 <Network::JoinGroup(int, unsigned int)>
     458:	e3520000 	cmp	r2, #0
     45c:	e1a01002 	mov	r1, r2
     460:	0a000007 	beq	484 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0xfc>
     464:	e2806c05 	add	r6, r0, #1280	; 0x500
     468:	e1d630b8 	ldrh	r3, [r6, #8]
     46c:	e2866008 	add	r6, r6, #8
     470:	e3530000 	cmp	r3, #0
     474:	01c640b0 	strheq	r4, [r6]
     478:	028d100c 	addeq	r1, sp, #12
     47c:	0affffe6 	beq	41c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x94>
     480:	eaffffcd 	b	3bc <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x34>
     484:	e28dd010 	add	sp, sp, #16
     488:	e8bd8070 	pop	{r4, r5, r6, pc}
     48c:	e28d100c 	add	r1, sp, #12
     490:	eaffffe0 	b	418 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x90>
     494:	0000000c 	andeq	r0, r0, ip
     498:	00000000 	andeq	r0, r0, r0

0000049c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
     49c:	e3a03000 	mov	r3, #0
     4a0:	e2800e51 	add	r0, r0, #1296	; 0x510
     4a4:	e1510003 	cmp	r1, r3
     4a8:	e2833001 	add	r3, r3, #1
     4ac:	0a000002 	beq	4bc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x20>
     4b0:	e1d0c0b0 	ldrh	ip, [r0]
     4b4:	e15c0002 	cmp	ip, r2
     4b8:	012fff1e 	bxeq	lr
     4bc:	e3530004 	cmp	r3, #4
     4c0:	e2800044 	add	r0, r0, #68	; 0x44
     4c4:	1afffff6 	bne	4a4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x8>
     4c8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
     4cc:	e24dd00c 	sub	sp, sp, #12
     4d0:	e28d1004 	add	r1, sp, #4
     4d4:	e59f0008 	ldr	r0, [pc, #8]	; 4e4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x48>
     4d8:	ebfffffe 	bl	0 <inet_aton>
     4dc:	e28dd00c 	add	sp, sp, #12
     4e0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
     4e4:	0000000c 	andeq	r0, r0, ip

000004e8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
     4e8:	e3510003 	cmp	r1, #3
     4ec:	93520000 	cmpls	r2, #0
     4f0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
     4f4:	e1a05003 	mov	r5, r3
     4f8:	e1a04001 	mov	r4, r1
     4fc:	e1a06000 	mov	r6, r0
     500:	03a03001 	moveq	r3, #1
     504:	13a03000 	movne	r3, #0
     508:	e24dd014 	sub	sp, sp, #20
     50c:	1a000018 	bne	574 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x8c>
     510:	e0813081 	add	r3, r1, r1, lsl #1
     514:	e0803103 	add	r3, r0, r3, lsl #2
     518:	e5d32622 	ldrb	r2, [r3, #1570]	; 0x622
     51c:	e1a01081 	lsl	r1, r1, #1
     520:	e3520000 	cmp	r2, #0
     524:	e2832e62 	add	r2, r3, #1568	; 0x620
     528:	0a000046 	beq	648 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x160>
     52c:	e1d230b0 	ldrh	r3, [r2]
     530:	e1530005 	cmp	r3, r5
     534:	0a00000c 	beq	56c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x84>
     538:	e0811004 	add	r1, r1, r4
     53c:	e0866101 	add	r6, r6, r1, lsl #2
     540:	e2863e62 	add	r3, r6, #1568	; 0x620
     544:	e1c350b0 	strh	r5, [r3]
     548:	e59f01a0 	ldr	r0, [pc, #416]	; 6f0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x208>
     54c:	e28d100c 	add	r1, sp, #12
     550:	ebfffffe 	bl	0 <inet_aton>
     554:	e59d300c 	ldr	r3, [sp, #12]
     558:	e1a02405 	lsl	r2, r5, #8
     55c:	e1835c05 	orr	r5, r3, r5, lsl #24
     560:	e20238ff 	and	r3, r2, #16711680	; 0xff0000
     564:	e1855003 	orr	r5, r5, r3
     568:	e5865624 	str	r5, [r6, #1572]	; 0x624
     56c:	e28dd014 	add	sp, sp, #20
     570:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
     574:	e3520002 	cmp	r2, #2
     578:	0a000038 	beq	660 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x178>
     57c:	e0812201 	add	r2, r1, r1, lsl #4
     580:	e0802102 	add	r2, r0, r2, lsl #2
     584:	e1a07201 	lsl	r7, r1, #4
     588:	e5d21512 	ldrb	r1, [r2, #1298]	; 0x512
     58c:	e3510000 	cmp	r1, #0
     590:	e2821e51 	add	r1, r2, #1296	; 0x510
     594:	0a000012 	beq	5e4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xfc>
     598:	e1d120b0 	ldrh	r2, [r1]
     59c:	e1520005 	cmp	r2, r5
     5a0:	0afffff1 	beq	56c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x84>
     5a4:	e2802e51 	add	r2, r0, #1296	; 0x510
     5a8:	e1540003 	cmp	r4, r3
     5ac:	e2833001 	add	r3, r3, #1
     5b0:	0a000002 	beq	5c0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xd8>
     5b4:	e1d210b0 	ldrh	r1, [r2]
     5b8:	e1510005 	cmp	r1, r5
     5bc:	0a00000d 	beq	5f8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x110>
     5c0:	e3530004 	cmp	r3, #4
     5c4:	e2822044 	add	r2, r2, #68	; 0x44
     5c8:	1afffff6 	bne	5a8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xc0>
     5cc:	e28d100c 	add	r1, sp, #12
     5d0:	e59f0118 	ldr	r0, [pc, #280]	; 6f0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x208>
     5d4:	e58d1004 	str	r1, [sp, #4]
     5d8:	ebfffffe 	bl	0 <inet_aton>
     5dc:	e59d1004 	ldr	r1, [sp, #4]
     5e0:	ea000005 	b	5fc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x114>
     5e4:	e3a01001 	mov	r1, #1
     5e8:	e5d0350b 	ldrb	r3, [r0, #1291]	; 0x50b
     5ec:	e0833001 	add	r3, r3, r1
     5f0:	e5c0350b 	strb	r3, [r0, #1291]	; 0x50b
     5f4:	e5c21512 	strb	r1, [r2, #1298]	; 0x512
     5f8:	e28d100c 	add	r1, sp, #12
     5fc:	e59f30f0 	ldr	r3, [pc, #240]	; 6f4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x20c>
     600:	e59f00e8 	ldr	r0, [pc, #232]	; 6f0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x208>
     604:	e5938000 	ldr	r8, [r3]
     608:	e5969000 	ldr	r9, [r6]
     60c:	ebfffffe 	bl	0 <inet_aton>
     610:	e59d200c 	ldr	r2, [sp, #12]
     614:	e1a03405 	lsl	r3, r5, #8
     618:	e20338ff 	and	r3, r3, #16711680	; 0xff0000
     61c:	e1822c05 	orr	r2, r2, r5, lsl #24
     620:	e1a01009 	mov	r1, r9
     624:	e1a00008 	mov	r0, r8
     628:	e1822003 	orr	r2, r2, r3
     62c:	ebfffffe 	bl	0 <Network::JoinGroup(int, unsigned int)>
     630:	e0877004 	add	r7, r7, r4
     634:	e0866107 	add	r6, r6, r7, lsl #2
     638:	e2866e51 	add	r6, r6, #1296	; 0x510
     63c:	e1c650b0 	strh	r5, [r6]
     640:	e28dd014 	add	sp, sp, #20
     644:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
     648:	e3a00001 	mov	r0, #1
     64c:	e5d6250a 	ldrb	r2, [r6, #1290]	; 0x50a
     650:	e0822000 	add	r2, r2, r0
     654:	e5c6250a 	strb	r2, [r6, #1290]	; 0x50a
     658:	e5c30622 	strb	r0, [r3, #1570]	; 0x622
     65c:	eaffffb5 	b	538 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x50>
     660:	e3510003 	cmp	r1, #3
     664:	8affffc0 	bhi	56c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x84>
     668:	e0812201 	add	r2, r1, r1, lsl #4
     66c:	e0802102 	add	r2, r0, r2, lsl #2
     670:	e5d21512 	ldrb	r1, [r2, #1298]	; 0x512
     674:	e3510000 	cmp	r1, #0
     678:	1a00000a 	bne	6a8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1c0>
     67c:	e0844084 	add	r4, r4, r4, lsl #1
     680:	e0864104 	add	r4, r6, r4, lsl #2
     684:	e5d43622 	ldrb	r3, [r4, #1570]	; 0x622
     688:	e3530000 	cmp	r3, #0
     68c:	0affffb6 	beq	56c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x84>
     690:	e3a03000 	mov	r3, #0
     694:	e5c43622 	strb	r3, [r4, #1570]	; 0x622
     698:	e5d6350a 	ldrb	r3, [r6, #1290]	; 0x50a
     69c:	e2433001 	sub	r3, r3, #1
     6a0:	e5c6350a 	strb	r3, [r6, #1290]	; 0x50a
     6a4:	eaffffb0 	b	56c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x84>
     6a8:	e5c23512 	strb	r3, [r2, #1298]	; 0x512
     6ac:	e5d0250b 	ldrb	r2, [r0, #1291]	; 0x50b
     6b0:	e2422001 	sub	r2, r2, #1
     6b4:	e5c0250b 	strb	r2, [r0, #1291]	; 0x50b
     6b8:	e2802e51 	add	r2, r0, #1296	; 0x510
     6bc:	e1540003 	cmp	r4, r3
     6c0:	e2833001 	add	r3, r3, #1
     6c4:	0a000002 	beq	6d4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1ec>
     6c8:	e1d210b0 	ldrh	r1, [r2]
     6cc:	e1510005 	cmp	r1, r5
     6d0:	0affffe9 	beq	67c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x194>
     6d4:	e3530004 	cmp	r3, #4
     6d8:	e2822044 	add	r2, r2, #68	; 0x44
     6dc:	1afffff6 	bne	6bc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x1d4>
     6e0:	e28d100c 	add	r1, sp, #12
     6e4:	e59f0004 	ldr	r0, [pc, #4]	; 6f0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x208>
     6e8:	ebfffffe 	bl	0 <inet_aton>
     6ec:	eaffffe2 	b	67c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x194>
     6f0:	0000000c 	andeq	r0, r0, ip
     6f4:	00000000 	andeq	r0, r0, r0

000006f8 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
     6f8:	e3530000 	cmp	r3, #0
     6fc:	1a000008 	bne	724 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2c>
     700:	e3510003 	cmp	r1, #3
     704:	8a00000d 	bhi	740 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x48>
     708:	e0811081 	add	r1, r1, r1, lsl #1
     70c:	e0800101 	add	r0, r0, r1, lsl #2
     710:	e2803e62 	add	r3, r0, #1568	; 0x620
     714:	e1d330b0 	ldrh	r3, [r3]
     718:	e5d00622 	ldrb	r0, [r0, #1570]	; 0x622
     71c:	e1c230b0 	strh	r3, [r2]
     720:	e12fff1e 	bx	lr
     724:	e0811201 	add	r1, r1, r1, lsl #4
     728:	e0800101 	add	r0, r0, r1, lsl #2
     72c:	e2803e51 	add	r3, r0, #1296	; 0x510
     730:	e1d330b0 	ldrh	r3, [r3]
     734:	e5d00512 	ldrb	r0, [r0, #1298]	; 0x512
     738:	e1c230b0 	strh	r3, [r2]
     73c:	e12fff1e 	bx	lr
     740:	e1a00003 	mov	r0, r3
     744:	e12fff1e 	bx	lr

00000748 <E131Bridge::UpdateMergeStatus(unsigned int)>:
     748:	e5d034f5 	ldrb	r3, [r0, #1269]	; 0x4f5
     74c:	e0811201 	add	r1, r1, r1, lsl #4
     750:	e3530000 	cmp	r3, #0
     754:	03a03001 	moveq	r3, #1
     758:	05c034f5 	strbeq	r3, [r0, #1269]	; 0x4f5
     75c:	05c034f8 	strbeq	r3, [r0, #1272]	; 0x4f8
     760:	e3a03001 	mov	r3, #1
     764:	e0800101 	add	r0, r0, r1, lsl #2
     768:	e5c03551 	strb	r3, [r0, #1361]	; 0x551
     76c:	e12fff1e 	bx	lr

00000770 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
     770:	e0813201 	add	r3, r1, r1, lsl #4
     774:	e92d4010 	push	{r4, lr}
     778:	e080e103 	add	lr, r0, r3, lsl #2
     77c:	e590200c 	ldr	r2, [r0, #12]
     780:	e59ec514 	ldr	ip, [lr, #1300]	; 0x514
     784:	e59f40c0 	ldr	r4, [pc, #192]	; 84c <E131Bridge::CheckMergeTimeouts(unsigned int)+0xdc>
     788:	e042c00c 	sub	ip, r2, ip
     78c:	e15c0004 	cmp	ip, r4
     790:	e1a0c201 	lsl	ip, r1, #4
     794:	9a00000d 	bls	7d0 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x60>
     798:	e3a02000 	mov	r2, #0
     79c:	e1a03103 	lsl	r3, r3, #2
     7a0:	e2833e51 	add	r3, r3, #1296	; 0x510
     7a4:	e283300c 	add	r3, r3, #12
     7a8:	e0803003 	add	r3, r0, r3
     7ac:	e58e2518 	str	r2, [lr, #1304]	; 0x518
     7b0:	e283e010 	add	lr, r3, #16
     7b4:	e4c32001 	strb	r2, [r3], #1
     7b8:	e153000e 	cmp	r3, lr
     7bc:	1afffffc 	bne	7b4 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x44>
     7c0:	e08c3001 	add	r3, ip, r1
     7c4:	e0803103 	add	r3, r0, r3, lsl #2
     7c8:	e5c32551 	strb	r2, [r3, #1361]	; 0x551
     7cc:	e590200c 	ldr	r2, [r0, #12]
     7d0:	e08c3001 	add	r3, ip, r1
     7d4:	e080e103 	add	lr, r0, r3, lsl #2
     7d8:	e59e4530 	ldr	r4, [lr, #1328]	; 0x530
     7dc:	e1a03103 	lsl	r3, r3, #2
     7e0:	e0422004 	sub	r2, r2, r4
     7e4:	e59f4060 	ldr	r4, [pc, #96]	; 84c <E131Bridge::CheckMergeTimeouts(unsigned int)+0xdc>
     7e8:	e1520004 	cmp	r2, r4
     7ec:	9a00000b 	bls	820 <E131Bridge::CheckMergeTimeouts(unsigned int)+0xb0>
     7f0:	e3a02000 	mov	r2, #0
     7f4:	e2833e53 	add	r3, r3, #1328	; 0x530
     7f8:	e2833008 	add	r3, r3, #8
     7fc:	e0803003 	add	r3, r0, r3
     800:	e58e2534 	str	r2, [lr, #1332]	; 0x534
     804:	e283e010 	add	lr, r3, #16
     808:	e4c32001 	strb	r2, [r3], #1
     80c:	e153000e 	cmp	r3, lr
     810:	1afffffc 	bne	808 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x98>
     814:	e08c1001 	add	r1, ip, r1
     818:	e0801101 	add	r1, r0, r1, lsl #2
     81c:	e5c12551 	strb	r2, [r1, #1361]	; 0x551
     820:	e5d03551 	ldrb	r3, [r0, #1361]	; 0x551
     824:	e5d0c595 	ldrb	ip, [r0, #1429]	; 0x595
     828:	e5d015d9 	ldrb	r1, [r0, #1497]	; 0x5d9
     82c:	e5d0261d 	ldrb	r2, [r0, #1565]	; 0x61d
     830:	e183300c 	orr	r3, r3, ip
     834:	e1833001 	orr	r3, r3, r1
     838:	e1933002 	orrs	r3, r3, r2
     83c:	03a02001 	moveq	r2, #1
     840:	05c034f5 	strbeq	r3, [r0, #1269]	; 0x4f5
     844:	05c024f8 	strbeq	r2, [r0, #1272]	; 0x4f8
     848:	e8bd8010 	pop	{r4, pc}
     84c:	00002710 	andeq	r2, r0, r0, lsl r7

00000850 <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
     850:	e0811201 	add	r1, r1, r1, lsl #4
     854:	e0801101 	add	r1, r0, r1, lsl #2
     858:	e5912518 	ldr	r2, [r1, #1304]	; 0x518
     85c:	e590300c 	ldr	r3, [r0, #12]
     860:	e5910530 	ldr	r0, [r1, #1328]	; 0x530
     864:	e3520000 	cmp	r2, #0
     868:	e591c514 	ldr	ip, [r1, #1300]	; 0x514
     86c:	e0432000 	sub	r2, r3, r0
     870:	e5911534 	ldr	r1, [r1, #1332]	; 0x534
     874:	1a000005 	bne	890 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x40>
     878:	e59f004c 	ldr	r0, [pc, #76]	; 8cc <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x7c>
     87c:	e3510000 	cmp	r1, #0
     880:	11520000 	cmpne	r2, r0
     884:	83a00001 	movhi	r0, #1
     888:	93a00000 	movls	r0, #0
     88c:	e12fff1e 	bx	lr
     890:	e3510000 	cmp	r1, #0
     894:	e043300c 	sub	r3, r3, ip
     898:	0a000006 	beq	8b8 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x68>
     89c:	e59f002c 	ldr	r0, [pc, #44]	; 8d0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x80>
     8a0:	e1520000 	cmp	r2, r0
     8a4:	81530000 	cmphi	r3, r0
     8a8:	93a00001 	movls	r0, #1
     8ac:	83a00000 	movhi	r0, #0
     8b0:	e2200001 	eor	r0, r0, #1
     8b4:	e12fff1e 	bx	lr
     8b8:	e59f000c 	ldr	r0, [pc, #12]	; 8cc <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x7c>
     8bc:	e1530000 	cmp	r3, r0
     8c0:	93a00000 	movls	r0, #0
     8c4:	83a00001 	movhi	r0, #1
     8c8:	e12fff1e 	bx	lr
     8cc:	00002710 	andeq	r2, r0, r0, lsl r7
     8d0:	0000270f 	andeq	r2, r0, pc, lsl #14

000008d4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
     8d4:	e5903078 	ldr	r3, [r0, #120]	; 0x78
     8d8:	e5912004 	ldr	r2, [r1, #4]
     8dc:	e1520003 	cmp	r2, r3
     8e0:	1a000009 	bne	90c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x38>
     8e4:	e2813007 	add	r3, r1, #7
     8e8:	e2800091 	add	r0, r0, #145	; 0x91
     8ec:	e2811017 	add	r1, r1, #23
     8f0:	ea000001 	b	8fc <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x28>
     8f4:	e1530001 	cmp	r3, r1
     8f8:	0a000005 	beq	914 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x40>
     8fc:	e5f3c001 	ldrb	ip, [r3, #1]!
     900:	e5f02001 	ldrb	r2, [r0, #1]!
     904:	e15c0002 	cmp	ip, r2
     908:	0afffff9 	beq	8f4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x20>
     90c:	e3a00000 	mov	r0, #0
     910:	e12fff1e 	bx	lr
     914:	e3a00001 	mov	r0, #1
     918:	e12fff1e 	bx	lr

0000091c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
     91c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
     920:	e3a08001 	mov	r8, #1
     924:	e0117002 	ands	r7, r1, r2
     928:	e1a06000 	mov	r6, r0
     92c:	e5c084f8 	strb	r8, [r0, #1272]	; 0x4f8
     930:	0a000030 	beq	9f8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xdc>
     934:	e3a09000 	mov	r9, #0
     938:	e1a05009 	mov	r5, r9
     93c:	e2804d15 	add	r4, r0, #1344	; 0x540
     940:	e59f7194 	ldr	r7, [pc, #404]	; adc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x1c0>
     944:	e59fa194 	ldr	sl, [pc, #404]	; ae0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x1c4>
     948:	e58084f4 	str	r8, [r0, #1268]	; 0x4f4
     94c:	e5c0850c 	strb	r8, [r0, #1292]	; 0x50c
     950:	e2844008 	add	r4, r4, #8
     954:	e5d4300a 	ldrb	r3, [r4, #10]
     958:	e3530000 	cmp	r3, #0
     95c:	1a00000d 	bne	998 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x7c>
     960:	e2899001 	add	r9, r9, #1
     964:	e2877c06 	add	r7, r7, #1536	; 0x600
     968:	e3590004 	cmp	r9, #4
     96c:	e2877004 	add	r7, r7, #4
     970:	e2844044 	add	r4, r4, #68	; 0x44
     974:	1afffff6 	bne	954 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x38>
     978:	e59f3164 	ldr	r3, [pc, #356]	; ae4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x1c8>
     97c:	e3a01002 	mov	r1, #2
     980:	e5930000 	ldr	r0, [r3]
     984:	ebfffffe 	bl	0 <LedBlink::SetMode(ledblink::Mode)>
     988:	e5d6350d 	ldrb	r3, [r6, #1293]	; 0x50d
     98c:	e3c33002 	bic	r3, r3, #2
     990:	e5c6350d 	strb	r3, [r6, #1293]	; 0x50d
     994:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
     998:	e5960004 	ldr	r0, [r6, #4]
     99c:	e1a01009 	mov	r1, r9
     9a0:	e5903000 	ldr	r3, [r0]
     9a4:	e593300c 	ldr	r3, [r3, #12]
     9a8:	e12fff33 	blx	r3
     9ac:	e5045030 	str	r5, [r4, #-48]	; 0xffffffd0
     9b0:	e244302c 	sub	r3, r4, #44	; 0x2c
     9b4:	e244201c 	sub	r2, r4, #28
     9b8:	e4c35001 	strb	r5, [r3], #1
     9bc:	e1530002 	cmp	r3, r2
     9c0:	1afffffc 	bne	9b8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
     9c4:	e5045014 	str	r5, [r4, #-20]	; 0xffffffec
     9c8:	e2443010 	sub	r3, r4, #16
     9cc:	e4c35001 	strb	r5, [r3], #1
     9d0:	e1530004 	cmp	r3, r4
     9d4:	1afffffc 	bne	9cc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xb0>
     9d8:	e59a3000 	ldr	r3, [sl]
     9dc:	e5875600 	str	r5, [r7, #1536]	; 0x600
     9e0:	e3130001 	tst	r3, #1
     9e4:	058a8000 	streq	r8, [sl]
     9e8:	e5c45008 	strb	r5, [r4, #8]
     9ec:	e5c4500a 	strb	r5, [r4, #10]
     9f0:	e5c45009 	strb	r5, [r4, #9]
     9f4:	eaffffd9 	b	960 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x44>
     9f8:	e1a09001 	mov	r9, r1
     9fc:	e1a0a002 	mov	sl, r2
     a00:	e1a0b007 	mov	fp, r7
     a04:	e2804e53 	add	r4, r0, #1328	; 0x530
     a08:	e59f50cc 	ldr	r5, [pc, #204]	; adc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x1c0>
     a0c:	e2844008 	add	r4, r4, #8
     a10:	e5d4301a 	ldrb	r3, [r4, #26]
     a14:	e3530000 	cmp	r3, #0
     a18:	0a000015 	beq	a74 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x158>
     a1c:	e3590000 	cmp	r9, #0
     a20:	1a00001a 	bne	a90 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x174>
     a24:	e35a0000 	cmp	sl, #0
     a28:	0a000002 	beq	a38 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11c>
     a2c:	e5143004 	ldr	r3, [r4, #-4]
     a30:	e3530000 	cmp	r3, #0
     a34:	1a000020 	bne	abc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x1a0>
     a38:	e5d634f5 	ldrb	r3, [r6, #1269]	; 0x4f5
     a3c:	e3530000 	cmp	r3, #0
     a40:	1a00000b 	bne	a74 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x158>
     a44:	e5960004 	ldr	r0, [r6, #4]
     a48:	e1a01007 	mov	r1, r7
     a4c:	e5903000 	ldr	r3, [r0]
     a50:	e593300c 	ldr	r3, [r3, #12]
     a54:	e12fff33 	blx	r3
     a58:	e59f2080 	ldr	r2, [pc, #128]	; ae0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x1c4>
     a5c:	e585b600 	str	fp, [r5, #1536]	; 0x600
     a60:	e5923000 	ldr	r3, [r2]
     a64:	e3130001 	tst	r3, #1
     a68:	05828000 	streq	r8, [r2]
     a6c:	e5c4b018 	strb	fp, [r4, #24]
     a70:	e5c4b01a 	strb	fp, [r4, #26]
     a74:	e2877001 	add	r7, r7, #1
     a78:	e2855c06 	add	r5, r5, #1536	; 0x600
     a7c:	e3570004 	cmp	r7, #4
     a80:	e2855004 	add	r5, r5, #4
     a84:	e2844044 	add	r4, r4, #68	; 0x44
     a88:	1affffe0 	bne	a10 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xf4>
     a8c:	eaffffb9 	b	978 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x5c>
     a90:	e5143020 	ldr	r3, [r4, #-32]	; 0xffffffe0
     a94:	e3530000 	cmp	r3, #0
     a98:	0affffe6 	beq	a38 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11c>
     a9c:	e504b020 	str	fp, [r4, #-32]	; 0xffffffe0
     aa0:	e244301c 	sub	r3, r4, #28
     aa4:	e244100c 	sub	r1, r4, #12
     aa8:	e4c3b001 	strb	fp, [r3], #1
     aac:	e1530001 	cmp	r3, r1
     ab0:	1afffffc 	bne	aa8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x18c>
     ab4:	e5c4b019 	strb	fp, [r4, #25]
     ab8:	eaffffde 	b	a38 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11c>
     abc:	e1a03004 	mov	r3, r4
     ac0:	e5049004 	str	r9, [r4, #-4]
     ac4:	e2841010 	add	r1, r4, #16
     ac8:	e4c3b001 	strb	fp, [r3], #1
     acc:	e1530001 	cmp	r3, r1
     ad0:	1afffffc 	bne	ac8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x1ac>
     ad4:	e5c4b019 	strb	fp, [r4, #25]
     ad8:	eaffffd6 	b	a38 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11c>
	...

00000ae8 <E131Bridge::HandleDmx()>:
     ae8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     aec:	e3a0a000 	mov	sl, #0
     af0:	e1a05000 	mov	r5, r0
     af4:	e24dd01c 	sub	sp, sp, #28
     af8:	e28020fa 	add	r2, r0, #250	; 0xfa
     afc:	e5d030f7 	ldrb	r3, [r0, #247]	; 0xf7
     b00:	e58d200c 	str	r2, [sp, #12]
     b04:	e5d020f8 	ldrb	r2, [r0, #248]	; 0xf8
     b08:	e59f68dc 	ldr	r6, [pc, #2268]	; 13ec <E131Bridge::HandleDmx()+0x904>
     b0c:	e1833402 	orr	r3, r3, r2, lsl #8
     b10:	e6bf3fb3 	rev16	r3, r3
     b14:	e6ff3073 	uxth	r3, r3
     b18:	e2467001 	sub	r7, r6, #1
     b1c:	e58d3010 	str	r3, [sp, #16]
     b20:	e0877003 	add	r7, r7, r3
     b24:	e2804e51 	add	r4, r0, #1296	; 0x510
     b28:	e2433001 	sub	r3, r3, #1
     b2c:	e284400c 	add	r4, r4, #12
     b30:	e58d3008 	str	r3, [sp, #8]
     b34:	e554800a 	ldrb	r8, [r4, #-10]
     b38:	f5d4f03a 	pld	[r4, #58]	; 0x3a
     b3c:	e3580000 	cmp	r8, #0
     b40:	0a0000a7 	beq	de4 <E131Bridge::HandleDmx()+0x2fc>
     b44:	e15430bc 	ldrh	r3, [r4, #-12]
     b48:	e59520ec 	ldr	r2, [r5, #236]	; 0xec
     b4c:	e6bf3fb3 	rev16	r3, r3
     b50:	e1a02422 	lsr	r2, r2, #8
     b54:	e6ff3073 	uxth	r3, r3
     b58:	e6ff2072 	uxth	r2, r2
     b5c:	e1520003 	cmp	r2, r3
     b60:	f5d4f038 	pld	[r4, #56]	; 0x38
     b64:	1a00009e 	bne	de4 <E131Bridge::HandleDmx()+0x2fc>
     b68:	e5143004 	ldr	r3, [r4, #-4]
     b6c:	e595b078 	ldr	fp, [r5, #120]	; 0x78
     b70:	e5949018 	ldr	r9, [r4, #24]
     b74:	e153000b 	cmp	r3, fp
     b78:	e58d3004 	str	r3, [sp, #4]
     b7c:	0a0000a2 	beq	e0c <E131Bridge::HandleDmx()+0x324>
     b80:	e159000b 	cmp	r9, fp
     b84:	0a0000af 	beq	e48 <E131Bridge::HandleDmx()+0x360>
     b88:	e3a08000 	mov	r8, #0
     b8c:	e1a0b008 	mov	fp, r8
     b90:	e5d530ec 	ldrb	r3, [r5, #236]	; 0xec
     b94:	e3130080 	tst	r3, #128	; 0x80
     b98:	1a000091 	bne	de4 <E131Bridge::HandleDmx()+0x2fc>
     b9c:	e3130040 	tst	r3, #64	; 0x40
     ba0:	1a000106 	bne	fc0 <E131Bridge::HandleDmx()+0x4d8>
     ba4:	e5d534f5 	ldrb	r3, [r5, #1269]	; 0x4f5
     ba8:	e3530000 	cmp	r3, #0
     bac:	0a000005 	beq	bc8 <E131Bridge::HandleDmx()+0xe0>
     bb0:	e5d534fa 	ldrb	r3, [r5, #1274]	; 0x4fa
     bb4:	e3530000 	cmp	r3, #0
     bb8:	1a000002 	bne	bc8 <E131Bridge::HandleDmx()+0xe0>
     bbc:	e1a0100a 	mov	r1, sl
     bc0:	e1a00005 	mov	r0, r5
     bc4:	ebfffffe 	bl	770 <E131Bridge::CheckMergeTimeouts(unsigned int)>
     bc8:	e5d530e8 	ldrb	r3, [r5, #232]	; 0xe8
     bcc:	e5d5250c 	ldrb	r2, [r5, #1292]	; 0x50c
     bd0:	e1530002 	cmp	r3, r2
     bd4:	3a0000b4 	bcc	eac <E131Bridge::HandleDmx()+0x3c4>
     bd8:	83a02000 	movhi	r2, #0
     bdc:	85042004 	strhi	r2, [r4, #-4]
     be0:	85842018 	strhi	r2, [r4, #24]
     be4:	85c5350c 	strbhi	r3, [r5, #1292]	; 0x50c
     be8:	e59d3004 	ldr	r3, [sp, #4]
     bec:	85c524f5 	strbhi	r2, [r5, #1269]	; 0x4f5
     bf0:	e1933009 	orrs	r3, r3, r9
     bf4:	0a0000b7 	beq	ed8 <E131Bridge::HandleDmx()+0x3f0>
     bf8:	e16f9f19 	clz	r9, r9
     bfc:	e1a092a9 	lsr	r9, r9, #5
     c00:	e1190008 	tst	r9, r8
     c04:	1a000116 	bne	1064 <E131Bridge::HandleDmx()+0x57c>
     c08:	e59d3004 	ldr	r3, [sp, #4]
     c0c:	e16f3f13 	clz	r3, r3
     c10:	e1a032a3 	lsr	r3, r3, #5
     c14:	e113000b 	tst	r3, fp
     c18:	1a0000f1 	bne	fe4 <E131Bridge::HandleDmx()+0x4fc>
     c1c:	e2281001 	eor	r1, r8, #1
     c20:	e1190001 	tst	r9, r1
     c24:	1a000162 	bne	11b4 <E131Bridge::HandleDmx()+0x6cc>
     c28:	e22b2001 	eor	r2, fp, #1
     c2c:	e1120003 	tst	r2, r3
     c30:	e6ef2072 	uxtb	r2, r2
     c34:	1a000192 	bne	1284 <E131Bridge::HandleDmx()+0x79c>
     c38:	e1120008 	tst	r2, r8
     c3c:	1a000127 	bne	10e0 <E131Bridge::HandleDmx()+0x5f8>
     c40:	e111000b 	tst	r1, fp
     c44:	0a0001e4 	beq	13dc <E131Bridge::HandleDmx()+0x8f4>
     c48:	e5d530eb 	ldrb	r3, [r5, #235]	; 0xeb
     c4c:	e59f279c 	ldr	r2, [pc, #1948]	; 13f0 <E131Bridge::HandleDmx()+0x908>
     c50:	e5c4302c 	strb	r3, [r4, #44]	; 0x2c
     c54:	e595300c 	ldr	r3, [r5, #12]
     c58:	e594e030 	ldr	lr, [r4, #48]	; 0x30
     c5c:	e5843014 	str	r3, [r4, #20]
     c60:	e5d534f5 	ldrb	r3, [r5, #1269]	; 0x4f5
     c64:	e3530000 	cmp	r3, #0
     c68:	03a03001 	moveq	r3, #1
     c6c:	05c534f5 	strbeq	r3, [r5, #1269]	; 0x4f5
     c70:	05c534f8 	strbeq	r3, [r5, #1272]	; 0x4f8
     c74:	e3a03001 	mov	r3, #1
     c78:	e5c43035 	strb	r3, [r4, #53]	; 0x35
     c7c:	e5923000 	ldr	r3, [r2]
     c80:	e3130001 	tst	r3, #1
     c84:	03a03001 	moveq	r3, #1
     c88:	05823000 	streq	r3, [r2]
     c8c:	e59d3008 	ldr	r3, [sp, #8]
     c90:	e3530000 	cmp	r3, #0
     c94:	0a000143 	beq	11a8 <E131Bridge::HandleDmx()+0x6c0>
     c98:	e59d3010 	ldr	r3, [sp, #16]
     c9c:	e2861f7f 	add	r1, r6, #508	; 0x1fc
     ca0:	e28330f9 	add	r3, r3, #249	; 0xf9
     ca4:	e59d200c 	ldr	r2, [sp, #12]
     ca8:	e2811003 	add	r1, r1, #3
     cac:	e085c003 	add	ip, r5, r3
     cb0:	e4d20001 	ldrb	r0, [r2], #1
     cb4:	e152000c 	cmp	r2, ip
     cb8:	e5e10001 	strb	r0, [r1, #1]!
     cbc:	1afffffb 	bne	cb0 <E131Bridge::HandleDmx()+0x1c8>
     cc0:	e59d2008 	ldr	r2, [sp, #8]
     cc4:	e35e0000 	cmp	lr, #0
     cc8:	e5862600 	str	r2, [r6, #1536]	; 0x600
     ccc:	0a0001b0 	beq	1394 <E131Bridge::HandleDmx()+0x8ac>
     cd0:	e2861fff 	add	r1, r6, #1020	; 0x3fc
     cd4:	e59d200c 	ldr	r2, [sp, #12]
     cd8:	e0853003 	add	r3, r5, r3
     cdc:	e2811003 	add	r1, r1, #3
     ce0:	e4d20001 	ldrb	r0, [r2], #1
     ce4:	e1520003 	cmp	r2, r3
     ce8:	e5e10001 	strb	r0, [r1, #1]!
     cec:	1afffffb 	bne	ce0 <E131Bridge::HandleDmx()+0x1f8>
     cf0:	e5d530ec 	ldrb	r3, [r5, #236]	; 0xec
     cf4:	e3130020 	tst	r3, #32
     cf8:	1a000015 	bne	d54 <E131Bridge::HandleDmx()+0x26c>
     cfc:	e59530e8 	ldr	r3, [r5, #232]	; 0xe8
     d00:	e1a03423 	lsr	r3, r3, #8
     d04:	e6ff3073 	uxth	r3, r3
     d08:	e3530000 	cmp	r3, #0
     d0c:	0a000012 	beq	d5c <E131Bridge::HandleDmx()+0x274>
     d10:	e5d524f7 	ldrb	r2, [r5, #1271]	; 0x4f7
     d14:	e3520000 	cmp	r2, #0
     d18:	1a00000f 	bne	d5c <E131Bridge::HandleDmx()+0x274>
     d1c:	e188200b 	orr	r2, r8, fp
     d20:	e6ef2072 	uxtb	r2, r2
     d24:	e6bf3fb3 	rev16	r3, r3
     d28:	e3520000 	cmp	r2, #0
     d2c:	e6ff3073 	uxth	r3, r3
     d30:	0a000113 	beq	1184 <E131Bridge::HandleDmx()+0x69c>
     d34:	e1a0200b 	mov	r2, fp
     d38:	e1a01008 	mov	r1, r8
     d3c:	e1a00005 	mov	r0, r5
     d40:	ebfffffe 	bl	388 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
     d44:	e59f26a8 	ldr	r2, [pc, #1704]	; 13f4 <E131Bridge::HandleDmx()+0x90c>
     d48:	e2853e4f 	add	r3, r5, #1264	; 0x4f0
     d4c:	e1c320b6 	strh	r2, [r3, #6]
     d50:	ea000004 	b	d68 <E131Bridge::HandleDmx()+0x280>
     d54:	e3a03000 	mov	r3, #0
     d58:	e5c534f7 	strb	r3, [r5, #1271]	; 0x4f7
     d5c:	e5d534f6 	ldrb	r3, [r5, #1270]	; 0x4f6
     d60:	e3530000 	cmp	r3, #0
     d64:	0a000002 	beq	d74 <E131Bridge::HandleDmx()+0x28c>
     d68:	e5d534fb 	ldrb	r3, [r5, #1275]	; 0x4fb
     d6c:	e3530000 	cmp	r3, #0
     d70:	0a000018 	beq	dd8 <E131Bridge::HandleDmx()+0x2f0>
     d74:	e59f3674 	ldr	r3, [pc, #1652]	; 13f0 <E131Bridge::HandleDmx()+0x908>
     d78:	e5950004 	ldr	r0, [r5, #4]
     d7c:	e5933000 	ldr	r3, [r3]
     d80:	e3130001 	tst	r3, #1
     d84:	03a02001 	moveq	r2, #1
     d88:	059f3660 	ldreq	r3, [pc, #1632]	; 13f0 <E131Bridge::HandleDmx()+0x908>
     d8c:	05832000 	streq	r2, [r3]
     d90:	e5903000 	ldr	r3, [r0]
     d94:	e1a0100a 	mov	r1, sl
     d98:	e5938010 	ldr	r8, [r3, #16]
     d9c:	e2862b01 	add	r2, r6, #1024	; 0x400
     da0:	e5963600 	ldr	r3, [r6, #1536]	; 0x600
     da4:	f5d6fc04 	pld	[r6, #3076]	; 0xc04
     da8:	e12fff38 	blx	r8
     dac:	e5d43036 	ldrb	r3, [r4, #54]	; 0x36
     db0:	e3530000 	cmp	r3, #0
     db4:	1a000007 	bne	dd8 <E131Bridge::HandleDmx()+0x2f0>
     db8:	e5950004 	ldr	r0, [r5, #4]
     dbc:	e1a0100a 	mov	r1, sl
     dc0:	e5903000 	ldr	r3, [r0]
     dc4:	e5933008 	ldr	r3, [r3, #8]
     dc8:	e12fff33 	blx	r3
     dcc:	e3a03001 	mov	r3, #1
     dd0:	e5c534f8 	strb	r3, [r5, #1272]	; 0x4f8
     dd4:	e5c43036 	strb	r3, [r4, #54]	; 0x36
     dd8:	e5d5350d 	ldrb	r3, [r5, #1293]	; 0x50d
     ddc:	e3833002 	orr	r3, r3, #2
     de0:	e5c5350d 	strb	r3, [r5, #1293]	; 0x50d
     de4:	e28aa001 	add	sl, sl, #1
     de8:	e2866c06 	add	r6, r6, #1536	; 0x600
     dec:	e2877c06 	add	r7, r7, #1536	; 0x600
     df0:	e35a0004 	cmp	sl, #4
     df4:	e2844044 	add	r4, r4, #68	; 0x44
     df8:	e2866004 	add	r6, r6, #4
     dfc:	e2877004 	add	r7, r7, #4
     e00:	1affff4b 	bne	b34 <E131Bridge::HandleDmx()+0x4c>
     e04:	e28dd01c 	add	sp, sp, #28
     e08:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     e0c:	e2852092 	add	r2, r5, #146	; 0x92
     e10:	e2443001 	sub	r3, r4, #1
     e14:	e2851091 	add	r1, r5, #145	; 0x91
     e18:	e284e00f 	add	lr, r4, #15
     e1c:	ea000001 	b	e28 <E131Bridge::HandleDmx()+0x340>
     e20:	e153000e 	cmp	r3, lr
     e24:	0a000061 	beq	fb0 <E131Bridge::HandleDmx()+0x4c8>
     e28:	e5f3c001 	ldrb	ip, [r3, #1]!
     e2c:	e5f10001 	ldrb	r0, [r1, #1]!
     e30:	e15c0000 	cmp	ip, r0
     e34:	0afffff9 	beq	e20 <E131Bridge::HandleDmx()+0x338>
     e38:	e159000b 	cmp	r9, fp
     e3c:	03a0b000 	moveq	fp, #0
     e40:	0a000002 	beq	e50 <E131Bridge::HandleDmx()+0x368>
     e44:	eaffff4f 	b	b88 <E131Bridge::HandleDmx()+0xa0>
     e48:	e3a0b000 	mov	fp, #0
     e4c:	e2852092 	add	r2, r5, #146	; 0x92
     e50:	e2422001 	sub	r2, r2, #1
     e54:	e284301b 	add	r3, r4, #27
     e58:	e284c02b 	add	ip, r4, #43	; 0x2b
     e5c:	ea000001 	b	e68 <E131Bridge::HandleDmx()+0x380>
     e60:	e153000c 	cmp	r3, ip
     e64:	0a000043 	beq	f78 <E131Bridge::HandleDmx()+0x490>
     e68:	e5f30001 	ldrb	r0, [r3, #1]!
     e6c:	e5f21001 	ldrb	r1, [r2, #1]!
     e70:	e1500001 	cmp	r0, r1
     e74:	0afffff9 	beq	e60 <E131Bridge::HandleDmx()+0x378>
     e78:	e35b0000 	cmp	fp, #0
     e7c:	0a000049 	beq	fa8 <E131Bridge::HandleDmx()+0x4c0>
     e80:	e3a0b000 	mov	fp, #0
     e84:	e5d520eb 	ldrb	r2, [r5, #235]	; 0xeb
     e88:	e2823013 	add	r3, r2, #19
     e8c:	e6ef3073 	uxtb	r3, r3
     e90:	e5d41010 	ldrb	r1, [r4, #16]
     e94:	e5c42010 	strb	r2, [r4, #16]
     e98:	e0433001 	sub	r3, r3, r1
     e9c:	e6ef3073 	uxtb	r3, r3
     ea0:	e3530013 	cmp	r3, #19
     ea4:	8affff39 	bhi	b90 <E131Bridge::HandleDmx()+0xa8>
     ea8:	eaffffcd 	b	de4 <E131Bridge::HandleDmx()+0x2fc>
     eac:	e1a0100a 	mov	r1, sl
     eb0:	e1a00005 	mov	r0, r5
     eb4:	e58d3014 	str	r3, [sp, #20]
     eb8:	ebfffffe 	bl	850 <E131Bridge::IsPriorityTimeOut(unsigned int) const>
     ebc:	e3500000 	cmp	r0, #0
     ec0:	0affffc7 	beq	de4 <E131Bridge::HandleDmx()+0x2fc>
     ec4:	e59d3014 	ldr	r3, [sp, #20]
     ec8:	e5c5350c 	strb	r3, [r5, #1292]	; 0x50c
     ecc:	e59d3004 	ldr	r3, [sp, #4]
     ed0:	e1933009 	orrs	r3, r3, r9
     ed4:	1affff47 	bne	bf8 <E131Bridge::HandleDmx()+0x110>
     ed8:	e5953078 	ldr	r3, [r5, #120]	; 0x78
     edc:	e2442001 	sub	r2, r4, #1
     ee0:	e5043004 	str	r3, [r4, #-4]
     ee4:	e5d530eb 	ldrb	r3, [r5, #235]	; 0xeb
     ee8:	e28500a2 	add	r0, r5, #162	; 0xa2
     eec:	e5c43010 	strb	r3, [r4, #16]
     ef0:	e2853092 	add	r3, r5, #146	; 0x92
     ef4:	e4d31001 	ldrb	r1, [r3], #1
     ef8:	e1530000 	cmp	r3, r0
     efc:	e5e21001 	strb	r1, [r2, #1]!
     f00:	1afffffb 	bne	ef4 <E131Bridge::HandleDmx()+0x40c>
     f04:	e595300c 	ldr	r3, [r5, #12]
     f08:	e59f24e0 	ldr	r2, [pc, #1248]	; 13f0 <E131Bridge::HandleDmx()+0x908>
     f0c:	e5043008 	str	r3, [r4, #-8]
     f10:	e5923000 	ldr	r3, [r2]
     f14:	e3130001 	tst	r3, #1
     f18:	03a03001 	moveq	r3, #1
     f1c:	05823000 	streq	r3, [r2]
     f20:	e59d3008 	ldr	r3, [sp, #8]
     f24:	e3530000 	cmp	r3, #0
     f28:	0a00009e 	beq	11a8 <E131Bridge::HandleDmx()+0x6c0>
     f2c:	e59d2010 	ldr	r2, [sp, #16]
     f30:	e59d300c 	ldr	r3, [sp, #12]
     f34:	e28210f9 	add	r1, r2, #249	; 0xf9
     f38:	e0851001 	add	r1, r5, r1
     f3c:	e2462001 	sub	r2, r6, #1
     f40:	e4d30001 	ldrb	r0, [r3], #1
     f44:	e1530001 	cmp	r3, r1
     f48:	e5e20001 	strb	r0, [r2, #1]!
     f4c:	1afffffb 	bne	f40 <E131Bridge::HandleDmx()+0x458>
     f50:	e59d3008 	ldr	r3, [sp, #8]
     f54:	e2862fff 	add	r2, r6, #1020	; 0x3fc
     f58:	e5863600 	str	r3, [r6, #1536]	; 0x600
     f5c:	e59d300c 	ldr	r3, [sp, #12]
     f60:	e2822003 	add	r2, r2, #3
     f64:	e4d30001 	ldrb	r0, [r3], #1
     f68:	e1530001 	cmp	r3, r1
     f6c:	e5e20001 	strb	r0, [r2, #1]!
     f70:	1afffffb 	bne	f64 <E131Bridge::HandleDmx()+0x47c>
     f74:	eaffff5d 	b	cf0 <E131Bridge::HandleDmx()+0x208>
     f78:	e5d520eb 	ldrb	r2, [r5, #235]	; 0xeb
     f7c:	e35b0000 	cmp	fp, #0
     f80:	e2823013 	add	r3, r2, #19
     f84:	e6ef3073 	uxtb	r3, r3
     f88:	1affffc0 	bne	e90 <E131Bridge::HandleDmx()+0x3a8>
     f8c:	e5d4102c 	ldrb	r1, [r4, #44]	; 0x2c
     f90:	e5c4202c 	strb	r2, [r4, #44]	; 0x2c
     f94:	e0433001 	sub	r3, r3, r1
     f98:	e6ef3073 	uxtb	r3, r3
     f9c:	e3530013 	cmp	r3, #19
     fa0:	9affff8f 	bls	de4 <E131Bridge::HandleDmx()+0x2fc>
     fa4:	e1a0b008 	mov	fp, r8
     fa8:	e3a08000 	mov	r8, #0
     fac:	eafffef7 	b	b90 <E131Bridge::HandleDmx()+0xa8>
     fb0:	e159000b 	cmp	r9, fp
     fb4:	01a0b008 	moveq	fp, r8
     fb8:	1affffb0 	bne	e80 <E131Bridge::HandleDmx()+0x398>
     fbc:	eaffffa3 	b	e50 <E131Bridge::HandleDmx()+0x368>
     fc0:	e188300b 	orr	r3, r8, fp
     fc4:	e6ef3073 	uxtb	r3, r3
     fc8:	e3530000 	cmp	r3, #0
     fcc:	0affff84 	beq	de4 <E131Bridge::HandleDmx()+0x2fc>
     fd0:	e1a0200b 	mov	r2, fp
     fd4:	e1a01008 	mov	r1, r8
     fd8:	e1a00005 	mov	r0, r5
     fdc:	ebfffffe 	bl	91c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
     fe0:	eaffff7f 	b	de4 <E131Bridge::HandleDmx()+0x2fc>
     fe4:	e5d530eb 	ldrb	r3, [r5, #235]	; 0xeb
     fe8:	e59f2400 	ldr	r2, [pc, #1024]	; 13f0 <E131Bridge::HandleDmx()+0x908>
     fec:	e5c4302c 	strb	r3, [r4, #44]	; 0x2c
     ff0:	e595300c 	ldr	r3, [r5, #12]
     ff4:	e5843014 	str	r3, [r4, #20]
     ff8:	e5923000 	ldr	r3, [r2]
     ffc:	e3130001 	tst	r3, #1
    1000:	03a03001 	moveq	r3, #1
    1004:	05823000 	streq	r3, [r2]
    1008:	e59d3008 	ldr	r3, [sp, #8]
    100c:	e3530000 	cmp	r3, #0
    1010:	0a000064 	beq	11a8 <E131Bridge::HandleDmx()+0x6c0>
    1014:	e59d1010 	ldr	r1, [sp, #16]
    1018:	e2862f7f 	add	r2, r6, #508	; 0x1fc
    101c:	e28110f9 	add	r1, r1, #249	; 0xf9
    1020:	e59d300c 	ldr	r3, [sp, #12]
    1024:	e2822003 	add	r2, r2, #3
    1028:	e0851001 	add	r1, r5, r1
    102c:	e4d30001 	ldrb	r0, [r3], #1
    1030:	e1510003 	cmp	r1, r3
    1034:	e5e20001 	strb	r0, [r2, #1]!
    1038:	1afffffb 	bne	102c <E131Bridge::HandleDmx()+0x544>
    103c:	e59d3008 	ldr	r3, [sp, #8]
    1040:	e2862fff 	add	r2, r6, #1020	; 0x3fc
    1044:	e5863600 	str	r3, [r6, #1536]	; 0x600
    1048:	e59d300c 	ldr	r3, [sp, #12]
    104c:	e2822003 	add	r2, r2, #3
    1050:	e4d30001 	ldrb	r0, [r3], #1
    1054:	e1510003 	cmp	r1, r3
    1058:	e5e20001 	strb	r0, [r2, #1]!
    105c:	1afffffb 	bne	1050 <E131Bridge::HandleDmx()+0x568>
    1060:	eaffff22 	b	cf0 <E131Bridge::HandleDmx()+0x208>
    1064:	e5d530eb 	ldrb	r3, [r5, #235]	; 0xeb
    1068:	e59f2380 	ldr	r2, [pc, #896]	; 13f0 <E131Bridge::HandleDmx()+0x908>
    106c:	e5c43010 	strb	r3, [r4, #16]
    1070:	e595300c 	ldr	r3, [r5, #12]
    1074:	e5043008 	str	r3, [r4, #-8]
    1078:	e5923000 	ldr	r3, [r2]
    107c:	e3130001 	tst	r3, #1
    1080:	03a03001 	moveq	r3, #1
    1084:	05823000 	streq	r3, [r2]
    1088:	e59d3008 	ldr	r3, [sp, #8]
    108c:	e3530000 	cmp	r3, #0
    1090:	0a000044 	beq	11a8 <E131Bridge::HandleDmx()+0x6c0>
    1094:	e59d2010 	ldr	r2, [sp, #16]
    1098:	e59d300c 	ldr	r3, [sp, #12]
    109c:	e28210f9 	add	r1, r2, #249	; 0xf9
    10a0:	e0851001 	add	r1, r5, r1
    10a4:	e2462001 	sub	r2, r6, #1
    10a8:	e4d30001 	ldrb	r0, [r3], #1
    10ac:	e1530001 	cmp	r3, r1
    10b0:	e5e20001 	strb	r0, [r2, #1]!
    10b4:	1afffffb 	bne	10a8 <E131Bridge::HandleDmx()+0x5c0>
    10b8:	e59d3008 	ldr	r3, [sp, #8]
    10bc:	e2862fff 	add	r2, r6, #1020	; 0x3fc
    10c0:	e5863600 	str	r3, [r6, #1536]	; 0x600
    10c4:	e59d300c 	ldr	r3, [sp, #12]
    10c8:	e2822003 	add	r2, r2, #3
    10cc:	e4d30001 	ldrb	r0, [r3], #1
    10d0:	e1530001 	cmp	r3, r1
    10d4:	e5e20001 	strb	r0, [r2, #1]!
    10d8:	1afffffb 	bne	10cc <E131Bridge::HandleDmx()+0x5e4>
    10dc:	eaffff03 	b	cf0 <E131Bridge::HandleDmx()+0x208>
    10e0:	e5d530eb 	ldrb	r3, [r5, #235]	; 0xeb
    10e4:	e59f2304 	ldr	r2, [pc, #772]	; 13f0 <E131Bridge::HandleDmx()+0x908>
    10e8:	e5c43010 	strb	r3, [r4, #16]
    10ec:	e595300c 	ldr	r3, [r5, #12]
    10f0:	e594e030 	ldr	lr, [r4, #48]	; 0x30
    10f4:	e5043008 	str	r3, [r4, #-8]
    10f8:	e5d534f5 	ldrb	r3, [r5, #1269]	; 0x4f5
    10fc:	e3530000 	cmp	r3, #0
    1100:	03a03001 	moveq	r3, #1
    1104:	05c534f5 	strbeq	r3, [r5, #1269]	; 0x4f5
    1108:	05c534f8 	strbeq	r3, [r5, #1272]	; 0x4f8
    110c:	e3a03001 	mov	r3, #1
    1110:	e5c43035 	strb	r3, [r4, #53]	; 0x35
    1114:	e5923000 	ldr	r3, [r2]
    1118:	e3130001 	tst	r3, #1
    111c:	03a03001 	moveq	r3, #1
    1120:	05823000 	streq	r3, [r2]
    1124:	e59d3008 	ldr	r3, [sp, #8]
    1128:	e3530000 	cmp	r3, #0
    112c:	0a00001d 	beq	11a8 <E131Bridge::HandleDmx()+0x6c0>
    1130:	e1cd20dc 	ldrd	r2, [sp, #12]
    1134:	e28330f9 	add	r3, r3, #249	; 0xf9
    1138:	e2461001 	sub	r1, r6, #1
    113c:	e085c003 	add	ip, r5, r3
    1140:	e4d20001 	ldrb	r0, [r2], #1
    1144:	e152000c 	cmp	r2, ip
    1148:	e5e10001 	strb	r0, [r1, #1]!
    114c:	1afffffb 	bne	1140 <E131Bridge::HandleDmx()+0x658>
    1150:	e59d2008 	ldr	r2, [sp, #8]
    1154:	e35e0000 	cmp	lr, #0
    1158:	e5862600 	str	r2, [r6, #1536]	; 0x600
    115c:	0a00007a 	beq	134c <E131Bridge::HandleDmx()+0x864>
    1160:	e2861fff 	add	r1, r6, #1020	; 0x3fc
    1164:	e59d200c 	ldr	r2, [sp, #12]
    1168:	e0853003 	add	r3, r5, r3
    116c:	e2811003 	add	r1, r1, #3
    1170:	e4d20001 	ldrb	r0, [r2], #1
    1174:	e1520003 	cmp	r2, r3
    1178:	e5e10001 	strb	r0, [r1, #1]!
    117c:	1afffffb 	bne	1170 <E131Bridge::HandleDmx()+0x688>
    1180:	eafffeda 	b	cf0 <E131Bridge::HandleDmx()+0x208>
    1184:	e5942018 	ldr	r2, [r4, #24]
    1188:	e5141004 	ldr	r1, [r4, #-4]
    118c:	e2522000 	subs	r2, r2, #0
    1190:	13a02001 	movne	r2, #1
    1194:	e2511000 	subs	r1, r1, #0
    1198:	13a01001 	movne	r1, #1
    119c:	e1a00005 	mov	r0, r5
    11a0:	ebfffffe 	bl	388 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
    11a4:	eafffee6 	b	d44 <E131Bridge::HandleDmx()+0x25c>
    11a8:	e59d3008 	ldr	r3, [sp, #8]
    11ac:	e5863600 	str	r3, [r6, #1536]	; 0x600
    11b0:	eafffece 	b	cf0 <E131Bridge::HandleDmx()+0x208>
    11b4:	e5953078 	ldr	r3, [r5, #120]	; 0x78
    11b8:	e284201b 	add	r2, r4, #27
    11bc:	e5843018 	str	r3, [r4, #24]
    11c0:	e5d530eb 	ldrb	r3, [r5, #235]	; 0xeb
    11c4:	e28500a2 	add	r0, r5, #162	; 0xa2
    11c8:	e5c4302c 	strb	r3, [r4, #44]	; 0x2c
    11cc:	e2853092 	add	r3, r5, #146	; 0x92
    11d0:	e4d31001 	ldrb	r1, [r3], #1
    11d4:	e1530000 	cmp	r3, r0
    11d8:	e5e21001 	strb	r1, [r2, #1]!
    11dc:	1afffffb 	bne	11d0 <E131Bridge::HandleDmx()+0x6e8>
    11e0:	e595300c 	ldr	r3, [r5, #12]
    11e4:	e59f2204 	ldr	r2, [pc, #516]	; 13f0 <E131Bridge::HandleDmx()+0x908>
    11e8:	e5843014 	str	r3, [r4, #20]
    11ec:	e5d534f5 	ldrb	r3, [r5, #1269]	; 0x4f5
    11f0:	e594e030 	ldr	lr, [r4, #48]	; 0x30
    11f4:	e3530000 	cmp	r3, #0
    11f8:	03a03001 	moveq	r3, #1
    11fc:	05c534f5 	strbeq	r3, [r5, #1269]	; 0x4f5
    1200:	05c534f8 	strbeq	r3, [r5, #1272]	; 0x4f8
    1204:	e3a03001 	mov	r3, #1
    1208:	e5c43035 	strb	r3, [r4, #53]	; 0x35
    120c:	e5923000 	ldr	r3, [r2]
    1210:	e3130001 	tst	r3, #1
    1214:	03a03001 	moveq	r3, #1
    1218:	05823000 	streq	r3, [r2]
    121c:	e59d3008 	ldr	r3, [sp, #8]
    1220:	e3530000 	cmp	r3, #0
    1224:	0affffdf 	beq	11a8 <E131Bridge::HandleDmx()+0x6c0>
    1228:	e59d3010 	ldr	r3, [sp, #16]
    122c:	e2861f7f 	add	r1, r6, #508	; 0x1fc
    1230:	e28330f9 	add	r3, r3, #249	; 0xf9
    1234:	e59d200c 	ldr	r2, [sp, #12]
    1238:	e2811003 	add	r1, r1, #3
    123c:	e085c003 	add	ip, r5, r3
    1240:	e4d20001 	ldrb	r0, [r2], #1
    1244:	e15c0002 	cmp	ip, r2
    1248:	e5e10001 	strb	r0, [r1, #1]!
    124c:	1afffffb 	bne	1240 <E131Bridge::HandleDmx()+0x758>
    1250:	e59d2008 	ldr	r2, [sp, #8]
    1254:	e35e0000 	cmp	lr, #0
    1258:	e5862600 	str	r2, [r6, #1536]	; 0x600
    125c:	0a000043 	beq	1370 <E131Bridge::HandleDmx()+0x888>
    1260:	e2861fff 	add	r1, r6, #1020	; 0x3fc
    1264:	e59d200c 	ldr	r2, [sp, #12]
    1268:	e0853003 	add	r3, r5, r3
    126c:	e2811003 	add	r1, r1, #3
    1270:	e4d20001 	ldrb	r0, [r2], #1
    1274:	e1520003 	cmp	r2, r3
    1278:	e5e10001 	strb	r0, [r1, #1]!
    127c:	1afffffb 	bne	1270 <E131Bridge::HandleDmx()+0x788>
    1280:	eafffe9a 	b	cf0 <E131Bridge::HandleDmx()+0x208>
    1284:	e5953078 	ldr	r3, [r5, #120]	; 0x78
    1288:	e2442001 	sub	r2, r4, #1
    128c:	e5043004 	str	r3, [r4, #-4]
    1290:	e5d530eb 	ldrb	r3, [r5, #235]	; 0xeb
    1294:	e28500a2 	add	r0, r5, #162	; 0xa2
    1298:	e5c43010 	strb	r3, [r4, #16]
    129c:	e2853092 	add	r3, r5, #146	; 0x92
    12a0:	e4d31001 	ldrb	r1, [r3], #1
    12a4:	e1530000 	cmp	r3, r0
    12a8:	e5e21001 	strb	r1, [r2, #1]!
    12ac:	1afffffb 	bne	12a0 <E131Bridge::HandleDmx()+0x7b8>
    12b0:	e595300c 	ldr	r3, [r5, #12]
    12b4:	e59f2134 	ldr	r2, [pc, #308]	; 13f0 <E131Bridge::HandleDmx()+0x908>
    12b8:	e5043008 	str	r3, [r4, #-8]
    12bc:	e5d534f5 	ldrb	r3, [r5, #1269]	; 0x4f5
    12c0:	e594e030 	ldr	lr, [r4, #48]	; 0x30
    12c4:	e3530000 	cmp	r3, #0
    12c8:	03a03001 	moveq	r3, #1
    12cc:	05c534f5 	strbeq	r3, [r5, #1269]	; 0x4f5
    12d0:	05c534f8 	strbeq	r3, [r5, #1272]	; 0x4f8
    12d4:	e3a03001 	mov	r3, #1
    12d8:	e5c43035 	strb	r3, [r4, #53]	; 0x35
    12dc:	e5923000 	ldr	r3, [r2]
    12e0:	e3130001 	tst	r3, #1
    12e4:	03a03001 	moveq	r3, #1
    12e8:	05823000 	streq	r3, [r2]
    12ec:	e59d3008 	ldr	r3, [sp, #8]
    12f0:	e3530000 	cmp	r3, #0
    12f4:	0affffab 	beq	11a8 <E131Bridge::HandleDmx()+0x6c0>
    12f8:	e1cd20dc 	ldrd	r2, [sp, #12]
    12fc:	e28330f9 	add	r3, r3, #249	; 0xf9
    1300:	e2461001 	sub	r1, r6, #1
    1304:	e085c003 	add	ip, r5, r3
    1308:	e4d20001 	ldrb	r0, [r2], #1
    130c:	e152000c 	cmp	r2, ip
    1310:	e5e10001 	strb	r0, [r1, #1]!
    1314:	1afffffb 	bne	1308 <E131Bridge::HandleDmx()+0x820>
    1318:	e59d2008 	ldr	r2, [sp, #8]
    131c:	e35e0000 	cmp	lr, #0
    1320:	e5862600 	str	r2, [r6, #1536]	; 0x600
    1324:	0a000023 	beq	13b8 <E131Bridge::HandleDmx()+0x8d0>
    1328:	e2861fff 	add	r1, r6, #1020	; 0x3fc
    132c:	e59d200c 	ldr	r2, [sp, #12]
    1330:	e0853003 	add	r3, r5, r3
    1334:	e2811003 	add	r1, r1, #3
    1338:	e4d20001 	ldrb	r0, [r2], #1
    133c:	e1530002 	cmp	r3, r2
    1340:	e5e10001 	strb	r0, [r1, #1]!
    1344:	1afffffb 	bne	1338 <E131Bridge::HandleDmx()+0x850>
    1348:	eafffe68 	b	cf0 <E131Bridge::HandleDmx()+0x208>
    134c:	e1a03006 	mov	r3, r6
    1350:	e4d31001 	ldrb	r1, [r3], #1
    1354:	e5d321ff 	ldrb	r2, [r3, #511]	; 0x1ff
    1358:	e1520001 	cmp	r2, r1
    135c:	31a02001 	movcc	r2, r1
    1360:	e1530007 	cmp	r3, r7
    1364:	e5c323ff 	strb	r2, [r3, #1023]	; 0x3ff
    1368:	1afffff8 	bne	1350 <E131Bridge::HandleDmx()+0x868>
    136c:	eafffe5f 	b	cf0 <E131Bridge::HandleDmx()+0x208>
    1370:	e1a03006 	mov	r3, r6
    1374:	e4d31001 	ldrb	r1, [r3], #1
    1378:	e5d321ff 	ldrb	r2, [r3, #511]	; 0x1ff
    137c:	e1520001 	cmp	r2, r1
    1380:	31a02001 	movcc	r2, r1
    1384:	e1530007 	cmp	r3, r7
    1388:	e5c323ff 	strb	r2, [r3, #1023]	; 0x3ff
    138c:	1afffff8 	bne	1374 <E131Bridge::HandleDmx()+0x88c>
    1390:	eafffe56 	b	cf0 <E131Bridge::HandleDmx()+0x208>
    1394:	e1a03006 	mov	r3, r6
    1398:	e4d31001 	ldrb	r1, [r3], #1
    139c:	e5d321ff 	ldrb	r2, [r3, #511]	; 0x1ff
    13a0:	e1520001 	cmp	r2, r1
    13a4:	31a02001 	movcc	r2, r1
    13a8:	e1530007 	cmp	r3, r7
    13ac:	e5c323ff 	strb	r2, [r3, #1023]	; 0x3ff
    13b0:	1afffff8 	bne	1398 <E131Bridge::HandleDmx()+0x8b0>
    13b4:	eafffe4d 	b	cf0 <E131Bridge::HandleDmx()+0x208>
    13b8:	e1a03006 	mov	r3, r6
    13bc:	e4d31001 	ldrb	r1, [r3], #1
    13c0:	e5d321ff 	ldrb	r2, [r3, #511]	; 0x1ff
    13c4:	e1520001 	cmp	r2, r1
    13c8:	31a02001 	movcc	r2, r1
    13cc:	e1530007 	cmp	r3, r7
    13d0:	e5c323ff 	strb	r2, [r3, #1023]	; 0x3ff
    13d4:	1afffff8 	bne	13bc <E131Bridge::HandleDmx()+0x8d4>
    13d8:	eafffe44 	b	cf0 <E131Bridge::HandleDmx()+0x208>
    13dc:	e59f0014 	ldr	r0, [pc, #20]	; 13f8 <E131Bridge::HandleDmx()+0x910>
    13e0:	e28dd01c 	add	sp, sp, #28
    13e4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    13e8:	eafffffe 	b	0 <printf>
	...
    13f4:	00000101 	andeq	r0, r0, r1, lsl #2
    13f8:	00000018 	andeq	r0, r0, r8, lsl r0

000013fc <E131Bridge::IsStatusChanged()>:
    13fc:	e5d034f8 	ldrb	r3, [r0, #1272]	; 0x4f8
    1400:	e3530000 	cmp	r3, #0
    1404:	13a02000 	movne	r2, #0
    1408:	15c024f8 	strbne	r2, [r0, #1272]	; 0x4f8
    140c:	e1a00003 	mov	r0, r3
    1410:	e12fff1e 	bx	lr

00001414 <E131Bridge::Clear(unsigned int)>:
    1414:	e59f3158 	ldr	r3, [pc, #344]	; 1574 <E131Bridge::Clear(unsigned int)+0x160>
    1418:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    141c:	e5932000 	ldr	r2, [r3]
    1420:	e1a04001 	mov	r4, r1
    1424:	e3120001 	tst	r2, #1
    1428:	03a02001 	moveq	r2, #1
    142c:	05832000 	streq	r2, [r3]
    1430:	e0812081 	add	r2, r1, r1, lsl #1
    1434:	e0812382 	add	r2, r1, r2, lsl #7
    1438:	e1a06081 	lsl	r6, r1, #1
    143c:	e3a01000 	mov	r1, #0
    1440:	e59fe130 	ldr	lr, [pc, #304]	; 1578 <E131Bridge::Clear(unsigned int)+0x164>
    1444:	e1a02102 	lsl	r2, r2, #2
    1448:	e2822b01 	add	r2, r2, #1024	; 0x400
    144c:	e1a05000 	mov	r5, r0
    1450:	e08e2002 	add	r2, lr, r2
    1454:	e5900004 	ldr	r0, [r0, #4]
    1458:	e59f711c 	ldr	r7, [pc, #284]	; 157c <E131Bridge::Clear(unsigned int)+0x168>
    145c:	e282c020 	add	ip, r2, #32
    1460:	e2477020 	sub	r7, r7, #32
    1464:	e357001f 	cmp	r7, #31
    1468:	f5dcf002 	pld	[ip, #2]
    146c:	e54c1020 	strb	r1, [ip, #-32]	; 0xffffffe0
    1470:	e54c101f 	strb	r1, [ip, #-31]	; 0xffffffe1
    1474:	e54c101e 	strb	r1, [ip, #-30]	; 0xffffffe2
    1478:	e54c101d 	strb	r1, [ip, #-29]	; 0xffffffe3
    147c:	e54c101c 	strb	r1, [ip, #-28]	; 0xffffffe4
    1480:	e54c101b 	strb	r1, [ip, #-27]	; 0xffffffe5
    1484:	e54c101a 	strb	r1, [ip, #-26]	; 0xffffffe6
    1488:	e54c1019 	strb	r1, [ip, #-25]	; 0xffffffe7
    148c:	e54c1018 	strb	r1, [ip, #-24]	; 0xffffffe8
    1490:	e54c1017 	strb	r1, [ip, #-23]	; 0xffffffe9
    1494:	e54c1016 	strb	r1, [ip, #-22]	; 0xffffffea
    1498:	e54c1015 	strb	r1, [ip, #-21]	; 0xffffffeb
    149c:	e54c1014 	strb	r1, [ip, #-20]	; 0xffffffec
    14a0:	e54c1013 	strb	r1, [ip, #-19]	; 0xffffffed
    14a4:	e54c1012 	strb	r1, [ip, #-18]	; 0xffffffee
    14a8:	e54c1011 	strb	r1, [ip, #-17]	; 0xffffffef
    14ac:	e54c1010 	strb	r1, [ip, #-16]
    14b0:	e54c100f 	strb	r1, [ip, #-15]
    14b4:	e54c100e 	strb	r1, [ip, #-14]
    14b8:	e54c100d 	strb	r1, [ip, #-13]
    14bc:	e54c100c 	strb	r1, [ip, #-12]
    14c0:	e54c100b 	strb	r1, [ip, #-11]
    14c4:	e54c100a 	strb	r1, [ip, #-10]
    14c8:	e54c1009 	strb	r1, [ip, #-9]
    14cc:	e54c1008 	strb	r1, [ip, #-8]
    14d0:	e54c1007 	strb	r1, [ip, #-7]
    14d4:	e54c1006 	strb	r1, [ip, #-6]
    14d8:	e54c1005 	strb	r1, [ip, #-5]
    14dc:	e54c1004 	strb	r1, [ip, #-4]
    14e0:	e54c1003 	strb	r1, [ip, #-3]
    14e4:	e54c1002 	strb	r1, [ip, #-2]
    14e8:	e1a0300c 	mov	r3, ip
    14ec:	e54c1001 	strb	r1, [ip, #-1]
    14f0:	e28cc020 	add	ip, ip, #32
    14f4:	1affffd9 	bne	1460 <E131Bridge::Clear(unsigned int)+0x4c>
    14f8:	e3a01000 	mov	r1, #0
    14fc:	e4c31001 	strb	r1, [r3], #1
    1500:	e153000c 	cmp	r3, ip
    1504:	1afffffc 	bne	14fc <E131Bridge::Clear(unsigned int)+0xe8>
    1508:	e0863004 	add	r3, r6, r4
    150c:	e0843383 	add	r3, r4, r3, lsl #7
    1510:	e08ee103 	add	lr, lr, r3, lsl #2
    1514:	e3a03c02 	mov	r3, #512	; 0x200
    1518:	e5901000 	ldr	r1, [r0]
    151c:	e58e3600 	str	r3, [lr, #1536]	; 0x600
    1520:	e5916010 	ldr	r6, [r1, #16]
    1524:	e1a01004 	mov	r1, r4
    1528:	e12fff36 	blx	r6
    152c:	e0846204 	add	r6, r4, r4, lsl #4
    1530:	e0856106 	add	r6, r5, r6, lsl #2
    1534:	e5d63512 	ldrb	r3, [r6, #1298]	; 0x512
    1538:	e3530000 	cmp	r3, #0
    153c:	0a000009 	beq	1568 <E131Bridge::Clear(unsigned int)+0x154>
    1540:	e5d63552 	ldrb	r3, [r6, #1362]	; 0x552
    1544:	e3530000 	cmp	r3, #0
    1548:	1a000006 	bne	1568 <E131Bridge::Clear(unsigned int)+0x154>
    154c:	e5950004 	ldr	r0, [r5, #4]
    1550:	e1a01004 	mov	r1, r4
    1554:	e5903000 	ldr	r3, [r0]
    1558:	e5933008 	ldr	r3, [r3, #8]
    155c:	e12fff33 	blx	r3
    1560:	e3a03001 	mov	r3, #1
    1564:	e5c63552 	strb	r3, [r6, #1362]	; 0x552
    1568:	e3a03000 	mov	r3, #0
    156c:	e5c534f4 	strb	r3, [r5, #1268]	; 0x4f4
    1570:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
	...
    157c:	000001ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00001580 <E131Bridge::IsValidRoot()>:
    1580:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    1584:	e59f2048 	ldr	r2, [pc, #72]	; 15d4 <E131Bridge::IsValidRoot()+0x54>
    1588:	e280307f 	add	r3, r0, #127	; 0x7f
    158c:	e280e08b 	add	lr, r0, #139	; 0x8b
    1590:	ea000001 	b	159c <E131Bridge::IsValidRoot()+0x1c>
    1594:	e153000e 	cmp	r3, lr
    1598:	0a000005 	beq	15b4 <E131Bridge::IsValidRoot()+0x34>
    159c:	e5f3c001 	ldrb	ip, [r3, #1]!
    15a0:	e5f21001 	ldrb	r1, [r2, #1]!
    15a4:	e15c0001 	cmp	ip, r1
    15a8:	0afffff9 	beq	1594 <E131Bridge::IsValidRoot()+0x14>
    15ac:	e3a00000 	mov	r0, #0
    15b0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    15b4:	e1d038be 	ldrh	r3, [r0, #142]	; 0x8e
    15b8:	e1d029b0 	ldrh	r2, [r0, #144]	; 0x90
    15bc:	e1833802 	orr	r3, r3, r2, lsl #16
    15c0:	e283333f 	add	r3, r3, #-67108864	; 0xfc000000
    15c4:	e3d33301 	bics	r3, r3, #67108864	; 0x4000000
    15c8:	03a00001 	moveq	r0, #1
    15cc:	13a00000 	movne	r0, #0
    15d0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    15d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

000015d8 <E131Bridge::IsValidDataPacket()>:
    15d8:	e5d030f1 	ldrb	r3, [r0, #241]	; 0xf1
    15dc:	e3530002 	cmp	r3, #2
    15e0:	1a000002 	bne	15f0 <E131Bridge::IsValidDataPacket()+0x18>
    15e4:	e5d030f2 	ldrb	r3, [r0, #242]	; 0xf2
    15e8:	e35300a1 	cmp	r3, #161	; 0xa1
    15ec:	0a000001 	beq	15f8 <E131Bridge::IsValidDataPacket()+0x20>
    15f0:	e3a00000 	mov	r0, #0
    15f4:	e12fff1e 	bx	lr
    15f8:	e5d030f3 	ldrb	r3, [r0, #243]	; 0xf3
    15fc:	e5d020f4 	ldrb	r2, [r0, #244]	; 0xf4
    1600:	e1933402 	orrs	r3, r3, r2, lsl #8
    1604:	1afffff9 	bne	15f0 <E131Bridge::IsValidDataPacket()+0x18>
    1608:	e59000f4 	ldr	r0, [r0, #244]	; 0xf4
    160c:	e1a00420 	lsr	r0, r0, #8
    1610:	e6ff0070 	uxth	r0, r0
    1614:	e2400c01 	sub	r0, r0, #256	; 0x100
    1618:	e16f0f10 	clz	r0, r0
    161c:	e1a002a0 	lsr	r0, r0, #5
    1620:	e12fff1e 	bx	lr

00001624 <E131Bridge::Run()>:
    1624:	e92d4030 	push	{r4, r5, lr}
    1628:	e1a04000 	mov	r4, r0
    162c:	e1a0c004 	mov	ip, r4
    1630:	e24dd014 	sub	sp, sp, #20
    1634:	e59f11e4 	ldr	r1, [pc, #484]	; 1820 <E131Bridge::Run()+0x1fc>
    1638:	e28d200e 	add	r2, sp, #14
    163c:	e5910000 	ldr	r0, [r1]
    1640:	e58d2004 	str	r2, [sp, #4]
    1644:	e49c1078 	ldr	r1, [ip], #120	; 0x78
    1648:	e59f31d4 	ldr	r3, [pc, #468]	; 1824 <E131Bridge::Run()+0x200>
    164c:	e284207c 	add	r2, r4, #124	; 0x7c
    1650:	e58dc000 	str	ip, [sp]
    1654:	ebfffffe 	bl	0 <Network::RecvFrom(int, void*, unsigned short, unsigned int*, unsigned short*)>
    1658:	e1a05000 	mov	r5, r0
    165c:	ebfffffe 	bl	0 <millis>
    1660:	e3550000 	cmp	r5, #0
    1664:	e584000c 	str	r0, [r4, #12]
    1668:	e1a05000 	mov	r5, r0
    166c:	1a000036 	bne	174c <E131Bridge::Run()+0x128>
    1670:	e5d4350b 	ldrb	r3, [r4, #1291]	; 0x50b
    1674:	e3530000 	cmp	r3, #0
    1678:	1a000015 	bne	16d4 <E131Bridge::Run()+0xb0>
    167c:	e5943014 	ldr	r3, [r4, #20]
    1680:	e3530000 	cmp	r3, #0
    1684:	0a000003 	beq	1698 <E131Bridge::Run()+0x74>
    1688:	e1a00004 	mov	r0, r4
    168c:	ebfffffe 	bl	0 <E131Bridge::HandleDmxIn()>
    1690:	e1a00004 	mov	r0, r4
    1694:	ebfffffe 	bl	0 <E131Bridge::SendDiscoveryPacket()>
    1698:	e5d43008 	ldrb	r3, [r4, #8]
    169c:	e3530000 	cmp	r3, #0
    16a0:	0a000009 	beq	16cc <E131Bridge::Run()+0xa8>
    16a4:	e59f317c 	ldr	r3, [pc, #380]	; 1828 <E131Bridge::Run()+0x204>
    16a8:	e5930000 	ldr	r0, [r3]
    16ac:	e5903004 	ldr	r3, [r0, #4]
    16b0:	e3530004 	cmp	r3, #4
    16b4:	0a000004 	beq	16cc <E131Bridge::Run()+0xa8>
    16b8:	e5d4350d 	ldrb	r3, [r4, #1293]	; 0x50d
    16bc:	e3530000 	cmp	r3, #0
    16c0:	13a01003 	movne	r1, #3
    16c4:	03a01002 	moveq	r1, #2
    16c8:	ebfffffe 	bl	0 <LedBlink::SetMode(ledblink::Mode)>
    16cc:	e28dd014 	add	sp, sp, #20
    16d0:	e8bd8030 	pop	{r4, r5, pc}
    16d4:	e5d434f9 	ldrb	r3, [r4, #1273]	; 0x4f9
    16d8:	e5940010 	ldr	r0, [r4, #16]
    16dc:	e3530000 	cmp	r3, #0
    16e0:	e0455000 	sub	r5, r5, r0
    16e4:	1a000013 	bne	1738 <E131Bridge::Run()+0x114>
    16e8:	e59f313c 	ldr	r3, [pc, #316]	; 182c <E131Bridge::Run()+0x208>
    16ec:	e1550003 	cmp	r5, r3
    16f0:	9a000010 	bls	1738 <E131Bridge::Run()+0x114>
    16f4:	e5943004 	ldr	r3, [r4, #4]
    16f8:	e3530000 	cmp	r3, #0
    16fc:	0a000002 	beq	170c <E131Bridge::Run()+0xe8>
    1700:	e5d434f4 	ldrb	r3, [r4, #1268]	; 0x4f4
    1704:	e3530000 	cmp	r3, #0
    1708:	0a000003 	beq	171c <E131Bridge::Run()+0xf8>
    170c:	e5d4350d 	ldrb	r3, [r4, #1293]	; 0x50d
    1710:	e3c33002 	bic	r3, r3, #2
    1714:	e5c4350d 	strb	r3, [r4, #1293]	; 0x50d
    1718:	eaffffd7 	b	167c <E131Bridge::Run()+0x58>
    171c:	e3a02001 	mov	r2, #1
    1720:	e1a00004 	mov	r0, r4
    1724:	e1a01002 	mov	r1, r2
    1728:	ebfffffe 	bl	91c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
    172c:	e594500c 	ldr	r5, [r4, #12]
    1730:	e5943010 	ldr	r3, [r4, #16]
    1734:	e0455003 	sub	r5, r5, r3
    1738:	e3550ffa 	cmp	r5, #1000	; 0x3e8
    173c:	25d4350d 	ldrbcs	r3, [r4, #1293]	; 0x50d
    1740:	23c33002 	biccs	r3, r3, #2
    1744:	25c4350d 	strbcs	r3, [r4, #1293]	; 0x50d
    1748:	eaffffcb 	b	167c <E131Bridge::Run()+0x58>
    174c:	e1a00004 	mov	r0, r4
    1750:	ebfffffe 	bl	1580 <E131Bridge::IsValidRoot()>
    1754:	e3500000 	cmp	r0, #0
    1758:	0affffdb 	beq	16cc <E131Bridge::Run()+0xa8>
    175c:	e3a03000 	mov	r3, #0
    1760:	e5d424f6 	ldrb	r2, [r4, #1270]	; 0x4f6
    1764:	e5845010 	str	r5, [r4, #16]
    1768:	e1520003 	cmp	r2, r3
    176c:	e5c434f4 	strb	r3, [r4, #1268]	; 0x4f4
    1770:	0a000007 	beq	1794 <E131Bridge::Run()+0x170>
    1774:	e5d434f7 	ldrb	r3, [r4, #1271]	; 0x4f7
    1778:	e3530000 	cmp	r3, #0
    177c:	1a000004 	bne	1794 <E131Bridge::Run()+0x170>
    1780:	e59414fc 	ldr	r1, [r4, #1276]	; 0x4fc
    1784:	e59f20a0 	ldr	r2, [pc, #160]	; 182c <E131Bridge::Run()+0x208>
    1788:	e0455001 	sub	r5, r5, r1
    178c:	e1550002 	cmp	r5, r2
    1790:	85c434f6 	strbhi	r3, [r4, #1270]	; 0x4f6
    1794:	e5943004 	ldr	r3, [r4, #4]
    1798:	e3530000 	cmp	r3, #0
    179c:	0affffb6 	beq	167c <E131Bridge::Run()+0x58>
    17a0:	e1d438be 	ldrh	r3, [r4, #142]	; 0x8e
    17a4:	e1d429b0 	ldrh	r2, [r4, #144]	; 0x90
    17a8:	e1833802 	orr	r3, r3, r2, lsl #16
    17ac:	e3530301 	cmp	r3, #67108864	; 0x4000000
    17b0:	e6bf3f33 	rev	r3, r3
    17b4:	0a000007 	beq	17d8 <E131Bridge::Run()+0x1b4>
    17b8:	e3530008 	cmp	r3, #8
    17bc:	1affffae 	bne	167c <E131Bridge::Run()+0x58>
    17c0:	e59430a4 	ldr	r3, [r4, #164]	; 0xa4
    17c4:	e3530401 	cmp	r3, #16777216	; 0x1000000
    17c8:	1affffab 	bne	167c <E131Bridge::Run()+0x58>
    17cc:	e1a00004 	mov	r0, r4
    17d0:	ebfffffe 	bl	0 <E131Bridge::HandleSynchronization()>
    17d4:	eaffffa8 	b	167c <E131Bridge::Run()+0x58>
    17d8:	e5d430f1 	ldrb	r3, [r4, #241]	; 0xf1
    17dc:	e3530002 	cmp	r3, #2
    17e0:	1affffa5 	bne	167c <E131Bridge::Run()+0x58>
    17e4:	e5d430f2 	ldrb	r3, [r4, #242]	; 0xf2
    17e8:	e35300a1 	cmp	r3, #161	; 0xa1
    17ec:	1affffa2 	bne	167c <E131Bridge::Run()+0x58>
    17f0:	e5d430f3 	ldrb	r3, [r4, #243]	; 0xf3
    17f4:	e5d420f4 	ldrb	r2, [r4, #244]	; 0xf4
    17f8:	e1933402 	orrs	r3, r3, r2, lsl #8
    17fc:	1affff9e 	bne	167c <E131Bridge::Run()+0x58>
    1800:	e59430f4 	ldr	r3, [r4, #244]	; 0xf4
    1804:	e1a03423 	lsr	r3, r3, #8
    1808:	e6ff3073 	uxth	r3, r3
    180c:	e3530c01 	cmp	r3, #256	; 0x100
    1810:	1affff99 	bne	167c <E131Bridge::Run()+0x58>
    1814:	e1a00004 	mov	r0, r4
    1818:	ebfffffe 	bl	ae8 <E131Bridge::HandleDmx()>
    181c:	eaffff96 	b	167c <E131Bridge::Run()+0x58>
    1820:	00000000 	andeq	r0, r0, r0
    1824:	00000478 	andeq	r0, r0, r8, ror r4
    1828:	00000000 	andeq	r0, r0, r0
    182c:	000009c3 	andeq	r0, r0, r3, asr #19

Disassembly of section .bss:

00000000 <E131Bridge::s_pThis>:
   0:	00000000 	andeq	r0, r0, r0

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	38342e25 	ldmdacc	r4!, {r0, r2, r5, r9, sl, fp, sp}
   4:	73252073 			; <UNDEFINED> instruction: 0x73252073
   8:	00000000 	andeq	r0, r0, r0
   c:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
  10:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
  14:	00302e30 	eorseq	r2, r0, r0, lsr lr
  18:	4e202e30 	mcrmi	14, 1, r2, cr0, cr0, {1}
  1c:	6163206f 	cmnvs	r3, pc, rrx
  20:	20736573 	rsbscs	r6, r3, r3, ror r5
  24:	6374616d 	cmnvs	r4, #1073741851	; 0x4000001b
  28:	2c646568 	cfstr64cs	mvdx6, [r4], #-416	; 0xfffffe60
  2c:	69687420 	stmdbvs	r8!, {r5, sl, ip, sp, lr}^
  30:	68732073 	ldmdavs	r3!, {r0, r1, r4, r5, r6, sp}^
  34:	646c756f 	strbtvs	r7, [ip], #-1391	; 0xfffffa91
  38:	2074276e 	rsbscs	r2, r4, lr, ror #14
  3c:	70706168 	rsbsvc	r6, r0, r8, ror #2
  40:	0a216e65 	beq	85b9dc <E131Bridge::Run()+0x85a3b8>
	...

Disassembly of section .bss._ZGVZN8lightset4Data3GetEvE8instance:

00000000 <guard variable for lightset::Data::Get()::instance>:
   0:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss._ZZN8lightset4Data3GetEvE8instance:

00000000 <lightset::Data::Get()::instance>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <E131Bridge::Run()+0x168c208>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <E131Bridge::Run()+0x40e00>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


e131bridgehandlesynchronization.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000007 	andeq	r0, r0, r7

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000008 	andeq	r0, r0, r8

Disassembly of section .text:

00000000 <E131Bridge::HandleSynchronization()>:
   0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	e59030a8 	ldr	r3, [r0, #168]	; 0xa8
   8:	e2802c05 	add	r2, r0, #1280	; 0x500
   c:	e1a03423 	lsr	r3, r3, #8
  10:	e1d210b6 	ldrh	r1, [r2, #6]
  14:	e6bf3fb3 	rev16	r3, r3
  18:	e6ff3073 	uxth	r3, r3
  1c:	e1510003 	cmp	r1, r3
  20:	e1a07000 	mov	r7, r0
  24:	e24dd004 	sub	sp, sp, #4
  28:	0a000002 	beq	38 <E131Bridge::HandleSynchronization()+0x38>
  2c:	e1d220b8 	ldrh	r2, [r2, #8]
  30:	e1520003 	cmp	r2, r3
  34:	1a000030 	bne	fc <E131Bridge::HandleSynchronization()+0xfc>
  38:	e3a05000 	mov	r5, #0
  3c:	e1a06007 	mov	r6, r7
  40:	e3a09001 	mov	r9, #1
  44:	e1a0a005 	mov	sl, r5
  48:	e597300c 	ldr	r3, [r7, #12]
  4c:	e59f40c8 	ldr	r4, [pc, #200]	; 11c <E131Bridge::HandleSynchronization()+0x11c>
  50:	e59f80c8 	ldr	r8, [pc, #200]	; 120 <E131Bridge::HandleSynchronization()+0x120>
  54:	e58734fc 	str	r3, [r7, #1276]	; 0x4fc
  58:	e5d63512 	ldrb	r3, [r6, #1298]	; 0x512
  5c:	e3530000 	cmp	r3, #0
  60:	1a00000d 	bne	9c <E131Bridge::HandleSynchronization()+0x9c>
  64:	e2855001 	add	r5, r5, #1
  68:	e2844c06 	add	r4, r4, #1536	; 0x600
  6c:	e3550004 	cmp	r5, #4
  70:	e2866044 	add	r6, r6, #68	; 0x44
  74:	e2844004 	add	r4, r4, #4
  78:	1afffff6 	bne	58 <E131Bridge::HandleSynchronization()+0x58>
  7c:	e5970074 	ldr	r0, [r7, #116]	; 0x74
  80:	e3500000 	cmp	r0, #0
  84:	0a000022 	beq	114 <E131Bridge::HandleSynchronization()+0x114>
  88:	e5903000 	ldr	r3, [r0]
  8c:	e5933008 	ldr	r3, [r3, #8]
  90:	e28dd004 	add	sp, sp, #4
  94:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  98:	e12fff13 	bx	r3
  9c:	e5983000 	ldr	r3, [r8]
  a0:	e5970004 	ldr	r0, [r7, #4]
  a4:	e3130001 	tst	r3, #1
  a8:	e5903000 	ldr	r3, [r0]
  ac:	05889000 	streq	r9, [r8]
  b0:	e593b010 	ldr	fp, [r3, #16]
  b4:	e1a02004 	mov	r2, r4
  b8:	e5943200 	ldr	r3, [r4, #512]	; 0x200
  bc:	e1a01005 	mov	r1, r5
  c0:	e12fff3b 	blx	fp
  c4:	e5d63552 	ldrb	r3, [r6, #1362]	; 0x552
  c8:	e3530000 	cmp	r3, #0
  cc:	1a000005 	bne	e8 <E131Bridge::HandleSynchronization()+0xe8>
  d0:	e5970004 	ldr	r0, [r7, #4]
  d4:	e1a01005 	mov	r1, r5
  d8:	e5903000 	ldr	r3, [r0]
  dc:	e5933008 	ldr	r3, [r3, #8]
  e0:	e12fff33 	blx	r3
  e4:	e5c69552 	strb	r9, [r6, #1362]	; 0x552
  e8:	e5983000 	ldr	r3, [r8]
  ec:	e584a200 	str	sl, [r4, #512]	; 0x200
  f0:	e3130001 	tst	r3, #1
  f4:	05889000 	streq	r9, [r8]
  f8:	eaffffd9 	b	64 <E131Bridge::HandleSynchronization()+0x64>
  fc:	e3a01002 	mov	r1, #2
 100:	e59f301c 	ldr	r3, [pc, #28]	; 124 <E131Bridge::HandleSynchronization()+0x124>
 104:	e5930000 	ldr	r0, [r3]
 108:	e28dd004 	add	sp, sp, #4
 10c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 110:	eafffffe 	b	0 <LedBlink::SetMode(ledblink::Mode)>
 114:	e28dd004 	add	sp, sp, #4
 118:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 11c:	00000400 	andeq	r0, r0, r0, lsl #8
	...

Disassembly of section .bss._ZGVZN8lightset4Data3GetEvE8instance:

00000000 <guard variable for lightset::Data::Get()::instance>:
   0:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss._ZZN8lightset4Data3GetEvE8instance:

00000000 <lightset::Data::Get()::instance>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <E131Bridge::HandleSynchronization()+0x168d82c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <E131Bridge::HandleSynchronization()+0x42424>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


e131paramsconst.o:     file format elf32-littlearm


Disassembly of section .rodata:

00000000 <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
   0:	61736964 	cmnvs	r3, r4, ror #18
   4:	5f656c62 	svcpl	0x00656c62
   8:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
   c:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
  10:	756f656d 	strbvc	r6, [pc, #-1389]!	; fffffaab <E131ParamsConst::FILE_NAME+0xfffffa27>
  14:	00000074 	andeq	r0, r0, r4, ror r0

00000018 <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
  18:	61736964 	cmnvs	r3, r4, ror #18
  1c:	5f656c62 	svcpl	0x00656c62
  20:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
  24:	5f6b726f 	svcpl	0x006b726f
  28:	61746164 	cmnvs	r4, r4, ror #2
  2c:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
  30:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
  34:	756f656d 	strbvc	r6, [pc, #-1389]!	; fffffacf <E131ParamsConst::FILE_NAME+0xfffffa4b>
  38:	00000074 	andeq	r0, r0, r4, ror r0

0000003c <E131ParamsConst::PRIORITY>:
  3c:	6f697270 	svcvs	0x00697270
  40:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
  44:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
  48:	00615f74 	rsbeq	r5, r1, r4, ror pc
  4c:	72700000 	rsbsvc	r0, r0, #0
  50:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  54:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
  58:	5f74726f 	svcpl	0x0074726f
  5c:	00000062 	andeq	r0, r0, r2, rrx
  60:	6f697270 	svcvs	0x00697270
  64:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
  68:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
  6c:	00635f74 	rsbeq	r5, r3, r4, ror pc
  70:	72700000 	rsbsvc	r0, r0, #0
  74:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  78:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
  7c:	5f74726f 	svcpl	0x0074726f
  80:	00000064 	andeq	r0, r0, r4, rrx

00000084 <E131ParamsConst::FILE_NAME>:
  84:	31333165 	teqcc	r3, r5, ror #2
  88:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003b41 	andeq	r3, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000031 	andeq	r0, r0, r1, lsr r0
  10:	4d524105 	ldfmie	f4, [r2, #-20]	; 0xffffffec
  14:	36373131 			; <UNDEFINED> instruction: 0x36373131
  18:	2d465a4a 	vstrcs	s11, [r6, #-296]	; 0xfffffed8
  1c:	07060053 	smlsdeq	r6, r3, r0, r0
  20:	01090108 	tsteq	r9, r8, lsl #2
  24:	0412020a 	ldreq	r0, [r2], #-522	; 0xfffffdf6
  28:	01150114 	tsteq	r5, r4, lsl r1
  2c:	01180317 	tsteq	r8, r7, lsl r3
  30:	011a0119 	tsteq	sl, r9, lsl r1
  34:	021e011c 	andseq	r0, lr, #28, 2
  38:	01440122 	cmpeq	r4, r2, lsr #2
