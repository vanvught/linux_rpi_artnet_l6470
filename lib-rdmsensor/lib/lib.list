In archive lib/librdmsensor.a:

rdmsensorsparams.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000002a 	andeq	r0, r0, sl, lsr #32

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000002b 	andeq	r0, r0, fp, lsr #32

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000002c 	andeq	r0, r0, ip, lsr #32

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000002d 	andeq	r0, r0, sp, lsr #32

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000002e 	andeq	r0, r0, lr, lsr #32

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000002f 	andeq	r0, r0, pc, lsr #32

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000030 	andeq	r0, r0, r0, lsr r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000031 	andeq	r0, r0, r1, lsr r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000032 	andeq	r0, r0, r2, lsr r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000033 	andeq	r0, r0, r3, lsr r0
   8:	00000034 	andeq	r0, r0, r4, lsr r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000035 	andeq	r0, r0, r5, lsr r0
   8:	00000036 	andeq	r0, r0, r6, lsr r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000037 	andeq	r0, r0, r7, lsr r0
   8:	00000038 	andeq	r0, r0, r8, lsr r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000039 	andeq	r0, r0, r9, lsr r0
   8:	0000003a 	andeq	r0, r0, sl, lsr r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000003b 	andeq	r0, r0, fp, lsr r0
   8:	0000003c 	andeq	r0, r0, ip, lsr r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000003d 	andeq	r0, r0, sp, lsr r0
   8:	0000003e 	andeq	r0, r0, lr, lsr r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000003f 	andeq	r0, r0, pc, lsr r0
   8:	00000040 	andeq	r0, r0, r0, asr #32

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000041 	andeq	r0, r0, r1, asr #32
   8:	00000042 	andeq	r0, r0, r2, asr #32

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000043 	andeq	r0, r0, r3, asr #32
   8:	00000044 	andeq	r0, r0, r4, asr #32

Disassembly of section .group:

00000000 <RDMSensor::~RDMSensor()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000045 	andeq	r0, r0, r5, asr #32
   8:	00000061 	andeq	r0, r0, r1, rrx
   c:	00000062 	andeq	r0, r0, r2, rrx

Disassembly of section .group:

00000000 <RDMSensorSI7021Temperature::~RDMSensorSI7021Temperature()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000046 	andeq	r0, r0, r6, asr #32
   8:	00000047 	andeq	r0, r0, r7, asr #32
   c:	00000048 	andeq	r0, r0, r8, asr #32

Disassembly of section .group:

00000000 <RDMSensorSI7021Humidity::~RDMSensorSI7021Humidity()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000049 	andeq	r0, r0, r9, asr #32
   8:	0000004a 	andeq	r0, r0, sl, asr #32
   c:	0000004b 	andeq	r0, r0, fp, asr #32

Disassembly of section .group:

00000000 <RDMSensorINA219Voltage::~RDMSensorINA219Voltage()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000004c 	andeq	r0, r0, ip, asr #32
   8:	0000004d 	andeq	r0, r0, sp, asr #32
   c:	0000004e 	andeq	r0, r0, lr, asr #32

Disassembly of section .group:

00000000 <RDMSensorINA219Power::~RDMSensorINA219Power()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000004f 	andeq	r0, r0, pc, asr #32
   8:	00000050 	andeq	r0, r0, r0, asr r0
   c:	00000051 	andeq	r0, r0, r1, asr r0

Disassembly of section .group:

00000000 <RDMSensorINA219Current::~RDMSensorINA219Current()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000052 	andeq	r0, r0, r2, asr r0
   8:	00000053 	andeq	r0, r0, r3, asr r0
   c:	00000054 	andeq	r0, r0, r4, asr r0

Disassembly of section .group:

00000000 <RDMSensorHTU21DTemperature::~RDMSensorHTU21DTemperature()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000055 	andeq	r0, r0, r5, asr r0
   8:	00000056 	andeq	r0, r0, r6, asr r0
   c:	00000057 	andeq	r0, r0, r7, asr r0

Disassembly of section .group:

00000000 <RDMSensorHTU21DHumidity::~RDMSensorHTU21DHumidity()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000058 	andeq	r0, r0, r8, asr r0
   8:	00000059 	andeq	r0, r0, r9, asr r0
   c:	0000005a 	andeq	r0, r0, sl, asr r0

Disassembly of section .group:

00000000 <RDMSensorMCP9808::~RDMSensorMCP9808()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000005b 	andeq	r0, r0, fp, asr r0
   8:	0000005c 	andeq	r0, r0, ip, asr r0
   c:	0000005d 	andeq	r0, r0, sp, asr r0

Disassembly of section .group:

00000000 <RDMSensorBH170::~RDMSensorBH170()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000005e 	andeq	r0, r0, lr, asr r0
   8:	0000005f 	andeq	r0, r0, pc, asr r0
   c:	00000060 	andeq	r0, r0, r0, rrx

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000063 	andeq	r0, r0, r3, rrx
   8:	00000064 	andeq	r0, r0, r4, rrx

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000065 	andeq	r0, r0, r5, rrx
   8:	00000066 	andeq	r0, r0, r6, rrx

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000067 	andeq	r0, r0, r7, rrx
   8:	00000068 	andeq	r0, r0, r8, rrx

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000069 	andeq	r0, r0, r9, rrx
   8:	0000006a 	andeq	r0, r0, sl, rrx

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000006b 	andeq	r0, r0, fp, rrx
   8:	0000006c 	andeq	r0, r0, ip, rrx

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000006d 	andeq	r0, r0, sp, rrx
   8:	0000006e 	andeq	r0, r0, lr, rrx

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000006f 	andeq	r0, r0, pc, rrx
   8:	00000070 	andeq	r0, r0, r0, ror r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000071 	andeq	r0, r0, r1, ror r0
   8:	00000072 	andeq	r0, r0, r2, ror r0

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000073 	andeq	r0, r0, r3, ror r0
   8:	00000074 	andeq	r0, r0, r4, ror r0

Disassembly of section .text:

00000000 <RDMSensorsParams::RDMSensorsParams(RDMSensorsParamsStore*)>:
   0:	e5801000 	str	r1, [r0]
   4:	e12fff1e 	bx	lr

00000008 <RDMSensorsParams::Load()>:
   8:	e3a03000 	mov	r3, #0
   c:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
  10:	e1a02000 	mov	r2, r0
  14:	e5803004 	str	r3, [r0, #4]
  18:	e1a04000 	mov	r4, r0
  1c:	e59f1068 	ldr	r1, [pc, #104]	; 8c <RDMSensorsParams::Load()+0x84>
  20:	e1a0000d 	mov	r0, sp
  24:	ebfffffe 	bl	0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
  28:	e1a0000d 	mov	r0, sp
  2c:	e59f105c 	ldr	r1, [pc, #92]	; 90 <RDMSensorsParams::Load()+0x88>
  30:	ebfffffe 	bl	0 <ReadConfigFile::Read(char const*)>
  34:	e2505000 	subs	r5, r0, #0
  38:	e5940000 	ldr	r0, [r4]
  3c:	0a000006 	beq	5c <RDMSensorsParams::Load()+0x54>
  40:	e3500000 	cmp	r0, #0
  44:	0a00000b 	beq	78 <RDMSensorsParams::Load()+0x70>
  48:	e5903000 	ldr	r3, [r0]
  4c:	e2841004 	add	r1, r4, #4
  50:	e5933008 	ldr	r3, [r3, #8]
  54:	e12fff33 	blx	r3
  58:	ea000006 	b	78 <RDMSensorsParams::Load()+0x70>
  5c:	e3500000 	cmp	r0, #0
  60:	0a000004 	beq	78 <RDMSensorsParams::Load()+0x70>
  64:	e5903000 	ldr	r3, [r0]
  68:	e2841004 	add	r1, r4, #4
  6c:	e593300c 	ldr	r3, [r3, #12]
  70:	e12fff33 	blx	r3
  74:	e3a05001 	mov	r5, #1
  78:	e1a0000d 	mov	r0, sp
  7c:	ebfffffe 	bl	0 <ReadConfigFile::~ReadConfigFile()>
  80:	e1a00005 	mov	r0, r5
  84:	e28dd00c 	add	sp, sp, #12
  88:	e8bd8030 	pop	{r4, r5, pc}
	...

00000094 <RDMSensorsParams::Load(char const*, unsigned int)>:
  94:	e5903000 	ldr	r3, [r0]
  98:	e3530000 	cmp	r3, #0
  9c:	012fff1e 	bxeq	lr
  a0:	e3a03000 	mov	r3, #0
  a4:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
  a8:	e1a05001 	mov	r5, r1
  ac:	e1a06002 	mov	r6, r2
  b0:	e1a04000 	mov	r4, r0
  b4:	e5803004 	str	r3, [r0, #4]
  b8:	e1a02000 	mov	r2, r0
  bc:	e59f1038 	ldr	r1, [pc, #56]	; fc <RDMSensorsParams::Load(char const*, unsigned int)+0x68>
  c0:	e1a0000d 	mov	r0, sp
  c4:	ebfffffe 	bl	0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
  c8:	e1a02006 	mov	r2, r6
  cc:	e1a01005 	mov	r1, r5
  d0:	e1a0000d 	mov	r0, sp
  d4:	ebfffffe 	bl	0 <ReadConfigFile::Read(char const*, unsigned int)>
  d8:	e1a01004 	mov	r1, r4
  dc:	e4910004 	ldr	r0, [r1], #4
  e0:	e5903000 	ldr	r3, [r0]
  e4:	e5933008 	ldr	r3, [r3, #8]
  e8:	e12fff33 	blx	r3
  ec:	e1a0000d 	mov	r0, sp
  f0:	ebfffffe 	bl	0 <ReadConfigFile::~ReadConfigFile()>
  f4:	e28dd008 	add	sp, sp, #8
  f8:	e8bd8070 	pop	{r4, r5, r6, pc}
  fc:	00000000 	andeq	r0, r0, r0

00000100 <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)>:
 100:	e92d4010 	push	{r4, lr}
 104:	e251c000 	subs	ip, r1, #0
 108:	e24dd018 	sub	sp, sp, #24
 10c:	e280e004 	add	lr, r0, #4
 110:	0a000006 	beq	130 <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x30>
 114:	e1a0000c 	mov	r0, ip
 118:	e28c1034 	add	r1, ip, #52	; 0x34
 11c:	e490c004 	ldr	ip, [r0], #4
 120:	e1500001 	cmp	r0, r1
 124:	e48ec004 	str	ip, [lr], #4
 128:	1afffffb 	bne	11c <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x1c>
 12c:	ea000006 	b	14c <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x4c>
 130:	e5900000 	ldr	r0, [r0]
 134:	e1cd20f0 	strd	r2, [sp]
 138:	e5901000 	ldr	r1, [r0]
 13c:	e591400c 	ldr	r4, [r1, #12]
 140:	e1a0100e 	mov	r1, lr
 144:	e12fff34 	blx	r4
 148:	e1cd20d0 	ldrd	r2, [sp]
 14c:	e59f1018 	ldr	r1, [pc, #24]	; 16c <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x6c>
 150:	e28d000c 	add	r0, sp, #12
 154:	ebfffffe 	bl	0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 158:	e1dd21b4 	ldrh	r2, [sp, #20]
 15c:	e59d3020 	ldr	r3, [sp, #32]
 160:	e5832000 	str	r2, [r3]
 164:	e28dd018 	add	sp, sp, #24
 168:	e8bd8010 	pop	{r4, pc}
 16c:	00000000 	andeq	r0, r0, r0

00000170 <RDMSensorsParams::Save(char*, unsigned int, unsigned int&)>:
 170:	e590c000 	ldr	ip, [r0]
 174:	e35c0000 	cmp	ip, #0
 178:	1a000001 	bne	184 <RDMSensorsParams::Save(char*, unsigned int, unsigned int&)+0x14>
 17c:	e583c000 	str	ip, [r3]
 180:	e12fff1e 	bx	lr
 184:	e92d4007 	push	{r0, r1, r2, lr}
 188:	e58d3000 	str	r3, [sp]
 18c:	e1a03002 	mov	r3, r2
 190:	e1a02001 	mov	r2, r1
 194:	e3a01000 	mov	r1, #0
 198:	ebfffffe 	bl	100 <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)>
 19c:	e28dd00c 	add	sp, sp, #12
 1a0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000001a4 <RDMSensorsParams::Dump()>:
 1a4:	e12fff1e 	bx	lr

000001a8 <RDMSensorsParams::Add(RDMSensor*)>:
 1a8:	e5913000 	ldr	r3, [r1]
 1ac:	e92d4070 	push	{r4, r5, r6, lr}
 1b0:	e1a00001 	mov	r0, r1
 1b4:	e5933008 	ldr	r3, [r3, #8]
 1b8:	e1a04001 	mov	r4, r1
 1bc:	e12fff33 	blx	r3
 1c0:	e2505000 	subs	r5, r0, #0
 1c4:	0a000004 	beq	1dc <RDMSensorsParams::Add(RDMSensor*)+0x34>
 1c8:	e59f3024 	ldr	r3, [pc, #36]	; 1f4 <RDMSensorsParams::Add(RDMSensor*)+0x4c>
 1cc:	e1a01004 	mov	r1, r4
 1d0:	e5930000 	ldr	r0, [r3]
 1d4:	ebfffffe 	bl	0 <RDMSensors::Add(RDMSensor*)>
 1d8:	ea000003 	b	1ec <RDMSensorsParams::Add(RDMSensor*)+0x44>
 1dc:	e5943000 	ldr	r3, [r4]
 1e0:	e1a00004 	mov	r0, r4
 1e4:	e5933004 	ldr	r3, [r3, #4]
 1e8:	e12fff33 	blx	r3
 1ec:	e1a00005 	mov	r0, r5
 1f0:	e8bd8070 	pop	{r4, r5, r6, pc}
 1f4:	00000000 	andeq	r0, r0, r0

000001f8 <RDMSensorsParams::Set()>:
 1f8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1fc:	e1a05000 	mov	r5, r0
 200:	e1a07000 	mov	r7, r0
 204:	e3a08000 	mov	r8, #0
 208:	e59fa374 	ldr	sl, [pc, #884]	; 584 <RDMSensorsParams::Set()+0x38c>
 20c:	e5953004 	ldr	r3, [r5, #4]
 210:	e1530008 	cmp	r3, r8
 214:	98bd8ff8 	popls	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 218:	e59f3368 	ldr	r3, [pc, #872]	; 588 <RDMSensorsParams::Set()+0x390>
 21c:	e5d76009 	ldrb	r6, [r7, #9]
 220:	e5933000 	ldr	r3, [r3]
 224:	e5d34004 	ldrb	r4, [r3, #4]
 228:	e5d73008 	ldrb	r3, [r7, #8]
 22c:	e3530004 	cmp	r3, #4
 230:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
 234:	ea0000cf 	b	578 <RDMSensorsParams::Set()+0x380>
 238:	0000024c 	andeq	r0, r0, ip, asr #4
 23c:	00000294 	muleq	r0, r4, r2
 240:	00000344 	andeq	r0, r0, r4, asr #6
 244:	00000460 	andeq	r0, r0, r0, ror #8
 248:	000004b8 			; <UNDEFINED> instruction: 0x000004b8
 24c:	e3a0004c 	mov	r0, #76	; 0x4c
 250:	ebfffffe 	bl	0 <operator new(unsigned int)>
 254:	e1a09000 	mov	r9, r0
 258:	e1a01004 	mov	r1, r4
 25c:	ebfffffe 	bl	0 <RDMSensor::RDMSensor(unsigned char)>
 260:	e1a01006 	mov	r1, r6
 264:	e2890040 	add	r0, r9, #64	; 0x40
 268:	ebfffffe 	bl	0 <sensor::BH170::BH170(unsigned char)>
 26c:	e59f3318 	ldr	r3, [pc, #792]	; 58c <RDMSensorsParams::Set()+0x394>
 270:	e3a0201a 	mov	r2, #26
 274:	e5893000 	str	r3, [r9]
 278:	e3a03018 	mov	r3, #24
 27c:	e5c93007 	strb	r3, [r9, #7]
 280:	e59f3308 	ldr	r3, [pc, #776]	; 590 <RDMSensorsParams::Set()+0x398>
 284:	e59f1308 	ldr	r1, [pc, #776]	; 594 <RDMSensorsParams::Set()+0x39c>
 288:	e1c920f8 	strd	r2, [r9, #8]
 28c:	e1c931b0 	strh	r3, [r9, #16]
 290:	ea000084 	b	4a8 <RDMSensorsParams::Set()+0x2b0>
 294:	e3a0004c 	mov	r0, #76	; 0x4c
 298:	ebfffffe 	bl	0 <operator new(unsigned int)>
 29c:	e1a09000 	mov	r9, r0
 2a0:	e1a01004 	mov	r1, r4
 2a4:	ebfffffe 	bl	0 <RDMSensor::RDMSensor(unsigned char)>
 2a8:	e1a01006 	mov	r1, r6
 2ac:	e2890040 	add	r0, r9, #64	; 0x40
 2b0:	ebfffffe 	bl	0 <sensor::HTU21D::HTU21D(unsigned char)>
 2b4:	e59f32dc 	ldr	r3, [pc, #732]	; 598 <RDMSensorsParams::Set()+0x3a0>
 2b8:	e3a0b000 	mov	fp, #0
 2bc:	e5893000 	str	r3, [r9]
 2c0:	e3a0301f 	mov	r3, #31
 2c4:	e5c93007 	strb	r3, [r9, #7]
 2c8:	e3a03064 	mov	r3, #100	; 0x64
 2cc:	e1a00009 	mov	r0, r9
 2d0:	e59f12c4 	ldr	r1, [pc, #708]	; 59c <RDMSensorsParams::Set()+0x3a4>
 2d4:	e589300c 	str	r3, [r9, #12]
 2d8:	e1c931b0 	strh	r3, [r9, #16]
 2dc:	e589b008 	str	fp, [r9, #8]
 2e0:	ebfffffe 	bl	0 <RDMSensor::SetDescription(char const*)>
 2e4:	e1a01009 	mov	r1, r9
 2e8:	e1a00005 	mov	r0, r5
 2ec:	ebfffffe 	bl	1a8 <RDMSensorsParams::Add(RDMSensor*)>
 2f0:	e150000b 	cmp	r0, fp
 2f4:	0a00009f 	beq	578 <RDMSensorsParams::Set()+0x380>
 2f8:	e3a0004c 	mov	r0, #76	; 0x4c
 2fc:	ebfffffe 	bl	0 <operator new(unsigned int)>
 300:	e1a09000 	mov	r9, r0
 304:	e2841001 	add	r1, r4, #1
 308:	e6ef1071 	uxtb	r1, r1
 30c:	ebfffffe 	bl	0 <RDMSensor::RDMSensor(unsigned char)>
 310:	e1a01006 	mov	r1, r6
 314:	e2890040 	add	r0, r9, #64	; 0x40
 318:	ebfffffe 	bl	0 <sensor::HTU21D::HTU21D(unsigned char)>
 31c:	e59f327c 	ldr	r3, [pc, #636]	; 5a0 <RDMSensorsParams::Set()+0x3a8>
 320:	e59f127c 	ldr	r1, [pc, #636]	; 5a4 <RDMSensorsParams::Set()+0x3ac>
 324:	e5893000 	str	r3, [r9]
 328:	e59f3278 	ldr	r3, [pc, #632]	; 5a8 <RDMSensorsParams::Set()+0x3b0>
 32c:	e5c9b007 	strb	fp, [r9, #7]
 330:	e5893008 	str	r3, [r9, #8]
 334:	e3a0307d 	mov	r3, #125	; 0x7d
 338:	e589a00c 	str	sl, [r9, #12]
 33c:	e1c931b0 	strh	r3, [r9, #16]
 340:	ea000058 	b	4a8 <RDMSensorsParams::Set()+0x2b0>
 344:	e3a00060 	mov	r0, #96	; 0x60
 348:	ebfffffe 	bl	0 <operator new(unsigned int)>
 34c:	e1a09000 	mov	r9, r0
 350:	e1a01004 	mov	r1, r4
 354:	ebfffffe 	bl	0 <RDMSensor::RDMSensor(unsigned char)>
 358:	e1a01006 	mov	r1, r6
 35c:	e2890040 	add	r0, r9, #64	; 0x40
 360:	ebfffffe 	bl	0 <sensor::INA219::INA219(unsigned char)>
 364:	e59f3240 	ldr	r3, [pc, #576]	; 5ac <RDMSensorsParams::Set()+0x3b4>
 368:	e3a0b002 	mov	fp, #2
 36c:	e5893000 	str	r3, [r9]
 370:	e59f3238 	ldr	r3, [pc, #568]	; 5b0 <RDMSensorsParams::Set()+0x3b8>
 374:	e1a00009 	mov	r0, r9
 378:	e5893008 	str	r3, [r9, #8]
 37c:	e2833d13 	add	r3, r3, #1216	; 0x4c0
 380:	e283300b 	add	r3, r3, #11
 384:	e589300c 	str	r3, [r9, #12]
 388:	e3a03e7d 	mov	r3, #2000	; 0x7d0
 38c:	e59f1220 	ldr	r1, [pc, #544]	; 5b4 <RDMSensorsParams::Set()+0x3bc>
 390:	e1c931b0 	strh	r3, [r9, #16]
 394:	e5c9b007 	strb	fp, [r9, #7]
 398:	ebfffffe 	bl	0 <RDMSensor::SetDescription(char const*)>
 39c:	e1a01009 	mov	r1, r9
 3a0:	e1a00005 	mov	r0, r5
 3a4:	ebfffffe 	bl	1a8 <RDMSensorsParams::Add(RDMSensor*)>
 3a8:	e3500000 	cmp	r0, #0
 3ac:	0a000071 	beq	578 <RDMSensorsParams::Set()+0x380>
 3b0:	e3a00060 	mov	r0, #96	; 0x60
 3b4:	ebfffffe 	bl	0 <operator new(unsigned int)>
 3b8:	e1a09000 	mov	r9, r0
 3bc:	e2841001 	add	r1, r4, #1
 3c0:	e6ef1071 	uxtb	r1, r1
 3c4:	ebfffffe 	bl	0 <RDMSensor::RDMSensor(unsigned char)>
 3c8:	e1a01006 	mov	r1, r6
 3cc:	e2890040 	add	r0, r9, #64	; 0x40
 3d0:	ebfffffe 	bl	0 <sensor::INA219::INA219(unsigned char)>
 3d4:	e59f31dc 	ldr	r3, [pc, #476]	; 5b8 <RDMSensorsParams::Set()+0x3c0>
 3d8:	e1a00009 	mov	r0, r9
 3dc:	e5893000 	str	r3, [r9]
 3e0:	e59f31d4 	ldr	r3, [pc, #468]	; 5bc <RDMSensorsParams::Set()+0x3c4>
 3e4:	e59f11d4 	ldr	r1, [pc, #468]	; 5c0 <RDMSensorsParams::Set()+0x3c8>
 3e8:	e5893008 	str	r3, [r9, #8]
 3ec:	e2433fb1 	sub	r3, r3, #708	; 0x2c4
 3f0:	e2433001 	sub	r3, r3, #1
 3f4:	e589300c 	str	r3, [r9, #12]
 3f8:	e3a03040 	mov	r3, #64	; 0x40
 3fc:	e5c9b007 	strb	fp, [r9, #7]
 400:	e1c931b0 	strh	r3, [r9, #16]
 404:	ebfffffe 	bl	0 <RDMSensor::SetDescription(char const*)>
 408:	e1a01009 	mov	r1, r9
 40c:	e1a00005 	mov	r0, r5
 410:	ebfffffe 	bl	1a8 <RDMSensorsParams::Add(RDMSensor*)>
 414:	e3a00060 	mov	r0, #96	; 0x60
 418:	ebfffffe 	bl	0 <operator new(unsigned int)>
 41c:	e1a09000 	mov	r9, r0
 420:	e084100b 	add	r1, r4, fp
 424:	e6ef1071 	uxtb	r1, r1
 428:	ebfffffe 	bl	0 <RDMSensor::RDMSensor(unsigned char)>
 42c:	e1a01006 	mov	r1, r6
 430:	e2890040 	add	r0, r9, #64	; 0x40
 434:	ebfffffe 	bl	0 <sensor::INA219::INA219(unsigned char)>
 438:	e59f3184 	ldr	r3, [pc, #388]	; 5c4 <RDMSensorsParams::Set()+0x3cc>
 43c:	e59f1184 	ldr	r1, [pc, #388]	; 5c8 <RDMSensorsParams::Set()+0x3d0>
 440:	e5893000 	str	r3, [r9]
 444:	e3a03c7d 	mov	r3, #32000	; 0x7d00
 448:	e59f017c 	ldr	r0, [pc, #380]	; 5cc <RDMSensorsParams::Set()+0x3d4>
 44c:	e5c9b007 	strb	fp, [r9, #7]
 450:	e1c900f8 	strd	r0, [r9, #8]
 454:	e1c931b0 	strh	r3, [r9, #16]
 458:	e59f1170 	ldr	r1, [pc, #368]	; 5d0 <RDMSensorsParams::Set()+0x3d8>
 45c:	ea000011 	b	4a8 <RDMSensorsParams::Set()+0x2b0>
 460:	e3a0004c 	mov	r0, #76	; 0x4c
 464:	ebfffffe 	bl	0 <operator new(unsigned int)>
 468:	e1a09000 	mov	r9, r0
 46c:	e1a01004 	mov	r1, r4
 470:	ebfffffe 	bl	0 <RDMSensor::RDMSensor(unsigned char)>
 474:	e1a01006 	mov	r1, r6
 478:	e2890040 	add	r0, r9, #64	; 0x40
 47c:	ebfffffe 	bl	0 <sensor::MCP9808::MCP9808(unsigned char)>
 480:	e59f314c 	ldr	r3, [pc, #332]	; 5d4 <RDMSensorsParams::Set()+0x3dc>
 484:	e59f114c 	ldr	r1, [pc, #332]	; 5d8 <RDMSensorsParams::Set()+0x3e0>
 488:	e5893000 	str	r3, [r9]
 48c:	e3a03000 	mov	r3, #0
 490:	e5c93007 	strb	r3, [r9, #7]
 494:	e3a03028 	mov	r3, #40	; 0x28
 498:	e59f013c 	ldr	r0, [pc, #316]	; 5dc <RDMSensorsParams::Set()+0x3e4>
 49c:	e1c931b0 	strh	r3, [r9, #16]
 4a0:	e1c900f8 	strd	r0, [r9, #8]
 4a4:	e59f1134 	ldr	r1, [pc, #308]	; 5e0 <RDMSensorsParams::Set()+0x3e8>
 4a8:	e1a00009 	mov	r0, r9
 4ac:	ebfffffe 	bl	0 <RDMSensor::SetDescription(char const*)>
 4b0:	e1a01009 	mov	r1, r9
 4b4:	ea00002d 	b	570 <RDMSensorsParams::Set()+0x378>
 4b8:	e3a0004c 	mov	r0, #76	; 0x4c
 4bc:	ebfffffe 	bl	0 <operator new(unsigned int)>
 4c0:	e1a0b000 	mov	fp, r0
 4c4:	e1a01004 	mov	r1, r4
 4c8:	ebfffffe 	bl	0 <RDMSensor::RDMSensor(unsigned char)>
 4cc:	e1a01006 	mov	r1, r6
 4d0:	e28b0040 	add	r0, fp, #64	; 0x40
 4d4:	ebfffffe 	bl	0 <sensor::SI7021::SI7021(unsigned char)>
 4d8:	e59f3104 	ldr	r3, [pc, #260]	; 5e4 <RDMSensorsParams::Set()+0x3ec>
 4dc:	e3a09000 	mov	r9, #0
 4e0:	e58b3000 	str	r3, [fp]
 4e4:	e3a0301f 	mov	r3, #31
 4e8:	e5cb3007 	strb	r3, [fp, #7]
 4ec:	e3a03064 	mov	r3, #100	; 0x64
 4f0:	e1a0000b 	mov	r0, fp
 4f4:	e59f10ec 	ldr	r1, [pc, #236]	; 5e8 <RDMSensorsParams::Set()+0x3f0>
 4f8:	e58b300c 	str	r3, [fp, #12]
 4fc:	e1cb31b0 	strh	r3, [fp, #16]
 500:	e58b9008 	str	r9, [fp, #8]
 504:	ebfffffe 	bl	0 <RDMSensor::SetDescription(char const*)>
 508:	e1a0100b 	mov	r1, fp
 50c:	e1a00005 	mov	r0, r5
 510:	ebfffffe 	bl	1a8 <RDMSensorsParams::Add(RDMSensor*)>
 514:	e1500009 	cmp	r0, r9
 518:	0a000016 	beq	578 <RDMSensorsParams::Set()+0x380>
 51c:	e3a0004c 	mov	r0, #76	; 0x4c
 520:	ebfffffe 	bl	0 <operator new(unsigned int)>
 524:	e1a0b000 	mov	fp, r0
 528:	e2841001 	add	r1, r4, #1
 52c:	e6ef1071 	uxtb	r1, r1
 530:	ebfffffe 	bl	0 <RDMSensor::RDMSensor(unsigned char)>
 534:	e1a01006 	mov	r1, r6
 538:	e28b0040 	add	r0, fp, #64	; 0x40
 53c:	ebfffffe 	bl	0 <sensor::SI7021::SI7021(unsigned char)>
 540:	e59f30a4 	ldr	r3, [pc, #164]	; 5ec <RDMSensorsParams::Set()+0x3f4>
 544:	e59f10a4 	ldr	r1, [pc, #164]	; 5f0 <RDMSensorsParams::Set()+0x3f8>
 548:	e58b3000 	str	r3, [fp]
 54c:	e59f3054 	ldr	r3, [pc, #84]	; 5a8 <RDMSensorsParams::Set()+0x3b0>
 550:	e1a0000b 	mov	r0, fp
 554:	e58b3008 	str	r3, [fp, #8]
 558:	e3a0307d 	mov	r3, #125	; 0x7d
 55c:	e5cb9007 	strb	r9, [fp, #7]
 560:	e58ba00c 	str	sl, [fp, #12]
 564:	e1cb31b0 	strh	r3, [fp, #16]
 568:	ebfffffe 	bl	0 <RDMSensor::SetDescription(char const*)>
 56c:	e1a0100b 	mov	r1, fp
 570:	e1a00005 	mov	r0, r5
 574:	ebfffffe 	bl	1a8 <RDMSensorsParams::Add(RDMSensor*)>
 578:	e2888001 	add	r8, r8, #1
 57c:	e2877003 	add	r7, r7, #3
 580:	eaffff21 	b	20c <RDMSensorsParams::Set()+0x14>
 584:	ffd8007d 			; <UNDEFINED> instruction: 0xffd8007d
 588:	00000000 	andeq	r0, r0, r0
 58c:	00000008 	andeq	r0, r0, r8
 590:	00007fff 	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
 594:	00000000 	andeq	r0, r0, r0
 598:	00000008 	andeq	r0, r0, r8
 59c:	00000010 	andeq	r0, r0, r0, lsl r0
 5a0:	00000008 	andeq	r0, r0, r8
 5a4:	00000024 	andeq	r0, r0, r4, lsr #32
 5a8:	ffd80001 			; <UNDEFINED> instruction: 0xffd80001
 5ac:	00000008 	andeq	r0, r0, r8
 5b0:	f8300305 			; <UNDEFINED> instruction: 0xf8300305
 5b4:	00000038 	andeq	r0, r0, r8, lsr r0
 5b8:	00000008 	andeq	r0, r0, r8
 5bc:	ffc00305 			; <UNDEFINED> instruction: 0xffc00305
 5c0:	00000040 	andeq	r0, r0, r0, asr #32
 5c4:	00000008 	andeq	r0, r0, r8
 5c8:	83007d00 	movwhi	r7, #3328	; 0xd00
 5cc:	83000305 	movwhi	r0, #773	; 0x305
 5d0:	00000048 	andeq	r0, r0, r8, asr #32
 5d4:	00000008 	andeq	r0, r0, r8
 5d8:	00120064 	andseq	r0, r2, r4, rrx
 5dc:	ffec0001 			; <UNDEFINED> instruction: 0xffec0001
 5e0:	00000050 	andeq	r0, r0, r0, asr r0
 5e4:	00000008 	andeq	r0, r0, r8
 5e8:	00000064 	andeq	r0, r0, r4, rrx
 5ec:	00000008 	andeq	r0, r0, r8
 5f0:	00000078 	andeq	r0, r0, r8, ror r0

000005f4 <RDMSensorsParams::callbackFunction(char const*)>:
 5f4:	e92d4030 	push	{r4, r5, lr}
 5f8:	e24dd034 	sub	sp, sp, #52	; 0x34
 5fc:	e1a04001 	mov	r4, r1
 600:	e3a02020 	mov	r2, #32
 604:	e3a01000 	mov	r1, #0
 608:	e1a05000 	mov	r5, r0
 60c:	e28d0010 	add	r0, sp, #16
 610:	ebfffffe 	bl	0 <memset>
 614:	e3a0301f 	mov	r3, #31
 618:	e5cd300d 	strb	r3, [sp, #13]
 61c:	e3a03000 	mov	r3, #0
 620:	e5cd300e 	strb	r3, [sp, #14]
 624:	e5cd300f 	strb	r3, [sp, #15]
 628:	e28d300f 	add	r3, sp, #15
 62c:	e1a00004 	mov	r0, r4
 630:	e58d3000 	str	r3, [sp]
 634:	e28d200d 	add	r2, sp, #13
 638:	e28d300e 	add	r3, sp, #14
 63c:	e28d1010 	add	r1, sp, #16
 640:	ebfffffe 	bl	0 <Sscan::I2c(char const*, char*, unsigned char&, unsigned char&, unsigned char&)>
 644:	e2504000 	subs	r4, r0, #0
 648:	1a000026 	bne	6e8 <RDMSensorsParams::callbackFunction(char const*)+0xf4>
 64c:	e5dd3010 	ldrb	r3, [sp, #16]
 650:	e3530000 	cmp	r3, #0
 654:	0a000023 	beq	6e8 <RDMSensorsParams::callbackFunction(char const*)+0xf4>
 658:	e5dd300d 	ldrb	r3, [sp, #13]
 65c:	e3530000 	cmp	r3, #0
 660:	0a000020 	beq	6e8 <RDMSensorsParams::callbackFunction(char const*)+0xf4>
 664:	e28d0010 	add	r0, sp, #16
 668:	ebfffffe 	bl	0 <RDMSensors::GetTypeString(char const*)>
 66c:	e3500005 	cmp	r0, #5
 670:	0a00001c 	beq	6e8 <RDMSensorsParams::callbackFunction(char const*)+0xf4>
 674:	e1a01005 	mov	r1, r5
 678:	e1a03004 	mov	r3, r4
 67c:	e5952004 	ldr	r2, [r5, #4]
 680:	e5ddc00e 	ldrb	ip, [sp, #14]
 684:	e1520003 	cmp	r2, r3
 688:	0a00000e 	beq	6c8 <RDMSensorsParams::callbackFunction(char const*)+0xd4>
 68c:	e35c0000 	cmp	ip, #0
 690:	0a000006 	beq	6b0 <RDMSensorsParams::callbackFunction(char const*)+0xbc>
 694:	e5d1e009 	ldrb	lr, [r1, #9]
 698:	e15e000c 	cmp	lr, ip
 69c:	1a000006 	bne	6bc <RDMSensorsParams::callbackFunction(char const*)+0xc8>
 6a0:	e0833083 	add	r3, r3, r3, lsl #1
 6a4:	e0853003 	add	r3, r5, r3
 6a8:	e5c30008 	strb	r0, [r3, #8]
 6ac:	ea00000d 	b	6e8 <RDMSensorsParams::callbackFunction(char const*)+0xf4>
 6b0:	e5d1e008 	ldrb	lr, [r1, #8]
 6b4:	e15e0000 	cmp	lr, r0
 6b8:	0a00000a 	beq	6e8 <RDMSensorsParams::callbackFunction(char const*)+0xf4>
 6bc:	e2833001 	add	r3, r3, #1
 6c0:	e2811003 	add	r1, r1, #3
 6c4:	eaffffee 	b	684 <RDMSensorsParams::callbackFunction(char const*)+0x90>
 6c8:	e3520010 	cmp	r2, #16
 6cc:	0a000005 	beq	6e8 <RDMSensorsParams::callbackFunction(char const*)+0xf4>
 6d0:	e2823001 	add	r3, r2, #1
 6d4:	e0822082 	add	r2, r2, r2, lsl #1
 6d8:	e5853004 	str	r3, [r5, #4]
 6dc:	e0853002 	add	r3, r5, r2
 6e0:	e5c30008 	strb	r0, [r3, #8]
 6e4:	e5c3c009 	strb	ip, [r3, #9]
 6e8:	e28dd034 	add	sp, sp, #52	; 0x34
 6ec:	e8bd8030 	pop	{r4, r5, pc}

000006f0 <RDMSensorsParams::staticCallbackFunction(void*, char const*)>:
 6f0:	eafffffe 	b	5f4 <RDMSensorsParams::callbackFunction(char const*)>

Disassembly of section .text._ZN14RDMSensorBH17010InitializeEv:

00000000 <RDMSensorBH170::Initialize()>:
   0:	e5d00048 	ldrb	r0, [r0, #72]	; 0x48
   4:	e12fff1e 	bx	lr

Disassembly of section .text._ZN16RDMSensorMCP980810InitializeEv:

00000000 <RDMSensorMCP9808::Initialize()>:
   0:	e5d00048 	ldrb	r0, [r0, #72]	; 0x48
   4:	e12fff1e 	bx	lr

Disassembly of section .text._ZN23RDMSensorHTU21DHumidity10InitializeEv:

00000000 <RDMSensorHTU21DHumidity::Initialize()>:
   0:	e5d00048 	ldrb	r0, [r0, #72]	; 0x48
   4:	e12fff1e 	bx	lr

Disassembly of section .text._ZN26RDMSensorHTU21DTemperature10InitializeEv:

00000000 <RDMSensorHTU21DTemperature::Initialize()>:
   0:	e5d00048 	ldrb	r0, [r0, #72]	; 0x48
   4:	e12fff1e 	bx	lr

Disassembly of section .text._ZN22RDMSensorINA219Current10InitializeEv:

00000000 <RDMSensorINA219Current::Initialize()>:
   0:	e5d00048 	ldrb	r0, [r0, #72]	; 0x48
   4:	e12fff1e 	bx	lr

Disassembly of section .text._ZN20RDMSensorINA219Power10InitializeEv:

00000000 <RDMSensorINA219Power::Initialize()>:
   0:	e5d00048 	ldrb	r0, [r0, #72]	; 0x48
   4:	e12fff1e 	bx	lr

Disassembly of section .text._ZN22RDMSensorINA219Voltage10InitializeEv:

00000000 <RDMSensorINA219Voltage::Initialize()>:
   0:	e5d00048 	ldrb	r0, [r0, #72]	; 0x48
   4:	e12fff1e 	bx	lr

Disassembly of section .text._ZN23RDMSensorSI7021Humidity10InitializeEv:

00000000 <RDMSensorSI7021Humidity::Initialize()>:
   0:	e5d00048 	ldrb	r0, [r0, #72]	; 0x48
   4:	e12fff1e 	bx	lr

Disassembly of section .text._ZN26RDMSensorSI7021Temperature10InitializeEv:

00000000 <RDMSensorSI7021Temperature::Initialize()>:
   0:	e5d00048 	ldrb	r0, [r0, #72]	; 0x48
   4:	e12fff1e 	bx	lr

Disassembly of section .text._ZN26RDMSensorSI7021Temperature8GetValueEv:

00000000 <RDMSensorSI7021Temperature::GetValue()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e2800040 	add	r0, r0, #64	; 0x40
   8:	ebfffffe 	bl	0 <sensor::SI7021::GetTemperature()>
   c:	eebd0ac0 	vcvt.s32.f32	s0, s0
  10:	ee103a10 	vmov	r3, s0
  14:	e6bf0073 	sxth	r0, r3
  18:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN23RDMSensorSI7021Humidity8GetValueEv:

00000000 <RDMSensorSI7021Humidity::GetValue()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e2800040 	add	r0, r0, #64	; 0x40
   8:	ebfffffe 	bl	0 <sensor::SI7021::GetHumidity()>
   c:	eebd0ac0 	vcvt.s32.f32	s0, s0
  10:	ee103a10 	vmov	r3, s0
  14:	e6bf0073 	sxth	r0, r3
  18:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN22RDMSensorINA219Voltage8GetValueEv:

00000000 <RDMSensorINA219Voltage::GetValue()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e2800040 	add	r0, r0, #64	; 0x40
   8:	ebfffffe 	bl	0 <sensor::INA219::GetBusVoltage()>
   c:	eddf7a04 	vldr	s15, [pc, #16]	; 24 <RDMSensorINA219Voltage::GetValue()+0x24>
  10:	ee200a27 	vmul.f32	s0, s0, s15
  14:	eebd0ac0 	vcvt.s32.f32	s0, s0
  18:	ee103a10 	vmov	r3, s0
  1c:	e6bf0073 	sxth	r0, r3
  20:	e8bd8010 	pop	{r4, pc}
  24:	447a0000 	ldrbtmi	r0, [sl], #-0

Disassembly of section .text._ZN20RDMSensorINA219Power8GetValueEv:

00000000 <RDMSensorINA219Power::GetValue()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e2800040 	add	r0, r0, #64	; 0x40
   8:	ebfffffe 	bl	0 <sensor::INA219::GetBusPower()>
   c:	eebd0ac0 	vcvt.s32.f32	s0, s0
  10:	ee103a10 	vmov	r3, s0
  14:	e6bf0073 	sxth	r0, r3
  18:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN22RDMSensorINA219Current8GetValueEv:

00000000 <RDMSensorINA219Current::GetValue()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e2800040 	add	r0, r0, #64	; 0x40
   8:	ebfffffe 	bl	0 <sensor::INA219::GetShuntCurrent()>
   c:	eddf7a04 	vldr	s15, [pc, #16]	; 24 <RDMSensorINA219Current::GetValue()+0x24>
  10:	ee200a27 	vmul.f32	s0, s0, s15
  14:	eebd0ac0 	vcvt.s32.f32	s0, s0
  18:	ee103a10 	vmov	r3, s0
  1c:	e6bf0073 	sxth	r0, r3
  20:	e8bd8010 	pop	{r4, pc}
  24:	447a0000 	ldrbtmi	r0, [sl], #-0

Disassembly of section .text._ZN26RDMSensorHTU21DTemperature8GetValueEv:

00000000 <RDMSensorHTU21DTemperature::GetValue()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e2800040 	add	r0, r0, #64	; 0x40
   8:	ebfffffe 	bl	0 <sensor::HTU21D::GetTemperature()>
   c:	eebd0ac0 	vcvt.s32.f32	s0, s0
  10:	ee103a10 	vmov	r3, s0
  14:	e6bf0073 	sxth	r0, r3
  18:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN23RDMSensorHTU21DHumidity8GetValueEv:

00000000 <RDMSensorHTU21DHumidity::GetValue()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e2800040 	add	r0, r0, #64	; 0x40
   8:	ebfffffe 	bl	0 <sensor::HTU21D::GetHumidity()>
   c:	eebd0ac0 	vcvt.s32.f32	s0, s0
  10:	ee103a10 	vmov	r3, s0
  14:	e6bf0073 	sxth	r0, r3
  18:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN16RDMSensorMCP98088GetValueEv:

00000000 <RDMSensorMCP9808::GetValue()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e2800040 	add	r0, r0, #64	; 0x40
   8:	ebfffffe 	bl	0 <sensor::MCP9808::Get()>
   c:	eebd0ac0 	vcvt.s32.f32	s0, s0
  10:	ee103a10 	vmov	r3, s0
  14:	e6bf0073 	sxth	r0, r3
  18:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN14RDMSensorBH1708GetValueEv:

00000000 <RDMSensorBH170::GetValue()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e2800040 	add	r0, r0, #64	; 0x40
   8:	ebfffffe 	bl	0 <sensor::BH170::Get()>
   c:	e1a00880 	lsl	r0, r0, #17
  10:	e1a008a0 	lsr	r0, r0, #17
  14:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN9RDMSensorD2Ev:

00000000 <RDMSensor::~RDMSensor()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN26RDMSensorSI7021TemperatureD2Ev:

00000000 <RDMSensorSI7021Temperature::~RDMSensorSI7021Temperature()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN26RDMSensorSI7021TemperatureD0Ev:

00000000 <RDMSensorSI7021Temperature::~RDMSensorSI7021Temperature()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN23RDMSensorSI7021HumidityD2Ev:

00000000 <RDMSensorSI7021Humidity::~RDMSensorSI7021Humidity()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN23RDMSensorSI7021HumidityD0Ev:

00000000 <RDMSensorSI7021Humidity::~RDMSensorSI7021Humidity()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN22RDMSensorINA219VoltageD2Ev:

00000000 <RDMSensorINA219Voltage::~RDMSensorINA219Voltage()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN22RDMSensorINA219VoltageD0Ev:

00000000 <RDMSensorINA219Voltage::~RDMSensorINA219Voltage()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN20RDMSensorINA219PowerD2Ev:

00000000 <RDMSensorINA219Power::~RDMSensorINA219Power()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN20RDMSensorINA219PowerD0Ev:

00000000 <RDMSensorINA219Power::~RDMSensorINA219Power()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN22RDMSensorINA219CurrentD2Ev:

00000000 <RDMSensorINA219Current::~RDMSensorINA219Current()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN22RDMSensorINA219CurrentD0Ev:

00000000 <RDMSensorINA219Current::~RDMSensorINA219Current()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN26RDMSensorHTU21DTemperatureD2Ev:

00000000 <RDMSensorHTU21DTemperature::~RDMSensorHTU21DTemperature()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN26RDMSensorHTU21DTemperatureD0Ev:

00000000 <RDMSensorHTU21DTemperature::~RDMSensorHTU21DTemperature()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN23RDMSensorHTU21DHumidityD2Ev:

00000000 <RDMSensorHTU21DHumidity::~RDMSensorHTU21DHumidity()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN23RDMSensorHTU21DHumidityD0Ev:

00000000 <RDMSensorHTU21DHumidity::~RDMSensorHTU21DHumidity()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN16RDMSensorMCP9808D2Ev:

00000000 <RDMSensorMCP9808::~RDMSensorMCP9808()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN16RDMSensorMCP9808D0Ev:

00000000 <RDMSensorMCP9808::~RDMSensorMCP9808()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN14RDMSensorBH170D2Ev:

00000000 <RDMSensorBH170::~RDMSensorBH170()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN14RDMSensorBH170D0Ev:

00000000 <RDMSensorBH170::~RDMSensorBH170()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN9RDMSensorD0Ev:

00000000 <RDMSensor::~RDMSensor()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata._ZTV14RDMSensorBH170:

00000000 <vtable for RDMSensorBH170>:
	...

Disassembly of section .rodata._ZTV16RDMSensorMCP9808:

00000000 <vtable for RDMSensorMCP9808>:
	...

Disassembly of section .rodata._ZTV23RDMSensorHTU21DHumidity:

00000000 <vtable for RDMSensorHTU21DHumidity>:
	...

Disassembly of section .rodata._ZTV26RDMSensorHTU21DTemperature:

00000000 <vtable for RDMSensorHTU21DTemperature>:
	...

Disassembly of section .rodata._ZTV22RDMSensorINA219Current:

00000000 <vtable for RDMSensorINA219Current>:
	...

Disassembly of section .rodata._ZTV20RDMSensorINA219Power:

00000000 <vtable for RDMSensorINA219Power>:
	...

Disassembly of section .rodata._ZTV22RDMSensorINA219Voltage:

00000000 <vtable for RDMSensorINA219Voltage>:
	...

Disassembly of section .rodata._ZTV23RDMSensorSI7021Humidity:

00000000 <vtable for RDMSensorSI7021Humidity>:
	...

Disassembly of section .rodata._ZTV26RDMSensorSI7021Temperature:

00000000 <vtable for RDMSensorSI7021Temperature>:
	...

Disassembly of section .rodata:

00000000 <sensor::bh1750::DESCRIPTION>:
   0:	69626d41 	stmdbvs	r2!, {r0, r6, r8, sl, fp, sp, lr}^
   4:	20746e65 	rsbscs	r6, r4, r5, ror #28
   8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
   c:	00000074 	andeq	r0, r0, r4, ror r0

00000010 <sensor::htu21d::humidity::DESCRIPTION>:
  10:	616c6552 	cmnvs	ip, r2, asr r5
  14:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
  18:	6d754820 	ldclvs	8, cr4, [r5, #-128]!	; 0xffffff80
  1c:	74696469 	strbtvc	r6, [r9], #-1129	; 0xfffffb97
  20:	00000079 	andeq	r0, r0, r9, ror r0

00000024 <sensor::htu21d::temperature::DESCRIPTION>:
  24:	69626d41 	stmdbvs	r2!, {r0, r6, r8, sl, fp, sp, lr}^
  28:	20746e65 	rsbscs	r6, r4, r5, ror #28
  2c:	706d6554 	rsbvc	r6, sp, r4, asr r5
  30:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
  34:	00657275 	rsbeq	r7, r5, r5, ror r2

00000038 <sensor::ina219::current::DESCRIPTION>:
  38:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
  3c:	00746e65 	rsbseq	r6, r4, r5, ror #28

00000040 <sensor::ina219::power::DESCRIPTION>:
  40:	65776f50 	ldrbvs	r6, [r7, #-3920]!	; 0xfffff0b0
  44:	00000072 	andeq	r0, r0, r2, ror r0

00000048 <sensor::ina219::voltage::DESCRIPTION>:
  48:	746c6f56 	strbtvc	r6, [ip], #-3926	; 0xfffff0aa
  4c:	00656761 	rsbeq	r6, r5, r1, ror #14

00000050 <sensor::mcp9808::DESCRIPTION>:
  50:	69626d41 	stmdbvs	r2!, {r0, r6, r8, sl, fp, sp, lr}^
  54:	20746e65 	rsbscs	r6, r4, r5, ror #28
  58:	706d6554 	rsbvc	r6, sp, r4, asr r5
  5c:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
  60:	00657275 	rsbeq	r7, r5, r5, ror r2

00000064 <sensor::si7021::humidity::DESCRIPTION>:
  64:	616c6552 	cmnvs	ip, r2, asr r5
  68:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
  6c:	6d754820 	ldclvs	8, cr4, [r5, #-128]!	; 0xffffff80
  70:	74696469 	strbtvc	r6, [r9], #-1129	; 0xfffffb97
  74:	00000079 	andeq	r0, r0, r9, ror r0

00000078 <sensor::si7021::temperature::DESCRIPTION>:
  78:	69626d41 	stmdbvs	r2!, {r0, r6, r8, sl, fp, sp, lr}^
  7c:	20746e65 	rsbscs	r6, r4, r5, ror #28
  80:	706d6554 	rsbvc	r6, sp, r4, asr r5
  84:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
  88:	00657275 	rsbeq	r7, r5, r5, ror r2

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <RDMSensorsParams::staticCallbackFunction(void*, char const*)+0x168d13c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <RDMSensorsParams::staticCallbackFunction(void*, char const*)+0x41d34>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


cputemperature.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <CpuTemperature::~CpuTemperature()>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000006 	andeq	r0, r0, r6
   8:	00000007 	andeq	r0, r0, r7
   c:	00000008 	andeq	r0, r0, r8

Disassembly of section .text:

00000000 <CpuTemperature::Initialize()>:
   0:	e3a00001 	mov	r0, #1
   4:	e12fff1e 	bx	lr

00000008 <CpuTemperature::GetValue()>:
   8:	e92d4010 	push	{r4, lr}
   c:	ebfffffe 	bl	0 <bcm2835_vc_get_temperature>
  10:	ee070a90 	vmov	s15, r0
  14:	eddf6a05 	vldr	s13, [pc, #20]	; 30 <CpuTemperature::GetValue()+0x28>
  18:	eeb87ae7 	vcvt.f32.s32	s14, s15
  1c:	eec77a26 	vdiv.f32	s15, s14, s13
  20:	eefd7ae7 	vcvt.s32.f32	s15, s15
  24:	ee173a90 	vmov	r3, s15
  28:	e6bf0073 	sxth	r0, r3
  2c:	e8bd8010 	pop	{r4, pc}
  30:	447a0000 	ldrbtmi	r0, [sl], #-0

00000034 <CpuTemperature::CpuTemperature(unsigned char)>:
  34:	e92d4010 	push	{r4, lr}
  38:	e1a04000 	mov	r4, r0
  3c:	ebfffffe 	bl	0 <RDMSensor::RDMSensor(unsigned char)>
  40:	e3a03055 	mov	r3, #85	; 0x55
  44:	e3a01000 	mov	r1, #0
  48:	e59f202c 	ldr	r2, [pc, #44]	; 7c <CpuTemperature::CpuTemperature(unsigned char)+0x48>
  4c:	e59fc02c 	ldr	ip, [pc, #44]	; 80 <CpuTemperature::CpuTemperature(unsigned char)+0x4c>
  50:	e59f002c 	ldr	r0, [pc, #44]	; 84 <CpuTemperature::CpuTemperature(unsigned char)+0x50>
  54:	e5c41007 	strb	r1, [r4, #7]
  58:	e5840000 	str	r0, [r4]
  5c:	e59f1024 	ldr	r1, [pc, #36]	; 88 <CpuTemperature::CpuTemperature(unsigned char)+0x54>
  60:	e1a00004 	mov	r0, r4
  64:	e584c00c 	str	ip, [r4, #12]
  68:	e5842008 	str	r2, [r4, #8]
  6c:	e1c431b0 	strh	r3, [r4, #16]
  70:	ebfffffe 	bl	0 <RDMSensor::SetDescription(char const*)>
  74:	e1a00004 	mov	r0, r4
  78:	e8bd8010 	pop	{r4, pc}
  7c:	feef0001 	cdp2	0, 14, cr0, cr15, cr1, {0}
  80:	feef7fff 	mcr2	15, 7, r7, cr15, cr15, {7}
  84:	00000008 	andeq	r0, r0, r8
  88:	00000000 	andeq	r0, r0, r0

Disassembly of section .text._ZN14CpuTemperatureD2Ev:

00000000 <CpuTemperature::~CpuTemperature()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN14CpuTemperatureD0Ev:

00000000 <CpuTemperature::~CpuTemperature()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	00555043 	subseq	r5, r5, r3, asr #32

Disassembly of section .rodata:

00000000 <vtable for CpuTemperature>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <CpuTemperature::CpuTemperature(unsigned char)+0x168d7f8>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <CpuTemperature::CpuTemperature(unsigned char)+0x423f0>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


rdmsensorsstatic.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <RDMSensors::GetTypeString(rdm::sensors::type)>:
   0:	e3500004 	cmp	r0, #4
   4:	959f3008 	ldrls	r3, [pc, #8]	; 14 <RDMSensors::GetTypeString(rdm::sensors::type)+0x14>
   8:	90830180 	addls	r0, r3, r0, lsl #3
   c:	859f0004 	ldrhi	r0, [pc, #4]	; 18 <RDMSensors::GetTypeString(rdm::sensors::type)+0x18>
  10:	e12fff1e 	bx	lr
	...

0000001c <RDMSensors::GetTypeString(char const*)>:
  1c:	e92d4070 	push	{r4, r5, r6, lr}
  20:	e3a05000 	mov	r5, #0
  24:	e59f6058 	ldr	r6, [pc, #88]	; 84 <RDMSensors::GetTypeString(char const*)+0x68>
  28:	e2400001 	sub	r0, r0, #1
  2c:	e1a0e000 	mov	lr, r0
  30:	e246c001 	sub	ip, r6, #1
  34:	ea000001 	b	40 <RDMSensors::GetTypeString(char const*)+0x24>
  38:	e3530000 	cmp	r3, #0
  3c:	0a00000e 	beq	7c <RDMSensors::GetTypeString(char const*)+0x60>
  40:	e5fe3001 	ldrb	r3, [lr, #1]!
  44:	e1a01003 	mov	r1, r3
  48:	e2432041 	sub	r2, r3, #65	; 0x41
  4c:	e3520019 	cmp	r2, #25
  50:	e5fc2001 	ldrb	r2, [ip, #1]!
  54:	92831020 	addls	r1, r3, #32
  58:	e2424041 	sub	r4, r2, #65	; 0x41
  5c:	e3540019 	cmp	r4, #25
  60:	92822020 	addls	r2, r2, #32
  64:	e1520001 	cmp	r2, r1
  68:	0afffff2 	beq	38 <RDMSensors::GetTypeString(char const*)+0x1c>
  6c:	e2855001 	add	r5, r5, #1
  70:	e3550005 	cmp	r5, #5
  74:	e2866008 	add	r6, r6, #8
  78:	1affffeb 	bne	2c <RDMSensors::GetTypeString(char const*)+0x10>
  7c:	e1a00005 	mov	r0, r5
  80:	e8bd8070 	pop	{r4, r5, r6, pc}
  84:	00000000 	andeq	r0, r0, r0

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
   4:	006e776f 	rsbeq	r7, lr, pc, ror #14

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <RDMSensors::GetTypeString(char const*)+0x168d810>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <RDMSensors::GetTypeString(char const*)+0x42408>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


rdmsensors.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <RDMSensors::RDMSensors()>:
   0:	e92d4070 	push	{r4, r5, r6, lr}
   4:	e3a03000 	mov	r3, #0
   8:	e1a04000 	mov	r4, r0
   c:	e59f2040 	ldr	r2, [pc, #64]	; 54 <RDMSensors::RDMSensors()+0x54>
  10:	e5843000 	str	r3, [r4]
  14:	e5c43004 	strb	r3, [r4, #4]
  18:	e3a00040 	mov	r0, #64	; 0x40
  1c:	e5824000 	str	r4, [r2]
  20:	ebfffffe 	bl	0 <operator new[](unsigned int)>
  24:	e1a03000 	mov	r3, r0
  28:	e3a00040 	mov	r0, #64	; 0x40
  2c:	e5843000 	str	r3, [r4]
  30:	ebfffffe 	bl	0 <operator new(unsigned int)>
  34:	e1a05000 	mov	r5, r0
  38:	e5d41004 	ldrb	r1, [r4, #4]
  3c:	ebfffffe 	bl	0 <CpuTemperature::CpuTemperature(unsigned char)>
  40:	e1a01005 	mov	r1, r5
  44:	e1a00004 	mov	r0, r4
  48:	ebfffffe 	bl	0 <RDMSensors::Add(RDMSensor*)>
  4c:	e1a00004 	mov	r0, r4
  50:	e8bd8070 	pop	{r4, r5, r6, pc}
  54:	00000000 	andeq	r0, r0, r0

00000058 <RDMSensors::~RDMSensors()>:
  58:	e92d4070 	push	{r4, r5, r6, lr}
  5c:	e5d02004 	ldrb	r2, [r0, #4]
  60:	e1a05000 	mov	r5, r0
  64:	e3520000 	cmp	r2, #0
  68:	e5903000 	ldr	r3, [r0]
  6c:	0a00000d 	beq	a8 <RDMSensors::~RDMSensors()+0x50>
  70:	e3a04000 	mov	r4, #0
  74:	e1a06004 	mov	r6, r4
  78:	e7930104 	ldr	r0, [r3, r4, lsl #2]
  7c:	e3500000 	cmp	r0, #0
  80:	0a000005 	beq	9c <RDMSensors::~RDMSensors()+0x44>
  84:	e5903000 	ldr	r3, [r0]
  88:	e5933004 	ldr	r3, [r3, #4]
  8c:	e12fff33 	blx	r3
  90:	e5953000 	ldr	r3, [r5]
  94:	e7836104 	str	r6, [r3, r4, lsl #2]
  98:	e5d52004 	ldrb	r2, [r5, #4]
  9c:	e2844001 	add	r4, r4, #1
  a0:	e1520004 	cmp	r2, r4
  a4:	8afffff3 	bhi	78 <RDMSensors::~RDMSensors()+0x20>
  a8:	e3530000 	cmp	r3, #0
  ac:	0a000001 	beq	b8 <RDMSensors::~RDMSensors()+0x60>
  b0:	e1a00003 	mov	r0, r3
  b4:	ebfffffe 	bl	0 <operator delete[](void*)>
  b8:	e1a00005 	mov	r0, r5
  bc:	e8bd8070 	pop	{r4, r5, r6, pc}

000000c0 <RDMSensors::GetDefintion(unsigned char)>:
  c0:	e5903000 	ldr	r3, [r0]
  c4:	e7930101 	ldr	r0, [r3, r1, lsl #2]
  c8:	e2800006 	add	r0, r0, #6
  cc:	e12fff1e 	bx	lr

000000d0 <RDMSensors::GetValues(unsigned char)>:
  d0:	e5903000 	ldr	r3, [r0]
  d4:	e7930101 	ldr	r0, [r3, r1, lsl #2]
  d8:	eafffffe 	b	0 <RDMSensor::GetValues()>

000000dc <RDMSensors::SetValues(unsigned char)>:
  dc:	e35100ff 	cmp	r1, #255	; 0xff
  e0:	e92d4070 	push	{r4, r5, r6, lr}
  e4:	e1a05000 	mov	r5, r0
  e8:	1a00000b 	bne	11c <RDMSensors::SetValues(unsigned char)+0x40>
  ec:	e5d03004 	ldrb	r3, [r0, #4]
  f0:	e3530000 	cmp	r3, #0
  f4:	08bd8070 	popeq	{r4, r5, r6, pc}
  f8:	e3a04000 	mov	r4, #0
  fc:	e5953000 	ldr	r3, [r5]
 100:	e7930104 	ldr	r0, [r3, r4, lsl #2]
 104:	ebfffffe 	bl	0 <RDMSensor::SetValues()>
 108:	e5d53004 	ldrb	r3, [r5, #4]
 10c:	e2844001 	add	r4, r4, #1
 110:	e1530004 	cmp	r3, r4
 114:	8afffff8 	bhi	fc <RDMSensors::SetValues(unsigned char)+0x20>
 118:	e8bd8070 	pop	{r4, r5, r6, pc}
 11c:	e5903000 	ldr	r3, [r0]
 120:	e8bd4070 	pop	{r4, r5, r6, lr}
 124:	e7930101 	ldr	r0, [r3, r1, lsl #2]
 128:	eafffffe 	b	0 <RDMSensor::SetValues()>

0000012c <RDMSensors::SetRecord(unsigned char)>:
 12c:	e35100ff 	cmp	r1, #255	; 0xff
 130:	e92d4070 	push	{r4, r5, r6, lr}
 134:	e1a05000 	mov	r5, r0
 138:	1a00000b 	bne	16c <RDMSensors::SetRecord(unsigned char)+0x40>
 13c:	e5d03004 	ldrb	r3, [r0, #4]
 140:	e3530000 	cmp	r3, #0
 144:	08bd8070 	popeq	{r4, r5, r6, pc}
 148:	e3a04000 	mov	r4, #0
 14c:	e5953000 	ldr	r3, [r5]
 150:	e7930104 	ldr	r0, [r3, r4, lsl #2]
 154:	ebfffffe 	bl	0 <RDMSensor::Record()>
 158:	e5d53004 	ldrb	r3, [r5, #4]
 15c:	e2844001 	add	r4, r4, #1
 160:	e1530004 	cmp	r3, r4
 164:	8afffff8 	bhi	14c <RDMSensors::SetRecord(unsigned char)+0x20>
 168:	e8bd8070 	pop	{r4, r5, r6, pc}
 16c:	e5903000 	ldr	r3, [r0]
 170:	e8bd4070 	pop	{r4, r5, r6, lr}
 174:	e7930101 	ldr	r0, [r3, r1, lsl #2]
 178:	eafffffe 	b	0 <RDMSensor::Record()>

Disassembly of section .bss:

00000000 <RDMSensors::s_pThis>:
   0:	00000000 	andeq	r0, r0, r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <RDMSensors::SetRecord(unsigned char)+0x168d700>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <RDMSensors::SetRecord(unsigned char)+0x422f8>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


rdmsensor.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000006 	andeq	r0, r0, r6
   8:	00000007 	andeq	r0, r0, r7

Disassembly of section .text:

00000000 <RDMSensor::RDMSensor(unsigned char)>:
   0:	e3a02003 	mov	r2, #3
   4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   8:	e59fc01c 	ldr	ip, [pc, #28]	; 2c <RDMSensor::RDMSensor(unsigned char)+0x2c>
   c:	e59fe01c 	ldr	lr, [pc, #28]	; 30 <RDMSensor::RDMSensor(unsigned char)+0x30>
  10:	e580c000 	str	ip, [r0]
  14:	e580e038 	str	lr, [r0, #56]	; 0x38
  18:	e5c01004 	strb	r1, [r0, #4]
  1c:	e5c01006 	strb	r1, [r0, #6]
  20:	e5c02012 	strb	r2, [r0, #18]
  24:	e5c01034 	strb	r1, [r0, #52]	; 0x34
  28:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
  2c:	00000008 	andeq	r0, r0, r8
  30:	80007fff 	strdhi	r7, [r0], -pc	; <UNPREDICTABLE>

00000034 <RDMSensor::SetDescription(char const*)>:
  34:	e3a03000 	mov	r3, #0
  38:	e2411001 	sub	r1, r1, #1
  3c:	e280c012 	add	ip, r0, #18
  40:	ea000003 	b	54 <RDMSensor::SetDescription(char const*)+0x20>
  44:	e2833001 	add	r3, r3, #1
  48:	e3530020 	cmp	r3, #32
  4c:	e5ec2001 	strb	r2, [ip, #1]!
  50:	0a000003 	beq	64 <RDMSensor::SetDescription(char const*)+0x30>
  54:	e5f12001 	ldrb	r2, [r1, #1]!
  58:	e3520000 	cmp	r2, #0
  5c:	1afffff8 	bne	44 <RDMSensor::SetDescription(char const*)+0x10>
  60:	e6ef3073 	uxtb	r3, r3
  64:	e5c03033 	strb	r3, [r0, #51]	; 0x33
  68:	e12fff1e 	bx	lr

0000006c <RDMSensor::GetValues()>:
  6c:	e5903000 	ldr	r3, [r0]
  70:	e92d4010 	push	{r4, lr}
  74:	e593300c 	ldr	r3, [r3, #12]
  78:	e1a04000 	mov	r4, r0
  7c:	e12fff33 	blx	r3
  80:	e1a03000 	mov	r3, r0
  84:	e1d413f8 	ldrsh	r1, [r4, #56]	; 0x38
  88:	e1d423fa 	ldrsh	r2, [r4, #58]	; 0x3a
  8c:	e1510003 	cmp	r1, r3
  90:	a1a01003 	movge	r1, r3
  94:	e1520003 	cmp	r2, r3
  98:	b1a02003 	movlt	r2, r3
  9c:	e2840034 	add	r0, r4, #52	; 0x34
  a0:	e1c433b6 	strh	r3, [r4, #54]	; 0x36
  a4:	e1c413b8 	strh	r1, [r4, #56]	; 0x38
  a8:	e1c423ba 	strh	r2, [r4, #58]	; 0x3a
  ac:	e8bd8010 	pop	{r4, pc}

000000b0 <RDMSensor::SetValues()>:
  b0:	e5903000 	ldr	r3, [r0]
  b4:	e92d4010 	push	{r4, lr}
  b8:	e593300c 	ldr	r3, [r3, #12]
  bc:	e1a04000 	mov	r4, r0
  c0:	e12fff33 	blx	r3
  c4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
  c8:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
  cc:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
  d0:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
  d4:	e8bd8010 	pop	{r4, pc}

000000d8 <RDMSensor::Record()>:
  d8:	e5903000 	ldr	r3, [r0]
  dc:	e92d4010 	push	{r4, lr}
  e0:	e1a04000 	mov	r4, r0
  e4:	e593300c 	ldr	r3, [r3, #12]
  e8:	e12fff33 	blx	r3
  ec:	e1d423f8 	ldrsh	r2, [r4, #56]	; 0x38
  f0:	e1d433fa 	ldrsh	r3, [r4, #58]	; 0x3a
  f4:	e1520000 	cmp	r2, r0
  f8:	a1a02000 	movge	r2, r0
  fc:	e1530000 	cmp	r3, r0
 100:	b1a03000 	movlt	r3, r0
 104:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
 108:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
 10c:	e1c423b8 	strh	r2, [r4, #56]	; 0x38
 110:	e1c433ba 	strh	r3, [r4, #58]	; 0x3a
 114:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata._ZTV9RDMSensor:

00000000 <vtable for RDMSensor>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <RDMSensor::Record()+0x168d754>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <RDMSensor::Record()+0x4234c>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


rmdsensorprint.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <RDMSensor::Print()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	e59f0040 	ldr	r0, [pc, #64]	; 50 <RDMSensor::Print()+0x50>
   c:	e5d42033 	ldrb	r2, [r4, #51]	; 0x33
  10:	e2843013 	add	r3, r4, #19
  14:	e5d41006 	ldrb	r1, [r4, #6]
  18:	ebfffffe 	bl	0 <printf>
  1c:	e1d410fa 	ldrsh	r1, [r4, #10]
  20:	e59f002c 	ldr	r0, [pc, #44]	; 54 <RDMSensor::Print()+0x54>
  24:	ebfffffe 	bl	0 <printf>
  28:	e1d410fc 	ldrsh	r1, [r4, #12]
  2c:	e59f0024 	ldr	r0, [pc, #36]	; 58 <RDMSensor::Print()+0x58>
  30:	ebfffffe 	bl	0 <printf>
  34:	e1d410fe 	ldrsh	r1, [r4, #14]
  38:	e59f001c 	ldr	r0, [pc, #28]	; 5c <RDMSensor::Print()+0x5c>
  3c:	ebfffffe 	bl	0 <printf>
  40:	e1d411f0 	ldrsh	r1, [r4, #16]
  44:	e59f0014 	ldr	r0, [pc, #20]	; 60 <RDMSensor::Print()+0x60>
  48:	e8bd4010 	pop	{r4, lr}
  4c:	eafffffe 	b	0 <printf>
  50:	00000000 	andeq	r0, r0, r0
  54:	0000000c 	andeq	r0, r0, ip
  58:	0000001c 	andeq	r0, r0, ip, lsl r0
  5c:	0000002c 	andeq	r0, r0, ip, lsr #32
  60:	0000003c 	andeq	r0, r0, ip, lsr r0

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	5b206425 	blpl	81909c <RDMSensor::Print()+0x81909c>
   4:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
   8:	00000a5d 	andeq	r0, r0, sp, asr sl
   c:	6e615220 	cdpvs	2, 6, cr5, cr1, cr0, {1}
  10:	694d6567 	stmdbvs	sp, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
  14:	2520206e 	strcs	r2, [r0, #-110]!	; 0xffffff92
  18:	00000a64 	andeq	r0, r0, r4, ror #20
  1c:	6e615220 	cdpvs	2, 6, cr5, cr1, cr0, {1}
  20:	614d6567 	cmpvs	sp, r7, ror #10
  24:	25202078 	strcs	r2, [r0, #-120]!	; 0xffffff88
  28:	00000a64 	andeq	r0, r0, r4, ror #20
  2c:	726f4e20 	rsbvc	r4, pc, #32, 28	; 0x200
  30:	4d6c616d 	stfmie	f6, [ip, #-436]!	; 0xfffffe4c
  34:	25206e69 	strcs	r6, [r0, #-3689]!	; 0xfffff197
  38:	00000a64 	andeq	r0, r0, r4, ror #20
  3c:	726f4e20 	rsbvc	r4, pc, #32, 28	; 0x200
  40:	4d6c616d 	stfmie	f6, [ip, #-436]!	; 0xfffffe4c
  44:	25207861 	strcs	r7, [r0, #-2145]!	; 0xfffff79f
  48:	Address 0x0000000000000048 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <RDMSensor::Print()+0x168d82c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <RDMSensor::Print()+0x42424>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


rdmsensorsconst.o:     file format elf32-littlearm


Disassembly of section .rodata:

00000000 <RDMSensorsConst::TYPE>:
   0:	37316862 	ldrcc	r6, [r1, -r2, ror #16]!
   4:	00003035 	andeq	r3, r0, r5, lsr r0
   8:	32757468 	rsbscc	r7, r5, #104, 8	; 0x68000000
   c:	00006431 	andeq	r6, r0, r1, lsr r4
  10:	32616e69 	rsbcc	r6, r1, #1680	; 0x690
  14:	00003931 	andeq	r3, r0, r1, lsr r9
  18:	3970636d 	ldmdbcc	r0!, {r0, r2, r3, r5, r6, r8, r9, sp, lr}^
  1c:	00383038 	eorseq	r3, r8, r8, lsr r0
  20:	30376973 	eorscc	r6, r7, r3, ror r9
  24:	00003132 	andeq	r3, r0, r2, lsr r1

00000028 <RDMSensorsConst::PARAMS_FILE_NAME>:
  28:	736e6573 	cmnvc	lr, #482344960	; 0x1cc00000
  2c:	2e73726f 	cdpcs	2, 7, cr7, cr3, cr15, {3}
  30:	00747874 	rsbseq	r7, r4, r4, ror r8

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003b41 	andeq	r3, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000031 	andeq	r0, r0, r1, lsr r0
  10:	4d524105 	ldfmie	f4, [r2, #-20]	; 0xffffffec
  14:	36373131 			; <UNDEFINED> instruction: 0x36373131
  18:	2d465a4a 	vstrcs	s11, [r6, #-296]	; 0xfffffed8
  1c:	07060053 	smlsdeq	r6, r3, r0, r0
  20:	01090108 	tsteq	r9, r8, lsl #2
  24:	0412020a 	ldreq	r0, [r2], #-522	; 0xfffffdf6
  28:	01150114 	tsteq	r5, r4, lsl r1
  2c:	01180317 	tsteq	r8, r7, lsl r3
  30:	011a0119 	tsteq	sl, r9, lsl r1
  34:	021e011c 	andseq	r0, lr, #28, 2
  38:	01440122 	cmpeq	r4, r2, lsr #2

rdmsensorsadd.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <RDMSensors::Add(RDMSensor*)>:
   0:	e5902000 	ldr	r2, [r0]
   4:	e3520000 	cmp	r2, #0
   8:	0a000007 	beq	2c <RDMSensors::Add(RDMSensor*)+0x2c>
   c:	e5d03004 	ldrb	r3, [r0, #4]
  10:	e3530010 	cmp	r3, #16
  14:	0a000004 	beq	2c <RDMSensors::Add(RDMSensor*)+0x2c>
  18:	e283c001 	add	ip, r3, #1
  1c:	e5c0c004 	strb	ip, [r0, #4]
  20:	e3a00001 	mov	r0, #1
  24:	e7821103 	str	r1, [r2, r3, lsl #2]
  28:	e12fff1e 	bx	lr
  2c:	e3a00000 	mov	r0, #0
  30:	e12fff1e 	bx	lr

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <RDMSensors::Add(RDMSensor*)+0x168d82c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <RDMSensors::Add(RDMSensor*)+0x42424>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.

