In archive lib_linux/librdmsensor.a:

rdmsensor.o:     file format elf64-x86-64


Disassembly of section .text._ZN9RDMSensorC2Eh:

0000000000000000 <RDMSensor::RDMSensor(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 18 <RDMSensor::RDMSensor(unsigned char)+0x18>
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	48 89 10             	mov    %rdx,(%rax)
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  27:	88 50 08             	mov    %dl,0x8(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  36:	88 50 0a             	mov    %dl,0xa(%rax)
  39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3d:	c6 40 37 03          	movb   $0x3,0x37(%rax)
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	0f b6 50 08          	movzbl 0x8(%rax),%edx
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	88 50 40             	mov    %dl,0x40(%rax)
  50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  54:	66 c7 40 3a ff 7f    	movw   $0x7fff,0x3a(%rax)
  5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5e:	66 c7 40 3c 00 80    	movw   $0x8000,0x3c(%rax)
  64:	90                   	nop
  65:	5d                   	pop    %rbp
  66:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor14SetDescriptionEPKc:

0000000000000000 <RDMSensor::SetDescription(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  10:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  17:	eb 1c                	jmp    35 <RDMSensor::SetDescription(char const*)+0x35>
  19:	8b 55 fc             	mov    -0x4(%rbp),%edx
  1c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  20:	48 01 d0             	add    %rdx,%rax
  23:	0f b6 08             	movzbl (%rax),%ecx
  26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  2a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2d:	88 4c 02 16          	mov    %cl,0x16(%rdx,%rax,1)
  31:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  35:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%rbp)
  39:	77 11                	ja     4c <RDMSensor::SetDescription(char const*)+0x4c>
  3b:	8b 55 fc             	mov    -0x4(%rbp),%edx
  3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  42:	48 01 d0             	add    %rdx,%rax
  45:	0f b6 00             	movzbl (%rax),%eax
  48:	84 c0                	test   %al,%al
  4a:	75 cd                	jne    19 <RDMSensor::SetDescription(char const*)+0x19>
  4c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4f:	89 c2                	mov    %eax,%edx
  51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  55:	88 50 36             	mov    %dl,0x36(%rax)
  58:	90                   	nop
  59:	5d                   	pop    %rbp
  5a:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor9GetValuesEv:

0000000000000000 <RDMSensor::GetValues()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	48 8b 00             	mov    (%rax),%rax
  26:	48 83 c0 18          	add    $0x18,%rax
  2a:	48 8b 10             	mov    (%rax),%rdx
  2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  31:	48 89 c7             	mov    %rax,%rdi
  34:	ff d2                	call   *%rdx
  36:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
  3a:	0f b7 55 f6          	movzwl -0xa(%rbp),%edx
  3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42:	66 89 50 38          	mov    %dx,0x38(%rax)
  46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4a:	48 8d 50 3a          	lea    0x3a(%rax),%rdx
  4e:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  52:	48 89 c6             	mov    %rax,%rsi
  55:	48 89 d7             	mov    %rdx,%rdi
  58:	e8 00 00 00 00       	call   5d <RDMSensor::GetValues()+0x5d>
  5d:	0f b7 10             	movzwl (%rax),%edx
  60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  64:	66 89 50 3a          	mov    %dx,0x3a(%rax)
  68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6c:	48 8d 50 3c          	lea    0x3c(%rax),%rdx
  70:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  74:	48 89 c6             	mov    %rax,%rsi
  77:	48 89 d7             	mov    %rdx,%rdi
  7a:	e8 00 00 00 00       	call   7f <RDMSensor::GetValues()+0x7f>
  7f:	0f b7 10             	movzwl (%rax),%edx
  82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  86:	66 89 50 3c          	mov    %dx,0x3c(%rax)
  8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  8e:	48 83 c0 38          	add    $0x38,%rax
  92:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  96:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  9d:	00 00 
  9f:	74 05                	je     a6 <RDMSensor::GetValues()+0xa6>
  a1:	e8 00 00 00 00       	call   a6 <RDMSensor::GetValues()+0xa6>
  a6:	c9                   	leave  
  a7:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor9SetValuesEv:

0000000000000000 <RDMSensor::SetValues()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	48 8b 00             	mov    (%rax),%rax
  17:	48 83 c0 18          	add    $0x18,%rax
  1b:	48 8b 10             	mov    (%rax),%rdx
  1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	ff d2                	call   *%rdx
  27:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
  2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2f:	0f b7 55 fe          	movzwl -0x2(%rbp),%edx
  33:	66 89 50 38          	mov    %dx,0x38(%rax)
  37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3b:	0f b7 55 fe          	movzwl -0x2(%rbp),%edx
  3f:	66 89 50 3a          	mov    %dx,0x3a(%rax)
  43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  47:	0f b7 55 fe          	movzwl -0x2(%rbp),%edx
  4b:	66 89 50 3c          	mov    %dx,0x3c(%rax)
  4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  53:	0f b7 55 fe          	movzwl -0x2(%rbp),%edx
  57:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  5b:	90                   	nop
  5c:	c9                   	leave  
  5d:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor6RecordEv:

0000000000000000 <RDMSensor::Record()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	48 8b 00             	mov    (%rax),%rax
  26:	48 83 c0 18          	add    $0x18,%rax
  2a:	48 8b 10             	mov    (%rax),%rdx
  2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  31:	48 89 c7             	mov    %rax,%rdi
  34:	ff d2                	call   *%rdx
  36:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
  3a:	0f b7 55 f6          	movzwl -0xa(%rbp),%edx
  3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42:	66 89 50 38          	mov    %dx,0x38(%rax)
  46:	0f b7 55 f6          	movzwl -0xa(%rbp),%edx
  4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4e:	66 89 50 3e          	mov    %dx,0x3e(%rax)
  52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  56:	48 8d 50 3a          	lea    0x3a(%rax),%rdx
  5a:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  5e:	48 89 c6             	mov    %rax,%rsi
  61:	48 89 d7             	mov    %rdx,%rdi
  64:	e8 00 00 00 00       	call   69 <RDMSensor::Record()+0x69>
  69:	0f b7 10             	movzwl (%rax),%edx
  6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  70:	66 89 50 3a          	mov    %dx,0x3a(%rax)
  74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  78:	48 8d 50 3c          	lea    0x3c(%rax),%rdx
  7c:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  80:	48 89 c6             	mov    %rax,%rsi
  83:	48 89 d7             	mov    %rdx,%rdi
  86:	e8 00 00 00 00       	call   8b <RDMSensor::Record()+0x8b>
  8b:	0f b7 10             	movzwl (%rax),%edx
  8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  92:	66 89 50 3c          	mov    %dx,0x3c(%rax)
  96:	90                   	nop
  97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  9b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  a2:	00 00 
  a4:	74 05                	je     ab <RDMSensor::Record()+0xab>
  a6:	e8 00 00 00 00       	call   ab <RDMSensor::Record()+0xab>
  ab:	c9                   	leave  
  ac:	c3                   	ret    

Disassembly of section .text._ZSt3minIsERKT_S2_S2_:

0000000000000000 <short const& std::min<short>(short const&, short const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	0f b7 10             	movzwl (%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	0f b7 00             	movzwl (%rax),%eax
  1e:	66 39 c2             	cmp    %ax,%dx
  21:	7d 06                	jge    29 <short const& std::min<short>(short const&, short const&)+0x29>
  23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  27:	eb 04                	jmp    2d <short const& std::min<short>(short const&, short const&)+0x2d>
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	5d                   	pop    %rbp
  2e:	c3                   	ret    

Disassembly of section .text._ZSt3maxIsERKT_S2_S2_:

0000000000000000 <short const& std::max<short>(short const&, short const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	0f b7 10             	movzwl (%rax),%edx
  17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  1b:	0f b7 00             	movzwl (%rax),%eax
  1e:	66 39 c2             	cmp    %ax,%dx
  21:	7d 06                	jge    29 <short const& std::max<short>(short const&, short const&)+0x29>
  23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  27:	eb 04                	jmp    2d <short const& std::max<short>(short const&, short const&)+0x2d>
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	5d                   	pop    %rbp
  2e:	c3                   	ret    

rdmsensorsadd.o:     file format elf64-x86-64


Disassembly of section .text._ZN10RDMSensors3AddEP9RDMSensor:

0000000000000000 <RDMSensors::Add(RDMSensor*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 00             	mov    (%rax),%rax
  17:	48 85 c0             	test   %rax,%rax
  1a:	75 07                	jne    23 <RDMSensors::Add(RDMSensor*)+0x23>
  1c:	b8 00 00 00 00       	mov    $0x0,%eax
  21:	eb 43                	jmp    66 <RDMSensors::Add(RDMSensor*)+0x66>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  2b:	3c 10                	cmp    $0x10,%al
  2d:	75 07                	jne    36 <RDMSensors::Add(RDMSensor*)+0x36>
  2f:	b8 00 00 00 00       	mov    $0x0,%eax
  34:	eb 30                	jmp    66 <RDMSensors::Add(RDMSensor*)+0x66>
  36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3a:	48 8b 30             	mov    (%rax),%rsi
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  45:	8d 48 01             	lea    0x1(%rax),%ecx
  48:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4c:	88 4a 08             	mov    %cl,0x8(%rdx)
  4f:	0f b6 c0             	movzbl %al,%eax
  52:	48 c1 e0 03          	shl    $0x3,%rax
  56:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
  5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  5e:	48 89 02             	mov    %rax,(%rdx)
  61:	b8 01 00 00 00       	mov    $0x1,%eax
  66:	5d                   	pop    %rbp
  67:	c3                   	ret    

rdmsensorsconst.o:     file format elf64-x86-64


rdmsensors.o:     file format elf64-x86-64


Disassembly of section .text._ZN9RDMSensorD2Ev:

0000000000000000 <RDMSensor::~RDMSensor()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <RDMSensor::~RDMSensor()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensorD0Ev:

0000000000000000 <RDMSensor::~RDMSensor()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <RDMSensor::~RDMSensor()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <RDMSensor::~RDMSensor()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor7SetTypeEh:

0000000000000000 <RDMSensor::SetType(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  15:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  19:	88 50 0b             	mov    %dl,0xb(%rax)
  1c:	90                   	nop
  1d:	5d                   	pop    %rbp
  1e:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor7SetUnitEh:

0000000000000000 <RDMSensor::SetUnit(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  15:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  19:	88 50 0c             	mov    %dl,0xc(%rax)
  1c:	90                   	nop
  1d:	5d                   	pop    %rbp
  1e:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor9SetPrefixEh:

0000000000000000 <RDMSensor::SetPrefix(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  15:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  19:	88 50 0d             	mov    %dl,0xd(%rax)
  1c:	90                   	nop
  1d:	5d                   	pop    %rbp
  1e:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor11SetRangeMinEs:

0000000000000000 <RDMSensor::SetRangeMin(short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  16:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
  1a:	66 89 50 0e          	mov    %dx,0xe(%rax)
  1e:	90                   	nop
  1f:	5d                   	pop    %rbp
  20:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor11SetRangeMaxEs:

0000000000000000 <RDMSensor::SetRangeMax(short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  16:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
  1a:	66 89 50 10          	mov    %dx,0x10(%rax)
  1e:	90                   	nop
  1f:	5d                   	pop    %rbp
  20:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor12SetNormalMinEs:

0000000000000000 <RDMSensor::SetNormalMin(short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  16:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
  1a:	66 89 50 12          	mov    %dx,0x12(%rax)
  1e:	90                   	nop
  1f:	5d                   	pop    %rbp
  20:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor12SetNormalMaxEs:

0000000000000000 <RDMSensor::SetNormalMax(short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  16:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
  1a:	66 89 50 14          	mov    %dx,0x14(%rax)
  1e:	90                   	nop
  1f:	5d                   	pop    %rbp
  20:	c3                   	ret    

Disassembly of section .text._ZN9RDMSensor12GetDefintionEv:

0000000000000000 <RDMSensor::GetDefintion()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 0a          	add    $0xa,%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN8Hardware21GetCoreTemperatureMinEv:

0000000000000000 <Hardware::GetCoreTemperatureMin()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	f3 0f 10 05 00 00 00 	movss  0x0(%rip),%xmm0        # 14 <Hardware::GetCoreTemperatureMin()+0x14>
  13:	00 
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN14CpuTemperatureC2Eh:

0000000000000000 <CpuTemperature::CpuTemperature(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	89 f0                	mov    %esi,%eax
  13:	88 45 e4             	mov    %al,-0x1c(%rbp)
  16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1a:	0f b6 55 e4          	movzbl -0x1c(%rbp),%edx
  1e:	89 d6                	mov    %edx,%esi
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <CpuTemperature::CpuTemperature(unsigned char)+0x28>
  28:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2f <CpuTemperature::CpuTemperature(unsigned char)+0x2f>
  2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  33:	48 89 10             	mov    %rdx,(%rax)
  36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3a:	be 00 00 00 00       	mov    $0x0,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <CpuTemperature::CpuTemperature(unsigned char)+0x47>
  47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4b:	be 01 00 00 00       	mov    $0x1,%esi
  50:	48 89 c7             	mov    %rax,%rdi
  53:	e8 00 00 00 00       	call   58 <CpuTemperature::CpuTemperature(unsigned char)+0x58>
  58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5c:	be 00 00 00 00       	mov    $0x0,%esi
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <CpuTemperature::CpuTemperature(unsigned char)+0x69>
  69:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  6d:	e8 00 00 00 00       	call   72 <CpuTemperature::CpuTemperature(unsigned char)+0x72>
  72:	48 89 c7             	mov    %rax,%rdi
  75:	e8 00 00 00 00       	call   7a <CpuTemperature::CpuTemperature(unsigned char)+0x7a>
  7a:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
  7e:	98                   	cwtl   
  7f:	89 c6                	mov    %eax,%esi
  81:	48 89 df             	mov    %rbx,%rdi
  84:	e8 00 00 00 00       	call   89 <CpuTemperature::CpuTemperature(unsigned char)+0x89>
  89:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  8d:	e8 00 00 00 00       	call   92 <CpuTemperature::CpuTemperature(unsigned char)+0x92>
  92:	48 89 c7             	mov    %rax,%rdi
  95:	e8 00 00 00 00       	call   9a <CpuTemperature::CpuTemperature(unsigned char)+0x9a>
  9a:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
  9e:	98                   	cwtl   
  9f:	89 c6                	mov    %eax,%esi
  a1:	48 89 df             	mov    %rbx,%rdi
  a4:	e8 00 00 00 00       	call   a9 <CpuTemperature::CpuTemperature(unsigned char)+0xa9>
  a9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  ad:	e8 00 00 00 00       	call   b2 <CpuTemperature::CpuTemperature(unsigned char)+0xb2>
  b2:	48 89 c7             	mov    %rax,%rdi
  b5:	e8 00 00 00 00       	call   ba <CpuTemperature::CpuTemperature(unsigned char)+0xba>
  ba:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
  be:	98                   	cwtl   
  bf:	89 c6                	mov    %eax,%esi
  c1:	48 89 df             	mov    %rbx,%rdi
  c4:	e8 00 00 00 00       	call   c9 <CpuTemperature::CpuTemperature(unsigned char)+0xc9>
  c9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  cd:	e8 00 00 00 00       	call   d2 <CpuTemperature::CpuTemperature(unsigned char)+0xd2>
  d2:	48 89 c7             	mov    %rax,%rdi
  d5:	e8 00 00 00 00       	call   da <CpuTemperature::CpuTemperature(unsigned char)+0xda>
  da:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
  de:	98                   	cwtl   
  df:	89 c6                	mov    %eax,%esi
  e1:	48 89 df             	mov    %rbx,%rdi
  e4:	e8 00 00 00 00       	call   e9 <CpuTemperature::CpuTemperature(unsigned char)+0xe9>
  e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ed:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # f4 <CpuTemperature::CpuTemperature(unsigned char)+0xf4>
  f4:	48 89 d6             	mov    %rdx,%rsi
  f7:	48 89 c7             	mov    %rax,%rdi
  fa:	e8 00 00 00 00       	call   ff <CpuTemperature::CpuTemperature(unsigned char)+0xff>
  ff:	90                   	nop
 100:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 104:	c9                   	leave  
 105:	c3                   	ret    

Disassembly of section .text._ZN14CpuTemperature10InitializeEv:

0000000000000000 <CpuTemperature::Initialize()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	b8 01 00 00 00       	mov    $0x1,%eax
  11:	5d                   	pop    %rbp
  12:	c3                   	ret    

Disassembly of section .text._ZN14CpuTemperature8GetValueEv:

0000000000000000 <CpuTemperature::GetValue()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	e8 00 00 00 00       	call   15 <CpuTemperature::GetValue()+0x15>
  15:	48 89 c7             	mov    %rax,%rdi
  18:	e8 00 00 00 00       	call   1d <CpuTemperature::GetValue()+0x1d>
  1d:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
  21:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
  25:	0f b7 45 fe          	movzwl -0x2(%rbp),%eax
  29:	c9                   	leave  
  2a:	c3                   	ret    

Disassembly of section .text._ZN10RDMSensorsC2Ev:

0000000000000000 <RDMSensors::RDMSensors()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  15:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  20:	c6 40 08 00          	movb   $0x0,0x8(%rax)
  24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  28:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 2f <RDMSensors::RDMSensors()+0x2f>
  2f:	bf 80 00 00 00       	mov    $0x80,%edi
  34:	e8 00 00 00 00       	call   39 <RDMSensors::RDMSensors()+0x39>
  39:	48 89 c2             	mov    %rax,%rdx
  3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40:	48 89 10             	mov    %rdx,(%rax)
  43:	bf 48 00 00 00       	mov    $0x48,%edi
  48:	e8 00 00 00 00       	call   4d <RDMSensors::RDMSensors()+0x4d>
  4d:	48 89 c3             	mov    %rax,%rbx
  50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  54:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  58:	0f b6 c0             	movzbl %al,%eax
  5b:	89 c6                	mov    %eax,%esi
  5d:	48 89 df             	mov    %rbx,%rdi
  60:	e8 00 00 00 00       	call   65 <RDMSensors::RDMSensors()+0x65>
  65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  69:	48 89 de             	mov    %rbx,%rsi
  6c:	48 89 c7             	mov    %rax,%rdi
  6f:	e8 00 00 00 00       	call   74 <RDMSensors::RDMSensors()+0x74>
  74:	90                   	nop
  75:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  79:	c9                   	leave  
  7a:	c3                   	ret    

Disassembly of section .text._ZN10RDMSensorsD2Ev:

0000000000000000 <RDMSensors::~RDMSensors()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  17:	eb 5d                	jmp    76 <RDMSensors::~RDMSensors()+0x76>
  19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1d:	48 8b 10             	mov    (%rax),%rdx
  20:	8b 45 fc             	mov    -0x4(%rbp),%eax
  23:	48 c1 e0 03          	shl    $0x3,%rax
  27:	48 01 d0             	add    %rdx,%rax
  2a:	48 8b 00             	mov    (%rax),%rax
  2d:	48 85 c0             	test   %rax,%rax
  30:	74 40                	je     72 <RDMSensors::~RDMSensors()+0x72>
  32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  36:	48 8b 10             	mov    (%rax),%rdx
  39:	8b 45 fc             	mov    -0x4(%rbp),%eax
  3c:	48 c1 e0 03          	shl    $0x3,%rax
  40:	48 01 d0             	add    %rdx,%rax
  43:	48 8b 00             	mov    (%rax),%rax
  46:	48 85 c0             	test   %rax,%rax
  49:	74 0f                	je     5a <RDMSensors::~RDMSensors()+0x5a>
  4b:	48 8b 10             	mov    (%rax),%rdx
  4e:	48 83 c2 08          	add    $0x8,%rdx
  52:	48 8b 12             	mov    (%rdx),%rdx
  55:	48 89 c7             	mov    %rax,%rdi
  58:	ff d2                	call   *%rdx
  5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5e:	48 8b 10             	mov    (%rax),%rdx
  61:	8b 45 fc             	mov    -0x4(%rbp),%eax
  64:	48 c1 e0 03          	shl    $0x3,%rax
  68:	48 01 d0             	add    %rdx,%rax
  6b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  72:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7a:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  7e:	0f b6 c0             	movzbl %al,%eax
  81:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  84:	72 93                	jb     19 <RDMSensors::~RDMSensors()+0x19>
  86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  8a:	48 8b 00             	mov    (%rax),%rax
  8d:	48 85 c0             	test   %rax,%rax
  90:	74 0f                	je     a1 <RDMSensors::~RDMSensors()+0xa1>
  92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  96:	48 8b 00             	mov    (%rax),%rax
  99:	48 89 c7             	mov    %rax,%rdi
  9c:	e8 00 00 00 00       	call   a1 <RDMSensors::~RDMSensors()+0xa1>
  a1:	90                   	nop
  a2:	c9                   	leave  
  a3:	c3                   	ret    

Disassembly of section .text._ZN10RDMSensors12GetDefintionEh:

0000000000000000 <RDMSensors::GetDefintion(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8b 10             	mov    (%rax),%rdx
  1c:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  20:	48 c1 e0 03          	shl    $0x3,%rax
  24:	48 01 d0             	add    %rdx,%rax
  27:	48 8b 00             	mov    (%rax),%rax
  2a:	48 89 c7             	mov    %rax,%rdi
  2d:	e8 00 00 00 00       	call   32 <RDMSensors::GetDefintion(unsigned char)+0x32>
  32:	c9                   	leave  
  33:	c3                   	ret    

Disassembly of section .text._ZN10RDMSensors9GetValuesEh:

0000000000000000 <RDMSensors::GetValues(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8b 10             	mov    (%rax),%rdx
  1c:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  20:	48 c1 e0 03          	shl    $0x3,%rax
  24:	48 01 d0             	add    %rdx,%rax
  27:	48 8b 00             	mov    (%rax),%rax
  2a:	48 89 c7             	mov    %rax,%rdi
  2d:	e8 00 00 00 00       	call   32 <RDMSensors::GetValues(unsigned char)+0x32>
  32:	c9                   	leave  
  33:	c3                   	ret    

Disassembly of section .text._ZN10RDMSensors9SetValuesEh:

0000000000000000 <RDMSensors::SetValues(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 e4             	mov    %al,-0x1c(%rbp)
  15:	80 7d e4 ff          	cmpb   $0xff,-0x1c(%rbp)
  19:	75 3b                	jne    56 <RDMSensors::SetValues(unsigned char)+0x56>
  1b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  22:	eb 20                	jmp    44 <RDMSensors::SetValues(unsigned char)+0x44>
  24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  28:	48 8b 10             	mov    (%rax),%rdx
  2b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2e:	48 c1 e0 03          	shl    $0x3,%rax
  32:	48 01 d0             	add    %rdx,%rax
  35:	48 8b 00             	mov    (%rax),%rax
  38:	48 89 c7             	mov    %rax,%rdi
  3b:	e8 00 00 00 00       	call   40 <RDMSensors::SetValues(unsigned char)+0x40>
  40:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  48:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4c:	0f b6 c0             	movzbl %al,%eax
  4f:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  52:	72 d0                	jb     24 <RDMSensors::SetValues(unsigned char)+0x24>
  54:	eb 1d                	jmp    73 <RDMSensors::SetValues(unsigned char)+0x73>
  56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5a:	48 8b 10             	mov    (%rax),%rdx
  5d:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  61:	48 c1 e0 03          	shl    $0x3,%rax
  65:	48 01 d0             	add    %rdx,%rax
  68:	48 8b 00             	mov    (%rax),%rax
  6b:	48 89 c7             	mov    %rax,%rdi
  6e:	e8 00 00 00 00       	call   73 <RDMSensors::SetValues(unsigned char)+0x73>
  73:	90                   	nop
  74:	c9                   	leave  
  75:	c3                   	ret    

Disassembly of section .text._ZN10RDMSensors9SetRecordEh:

0000000000000000 <RDMSensors::SetRecord(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 e4             	mov    %al,-0x1c(%rbp)
  15:	80 7d e4 ff          	cmpb   $0xff,-0x1c(%rbp)
  19:	75 3b                	jne    56 <RDMSensors::SetRecord(unsigned char)+0x56>
  1b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  22:	eb 20                	jmp    44 <RDMSensors::SetRecord(unsigned char)+0x44>
  24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  28:	48 8b 10             	mov    (%rax),%rdx
  2b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2e:	48 c1 e0 03          	shl    $0x3,%rax
  32:	48 01 d0             	add    %rdx,%rax
  35:	48 8b 00             	mov    (%rax),%rax
  38:	48 89 c7             	mov    %rax,%rdi
  3b:	e8 00 00 00 00       	call   40 <RDMSensors::SetRecord(unsigned char)+0x40>
  40:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  48:	0f b6 40 08          	movzbl 0x8(%rax),%eax
  4c:	0f b6 c0             	movzbl %al,%eax
  4f:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  52:	72 d0                	jb     24 <RDMSensors::SetRecord(unsigned char)+0x24>
  54:	eb 1d                	jmp    73 <RDMSensors::SetRecord(unsigned char)+0x73>
  56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5a:	48 8b 10             	mov    (%rax),%rdx
  5d:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  61:	48 c1 e0 03          	shl    $0x3,%rax
  65:	48 01 d0             	add    %rdx,%rax
  68:	48 8b 00             	mov    (%rax),%rax
  6b:	48 89 c7             	mov    %rax,%rdi
  6e:	e8 00 00 00 00       	call   73 <RDMSensors::SetRecord(unsigned char)+0x73>
  73:	90                   	nop
  74:	c9                   	leave  
  75:	c3                   	ret    

Disassembly of section .text._ZN14CpuTemperatureD2Ev:

0000000000000000 <CpuTemperature::~CpuTemperature()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <CpuTemperature::~CpuTemperature()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <CpuTemperature::~CpuTemperature()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN14CpuTemperatureD0Ev:

0000000000000000 <CpuTemperature::~CpuTemperature()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <CpuTemperature::~CpuTemperature()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <CpuTemperature::~CpuTemperature()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

rdmsensorsparams.o:     file format elf64-x86-64


Disassembly of section .text._ZN10RDMSensors3GetEv:

0000000000000000 <RDMSensors::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <RDMSensors::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder7GetSizeEv:

0000000000000000 <PropertiesBuilder::GetSize()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	80 7f 0c 00          	cmpb   $0x0,0xc(%rdi)
   8:	74 1b                	je     25 <PropertiesBuilder::GetSize()+0x25>
   a:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
   e:	48 8b 17             	mov    (%rdi),%rdx
  11:	c6 44 02 ff 7d       	movb   $0x7d,-0x1(%rdx,%rax,1)
  16:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
  1a:	48 8b 17             	mov    (%rdi),%rdx
  1d:	c6 04 02 7d          	movb   $0x7d,(%rdx,%rax,1)
  21:	66 ff 47 0a          	incw   0xa(%rdi)
  25:	66 8b 47 0a          	mov    0xa(%rdi),%ax
  29:	c3                   	ret    

Disassembly of section .text._ZN16RDMSensorsParamsC2EP21RDMSensorsParamsStore:

0000000000000000 <RDMSensorsParams::RDMSensorsParams(RDMSensorsParamsStore*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 89 37             	mov    %rsi,(%rdi)
   7:	c3                   	ret    

Disassembly of section .text._ZN16RDMSensorsParams4LoadEv:

0000000000000000 <RDMSensorsParams::Load()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	48 89 fa             	mov    %rdi,%rdx
   9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 10 <RDMSensorsParams::Load()+0x10>
  10:	55                   	push   %rbp
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	48 83 ec 20          	sub    $0x20,%rsp
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  27:	31 c0                	xor    %eax,%eax
  29:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  30:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  35:	48 89 ef             	mov    %rbp,%rdi
  38:	e8 00 00 00 00       	call   3d <RDMSensorsParams::Load()+0x3d>
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 47 <RDMSensorsParams::Load()+0x47>
  47:	e8 00 00 00 00       	call   4c <RDMSensorsParams::Load()+0x4c>
  4c:	48 8b 3b             	mov    (%rbx),%rdi
  4f:	84 c0                	test   %al,%al
  51:	41 89 c4             	mov    %eax,%r12d
  54:	74 11                	je     67 <RDMSensorsParams::Load()+0x67>
  56:	48 85 ff             	test   %rdi,%rdi
  59:	74 1e                	je     79 <RDMSensorsParams::Load()+0x79>
  5b:	48 8b 07             	mov    (%rdi),%rax
  5e:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  62:	ff 50 10             	call   *0x10(%rax)
  65:	eb 12                	jmp    79 <RDMSensorsParams::Load()+0x79>
  67:	48 85 ff             	test   %rdi,%rdi
  6a:	74 0d                	je     79 <RDMSensorsParams::Load()+0x79>
  6c:	48 8b 07             	mov    (%rdi),%rax
  6f:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  73:	41 b4 01             	mov    $0x1,%r12b
  76:	ff 50 18             	call   *0x18(%rax)
  79:	48 89 ef             	mov    %rbp,%rdi
  7c:	e8 00 00 00 00       	call   81 <RDMSensorsParams::Load()+0x81>
  81:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  86:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8d:	00 00 
  8f:	74 05                	je     96 <RDMSensorsParams::Load()+0x96>
  91:	e8 00 00 00 00       	call   96 <RDMSensorsParams::Load()+0x96>
  96:	48 83 c4 20          	add    $0x20,%rsp
  9a:	44 89 e0             	mov    %r12d,%eax
  9d:	5b                   	pop    %rbx
  9e:	5d                   	pop    %rbp
  9f:	41 5c                	pop    %r12
  a1:	c3                   	ret    

Disassembly of section .text._ZN16RDMSensorsParams4LoadEPKcj:

0000000000000000 <RDMSensorsParams::Load(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	55                   	push   %rbp
   9:	53                   	push   %rbx
   a:	48 83 ec 28          	sub    $0x28,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  22:	74 4a                	je     6e <RDMSensorsParams::Load(char const*, unsigned int)+0x6e>
  24:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  2b:	48 89 fb             	mov    %rdi,%rbx
  2e:	49 89 f4             	mov    %rsi,%r12
  31:	41 89 d5             	mov    %edx,%r13d
  34:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  39:	48 89 fa             	mov    %rdi,%rdx
  3c:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 43 <RDMSensorsParams::Load(char const*, unsigned int)+0x43>
  43:	48 89 ef             	mov    %rbp,%rdi
  46:	e8 00 00 00 00       	call   4b <RDMSensorsParams::Load(char const*, unsigned int)+0x4b>
  4b:	44 89 ea             	mov    %r13d,%edx
  4e:	4c 89 e6             	mov    %r12,%rsi
  51:	48 89 ef             	mov    %rbp,%rdi
  54:	e8 00 00 00 00       	call   59 <RDMSensorsParams::Load(char const*, unsigned int)+0x59>
  59:	48 8b 3b             	mov    (%rbx),%rdi
  5c:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  60:	48 8b 07             	mov    (%rdi),%rax
  63:	ff 50 10             	call   *0x10(%rax)
  66:	48 89 ef             	mov    %rbp,%rdi
  69:	e8 00 00 00 00       	call   6e <RDMSensorsParams::Load(char const*, unsigned int)+0x6e>
  6e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  73:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  7a:	00 00 
  7c:	74 05                	je     83 <RDMSensorsParams::Load(char const*, unsigned int)+0x83>
  7e:	e8 00 00 00 00       	call   83 <RDMSensorsParams::Load(char const*, unsigned int)+0x83>
  83:	48 83 c4 28          	add    $0x28,%rsp
  87:	5b                   	pop    %rbx
  88:	5d                   	pop    %rbp
  89:	41 5c                	pop    %r12
  8b:	41 5d                	pop    %r13
  8d:	c3                   	ret    

Disassembly of section .text._ZN16RDMSensorsParams7BuilderEPK17TRDMSensorsParamsPcjRj:

0000000000000000 <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 89 cd             	mov    %ecx,%r13d
   9:	41 54                	push   %r12
   b:	49 89 d4             	mov    %rdx,%r12
   e:	55                   	push   %rbp
   f:	53                   	push   %rbx
  10:	4c 89 c3             	mov    %r8,%rbx
  13:	4c 8d 47 08          	lea    0x8(%rdi),%r8
  17:	48 83 ec 28          	sub    $0x28,%rsp
  1b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  22:	00 00 
  24:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  29:	31 c0                	xor    %eax,%eax
  2b:	48 85 f6             	test   %rsi,%rsi
  2e:	74 0c                	je     3c <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x3c>
  30:	b9 0d 00 00 00       	mov    $0xd,%ecx
  35:	4c 89 c7             	mov    %r8,%rdi
  38:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
  3a:	eb 0c                	jmp    48 <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x48>
  3c:	48 8b 3f             	mov    (%rdi),%rdi
  3f:	4c 89 c6             	mov    %r8,%rsi
  42:	48 8b 07             	mov    (%rdi),%rax
  45:	ff 50 18             	call   *0x18(%rax)
  48:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  4d:	44 89 e9             	mov    %r13d,%ecx
  50:	4c 89 e2             	mov    %r12,%rdx
  53:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 5a <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x5a>
  5a:	48 89 ef             	mov    %rbp,%rdi
  5d:	e8 00 00 00 00       	call   62 <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x62>
  62:	48 89 ef             	mov    %rbp,%rdi
  65:	e8 00 00 00 00       	call   6a <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x6a>
  6a:	0f b7 c0             	movzwl %ax,%eax
  6d:	89 03                	mov    %eax,(%rbx)
  6f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  74:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  7b:	00 00 
  7d:	74 05                	je     84 <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x84>
  7f:	e8 00 00 00 00       	call   84 <RDMSensorsParams::Builder(TRDMSensorsParams const*, char*, unsigned int, unsigned int&)+0x84>
  84:	48 83 c4 28          	add    $0x28,%rsp
  88:	5b                   	pop    %rbx
  89:	5d                   	pop    %rbp
  8a:	41 5c                	pop    %r12
  8c:	41 5d                	pop    %r13
  8e:	c3                   	ret    

Disassembly of section .text._ZN16RDMSensorsParams4SaveEPcjRj:

0000000000000000 <RDMSensorsParams::Save(char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   8:	49 89 c8             	mov    %rcx,%r8
   b:	75 07                	jne    14 <RDMSensorsParams::Save(char*, unsigned int, unsigned int&)+0x14>
   d:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
  13:	c3                   	ret    
  14:	89 d1                	mov    %edx,%ecx
  16:	48 89 f2             	mov    %rsi,%rdx
  19:	31 f6                	xor    %esi,%esi
  1b:	e9 00 00 00 00       	jmp    20 <RDMSensorsParams::Save(char*, unsigned int, unsigned int&)+0x20>

Disassembly of section .text._ZN16RDMSensorsParams4DumpEv:

0000000000000000 <RDMSensorsParams::Dump()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	c3                   	ret    

Disassembly of section .text._ZN16RDMSensorsParams3AddEP9RDMSensor:

0000000000000000 <RDMSensorsParams::Add(RDMSensor*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	48 89 f7             	mov    %rsi,%rdi
   9:	55                   	push   %rbp
   a:	48 89 f5             	mov    %rsi,%rbp
   d:	51                   	push   %rcx
   e:	48 8b 06             	mov    (%rsi),%rax
  11:	ff 50 10             	call   *0x10(%rax)
  14:	41 89 c4             	mov    %eax,%r12d
  17:	84 c0                	test   %al,%al
  19:	74 12                	je     2d <RDMSensorsParams::Add(RDMSensor*)+0x2d>
  1b:	e8 00 00 00 00       	call   20 <RDMSensorsParams::Add(RDMSensor*)+0x20>
  20:	48 89 ee             	mov    %rbp,%rsi
  23:	48 89 c7             	mov    %rax,%rdi
  26:	e8 00 00 00 00       	call   2b <RDMSensorsParams::Add(RDMSensor*)+0x2b>
  2b:	eb 0a                	jmp    37 <RDMSensorsParams::Add(RDMSensor*)+0x37>
  2d:	48 8b 45 00          	mov    0x0(%rbp),%rax
  31:	48 89 ef             	mov    %rbp,%rdi
  34:	ff 50 08             	call   *0x8(%rax)
  37:	44 89 e0             	mov    %r12d,%eax
  3a:	5a                   	pop    %rdx
  3b:	5d                   	pop    %rbp
  3c:	41 5c                	pop    %r12
  3e:	c3                   	ret    

Disassembly of section .text._ZN16RDMSensorsParams3SetEv:

0000000000000000 <RDMSensorsParams::Set()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	c3                   	ret    

Disassembly of section .text._ZN16RDMSensorsParams16callbackFunctionEPKc:

0000000000000000 <RDMSensorsParams::callbackFunction(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	b9 08 00 00 00       	mov    $0x8,%ecx
   b:	49 89 f1             	mov    %rsi,%r9
   e:	55                   	push   %rbp
   f:	48 89 fd             	mov    %rdi,%rbp
  12:	53                   	push   %rbx
  13:	48 83 ec 30          	sub    $0x30,%rsp
  17:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1e:	00 00 
  20:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  25:	31 c0                	xor    %eax,%eax
  27:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
  2c:	48 8d 54 24 05       	lea    0x5(%rsp),%rdx
  31:	c6 44 24 05 1f       	movb   $0x1f,0x5(%rsp)
  36:	4c 89 e7             	mov    %r12,%rdi
  39:	4c 8d 44 24 07       	lea    0x7(%rsp),%r8
  3e:	4c 89 e6             	mov    %r12,%rsi
  41:	c6 44 24 06 00       	movb   $0x0,0x6(%rsp)
  46:	c6 44 24 07 00       	movb   $0x0,0x7(%rsp)
  4b:	f3 ab                	rep stos %eax,%es:(%rdi)
  4d:	48 8d 4c 24 06       	lea    0x6(%rsp),%rcx
  52:	4c 89 cf             	mov    %r9,%rdi
  55:	e8 00 00 00 00       	call   5a <RDMSensorsParams::callbackFunction(char const*)+0x5a>
  5a:	89 c3                	mov    %eax,%ebx
  5c:	85 db                	test   %ebx,%ebx
  5e:	75 68                	jne    c8 <RDMSensorsParams::callbackFunction(char const*)+0xc8>
  60:	80 7c 24 08 00       	cmpb   $0x0,0x8(%rsp)
  65:	74 61                	je     c8 <RDMSensorsParams::callbackFunction(char const*)+0xc8>
  67:	80 7c 24 05 00       	cmpb   $0x0,0x5(%rsp)
  6c:	74 5a                	je     c8 <RDMSensorsParams::callbackFunction(char const*)+0xc8>
  6e:	4c 89 e7             	mov    %r12,%rdi
  71:	e8 00 00 00 00       	call   76 <RDMSensorsParams::callbackFunction(char const*)+0x76>
  76:	83 f8 05             	cmp    $0x5,%eax
  79:	74 4d                	je     c8 <RDMSensorsParams::callbackFunction(char const*)+0xc8>
  7b:	8b 55 08             	mov    0x8(%rbp),%edx
  7e:	40 8a 74 24 06       	mov    0x6(%rsp),%sil
  83:	48 8d 4d 0c          	lea    0xc(%rbp),%rcx
  87:	39 da                	cmp    %ebx,%edx
  89:	74 24                	je     af <RDMSensorsParams::callbackFunction(char const*)+0xaf>
  8b:	40 84 f6             	test   %sil,%sil
  8e:	74 10                	je     a0 <RDMSensorsParams::callbackFunction(char const*)+0xa0>
  90:	40 3a 71 01          	cmp    0x1(%rcx),%sil
  94:	75 11                	jne    a7 <RDMSensorsParams::callbackFunction(char const*)+0xa7>
  96:	48 8d 1c 5b          	lea    (%rbx,%rbx,2),%rbx
  9a:	88 44 1d 0c          	mov    %al,0xc(%rbp,%rbx,1)
  9e:	eb 28                	jmp    c8 <RDMSensorsParams::callbackFunction(char const*)+0xc8>
  a0:	0f b6 39             	movzbl (%rcx),%edi
  a3:	39 c7                	cmp    %eax,%edi
  a5:	74 21                	je     c8 <RDMSensorsParams::callbackFunction(char const*)+0xc8>
  a7:	ff c3                	inc    %ebx
  a9:	48 83 c1 03          	add    $0x3,%rcx
  ad:	eb d8                	jmp    87 <RDMSensorsParams::callbackFunction(char const*)+0x87>
  af:	83 fa 10             	cmp    $0x10,%edx
  b2:	74 14                	je     c8 <RDMSensorsParams::callbackFunction(char const*)+0xc8>
  b4:	8d 4a 01             	lea    0x1(%rdx),%ecx
  b7:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
  bb:	89 4d 08             	mov    %ecx,0x8(%rbp)
  be:	48 01 d5             	add    %rdx,%rbp
  c1:	88 45 0c             	mov    %al,0xc(%rbp)
  c4:	40 88 75 0d          	mov    %sil,0xd(%rbp)
  c8:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  cd:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  d4:	00 00 
  d6:	74 05                	je     dd <RDMSensorsParams::callbackFunction(char const*)+0xdd>
  d8:	e8 00 00 00 00       	call   dd <RDMSensorsParams::callbackFunction(char const*)+0xdd>
  dd:	48 83 c4 30          	add    $0x30,%rsp
  e1:	5b                   	pop    %rbx
  e2:	5d                   	pop    %rbp
  e3:	41 5c                	pop    %r12
  e5:	c3                   	ret    

Disassembly of section .text._ZN16RDMSensorsParams22staticCallbackFunctionEPvPKc:

0000000000000000 <RDMSensorsParams::staticCallbackFunction(void*, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	e9 00 00 00 00       	jmp    9 <RDMSensorsParams::staticCallbackFunction(void*, char const*)+0x9>

rdmsensorsstatic.o:     file format elf64-x86-64


Disassembly of section .text._ZN10RDMSensors13GetTypeStringEN3rdm7sensors4typeE:

0000000000000000 <RDMSensors::GetTypeString(rdm::sensors::type)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   b:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
   f:	77 17                	ja     28 <RDMSensors::GetTypeString(rdm::sensors::type)+0x28>
  11:	8b 45 fc             	mov    -0x4(%rbp),%eax
  14:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  1b:	00 
  1c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 23 <RDMSensors::GetTypeString(rdm::sensors::type)+0x23>
  23:	48 01 d0             	add    %rdx,%rax
  26:	eb 07                	jmp    2f <RDMSensors::GetTypeString(rdm::sensors::type)+0x2f>
  28:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2f <RDMSensors::GetTypeString(rdm::sensors::type)+0x2f>
  2f:	5d                   	pop    %rbp
  30:	c3                   	ret    

Disassembly of section .text._ZN10RDMSensors13GetTypeStringEPKc:

0000000000000000 <RDMSensors::GetTypeString(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  17:	eb 31                	jmp    4a <RDMSensors::GetTypeString(char const*)+0x4a>
  19:	8b 45 fc             	mov    -0x4(%rbp),%eax
  1c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  23:	00 
  24:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2b <RDMSensors::GetTypeString(char const*)+0x2b>
  2b:	48 01 c2             	add    %rax,%rdx
  2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  32:	48 89 d6             	mov    %rdx,%rsi
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <RDMSensors::GetTypeString(char const*)+0x3d>
  3d:	85 c0                	test   %eax,%eax
  3f:	75 05                	jne    46 <RDMSensors::GetTypeString(char const*)+0x46>
  41:	8b 45 fc             	mov    -0x4(%rbp),%eax
  44:	eb 0f                	jmp    55 <RDMSensors::GetTypeString(char const*)+0x55>
  46:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4a:	83 7d fc 04          	cmpl   $0x4,-0x4(%rbp)
  4e:	76 c9                	jbe    19 <RDMSensors::GetTypeString(char const*)+0x19>
  50:	b8 05 00 00 00       	mov    $0x5,%eax
  55:	c9                   	leave  
  56:	c3                   	ret    

rmdsensorprint.o:     file format elf64-x86-64


Disassembly of section .text._ZN9RDMSensor5PrintEv:

0000000000000000 <RDMSensor::Print()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8d 48 16          	lea    0x16(%rax),%rcx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	0f b6 40 36          	movzbl 0x36(%rax),%eax
  20:	0f b6 d0             	movzbl %al,%edx
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	0f b6 40 0a          	movzbl 0xa(%rax),%eax
  2b:	0f b6 c0             	movzbl %al,%eax
  2e:	89 c6                	mov    %eax,%esi
  30:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 37 <RDMSensor::Print()+0x37>
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	b8 00 00 00 00       	mov    $0x0,%eax
  3f:	e8 00 00 00 00       	call   44 <RDMSensor::Print()+0x44>
  44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  48:	0f b7 40 0e          	movzwl 0xe(%rax),%eax
  4c:	98                   	cwtl   
  4d:	89 c6                	mov    %eax,%esi
  4f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 56 <RDMSensor::Print()+0x56>
  56:	48 89 c7             	mov    %rax,%rdi
  59:	b8 00 00 00 00       	mov    $0x0,%eax
  5e:	e8 00 00 00 00       	call   63 <RDMSensor::Print()+0x63>
  63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  67:	0f b7 40 10          	movzwl 0x10(%rax),%eax
  6b:	98                   	cwtl   
  6c:	89 c6                	mov    %eax,%esi
  6e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 75 <RDMSensor::Print()+0x75>
  75:	48 89 c7             	mov    %rax,%rdi
  78:	b8 00 00 00 00       	mov    $0x0,%eax
  7d:	e8 00 00 00 00       	call   82 <RDMSensor::Print()+0x82>
  82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  86:	0f b7 40 12          	movzwl 0x12(%rax),%eax
  8a:	98                   	cwtl   
  8b:	89 c6                	mov    %eax,%esi
  8d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 94 <RDMSensor::Print()+0x94>
  94:	48 89 c7             	mov    %rax,%rdi
  97:	b8 00 00 00 00       	mov    $0x0,%eax
  9c:	e8 00 00 00 00       	call   a1 <RDMSensor::Print()+0xa1>
  a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a5:	0f b7 40 14          	movzwl 0x14(%rax),%eax
  a9:	98                   	cwtl   
  aa:	89 c6                	mov    %eax,%esi
  ac:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b3 <RDMSensor::Print()+0xb3>
  b3:	48 89 c7             	mov    %rax,%rdi
  b6:	b8 00 00 00 00       	mov    $0x0,%eax
  bb:	e8 00 00 00 00       	call   c0 <RDMSensor::Print()+0xc0>
  c0:	90                   	nop
  c1:	c9                   	leave  
  c2:	c3                   	ret    
