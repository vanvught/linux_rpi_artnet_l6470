In archive lib_linux/libdisplayudf.a:

displayudf.o:     file format elf64-x86-64


Disassembly of section .text._ZNK10DisplaySet10GetColumnsEv:

0000000000000000 <DisplaySet::GetColumns() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 08             	mov    0x8(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN7Display9ClearLineEj:

0000000000000000 <Display::ClearLine(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 40 18          	mov    0x18(%rax),%rax
  1b:	48 85 c0             	test   %rax,%rax
  1e:	74 26                	je     46 <Display::ClearLine(unsigned int)+0x46>
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	48 8b 40 18          	mov    0x18(%rax),%rax
  28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2c:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  30:	48 8b 12             	mov    (%rdx),%rdx
  33:	48 83 c2 20          	add    $0x20,%rdx
  37:	48 8b 0a             	mov    (%rdx),%rcx
  3a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  3d:	89 d6                	mov    %edx,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	ff d1                	call   *%rcx
  44:	eb 01                	jmp    47 <Display::ClearLine(unsigned int)+0x47>
  46:	90                   	nop
  47:	c9                   	leave  
  48:	c3                   	ret    

Disassembly of section .text._ZN7Display5WriteEjPKc:

0000000000000000 <Display::Write(unsigned int, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1b:	48 8b 40 18          	mov    0x18(%rax),%rax
  1f:	48 85 c0             	test   %rax,%rax
  22:	75 07                	jne    2b <Display::Write(unsigned int, char const*)+0x2b>
  24:	b8 00 00 00 00       	mov    $0x0,%eax
  29:	eb 7f                	jmp    aa <Display::Write(unsigned int, char const*)+0xaa>
  2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  33:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	48 8b 40 18          	mov    0x18(%rax),%rax
  42:	48 89 c7             	mov    %rax,%rdi
  45:	e8 00 00 00 00       	call   4a <Display::Write(unsigned int, char const*)+0x4a>
  4a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4d:	eb 05                	jmp    54 <Display::Write(unsigned int, char const*)+0x54>
  4f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  58:	0f b6 00             	movzbl (%rax),%eax
  5b:	84 c0                	test   %al,%al
  5d:	74 15                	je     74 <Display::Write(unsigned int, char const*)+0x74>
  5f:	8b 45 f0             	mov    -0x10(%rbp),%eax
  62:	8d 50 01             	lea    0x1(%rax),%edx
  65:	89 55 f0             	mov    %edx,-0x10(%rbp)
  68:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  6b:	76 07                	jbe    74 <Display::Write(unsigned int, char const*)+0x74>
  6d:	b8 01 00 00 00       	mov    $0x1,%eax
  72:	eb 05                	jmp    79 <Display::Write(unsigned int, char const*)+0x79>
  74:	b8 00 00 00 00       	mov    $0x0,%eax
  79:	84 c0                	test   %al,%al
  7b:	75 d2                	jne    4f <Display::Write(unsigned int, char const*)+0x4f>
  7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  81:	48 8b 40 18          	mov    0x18(%rax),%rax
  85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  89:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  8d:	48 8b 12             	mov    (%rdx),%rdx
  90:	48 83 c2 38          	add    $0x38,%rdx
  94:	4c 8b 02             	mov    (%rdx),%r8
  97:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  9a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  9e:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  a1:	48 89 c7             	mov    %rax,%rdi
  a4:	41 ff d0             	call   *%r8
  a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
  aa:	c9                   	leave  
  ab:	c3                   	ret    

Disassembly of section .text._ZN7Display6PrintfEjPKcz:

0000000000000000 <Display::Printf(unsigned int, char const*, ...)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   f:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  16:	89 b5 f4 fe ff ff    	mov    %esi,-0x10c(%rbp)
  1c:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
  23:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  2a:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  31:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  38:	84 c0                	test   %al,%al
  3a:	74 20                	je     5c <Display::Printf(unsigned int, char const*, ...)+0x5c>
  3c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  40:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  44:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  48:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  4c:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  50:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  54:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  58:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  5c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  63:	00 00 
  65:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  6c:	31 c0                	xor    %eax,%eax
  6e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  75:	48 8b 40 18          	mov    0x18(%rax),%rax
  79:	48 85 c0             	test   %rax,%rax
  7c:	75 0a                	jne    88 <Display::Printf(unsigned int, char const*, ...)+0x88>
  7e:	b8 00 00 00 00       	mov    $0x0,%eax
  83:	e9 94 00 00 00       	jmp    11c <Display::Printf(unsigned int, char const*, ...)+0x11c>
  88:	c7 85 08 ff ff ff 18 	movl   $0x18,-0xf8(%rbp)
  8f:	00 00 00 
  92:	c7 85 0c ff ff ff 30 	movl   $0x30,-0xf4(%rbp)
  99:	00 00 00 
  9c:	48 8d 45 10          	lea    0x10(%rbp),%rax
  a0:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  a7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  ae:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  b5:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
  bc:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  c3:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  ca:	be 20 00 00 00       	mov    $0x20,%esi
  cf:	48 89 c7             	mov    %rax,%rdi
  d2:	e8 00 00 00 00       	call   d7 <Display::Printf(unsigned int, char const*, ...)+0xd7>
  d7:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
  dd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  e4:	48 8b 40 18          	mov    0x18(%rax),%rax
  e8:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  ef:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  f3:	48 8b 12             	mov    (%rdx),%rdx
  f6:	48 83 c2 38          	add    $0x38,%rdx
  fa:	4c 8b 02             	mov    (%rdx),%r8
  fd:	8b 8d 04 ff ff ff    	mov    -0xfc(%rbp),%ecx
 103:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
 10a:	8b b5 f4 fe ff ff    	mov    -0x10c(%rbp),%esi
 110:	48 89 c7             	mov    %rax,%rdi
 113:	41 ff d0             	call   *%r8
 116:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
 11c:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
 123:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 12a:	00 00 
 12c:	74 05                	je     133 <Display::Printf(unsigned int, char const*, ...)+0x133>
 12e:	e8 00 00 00 00       	call   133 <Display::Printf(unsigned int, char const*, ...)+0x133>
 133:	c9                   	leave  
 134:	c3                   	ret    

Disassembly of section .text._ZNK7Network5GetIpEv:

0000000000000000 <Network::GetIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 10             	mov    0x10(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK7Network11GetHostNameEv:

0000000000000000 <Network::GetHostName() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 1c          	add    $0x1c,%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZNK7Network12GetGatewayIpEv:

0000000000000000 <Network::GetGatewayIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 14             	mov    0x14(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK7Network10GetNetmaskEv:

0000000000000000 <Network::GetNetmask() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 18             	mov    0x18(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK7Network14GetNetmaskCIDREv:

0000000000000000 <Network::GetNetmaskCIDR() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 40 18             	mov    0x18(%rax),%eax
  17:	89 c0                	mov    %eax,%eax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <Network::GetNetmaskCIDR() const+0x21>
  21:	c9                   	leave  
  22:	c3                   	ret    

Disassembly of section .text._ZNK7Network10IsDhcpUsedEv:

0000000000000000 <Network::IsDhcpUsed() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZNK7Network14IsZeroconfUsedEv:

0000000000000000 <Network::IsZeroconfUsed() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 03          	movzbl 0x3(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN7Network17GetAddressingModeEv:

0000000000000000 <Network::GetAddressingMode()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	e8 00 00 00 00       	call   15 <Network::GetAddressingMode()+0x15>
  15:	48 89 c7             	mov    %rax,%rdi
  18:	e8 00 00 00 00       	call   1d <Network::GetAddressingMode()+0x1d>
  1d:	84 c0                	test   %al,%al
  1f:	74 07                	je     28 <Network::GetAddressingMode()+0x28>
  21:	b8 5a 00 00 00       	mov    $0x5a,%eax
  26:	eb 35                	jmp    5d <Network::GetAddressingMode()+0x5d>
  28:	e8 00 00 00 00       	call   2d <Network::GetAddressingMode()+0x2d>
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <Network::GetAddressingMode()+0x35>
  35:	84 c0                	test   %al,%al
  37:	74 1f                	je     58 <Network::GetAddressingMode()+0x58>
  39:	e8 00 00 00 00       	call   3e <Network::GetAddressingMode()+0x3e>
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <Network::GetAddressingMode()+0x46>
  46:	84 c0                	test   %al,%al
  48:	74 07                	je     51 <Network::GetAddressingMode()+0x51>
  4a:	b8 44 00 00 00       	mov    $0x44,%eax
  4f:	eb 0c                	jmp    5d <Network::GetAddressingMode()+0x5d>
  51:	b8 53 00 00 00       	mov    $0x53,%eax
  56:	eb 05                	jmp    5d <Network::GetAddressingMode()+0x5d>
  58:	b8 55 00 00 00       	mov    $0x55,%eax
  5d:	c9                   	leave  
  5e:	c3                   	ret    

Disassembly of section .text._ZNK7Network11IsDhcpKnownEv:

0000000000000000 <Network::IsDhcpKnown() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	b8 01 00 00 00       	mov    $0x1,%eax
  11:	5d                   	pop    %rbp
  12:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Network::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder18GetDmxStartAddressEt:

0000000000000000 <RDMDeviceResponder::GetDmxStartAddress(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%rbp)
  1b:	74 1b                	je     38 <RDMDeviceResponder::GetDmxStartAddress(unsigned short)+0x38>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
  28:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  2c:	89 c6                	mov    %eax,%esi
  2e:	48 89 d7             	mov    %rdx,%rdi
  31:	e8 00 00 00 00       	call   36 <RDMDeviceResponder::GetDmxStartAddress(unsigned short)+0x36>
  36:	eb 23                	jmp    5b <RDMDeviceResponder::GetDmxStartAddress(unsigned short)+0x5b>
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	0f b6 80 cf 00 00 00 	movzbl 0xcf(%rax),%eax
  43:	0f b6 c0             	movzbl %al,%eax
  46:	c1 e0 08             	shl    $0x8,%eax
  49:	89 c2                	mov    %eax,%edx
  4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4f:	0f b6 80 d0 00 00 00 	movzbl 0xd0(%rax),%eax
  56:	0f b6 c0             	movzbl %al,%eax
  59:	01 d0                	add    %edx,%eax
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN18RDMDeviceResponder15GetDmxFootPrintEt:

0000000000000000 <RDMDeviceResponder::GetDmxFootPrint(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%rbp)
  1b:	74 1b                	je     38 <RDMDeviceResponder::GetDmxFootPrint(unsigned short)+0x38>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
  28:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  2c:	89 c6                	mov    %eax,%esi
  2e:	48 89 d7             	mov    %rdx,%rdi
  31:	e8 00 00 00 00       	call   36 <RDMDeviceResponder::GetDmxFootPrint(unsigned short)+0x36>
  36:	eb 23                	jmp    5b <RDMDeviceResponder::GetDmxFootPrint(unsigned short)+0x5b>
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	0f b6 80 cb 00 00 00 	movzbl 0xcb(%rax),%eax
  43:	0f b6 c0             	movzbl %al,%eax
  46:	c1 e0 08             	shl    $0x8,%eax
  49:	89 c2                	mov    %eax,%edx
  4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4f:	0f b6 80 cc 00 00 00 	movzbl 0xcc(%rax),%eax
  56:	0f b6 c0             	movzbl %al,%eax
  59:	01 d0                	add    %edx,%eax
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponder18GetDmxStartAddressEt:

0000000000000000 <ArtNetRdmResponder::GetDmxStartAddress(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	48 8d 50 08          	lea    0x8(%rax),%rdx
  1e:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  22:	89 c6                	mov    %eax,%esi
  24:	48 89 d7             	mov    %rdx,%rdi
  27:	e8 00 00 00 00       	call   2c <ArtNetRdmResponder::GetDmxStartAddress(unsigned short)+0x2c>
  2c:	c9                   	leave  
  2d:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponder15GetDmxFootPrintEt:

0000000000000000 <ArtNetRdmResponder::GetDmxFootPrint(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	48 8d 50 08          	lea    0x8(%rax),%rdx
  1e:	0f b7 45 f4          	movzwl -0xc(%rbp),%eax
  22:	89 c6                	mov    %eax,%esi
  24:	48 89 d7             	mov    %rdx,%rdi
  27:	e8 00 00 00 00       	call   2c <ArtNetRdmResponder::GetDmxFootPrint(unsigned short)+0x2c>
  2c:	c9                   	leave  
  2d:	c3                   	ret    

Disassembly of section .text._ZN18ArtNetRdmResponder3GetEv:

0000000000000000 <ArtNetRdmResponder::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ArtNetRdmResponder::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf19ShowDmxStartAddressEv:

0000000000000000 <DisplayUdf::ShowDmxStartAddress()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	e8 00 00 00 00       	call   15 <DisplayUdf::ShowDmxStartAddress()+0x15>
  15:	be 00 00 00 00       	mov    $0x0,%esi
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	e8 00 00 00 00       	call   22 <DisplayUdf::ShowDmxStartAddress()+0x22>
  22:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
  26:	e8 00 00 00 00       	call   2b <DisplayUdf::ShowDmxStartAddress()+0x2b>
  2b:	be 00 00 00 00       	mov    $0x0,%esi
  30:	48 89 c7             	mov    %rax,%rdi
  33:	e8 00 00 00 00       	call   38 <DisplayUdf::ShowDmxStartAddress()+0x38>
  38:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
  3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40:	0f b7 7d fe          	movzwl -0x2(%rbp),%edi
  44:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx
  48:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4c:	0f b6 49 4d          	movzbl 0x4d(%rcx),%ecx
  50:	0f b6 f1             	movzbl %cl,%esi
  53:	41 89 f8             	mov    %edi,%r8d
  56:	89 d1                	mov    %edx,%ecx
  58:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5f <DisplayUdf::ShowDmxStartAddress()+0x5f>
  5f:	48 89 c7             	mov    %rax,%rdi
  62:	b8 00 00 00 00       	mov    $0x0,%eax
  67:	e8 00 00 00 00       	call   6c <DisplayUdf::ShowDmxStartAddress()+0x6c>
  6c:	90                   	nop
  6d:	c9                   	leave  
  6e:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf13ShowIpAddressEv:

0000000000000000 <DisplayUdf::ShowIpAddress()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 57                	push   %r15
   a:	41 56                	push   %r14
   c:	41 55                	push   %r13
   e:	41 54                	push   %r12
  10:	53                   	push   %rbx
  11:	48 83 ec 18          	sub    $0x18,%rsp
  15:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  19:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  1d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  21:	0f b6 52 42          	movzbl 0x42(%rdx),%edx
  25:	0f b6 d2             	movzbl %dl,%edx
  28:	89 d6                	mov    %edx,%esi
  2a:	48 89 c7             	mov    %rax,%rdi
  2d:	e8 00 00 00 00       	call   32 <DisplayUdf::ShowIpAddress()+0x32>
  32:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  36:	e8 00 00 00 00       	call   3b <DisplayUdf::ShowIpAddress()+0x3b>
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	e8 00 00 00 00       	call   43 <DisplayUdf::ShowIpAddress()+0x43>
  43:	44 0f be f0          	movsbl %al,%r14d
  47:	e8 00 00 00 00       	call   4c <DisplayUdf::ShowIpAddress()+0x4c>
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	call   54 <DisplayUdf::ShowIpAddress()+0x54>
  54:	41 89 c4             	mov    %eax,%r12d
  57:	e8 00 00 00 00       	call   5c <DisplayUdf::ShowIpAddress()+0x5c>
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	e8 00 00 00 00       	call   64 <DisplayUdf::ShowIpAddress()+0x64>
  64:	c1 e8 18             	shr    $0x18,%eax
  67:	44 0f b6 e8          	movzbl %al,%r13d
  6b:	e8 00 00 00 00       	call   70 <DisplayUdf::ShowIpAddress()+0x70>
  70:	48 89 c7             	mov    %rax,%rdi
  73:	e8 00 00 00 00       	call   78 <DisplayUdf::ShowIpAddress()+0x78>
  78:	c1 e8 10             	shr    $0x10,%eax
  7b:	0f b6 c0             	movzbl %al,%eax
  7e:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  81:	e8 00 00 00 00       	call   86 <DisplayUdf::ShowIpAddress()+0x86>
  86:	48 89 c7             	mov    %rax,%rdi
  89:	e8 00 00 00 00       	call   8e <DisplayUdf::ShowIpAddress()+0x8e>
  8e:	c1 e8 08             	shr    $0x8,%eax
  91:	44 0f b6 f8          	movzbl %al,%r15d
  95:	e8 00 00 00 00       	call   9a <DisplayUdf::ShowIpAddress()+0x9a>
  9a:	48 89 c7             	mov    %rax,%rdi
  9d:	e8 00 00 00 00       	call   a2 <DisplayUdf::ShowIpAddress()+0xa2>
  a2:	0f b6 d0             	movzbl %al,%edx
  a5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  a9:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  ad:	0f b6 c0             	movzbl %al,%eax
  b0:	48 83 ec 08          	sub    $0x8,%rsp
  b4:	41 56                	push   %r14
  b6:	41 54                	push   %r12
  b8:	41 55                	push   %r13
  ba:	44 8b 4d c4          	mov    -0x3c(%rbp),%r9d
  be:	45 89 f8             	mov    %r15d,%r8d
  c1:	89 d1                	mov    %edx,%ecx
  c3:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # ca <DisplayUdf::ShowIpAddress()+0xca>
  ca:	89 c6                	mov    %eax,%esi
  cc:	48 89 df             	mov    %rbx,%rdi
  cf:	b8 00 00 00 00       	mov    $0x0,%eax
  d4:	e8 00 00 00 00       	call   d9 <DisplayUdf::ShowIpAddress()+0xd9>
  d9:	48 83 c4 20          	add    $0x20,%rsp
  dd:	90                   	nop
  de:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
  e2:	5b                   	pop    %rbx
  e3:	41 5c                	pop    %r12
  e5:	41 5d                	pop    %r13
  e7:	41 5e                	pop    %r14
  e9:	41 5f                	pop    %r15
  eb:	5d                   	pop    %rbp
  ec:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf11ShowNetmaskEv:

0000000000000000 <DisplayUdf::ShowNetmask()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 56                	push   %r14
   a:	41 55                	push   %r13
   c:	41 54                	push   %r12
   e:	53                   	push   %rbx
   f:	48 83 ec 10          	sub    $0x10,%rsp
  13:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  17:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
  1b:	e8 00 00 00 00       	call   20 <DisplayUdf::ShowNetmask()+0x20>
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <DisplayUdf::ShowNetmask()+0x28>
  28:	c1 e8 18             	shr    $0x18,%eax
  2b:	44 0f b6 e0          	movzbl %al,%r12d
  2f:	e8 00 00 00 00       	call   34 <DisplayUdf::ShowNetmask()+0x34>
  34:	48 89 c7             	mov    %rax,%rdi
  37:	e8 00 00 00 00       	call   3c <DisplayUdf::ShowNetmask()+0x3c>
  3c:	c1 e8 10             	shr    $0x10,%eax
  3f:	44 0f b6 f0          	movzbl %al,%r14d
  43:	e8 00 00 00 00       	call   48 <DisplayUdf::ShowNetmask()+0x48>
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	e8 00 00 00 00       	call   50 <DisplayUdf::ShowNetmask()+0x50>
  50:	c1 e8 08             	shr    $0x8,%eax
  53:	44 0f b6 e8          	movzbl %al,%r13d
  57:	e8 00 00 00 00       	call   5c <DisplayUdf::ShowNetmask()+0x5c>
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	e8 00 00 00 00       	call   64 <DisplayUdf::ShowNetmask()+0x64>
  64:	0f b6 d0             	movzbl %al,%edx
  67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  6b:	0f b6 40 4c          	movzbl 0x4c(%rax),%eax
  6f:	0f b6 c0             	movzbl %al,%eax
  72:	48 83 ec 08          	sub    $0x8,%rsp
  76:	41 54                	push   %r12
  78:	45 89 f1             	mov    %r14d,%r9d
  7b:	45 89 e8             	mov    %r13d,%r8d
  7e:	89 d1                	mov    %edx,%ecx
  80:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 87 <DisplayUdf::ShowNetmask()+0x87>
  87:	89 c6                	mov    %eax,%esi
  89:	48 89 df             	mov    %rbx,%rdi
  8c:	b8 00 00 00 00       	mov    $0x0,%eax
  91:	e8 00 00 00 00       	call   96 <DisplayUdf::ShowNetmask()+0x96>
  96:	48 83 c4 10          	add    $0x10,%rsp
  9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9e:	48 89 c7             	mov    %rax,%rdi
  a1:	e8 00 00 00 00       	call   a6 <DisplayUdf::ShowNetmask()+0xa6>
  a6:	90                   	nop
  a7:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
  ab:	5b                   	pop    %rbx
  ac:	41 5c                	pop    %r12
  ae:	41 5d                	pop    %r13
  b0:	41 5e                	pop    %r14
  b2:	5d                   	pop    %rbp
  b3:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf13ShowGatewayIpEv:

0000000000000000 <DisplayUdf::ShowGatewayIp()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 56                	push   %r14
   a:	41 55                	push   %r13
   c:	41 54                	push   %r12
   e:	53                   	push   %rbx
   f:	48 83 ec 10          	sub    $0x10,%rsp
  13:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  1b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  1f:	0f b6 52 52          	movzbl 0x52(%rdx),%edx
  23:	0f b6 d2             	movzbl %dl,%edx
  26:	89 d6                	mov    %edx,%esi
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <DisplayUdf::ShowGatewayIp()+0x30>
  30:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
  34:	e8 00 00 00 00       	call   39 <DisplayUdf::ShowGatewayIp()+0x39>
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	call   41 <DisplayUdf::ShowGatewayIp()+0x41>
  41:	c1 e8 18             	shr    $0x18,%eax
  44:	44 0f b6 e0          	movzbl %al,%r12d
  48:	e8 00 00 00 00       	call   4d <DisplayUdf::ShowGatewayIp()+0x4d>
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	e8 00 00 00 00       	call   55 <DisplayUdf::ShowGatewayIp()+0x55>
  55:	c1 e8 10             	shr    $0x10,%eax
  58:	44 0f b6 f0          	movzbl %al,%r14d
  5c:	e8 00 00 00 00       	call   61 <DisplayUdf::ShowGatewayIp()+0x61>
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <DisplayUdf::ShowGatewayIp()+0x69>
  69:	c1 e8 08             	shr    $0x8,%eax
  6c:	44 0f b6 e8          	movzbl %al,%r13d
  70:	e8 00 00 00 00       	call   75 <DisplayUdf::ShowGatewayIp()+0x75>
  75:	48 89 c7             	mov    %rax,%rdi
  78:	e8 00 00 00 00       	call   7d <DisplayUdf::ShowGatewayIp()+0x7d>
  7d:	0f b6 d0             	movzbl %al,%edx
  80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  84:	0f b6 40 52          	movzbl 0x52(%rax),%eax
  88:	0f b6 c0             	movzbl %al,%eax
  8b:	48 83 ec 08          	sub    $0x8,%rsp
  8f:	41 54                	push   %r12
  91:	45 89 f1             	mov    %r14d,%r9d
  94:	45 89 e8             	mov    %r13d,%r8d
  97:	89 d1                	mov    %edx,%ecx
  99:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # a0 <DisplayUdf::ShowGatewayIp()+0xa0>
  a0:	89 c6                	mov    %eax,%esi
  a2:	48 89 df             	mov    %rbx,%rdi
  a5:	b8 00 00 00 00       	mov    $0x0,%eax
  aa:	e8 00 00 00 00       	call   af <DisplayUdf::ShowGatewayIp()+0xaf>
  af:	48 83 c4 10          	add    $0x10,%rsp
  b3:	90                   	nop
  b4:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
  b8:	5b                   	pop    %rbx
  b9:	41 5c                	pop    %r12
  bb:	41 5d                	pop    %r13
  bd:	41 5e                	pop    %r14
  bf:	5d                   	pop    %rbp
  c0:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf12ShowHostNameEv:

0000000000000000 <DisplayUdf::ShowHostName()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  19:	0f b6 52 47          	movzbl 0x47(%rdx),%edx
  1d:	0f b6 d2             	movzbl %dl,%edx
  20:	89 d6                	mov    %edx,%esi
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <DisplayUdf::ShowHostName()+0x2a>
  2a:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  2e:	e8 00 00 00 00       	call   33 <DisplayUdf::ShowHostName()+0x33>
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	call   3b <DisplayUdf::ShowHostName()+0x3b>
  3b:	48 89 c2             	mov    %rax,%rdx
  3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42:	0f b6 40 47          	movzbl 0x47(%rax),%eax
  46:	0f b6 c0             	movzbl %al,%eax
  49:	89 c6                	mov    %eax,%esi
  4b:	48 89 df             	mov    %rbx,%rdi
  4e:	e8 00 00 00 00       	call   53 <DisplayUdf::ShowHostName()+0x53>
  53:	90                   	nop
  54:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  58:	c9                   	leave  
  59:	c3                   	ret    

Disassembly of section .text._ZN15FirmwareVersion10GetVersionEv:

0000000000000000 <FirmwareVersion::GetVersion()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 13 <FirmwareVersion::GetVersion()+0x13>
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN15FirmwareVersion3GetEv:

0000000000000000 <FirmwareVersion::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <FirmwareVersion::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdfC2Ev:

0000000000000000 <DisplayUdf::DisplayUdf()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <DisplayUdf::DisplayUdf()+0x1c>
  1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  20:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%rax)
  27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2b:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  36:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%rax)
  3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 48 <DisplayUdf::DisplayUdf()+0x48>
  48:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4f:	eb 15                	jmp    66 <DisplayUdf::DisplayUdf()+0x66>
  51:	8b 45 fc             	mov    -0x4(%rbp),%eax
  54:	8d 48 01             	lea    0x1(%rax),%ecx
  57:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  5b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  5e:	88 4c 02 40          	mov    %cl,0x40(%rdx,%rax,1)
  62:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  66:	83 7d fc 13          	cmpl   $0x13,-0x4(%rbp)
  6a:	76 e5                	jbe    51 <DisplayUdf::DisplayUdf()+0x51>
  6c:	90                   	nop
  6d:	90                   	nop
  6e:	c9                   	leave  
  6f:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf8SetTitleEPKcz:

0000000000000000 <DisplayUdf::SetTitle(char const*, ...)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
   f:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  16:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  1d:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  24:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  2b:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  32:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  39:	84 c0                	test   %al,%al
  3b:	74 20                	je     5d <DisplayUdf::SetTitle(char const*, ...)+0x5d>
  3d:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  41:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  45:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  49:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  4d:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  51:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  55:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  59:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  5d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  64:	00 00 
  66:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  6d:	31 c0                	xor    %eax,%eax
  6f:	c7 85 30 ff ff ff 10 	movl   $0x10,-0xd0(%rbp)
  76:	00 00 00 
  79:	c7 85 34 ff ff ff 30 	movl   $0x30,-0xcc(%rbp)
  80:	00 00 00 
  83:	48 8d 45 10          	lea    0x10(%rbp),%rax
  87:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  8e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  95:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  9c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  a3:	48 8d 78 20          	lea    0x20(%rax),%rdi
  a7:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  ae:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
  b5:	48 89 d1             	mov    %rdx,%rcx
  b8:	48 89 c2             	mov    %rax,%rdx
  bb:	be 1f 00 00 00       	mov    $0x1f,%esi
  c0:	e8 00 00 00 00       	call   c5 <DisplayUdf::SetTitle(char const*, ...)+0xc5>
  c5:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
  cb:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  d2:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
  d8:	48 98                	cltq   
  da:	c6 44 02 20 00       	movb   $0x0,0x20(%rdx,%rax,1)
  df:	90                   	nop
  e0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  e7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  ee:	00 00 
  f0:	74 05                	je     f7 <DisplayUdf::SetTitle(char const*, ...)+0xf7>
  f2:	e8 00 00 00 00       	call   f7 <DisplayUdf::SetTitle(char const*, ...)+0xf7>
  f7:	c9                   	leave  
  f8:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf3SetEjN10displayudf6LabelsE:

0000000000000000 <DisplayUdf::Set(unsigned int, displayudf::Labels)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   f:	89 55 e0             	mov    %edx,-0x20(%rbp)
  12:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  16:	74 5b                	je     73 <DisplayUdf::Set(unsigned int, displayudf::Labels)+0x73>
  18:	83 7d e4 06          	cmpl   $0x6,-0x1c(%rbp)
  1c:	77 55                	ja     73 <DisplayUdf::Set(unsigned int, displayudf::Labels)+0x73>
  1e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  25:	eb 32                	jmp    59 <DisplayUdf::Set(unsigned int, displayudf::Labels)+0x59>
  27:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  2b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2e:	0f b6 44 02 40       	movzbl 0x40(%rdx,%rax,1),%eax
  33:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  36:	38 d0                	cmp    %dl,%al
  38:	75 1b                	jne    55 <DisplayUdf::Set(unsigned int, displayudf::Labels)+0x55>
  3a:	8b 55 e0             	mov    -0x20(%rbp),%edx
  3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41:	89 d2                	mov    %edx,%edx
  43:	0f b6 4c 10 40       	movzbl 0x40(%rax,%rdx,1),%ecx
  48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4f:	88 4c 02 40          	mov    %cl,0x40(%rdx,%rax,1)
  53:	eb 0a                	jmp    5f <DisplayUdf::Set(unsigned int, displayudf::Labels)+0x5f>
  55:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  59:	83 7d fc 13          	cmpl   $0x13,-0x4(%rbp)
  5d:	76 c8                	jbe    27 <DisplayUdf::Set(unsigned int, displayudf::Labels)+0x27>
  5f:	8b 55 e0             	mov    -0x20(%rbp),%edx
  62:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  65:	89 c1                	mov    %eax,%ecx
  67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6b:	89 d2                	mov    %edx,%edx
  6d:	88 4c 10 40          	mov    %cl,0x40(%rax,%rdx,1)
  71:	eb 01                	jmp    74 <DisplayUdf::Set(unsigned int, displayudf::Labels)+0x74>
  73:	90                   	nop
  74:	5d                   	pop    %rbp
  75:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf4ShowEv:

0000000000000000 <DisplayUdf::Show()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 38          	sub    $0x38,%rsp
   d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  1e:	31 c0                	xor    %eax,%eax
  20:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  27:	eb 20                	jmp    49 <DisplayUdf::Show()+0x49>
  29:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  2d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  30:	0f b6 44 02 40       	movzbl 0x40(%rdx,%rax,1),%eax
  35:	3c 06                	cmp    $0x6,%al
  37:	76 0c                	jbe    45 <DisplayUdf::Show()+0x45>
  39:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  3d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40:	c6 44 02 40 ff       	movb   $0xff,0x40(%rdx,%rax,1)
  45:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
  49:	83 7d e0 13          	cmpl   $0x13,-0x20(%rbp)
  4d:	76 da                	jbe    29 <DisplayUdf::Show()+0x29>
  4f:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
  56:	eb 15                	jmp    6d <DisplayUdf::Show()+0x6d>
  58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  5c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  5f:	89 d6                	mov    %edx,%esi
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <DisplayUdf::Show()+0x69>
  69:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  6d:	83 7d e4 05          	cmpl   $0x5,-0x1c(%rbp)
  71:	76 e5                	jbe    58 <DisplayUdf::Show()+0x58>
  73:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  77:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  7b:	48 83 c2 20          	add    $0x20,%rdx
  7f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  83:	0f b6 49 40          	movzbl 0x40(%rcx),%ecx
  87:	0f b6 c9             	movzbl %cl,%ecx
  8a:	89 ce                	mov    %ecx,%esi
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	e8 00 00 00 00       	call   94 <DisplayUdf::Show()+0x94>
  94:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  98:	e8 00 00 00 00       	call   9d <DisplayUdf::Show()+0x9d>
  9d:	48 89 c2             	mov    %rax,%rdx
  a0:	48 8d 45 df          	lea    -0x21(%rbp),%rax
  a4:	48 89 c6             	mov    %rax,%rsi
  a7:	48 89 d7             	mov    %rdx,%rdi
  aa:	e8 00 00 00 00       	call   af <DisplayUdf::Show()+0xaf>
  af:	48 89 c2             	mov    %rax,%rdx
  b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  b6:	0f b6 40 41          	movzbl 0x41(%rax),%eax
  ba:	0f b6 c0             	movzbl %al,%eax
  bd:	89 c6                	mov    %eax,%esi
  bf:	48 89 df             	mov    %rbx,%rdi
  c2:	e8 00 00 00 00       	call   c7 <DisplayUdf::Show()+0xc7>
  c7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  cb:	e8 00 00 00 00       	call   d0 <DisplayUdf::Show()+0xd0>
  d0:	48 89 c7             	mov    %rax,%rdi
  d3:	e8 00 00 00 00       	call   d8 <DisplayUdf::Show()+0xd8>
  d8:	48 89 c2             	mov    %rax,%rdx
  db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  df:	0f b6 40 43          	movzbl 0x43(%rax),%eax
  e3:	0f b6 c0             	movzbl %al,%eax
  e6:	49 89 d0             	mov    %rdx,%r8
  e9:	b9 03 00 00 00       	mov    $0x3,%ecx
  ee:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # f5 <DisplayUdf::Show()+0xf5>
  f5:	89 c6                	mov    %eax,%esi
  f7:	48 89 df             	mov    %rbx,%rdi
  fa:	b8 00 00 00 00       	mov    $0x0,%eax
  ff:	e8 00 00 00 00       	call   104 <DisplayUdf::Show()+0x104>
 104:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 108:	48 89 c7             	mov    %rax,%rdi
 10b:	e8 00 00 00 00       	call   110 <DisplayUdf::Show()+0x110>
 110:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 114:	48 89 c7             	mov    %rax,%rdi
 117:	e8 00 00 00 00       	call   11c <DisplayUdf::Show()+0x11c>
 11c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 120:	48 89 c7             	mov    %rax,%rdi
 123:	e8 00 00 00 00       	call   128 <DisplayUdf::Show()+0x128>
 128:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 12c:	48 89 c7             	mov    %rax,%rdi
 12f:	e8 00 00 00 00       	call   134 <DisplayUdf::Show()+0x134>
 134:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 138:	48 89 c7             	mov    %rax,%rdi
 13b:	e8 00 00 00 00       	call   140 <DisplayUdf::Show()+0x140>
 140:	90                   	nop
 141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 145:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 14c:	00 00 
 14e:	74 05                	je     155 <DisplayUdf::Show()+0x155>
 150:	e8 00 00 00 00       	call   155 <DisplayUdf::Show()+0x155>
 155:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 159:	c9                   	leave  
 15a:	c3                   	ret    

displayudfparamsconst.o:     file format elf64-x86-64


displayudfparams.o:     file format elf64-x86-64


Disassembly of section .text._ZN7Display15SetSleepTimeoutEj:

0000000000000000 <Display::SetSleepTimeout(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	69 f6 60 ea 00 00    	imul   $0xea60,%esi,%esi
   a:	89 77 14             	mov    %esi,0x14(%rdi)
   d:	c3                   	ret    

Disassembly of section .text._ZN7Display11SetContrastEh:

0000000000000000 <Display::SetContrast(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
   8:	48 85 ff             	test   %rdi,%rdi
   b:	74 0a                	je     17 <Display::SetContrast(unsigned char)+0x17>
   d:	48 8b 07             	mov    (%rdi),%rax
  10:	40 0f b6 f6          	movzbl %sil,%esi
  14:	ff 60 58             	jmp    *0x58(%rax)
  17:	c3                   	ret    

Disassembly of section .text._ZN7Display17SetFlipVerticallyEb:

0000000000000000 <Display::SetFlipVertically(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
   8:	48 85 ff             	test   %rdi,%rdi
   b:	74 0a                	je     17 <Display::SetFlipVertically(bool)+0x17>
   d:	48 8b 07             	mov    (%rdi),%rax
  10:	40 0f b6 f6          	movzbl %sil,%esi
  14:	ff 60 60             	jmp    *0x60(%rax)
  17:	c3                   	ret    

Disassembly of section .text._ZNK16DisplayUdfParams9isMaskSetEj:

0000000000000000 <DisplayUdfParams::isMaskSet(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8b 47 08             	mov    0x8(%rdi),%eax
   7:	21 f0                	and    %esi,%eax
   9:	39 f0                	cmp    %esi,%eax
   b:	0f 94 c0             	sete   %al
   e:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder7GetSizeEv:

0000000000000000 <PropertiesBuilder::GetSize()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	80 7f 0c 00          	cmpb   $0x0,0xc(%rdi)
   8:	74 1b                	je     25 <PropertiesBuilder::GetSize()+0x25>
   a:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
   e:	48 8b 17             	mov    (%rdi),%rdx
  11:	c6 44 02 ff 7d       	movb   $0x7d,-0x1(%rdx,%rax,1)
  16:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
  1a:	48 8b 17             	mov    (%rdi),%rdx
  1d:	c6 04 02 7d          	movb   $0x7d,(%rdx,%rax,1)
  21:	66 ff 47 0a          	incw   0xa(%rdi)
  25:	66 8b 47 0a          	mov    0xa(%rdi),%ax
  29:	c3                   	ret    

Disassembly of section .text._ZN16DisplayUdfParamsC2EP21DisplayUdfParamsStore:

0000000000000000 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 89 37             	mov    %rsi,(%rdi)
   7:	48 8d 77 08          	lea    0x8(%rdi),%rsi
   b:	48 89 fa             	mov    %rdi,%rdx
   e:	b9 08 00 00 00       	mov    $0x8,%ecx
  13:	31 c0                	xor    %eax,%eax
  15:	48 89 f7             	mov    %rsi,%rdi
  18:	f3 ab                	rep stos %eax,%es:(%rdi)
  1a:	66 c7 42 28 05 7f    	movw   $0x7f05,0x28(%rdx)
  20:	c3                   	ret    

Disassembly of section .text._ZN16DisplayUdfParams4LoadEv:

0000000000000000 <DisplayUdfParams::Load()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	48 89 fa             	mov    %rdi,%rdx
   9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 10 <DisplayUdfParams::Load()+0x10>
  10:	55                   	push   %rbp
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	48 83 ec 20          	sub    $0x20,%rsp
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  27:	31 c0                	xor    %eax,%eax
  29:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  30:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  35:	48 89 ef             	mov    %rbp,%rdi
  38:	e8 00 00 00 00       	call   3d <DisplayUdfParams::Load()+0x3d>
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 47 <DisplayUdfParams::Load()+0x47>
  47:	e8 00 00 00 00       	call   4c <DisplayUdfParams::Load()+0x4c>
  4c:	48 8b 3b             	mov    (%rbx),%rdi
  4f:	84 c0                	test   %al,%al
  51:	41 89 c4             	mov    %eax,%r12d
  54:	74 11                	je     67 <DisplayUdfParams::Load()+0x67>
  56:	48 85 ff             	test   %rdi,%rdi
  59:	74 1e                	je     79 <DisplayUdfParams::Load()+0x79>
  5b:	48 8b 07             	mov    (%rdi),%rax
  5e:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  62:	ff 50 10             	call   *0x10(%rax)
  65:	eb 12                	jmp    79 <DisplayUdfParams::Load()+0x79>
  67:	48 85 ff             	test   %rdi,%rdi
  6a:	74 0d                	je     79 <DisplayUdfParams::Load()+0x79>
  6c:	48 8b 07             	mov    (%rdi),%rax
  6f:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  73:	41 b4 01             	mov    $0x1,%r12b
  76:	ff 50 18             	call   *0x18(%rax)
  79:	48 89 ef             	mov    %rbp,%rdi
  7c:	e8 00 00 00 00       	call   81 <DisplayUdfParams::Load()+0x81>
  81:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  86:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8d:	00 00 
  8f:	74 05                	je     96 <DisplayUdfParams::Load()+0x96>
  91:	e8 00 00 00 00       	call   96 <DisplayUdfParams::Load()+0x96>
  96:	48 83 c4 20          	add    $0x20,%rsp
  9a:	44 89 e0             	mov    %r12d,%eax
  9d:	5b                   	pop    %rbx
  9e:	5d                   	pop    %rbp
  9f:	41 5c                	pop    %r12
  a1:	c3                   	ret    

Disassembly of section .text._ZN16DisplayUdfParams4LoadEPKcj:

0000000000000000 <DisplayUdfParams::Load(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	55                   	push   %rbp
   9:	53                   	push   %rbx
   a:	48 83 ec 28          	sub    $0x28,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  22:	74 4a                	je     6e <DisplayUdfParams::Load(char const*, unsigned int)+0x6e>
  24:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  2b:	48 89 fb             	mov    %rdi,%rbx
  2e:	49 89 f4             	mov    %rsi,%r12
  31:	41 89 d5             	mov    %edx,%r13d
  34:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  39:	48 89 fa             	mov    %rdi,%rdx
  3c:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 43 <DisplayUdfParams::Load(char const*, unsigned int)+0x43>
  43:	48 89 ef             	mov    %rbp,%rdi
  46:	e8 00 00 00 00       	call   4b <DisplayUdfParams::Load(char const*, unsigned int)+0x4b>
  4b:	44 89 ea             	mov    %r13d,%edx
  4e:	4c 89 e6             	mov    %r12,%rsi
  51:	48 89 ef             	mov    %rbp,%rdi
  54:	e8 00 00 00 00       	call   59 <DisplayUdfParams::Load(char const*, unsigned int)+0x59>
  59:	48 8b 3b             	mov    (%rbx),%rdi
  5c:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  60:	48 8b 07             	mov    (%rdi),%rax
  63:	ff 50 10             	call   *0x10(%rax)
  66:	48 89 ef             	mov    %rbp,%rdi
  69:	e8 00 00 00 00       	call   6e <DisplayUdfParams::Load(char const*, unsigned int)+0x6e>
  6e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  73:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  7a:	00 00 
  7c:	74 05                	je     83 <DisplayUdfParams::Load(char const*, unsigned int)+0x83>
  7e:	e8 00 00 00 00       	call   83 <DisplayUdfParams::Load(char const*, unsigned int)+0x83>
  83:	48 83 c4 28          	add    $0x28,%rsp
  87:	5b                   	pop    %rbx
  88:	5d                   	pop    %rbp
  89:	41 5c                	pop    %r12
  8b:	41 5d                	pop    %r13
  8d:	c3                   	ret    

Disassembly of section .text._ZN16DisplayUdfParams16callbackFunctionEPKc:

0000000000000000 <DisplayUdfParams::callbackFunction(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	41 56                	push   %r14
   8:	41 55                	push   %r13
   a:	41 54                	push   %r12
   c:	55                   	push   %rbp
   d:	48 89 f5             	mov    %rsi,%rbp
  10:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 17 <DisplayUdfParams::callbackFunction(char const*)+0x17>
  17:	53                   	push   %rbx
  18:	48 89 fb             	mov    %rdi,%rbx
  1b:	48 89 ef             	mov    %rbp,%rdi
  1e:	48 83 ec 18          	sub    $0x18,%rsp
  22:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  29:	00 00 
  2b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  30:	31 c0                	xor    %eax,%eax
  32:	4c 8d 74 24 07       	lea    0x7(%rsp),%r14
  37:	4c 89 f2             	mov    %r14,%rdx
  3a:	e8 00 00 00 00       	call   3f <DisplayUdfParams::callbackFunction(char const*)+0x3f>
  3f:	85 c0                	test   %eax,%eax
  41:	75 1c                	jne    5f <DisplayUdfParams::callbackFunction(char const*)+0x5f>
  43:	8b 43 08             	mov    0x8(%rbx),%eax
  46:	8a 54 24 07          	mov    0x7(%rsp),%dl
  4a:	89 c1                	mov    %eax,%ecx
  4c:	88 53 29             	mov    %dl,0x29(%rbx)
  4f:	0d 00 00 00 20       	or     $0x20000000,%eax
  54:	81 e1 ff ff ff df    	and    $0xdfffffff,%ecx
  5a:	80 fa 7f             	cmp    $0x7f,%dl
  5d:	eb 30                	jmp    8f <DisplayUdfParams::callbackFunction(char const*)+0x8f>
  5f:	4c 89 f2             	mov    %r14,%rdx
  62:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 69 <DisplayUdfParams::callbackFunction(char const*)+0x69>
  69:	48 89 ef             	mov    %rbp,%rdi
  6c:	e8 00 00 00 00       	call   71 <DisplayUdfParams::callbackFunction(char const*)+0x71>
  71:	85 c0                	test   %eax,%eax
  73:	75 1f                	jne    94 <DisplayUdfParams::callbackFunction(char const*)+0x94>
  75:	8a 54 24 07          	mov    0x7(%rsp),%dl
  79:	8b 43 08             	mov    0x8(%rbx),%eax
  7c:	88 53 28             	mov    %dl,0x28(%rbx)
  7f:	89 c1                	mov    %eax,%ecx
  81:	0d 00 00 00 10       	or     $0x10000000,%eax
  86:	81 e1 ff ff ff ef    	and    $0xefffffff,%ecx
  8c:	80 fa 05             	cmp    $0x5,%dl
  8f:	0f 44 c1             	cmove  %ecx,%eax
  92:	eb 78                	jmp    10c <DisplayUdfParams::callbackFunction(char const*)+0x10c>
  94:	4c 89 f2             	mov    %r14,%rdx
  97:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 9e <DisplayUdfParams::callbackFunction(char const*)+0x9e>
  9e:	48 89 ef             	mov    %rbp,%rdi
  a1:	45 31 e4             	xor    %r12d,%r12d
  a4:	e8 00 00 00 00       	call   a9 <DisplayUdfParams::callbackFunction(char const*)+0xa9>
  a9:	4c 8d 3d 00 00 00 00 	lea    0x0(%rip),%r15        # b0 <DisplayUdfParams::callbackFunction(char const*)+0xb0>
  b0:	85 c0                	test   %eax,%eax
  b2:	75 21                	jne    d5 <DisplayUdfParams::callbackFunction(char const*)+0xd5>
  b4:	80 7c 24 07 00       	cmpb   $0x0,0x7(%rsp)
  b9:	8b 43 08             	mov    0x8(%rbx),%eax
  bc:	74 07                	je     c5 <DisplayUdfParams::callbackFunction(char const*)+0xc5>
  be:	0d 00 00 00 40       	or     $0x40000000,%eax
  c3:	eb 47                	jmp    10c <DisplayUdfParams::callbackFunction(char const*)+0x10c>
  c5:	25 ff ff ff bf       	and    $0xbfffffff,%eax
  ca:	eb 40                	jmp    10c <DisplayUdfParams::callbackFunction(char const*)+0x10c>
  cc:	49 ff c4             	inc    %r12
  cf:	49 83 fc 14          	cmp    $0x14,%r12
  d3:	74 48                	je     11d <DisplayUdfParams::callbackFunction(char const*)+0x11d>
  d5:	4b 8b 34 e7          	mov    (%r15,%r12,8),%rsi
  d9:	4c 89 f2             	mov    %r14,%rdx
  dc:	48 89 ef             	mov    %rbp,%rdi
  df:	45 89 e5             	mov    %r12d,%r13d
  e2:	e8 00 00 00 00       	call   e7 <DisplayUdfParams::callbackFunction(char const*)+0xe7>
  e7:	85 c0                	test   %eax,%eax
  e9:	75 e1                	jne    cc <DisplayUdfParams::callbackFunction(char const*)+0xcc>
  eb:	40 8a 74 24 07       	mov    0x7(%rsp),%sil
  f0:	44 89 e9             	mov    %r13d,%ecx
  f3:	b8 01 00 00 00       	mov    $0x1,%eax
  f8:	8b 53 08             	mov    0x8(%rbx),%edx
  fb:	d3 e0                	shl    %cl,%eax
  fd:	8d 4e ff             	lea    -0x1(%rsi),%ecx
 100:	80 f9 05             	cmp    $0x5,%cl
 103:	77 0c                	ja     111 <DisplayUdfParams::callbackFunction(char const*)+0x111>
 105:	42 88 74 2b 0c       	mov    %sil,0xc(%rbx,%r13,1)
 10a:	09 d0                	or     %edx,%eax
 10c:	89 43 08             	mov    %eax,0x8(%rbx)
 10f:	eb 0c                	jmp    11d <DisplayUdfParams::callbackFunction(char const*)+0x11d>
 111:	f7 d0                	not    %eax
 113:	42 c6 44 2b 0c 00    	movb   $0x0,0xc(%rbx,%r13,1)
 119:	21 d0                	and    %edx,%eax
 11b:	eb ef                	jmp    10c <DisplayUdfParams::callbackFunction(char const*)+0x10c>
 11d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
 122:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 129:	00 00 
 12b:	74 05                	je     132 <DisplayUdfParams::callbackFunction(char const*)+0x132>
 12d:	e8 00 00 00 00       	call   132 <DisplayUdfParams::callbackFunction(char const*)+0x132>
 132:	48 83 c4 18          	add    $0x18,%rsp
 136:	5b                   	pop    %rbx
 137:	5d                   	pop    %rbp
 138:	41 5c                	pop    %r12
 13a:	41 5d                	pop    %r13
 13c:	41 5e                	pop    %r14
 13e:	41 5f                	pop    %r15
 140:	c3                   	ret    

Disassembly of section .text._ZN16DisplayUdfParams7BuilderEPKN16displayudfparams6ParamsEPcjRj:

0000000000000000 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	41 56                	push   %r14
   8:	41 89 ce             	mov    %ecx,%r14d
   b:	41 55                	push   %r13
   d:	4d 89 c5             	mov    %r8,%r13
  10:	4c 8d 47 08          	lea    0x8(%rdi),%r8
  14:	41 54                	push   %r12
  16:	49 89 d4             	mov    %rdx,%r12
  19:	55                   	push   %rbp
  1a:	53                   	push   %rbx
  1b:	48 89 fb             	mov    %rdi,%rbx
  1e:	48 83 ec 28          	sub    $0x28,%rsp
  22:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  29:	00 00 
  2b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  30:	31 c0                	xor    %eax,%eax
  32:	48 85 f6             	test   %rsi,%rsi
  35:	74 0c                	je     43 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x43>
  37:	b9 22 00 00 00       	mov    $0x22,%ecx
  3c:	4c 89 c7             	mov    %r8,%rdi
  3f:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
  41:	eb 0c                	jmp    4f <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x4f>
  43:	48 8b 3f             	mov    (%rdi),%rdi
  46:	4c 89 c6             	mov    %r8,%rsi
  49:	48 8b 07             	mov    (%rdi),%rax
  4c:	ff 50 18             	call   *0x18(%rax)
  4f:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  54:	4c 89 e2             	mov    %r12,%rdx
  57:	44 89 f1             	mov    %r14d,%ecx
  5a:	45 31 e4             	xor    %r12d,%r12d
  5d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 64 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x64>
  64:	48 89 ef             	mov    %rbp,%rdi
  67:	4c 8d 3d 00 00 00 00 	lea    0x0(%rip),%r15        # 6e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x6e>
  6e:	e8 00 00 00 00       	call   73 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x73>
  73:	be 00 00 00 20       	mov    $0x20000000,%esi
  78:	48 89 df             	mov    %rbx,%rdi
  7b:	e8 00 00 00 00       	call   80 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x80>
  80:	0f b6 53 29          	movzbl 0x29(%rbx),%edx
  84:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  8a:	48 89 ef             	mov    %rbp,%rdi
  8d:	0f b6 c8             	movzbl %al,%ecx
  90:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 97 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x97>
  97:	e8 00 00 00 00       	call   9c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x9c>
  9c:	be 00 00 00 10       	mov    $0x10000000,%esi
  a1:	48 89 df             	mov    %rbx,%rdi
  a4:	e8 00 00 00 00       	call   a9 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa9>
  a9:	0f b6 53 28          	movzbl 0x28(%rbx),%edx
  ad:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  b3:	48 89 ef             	mov    %rbp,%rdi
  b6:	0f b6 c8             	movzbl %al,%ecx
  b9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # c0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xc0>
  c0:	e8 00 00 00 00       	call   c5 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xc5>
  c5:	be 00 00 00 40       	mov    $0x40000000,%esi
  ca:	48 89 df             	mov    %rbx,%rdi
  cd:	e8 00 00 00 00       	call   d2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xd2>
  d2:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  d8:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # df <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xdf>
  df:	48 89 ef             	mov    %rbp,%rdi
  e2:	0f b6 d0             	movzbl %al,%edx
  e5:	89 d1                	mov    %edx,%ecx
  e7:	e8 00 00 00 00       	call   ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xec>
  ec:	4f 8b 34 e7          	mov    (%r15,%r12,8),%r14
  f0:	41 80 3e 00          	cmpb   $0x0,(%r14)
  f4:	74 2c                	je     122 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x122>
  f6:	44 89 e1             	mov    %r12d,%ecx
  f9:	be 01 00 00 00       	mov    $0x1,%esi
  fe:	48 89 df             	mov    %rbx,%rdi
 101:	d3 e6                	shl    %cl,%esi
 103:	e8 00 00 00 00       	call   108 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 108:	42 0f b6 54 23 0c    	movzbl 0xc(%rbx,%r12,1),%edx
 10e:	4c 89 f6             	mov    %r14,%rsi
 111:	48 89 ef             	mov    %rbp,%rdi
 114:	0f b6 c8             	movzbl %al,%ecx
 117:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 11d:	e8 00 00 00 00       	call   122 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x122>
 122:	49 ff c4             	inc    %r12
 125:	49 83 fc 14          	cmp    $0x14,%r12
 129:	75 c1                	jne    ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xec>
 12b:	48 89 ef             	mov    %rbp,%rdi
 12e:	e8 00 00 00 00       	call   133 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x133>
 133:	0f b7 c0             	movzwl %ax,%eax
 136:	41 89 45 00          	mov    %eax,0x0(%r13)
 13a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
 13f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 146:	00 00 
 148:	74 05                	je     14f <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x14f>
 14a:	e8 00 00 00 00       	call   14f <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x14f>
 14f:	48 83 c4 28          	add    $0x28,%rsp
 153:	5b                   	pop    %rbx
 154:	5d                   	pop    %rbp
 155:	41 5c                	pop    %r12
 157:	41 5d                	pop    %r13
 159:	41 5e                	pop    %r14
 15b:	41 5f                	pop    %r15
 15d:	c3                   	ret    

Disassembly of section .text._ZN16DisplayUdfParams4SaveEPcjRj:

0000000000000000 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   8:	49 89 c8             	mov    %rcx,%r8
   b:	75 07                	jne    14 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x14>
   d:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
  13:	c3                   	ret    
  14:	89 d1                	mov    %edx,%ecx
  16:	48 89 f2             	mov    %rsi,%rdx
  19:	31 f6                	xor    %esi,%esi
  1b:	e9 00 00 00 00       	jmp    20 <.LC3+0x10>

Disassembly of section .text._ZN16DisplayUdfParams3SetEP10DisplayUdf:

0000000000000000 <DisplayUdfParams::Set(DisplayUdf*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	49 89 f4             	mov    %rsi,%r12
   b:	be 00 00 00 20       	mov    $0x20000000,%esi
  10:	55                   	push   %rbp
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	52                   	push   %rdx
  16:	e8 00 00 00 00       	call   1b <DisplayUdfParams::Set(DisplayUdf*)+0x1b>
  1b:	84 c0                	test   %al,%al
  1d:	74 0c                	je     2b <DisplayUdfParams::Set(DisplayUdf*)+0x2b>
  1f:	0f b6 73 29          	movzbl 0x29(%rbx),%esi
  23:	4c 89 e7             	mov    %r12,%rdi
  26:	e8 00 00 00 00       	call   2b <DisplayUdfParams::Set(DisplayUdf*)+0x2b>
  2b:	be 00 00 00 10       	mov    $0x10000000,%esi
  30:	48 89 df             	mov    %rbx,%rdi
  33:	e8 00 00 00 00       	call   38 <DisplayUdfParams::Set(DisplayUdf*)+0x38>
  38:	84 c0                	test   %al,%al
  3a:	74 0c                	je     48 <DisplayUdfParams::Set(DisplayUdf*)+0x48>
  3c:	0f b6 73 28          	movzbl 0x28(%rbx),%esi
  40:	4c 89 e7             	mov    %r12,%rdi
  43:	e8 00 00 00 00       	call   48 <DisplayUdfParams::Set(DisplayUdf*)+0x48>
  48:	be 00 00 00 40       	mov    $0x40000000,%esi
  4d:	48 89 df             	mov    %rbx,%rdi
  50:	31 ed                	xor    %ebp,%ebp
  52:	41 bd 01 00 00 00    	mov    $0x1,%r13d
  58:	e8 00 00 00 00       	call   5d <DisplayUdfParams::Set(DisplayUdf*)+0x5d>
  5d:	4c 89 e7             	mov    %r12,%rdi
  60:	0f b6 f0             	movzbl %al,%esi
  63:	e8 00 00 00 00       	call   68 <DisplayUdfParams::Set(DisplayUdf*)+0x68>
  68:	44 89 ee             	mov    %r13d,%esi
  6b:	89 e9                	mov    %ebp,%ecx
  6d:	48 89 df             	mov    %rbx,%rdi
  70:	d3 e6                	shl    %cl,%esi
  72:	e8 00 00 00 00       	call   77 <DisplayUdfParams::Set(DisplayUdf*)+0x77>
  77:	84 c0                	test   %al,%al
  79:	74 0f                	je     8a <DisplayUdfParams::Set(DisplayUdf*)+0x8a>
  7b:	0f b6 74 2b 0c       	movzbl 0xc(%rbx,%rbp,1),%esi
  80:	89 ea                	mov    %ebp,%edx
  82:	4c 89 e7             	mov    %r12,%rdi
  85:	e8 00 00 00 00       	call   8a <DisplayUdfParams::Set(DisplayUdf*)+0x8a>
  8a:	48 ff c5             	inc    %rbp
  8d:	48 83 fd 14          	cmp    $0x14,%rbp
  91:	75 d5                	jne    68 <DisplayUdfParams::Set(DisplayUdf*)+0x68>
  93:	58                   	pop    %rax
  94:	5b                   	pop    %rbx
  95:	5d                   	pop    %rbp
  96:	41 5c                	pop    %r12
  98:	41 5d                	pop    %r13
  9a:	c3                   	ret    

Disassembly of section .text._ZN16DisplayUdfParams22staticCallbackFunctionEPvPKc:

0000000000000000 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	e9 00 00 00 00       	jmp    9 <.LC2>

Disassembly of section .text._ZN16DisplayUdfParams4DumpEv:

0000000000000000 <DisplayUdfParams::Dump()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIbEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	41 52                	push   %r10
   8:	49 89 f2             	mov    %rsi,%r10
   b:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	66 39 ee             	cmp    %bp,%si
  16:	72 04                	jb     1c <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x1c>
  18:	31 c0                	xor    %eax,%eax
  1a:	eb 33                	jmp    4f <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x4f>
  1c:	89 d0                	mov    %edx,%eax
  1e:	48 89 fb             	mov    %rdi,%rbx
  21:	0f b7 d6             	movzwl %si,%edx
  24:	48 03 37             	add    (%rdi),%rsi
  27:	57                   	push   %rdi
  28:	29 d5                	sub    %edx,%ebp
  2a:	44 0f b6 c9          	movzbl %cl,%r9d
  2e:	48 89 df             	mov    %rbx,%rdi
  31:	41 50                	push   %r8
  33:	4c 89 d1             	mov    %r10,%rcx
  36:	44 0f b6 c0          	movzbl %al,%r8d
  3a:	89 ea                	mov    %ebp,%edx
  3c:	e8 00 00 00 00       	call   41 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x41>
  41:	41 58                	pop    %r8
  43:	41 59                	pop    %r9
  45:	39 c5                	cmp    %eax,%ebp
  47:	7c cf                	jl     18 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x18>
  49:	66 01 43 0a          	add    %ax,0xa(%rbx)
  4d:	b0 01                	mov    $0x1,%al
  4f:	5a                   	pop    %rdx
  50:	5b                   	pop    %rbx
  51:	5d                   	pop    %rbp
  52:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIhEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	41 52                	push   %r10
   8:	49 89 f2             	mov    %rsi,%r10
   b:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	66 39 ee             	cmp    %bp,%si
  16:	72 04                	jb     1c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0x1c>
  18:	31 c0                	xor    %eax,%eax
  1a:	eb 33                	jmp    4f <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0x4f>
  1c:	89 d0                	mov    %edx,%eax
  1e:	48 89 fb             	mov    %rdi,%rbx
  21:	0f b7 d6             	movzwl %si,%edx
  24:	48 03 37             	add    (%rdi),%rsi
  27:	57                   	push   %rdi
  28:	29 d5                	sub    %edx,%ebp
  2a:	44 0f b6 c9          	movzbl %cl,%r9d
  2e:	48 89 df             	mov    %rbx,%rdi
  31:	41 50                	push   %r8
  33:	4c 89 d1             	mov    %r10,%rcx
  36:	44 0f b6 c0          	movzbl %al,%r8d
  3a:	89 ea                	mov    %ebp,%edx
  3c:	e8 00 00 00 00       	call   41 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0x41>
  41:	41 58                	pop    %r8
  43:	41 59                	pop    %r9
  45:	39 c5                	cmp    %eax,%ebp
  47:	7c cf                	jl     18 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0x18>
  49:	66 01 43 0a          	add    %ax,0xa(%rbx)
  4d:	b0 01                	mov    $0x1,%al
  4f:	5a                   	pop    %rdx
  50:	5b                   	pop    %rbx
  51:	5d                   	pop    %rbp
  52:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIbEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	49 89 fa             	mov    %rdi,%r10
   7:	45 0f b6 c0          	movzbl %r8b,%r8d
   b:	48 89 f7             	mov    %rsi,%rdi
   e:	89 d6                	mov    %edx,%esi
  10:	41 8a 42 0c          	mov    0xc(%r10),%al
  14:	45 84 c9             	test   %r9b,%r9b
  17:	75 06                	jne    1f <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x1f>
  19:	84 c0                	test   %al,%al
  1b:	75 0d                	jne    2a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x2a>
  1d:	eb 14                	jmp    33 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x33>
  1f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x26>
  26:	84 c0                	test   %al,%al
  28:	74 10                	je     3a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x3a>
  2a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 31 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x31>
  31:	eb 07                	jmp    3a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x3a>
  33:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x3a>
  3a:	31 c0                	xor    %eax,%eax
  3c:	e9 00 00 00 00       	jmp    41 <.LC3+0x31>

Disassembly of section .text._ZN17PropertiesBuilder8add_partIhEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	49 89 fa             	mov    %rdi,%r10
   7:	45 0f b6 c0          	movzbl %r8b,%r8d
   b:	48 89 f7             	mov    %rsi,%rdi
   e:	89 d6                	mov    %edx,%esi
  10:	41 8a 42 0c          	mov    0xc(%r10),%al
  14:	45 84 c9             	test   %r9b,%r9b
  17:	75 06                	jne    1f <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x1f>
  19:	84 c0                	test   %al,%al
  1b:	75 0d                	jne    2a <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x2a>
  1d:	eb 14                	jmp    33 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x33>
  1f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x26>
  26:	84 c0                	test   %al,%al
  28:	74 10                	je     3a <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x3a>
  2a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 31 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x31>
  31:	eb 07                	jmp    3a <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x3a>
  33:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3a <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x3a>
  3a:	31 c0                	xor    %eax,%eax
  3c:	e9 00 00 00 00       	jmp    41 <.LC3+0x31>

artnetdisplay.o:     file format elf64-x86-64


Disassembly of section .text._ZN10ArtNetNode3GetEv:

0000000000000000 <ArtNetNode::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ArtNetNode::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf3GetEv:

0000000000000000 <DisplayUdf::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <DisplayUdf::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN6artnet17display_shortnameEPKc:

0000000000000000 <artnet::display_shortname(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	e8 00 00 00 00       	call   16 <artnet::display_shortname(char const*)+0x16>
  16:	48 89 c3             	mov    %rax,%rbx
  19:	e8 00 00 00 00       	call   1e <artnet::display_shortname(char const*)+0x1e>
  1e:	48 89 c6             	mov    %rax,%rsi
  21:	48 89 df             	mov    %rbx,%rdi
  24:	e8 00 00 00 00       	call   29 <artnet::display_shortname(char const*)+0x29>
  29:	90                   	nop
  2a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  2e:	c9                   	leave  
  2f:	c3                   	ret    

Disassembly of section .text._ZN6artnet16display_longnameEPKc:

0000000000000000 <artnet::display_longname(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN6artnet23display_universe_switchEjh:

0000000000000000 <artnet::display_universe_switch(unsigned int, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	89 7d ec             	mov    %edi,-0x14(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 e8             	mov    %al,-0x18(%rbp)
  15:	e8 00 00 00 00       	call   1a <artnet::display_universe_switch(unsigned int, unsigned char)+0x1a>
  1a:	48 89 c3             	mov    %rax,%rbx
  1d:	e8 00 00 00 00       	call   22 <artnet::display_universe_switch(unsigned int, unsigned char)+0x22>
  22:	48 89 c6             	mov    %rax,%rsi
  25:	48 89 df             	mov    %rbx,%rdi
  28:	e8 00 00 00 00       	call   2d <artnet::display_universe_switch(unsigned int, unsigned char)+0x2d>
  2d:	90                   	nop
  2e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  32:	c9                   	leave  
  33:	c3                   	ret    

Disassembly of section .text._ZN6artnet18display_net_switchEh:

0000000000000000 <artnet::display_net_switch(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	89 f8                	mov    %edi,%eax
   f:	88 45 ec             	mov    %al,-0x14(%rbp)
  12:	e8 00 00 00 00       	call   17 <artnet::display_net_switch(unsigned char)+0x17>
  17:	48 89 c3             	mov    %rax,%rbx
  1a:	e8 00 00 00 00       	call   1f <artnet::display_net_switch(unsigned char)+0x1f>
  1f:	48 89 c6             	mov    %rax,%rsi
  22:	48 89 df             	mov    %rbx,%rdi
  25:	e8 00 00 00 00       	call   2a <artnet::display_net_switch(unsigned char)+0x2a>
  2a:	90                   	nop
  2b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  2f:	c9                   	leave  
  30:	c3                   	ret    

Disassembly of section .text._ZN6artnet21display_subnet_switchEh:

0000000000000000 <artnet::display_subnet_switch(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	89 f8                	mov    %edi,%eax
   f:	88 45 ec             	mov    %al,-0x14(%rbp)
  12:	e8 00 00 00 00       	call   17 <artnet::display_subnet_switch(unsigned char)+0x17>
  17:	48 89 c3             	mov    %rax,%rbx
  1a:	e8 00 00 00 00       	call   1f <artnet::display_subnet_switch(unsigned char)+0x1f>
  1f:	48 89 c6             	mov    %rax,%rsi
  22:	48 89 df             	mov    %rbx,%rdi
  25:	e8 00 00 00 00       	call   2a <artnet::display_subnet_switch(unsigned char)+0x2a>
  2a:	90                   	nop
  2b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  2f:	c9                   	leave  
  30:	c3                   	ret    

Disassembly of section .text._ZN6artnet18display_merge_modeEjN8lightset9MergeModeE:

0000000000000000 <artnet::display_merge_mode(unsigned int, lightset::MergeMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	89 7d ec             	mov    %edi,-0x14(%rbp)
  10:	89 75 e8             	mov    %esi,-0x18(%rbp)
  13:	e8 00 00 00 00       	call   18 <artnet::display_merge_mode(unsigned int, lightset::MergeMode)+0x18>
  18:	48 89 c3             	mov    %rax,%rbx
  1b:	e8 00 00 00 00       	call   20 <artnet::display_merge_mode(unsigned int, lightset::MergeMode)+0x20>
  20:	48 89 c6             	mov    %rax,%rsi
  23:	48 89 df             	mov    %rbx,%rdi
  26:	e8 00 00 00 00       	call   2b <artnet::display_merge_mode(unsigned int, lightset::MergeMode)+0x2b>
  2b:	90                   	nop
  2c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  30:	c9                   	leave  
  31:	c3                   	ret    

Disassembly of section .text._ZN6artnet21display_port_protocolEjNS_12PortProtocolE:

0000000000000000 <artnet::display_port_protocol(unsigned int, artnet::PortProtocol)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	89 7d ec             	mov    %edi,-0x14(%rbp)
  10:	89 75 e8             	mov    %esi,-0x18(%rbp)
  13:	e8 00 00 00 00       	call   18 <artnet::display_port_protocol(unsigned int, artnet::PortProtocol)+0x18>
  18:	48 89 c3             	mov    %rax,%rbx
  1b:	e8 00 00 00 00       	call   20 <artnet::display_port_protocol(unsigned int, artnet::PortProtocol)+0x20>
  20:	48 89 c6             	mov    %rax,%rsi
  23:	48 89 df             	mov    %rbx,%rdi
  26:	e8 00 00 00 00       	call   2b <artnet::display_port_protocol(unsigned int, artnet::PortProtocol)+0x2b>
  2b:	90                   	nop
  2c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  30:	c9                   	leave  
  31:	c3                   	ret    

Disassembly of section .text._ZN6artnet19display_rdm_enabledEjb:

0000000000000000 <artnet::display_rdm_enabled(unsigned int, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	89 7d ec             	mov    %edi,-0x14(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 e8             	mov    %al,-0x18(%rbp)
  15:	e8 00 00 00 00       	call   1a <artnet::display_rdm_enabled(unsigned int, bool)+0x1a>
  1a:	48 89 c3             	mov    %rax,%rbx
  1d:	e8 00 00 00 00       	call   22 <artnet::display_rdm_enabled(unsigned int, bool)+0x22>
  22:	48 89 c6             	mov    %rax,%rsi
  25:	48 89 df             	mov    %rbx,%rdi
  28:	e8 00 00 00 00       	call   2d <artnet::display_rdm_enabled(unsigned int, bool)+0x2d>
  2d:	90                   	nop
  2e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  32:	c9                   	leave  
  33:	c3                   	ret    

Disassembly of section .text._ZN6artnet16display_failsafeEh:

0000000000000000 <artnet::display_failsafe(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 f8                	mov    %edi,%eax
   a:	88 45 fc             	mov    %al,-0x4(%rbp)
   d:	90                   	nop
   e:	5d                   	pop    %rbp
   f:	c3                   	ret    

displayudfshowartnet.o:     file format elf64-x86-64


Disassembly of section .text._ZNK10DisplaySet10GetColumnsEv:

0000000000000000 <DisplaySet::GetColumns() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 08             	mov    0x8(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN7Display9ClearLineEj:

0000000000000000 <Display::ClearLine(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 40 18          	mov    0x18(%rax),%rax
  1b:	48 85 c0             	test   %rax,%rax
  1e:	74 26                	je     46 <Display::ClearLine(unsigned int)+0x46>
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	48 8b 40 18          	mov    0x18(%rax),%rax
  28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2c:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  30:	48 8b 12             	mov    (%rdx),%rdx
  33:	48 83 c2 20          	add    $0x20,%rdx
  37:	48 8b 0a             	mov    (%rdx),%rcx
  3a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  3d:	89 d6                	mov    %edx,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	ff d1                	call   *%rcx
  44:	eb 01                	jmp    47 <Display::ClearLine(unsigned int)+0x47>
  46:	90                   	nop
  47:	c9                   	leave  
  48:	c3                   	ret    

Disassembly of section .text._ZN7Display5WriteEjPKc:

0000000000000000 <Display::Write(unsigned int, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1b:	48 8b 40 18          	mov    0x18(%rax),%rax
  1f:	48 85 c0             	test   %rax,%rax
  22:	75 07                	jne    2b <Display::Write(unsigned int, char const*)+0x2b>
  24:	b8 00 00 00 00       	mov    $0x0,%eax
  29:	eb 7f                	jmp    aa <Display::Write(unsigned int, char const*)+0xaa>
  2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  33:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	48 8b 40 18          	mov    0x18(%rax),%rax
  42:	48 89 c7             	mov    %rax,%rdi
  45:	e8 00 00 00 00       	call   4a <Display::Write(unsigned int, char const*)+0x4a>
  4a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4d:	eb 05                	jmp    54 <Display::Write(unsigned int, char const*)+0x54>
  4f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  58:	0f b6 00             	movzbl (%rax),%eax
  5b:	84 c0                	test   %al,%al
  5d:	74 15                	je     74 <Display::Write(unsigned int, char const*)+0x74>
  5f:	8b 45 f0             	mov    -0x10(%rbp),%eax
  62:	8d 50 01             	lea    0x1(%rax),%edx
  65:	89 55 f0             	mov    %edx,-0x10(%rbp)
  68:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  6b:	76 07                	jbe    74 <Display::Write(unsigned int, char const*)+0x74>
  6d:	b8 01 00 00 00       	mov    $0x1,%eax
  72:	eb 05                	jmp    79 <Display::Write(unsigned int, char const*)+0x79>
  74:	b8 00 00 00 00       	mov    $0x0,%eax
  79:	84 c0                	test   %al,%al
  7b:	75 d2                	jne    4f <Display::Write(unsigned int, char const*)+0x4f>
  7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  81:	48 8b 40 18          	mov    0x18(%rax),%rax
  85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  89:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  8d:	48 8b 12             	mov    (%rdx),%rdx
  90:	48 83 c2 38          	add    $0x38,%rdx
  94:	4c 8b 02             	mov    (%rdx),%r8
  97:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  9a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  9e:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  a1:	48 89 c7             	mov    %rax,%rdi
  a4:	41 ff d0             	call   *%r8
  a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
  aa:	c9                   	leave  
  ab:	c3                   	ret    

Disassembly of section .text._ZN7Display6PrintfEjPKcz:

0000000000000000 <Display::Printf(unsigned int, char const*, ...)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   f:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  16:	89 b5 f4 fe ff ff    	mov    %esi,-0x10c(%rbp)
  1c:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
  23:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  2a:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  31:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  38:	84 c0                	test   %al,%al
  3a:	74 20                	je     5c <Display::Printf(unsigned int, char const*, ...)+0x5c>
  3c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  40:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  44:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  48:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  4c:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  50:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  54:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  58:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  5c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  63:	00 00 
  65:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  6c:	31 c0                	xor    %eax,%eax
  6e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  75:	48 8b 40 18          	mov    0x18(%rax),%rax
  79:	48 85 c0             	test   %rax,%rax
  7c:	75 0a                	jne    88 <Display::Printf(unsigned int, char const*, ...)+0x88>
  7e:	b8 00 00 00 00       	mov    $0x0,%eax
  83:	e9 94 00 00 00       	jmp    11c <Display::Printf(unsigned int, char const*, ...)+0x11c>
  88:	c7 85 08 ff ff ff 18 	movl   $0x18,-0xf8(%rbp)
  8f:	00 00 00 
  92:	c7 85 0c ff ff ff 30 	movl   $0x30,-0xf4(%rbp)
  99:	00 00 00 
  9c:	48 8d 45 10          	lea    0x10(%rbp),%rax
  a0:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  a7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  ae:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  b5:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
  bc:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  c3:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  ca:	be 20 00 00 00       	mov    $0x20,%esi
  cf:	48 89 c7             	mov    %rax,%rdi
  d2:	e8 00 00 00 00       	call   d7 <Display::Printf(unsigned int, char const*, ...)+0xd7>
  d7:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
  dd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  e4:	48 8b 40 18          	mov    0x18(%rax),%rax
  e8:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  ef:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  f3:	48 8b 12             	mov    (%rdx),%rdx
  f6:	48 83 c2 38          	add    $0x38,%rdx
  fa:	4c 8b 02             	mov    (%rdx),%r8
  fd:	8b 8d 04 ff ff ff    	mov    -0xfc(%rbp),%ecx
 103:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
 10a:	8b b5 f4 fe ff ff    	mov    -0x10c(%rbp),%esi
 110:	48 89 c7             	mov    %rax,%rdi
 113:	41 ff d0             	call   *%r8
 116:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
 11c:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
 123:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 12a:	00 00 
 12c:	74 05                	je     133 <Display::Printf(unsigned int, char const*, ...)+0x133>
 12e:	e8 00 00 00 00       	call   133 <Display::Printf(unsigned int, char const*, ...)+0x133>
 133:	c9                   	leave  
 134:	c3                   	ret    

Disassembly of section .text._ZN6artnetL17get_protocol_modeENS_12PortProtocolEb:

0000000000000000 <artnet::get_protocol_mode(artnet::PortProtocol, bool)>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	89 f0                	mov    %esi,%eax
   9:	88 45 f8             	mov    %al,-0x8(%rbp)
   c:	80 7d f8 00          	cmpb   $0x0,-0x8(%rbp)
  10:	74 18                	je     2a <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x2a>
  12:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  16:	75 09                	jne    21 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x21>
  18:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x1f>
  1f:	eb 20                	jmp    41 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x41>
  21:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 28 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x28>
  28:	eb 17                	jmp    41 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x41>
  2a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  2e:	75 09                	jne    39 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x39>
  30:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 37 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x37>
  37:	eb 07                	jmp    40 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x40>
  39:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 40 <artnet::get_protocol_mode(artnet::PortProtocol, bool)+0x40>
  40:	90                   	nop
  41:	5d                   	pop    %rbp
  42:	c3                   	ret    

Disassembly of section .text._ZN8lightsetL14get_merge_modeENS_9MergeModeEb:

0000000000000000 <lightset::get_merge_mode(lightset::MergeMode, bool)>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	89 f0                	mov    %esi,%eax
   9:	88 45 f8             	mov    %al,-0x8(%rbp)
   c:	80 7d f8 00          	cmpb   $0x0,-0x8(%rbp)
  10:	74 18                	je     2a <lightset::get_merge_mode(lightset::MergeMode, bool)+0x2a>
  12:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  16:	75 09                	jne    21 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x21>
  18:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f <lightset::get_merge_mode(lightset::MergeMode, bool)+0x1f>
  1f:	eb 1f                	jmp    40 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x40>
  21:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 28 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x28>
  28:	eb 16                	jmp    40 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x40>
  2a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  2e:	75 09                	jne    39 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x39>
  30:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 37 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x37>
  37:	eb 07                	jmp    40 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x40>
  39:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 40 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x40>
  40:	5d                   	pop    %rbp
  41:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode19GetActiveInputPortsEv:

0000000000000000 <ArtNetNode::GetActiveInputPorts() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 80 8f 00 00 00 	movzbl 0x8f(%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	5d                   	pop    %rbp
  1b:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode20GetActiveOutputPortsEv:

0000000000000000 <ArtNetNode::GetActiveOutputPorts() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 80 8e 00 00 00 	movzbl 0x8e(%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	5d                   	pop    %rbp
  1b:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode12GetShortNameEv:

0000000000000000 <ArtNetNode::GetShortName() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 14          	add    $0x14,%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode12GetMergeModeEj:

0000000000000000 <ArtNetNode::GetMergeMode(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  13:	8b 45 f4             	mov    -0xc(%rbp),%eax
  16:	48 83 c0 05          	add    $0x5,%rax
  1a:	48 c1 e0 05          	shl    $0x5,%rax
  1e:	48 01 d0             	add    %rdx,%rax
  21:	48 83 c0 12          	add    $0x12,%rax
  25:	0f b6 00             	movzbl (%rax),%eax
  28:	0f b6 c0             	movzbl %al,%eax
  2b:	83 e0 02             	and    $0x2,%eax
  2e:	85 c0                	test   %eax,%eax
  30:	74 07                	je     39 <ArtNetNode::GetMergeMode(unsigned int) const+0x39>
  32:	b8 01 00 00 00       	mov    $0x1,%eax
  37:	eb 05                	jmp    3e <ArtNetNode::GetMergeMode(unsigned int) const+0x3e>
  39:	b8 00 00 00 00       	mov    $0x0,%eax
  3e:	5d                   	pop    %rbp
  3f:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode6GetRdmEj:

0000000000000000 <ArtNetNode::GetRdm(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  13:	8b 45 f4             	mov    -0xc(%rbp),%eax
  16:	48 83 c0 05          	add    $0x5,%rax
  1a:	48 c1 e0 05          	shl    $0x5,%rax
  1e:	48 01 d0             	add    %rdx,%rax
  21:	48 83 c0 13          	add    $0x13,%rax
  25:	0f b6 00             	movzbl (%rax),%eax
  28:	f7 d0                	not    %eax
  2a:	c0 e8 07             	shr    $0x7,%al
  2d:	5d                   	pop    %rbp
  2e:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode16GetDestinationIpEj:

0000000000000000 <ArtNetNode::GetDestinationIp(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
  13:	77 1a                	ja     2f <ArtNetNode::GetDestinationIp(unsigned int) const+0x2f>
  15:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  19:	8b 45 f4             	mov    -0xc(%rbp),%eax
  1c:	48 83 c0 11          	add    $0x11,%rax
  20:	48 c1 e0 04          	shl    $0x4,%rax
  24:	48 01 d0             	add    %rdx,%rax
  27:	48 83 c0 0c          	add    $0xc,%rax
  2b:	8b 00                	mov    (%rax),%eax
  2d:	eb 05                	jmp    34 <ArtNetNode::GetDestinationIp(unsigned int) const+0x34>
  2f:	b8 00 00 00 00       	mov    $0x0,%eax
  34:	5d                   	pop    %rbp
  35:	c3                   	ret    

Disassembly of section .text._ZNK10ArtNetNode15GetPortProtocolEj:

0000000000000000 <ArtNetNode::GetPortProtocol(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  13:	8b 45 f4             	mov    -0xc(%rbp),%eax
  16:	48 83 c0 05          	add    $0x5,%rax
  1a:	48 c1 e0 05          	shl    $0x5,%rax
  1e:	48 01 d0             	add    %rdx,%rax
  21:	48 83 c0 0c          	add    $0xc,%rax
  25:	8b 00                	mov    (%rax),%eax
  27:	5d                   	pop    %rbp
  28:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf11ShowDmxInfoEv:

0000000000000000 <DisplayUdf::ShowDmxInfo()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 40 58             	mov    0x58(%rax),%eax
  17:	83 f8 02             	cmp    $0x2,%eax
  1a:	74 0b                	je     27 <DisplayUdf::ShowDmxInfo()+0x27>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	8b 40 5c             	mov    0x5c(%rax),%eax
  23:	85 c0                	test   %eax,%eax
  25:	75 27                	jne    4e <DisplayUdf::ShowDmxInfo()+0x4e>
  27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2f:	0f b6 52 53          	movzbl 0x53(%rdx),%edx
  33:	0f b6 ca             	movzbl %dl,%ecx
  36:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3d <DisplayUdf::ShowDmxInfo()+0x3d>
  3d:	89 ce                	mov    %ecx,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	b8 00 00 00 00       	mov    $0x0,%eax
  47:	e8 00 00 00 00       	call   4c <DisplayUdf::ShowDmxInfo()+0x4c>
  4c:	eb 4b                	jmp    99 <DisplayUdf::ShowDmxInfo()+0x99>
  4e:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  56:	8b 48 5c             	mov    0x5c(%rax),%ecx
  59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5d:	8b 40 58             	mov    0x58(%rax),%eax
  60:	85 c0                	test   %eax,%eax
  62:	75 09                	jne    6d <DisplayUdf::ShowDmxInfo()+0x6d>
  64:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6b <DisplayUdf::ShowDmxInfo()+0x6b>
  6b:	eb 07                	jmp    74 <DisplayUdf::ShowDmxInfo()+0x74>
  6d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 74 <DisplayUdf::ShowDmxInfo()+0x74>
  74:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  78:	0f b6 52 53          	movzbl 0x53(%rdx),%edx
  7c:	0f b6 f2             	movzbl %dl,%esi
  7f:	41 89 c8             	mov    %ecx,%r8d
  82:	48 89 c1             	mov    %rax,%rcx
  85:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8c <DisplayUdf::ShowDmxInfo()+0x8c>
  8c:	48 89 c2             	mov    %rax,%rdx
  8f:	b8 00 00 00 00       	mov    $0x0,%eax
  94:	e8 00 00 00 00       	call   99 <DisplayUdf::ShowDmxInfo()+0x99>
  99:	c9                   	leave  
  9a:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf4ShowEP10ArtNetNodej:

0000000000000000 <DisplayUdf::Show(ArtNetNode*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 54                	push   %r12
   a:	53                   	push   %rbx
   b:	48 83 ec 20          	sub    $0x20,%rsp
   f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  13:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  17:	89 55 dc             	mov    %edx,-0x24(%rbp)
  1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1e:	8b 55 dc             	mov    -0x24(%rbp),%edx
  21:	89 50 54             	mov    %edx,0x54(%rax)
  24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <DisplayUdf::Show(ArtNetNode*, unsigned int)+0x30>
  30:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  38:	48 89 d6             	mov    %rdx,%rsi
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	e8 00 00 00 00       	call   43 <DisplayUdf::Show(ArtNetNode*, unsigned int)+0x43>
  43:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4b:	48 89 d6             	mov    %rdx,%rsi
  4e:	48 89 c7             	mov    %rax,%rdi
  51:	e8 00 00 00 00       	call   56 <DisplayUdf::Show(ArtNetNode*, unsigned int)+0x56>
  56:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  5e:	48 89 c7             	mov    %rax,%rdi
  61:	e8 00 00 00 00       	call   66 <DisplayUdf::Show(ArtNetNode*, unsigned int)+0x66>
  66:	41 89 c4             	mov    %eax,%r12d
  69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	call   75 <DisplayUdf::Show(ArtNetNode*, unsigned int)+0x75>
  75:	41 8d 14 04          	lea    (%r12,%rax,1),%edx
  79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7d:	0f b6 40 45          	movzbl 0x45(%rax),%eax
  81:	0f b6 c0             	movzbl %al,%eax
  84:	89 d1                	mov    %edx,%ecx
  86:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 8d <DisplayUdf::Show(ArtNetNode*, unsigned int)+0x8d>
  8d:	89 c6                	mov    %eax,%esi
  8f:	48 89 df             	mov    %rbx,%rdi
  92:	b8 00 00 00 00       	mov    $0x0,%eax
  97:	e8 00 00 00 00       	call   9c <DisplayUdf::Show(ArtNetNode*, unsigned int)+0x9c>
  9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a0:	48 89 c7             	mov    %rax,%rdi
  a3:	e8 00 00 00 00       	call   a8 <DisplayUdf::Show(ArtNetNode*, unsigned int)+0xa8>
  a8:	90                   	nop
  a9:	48 83 c4 20          	add    $0x20,%rsp
  ad:	5b                   	pop    %rbx
  ae:	41 5c                	pop    %r12
  b0:	5d                   	pop    %rbp
  b1:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf12ShowNodeNameEP10ArtNetNode:

0000000000000000 <DisplayUdf::ShowNodeName(ArtNetNode*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  19:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  1d:	0f b6 52 46          	movzbl 0x46(%rdx),%edx
  21:	0f b6 d2             	movzbl %dl,%edx
  24:	89 d6                	mov    %edx,%esi
  26:	48 89 c7             	mov    %rax,%rdi
  29:	e8 00 00 00 00       	call   2e <DisplayUdf::ShowNodeName(ArtNetNode*)+0x2e>
  2e:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  36:	48 89 c7             	mov    %rax,%rdi
  39:	e8 00 00 00 00       	call   3e <DisplayUdf::ShowNodeName(ArtNetNode*)+0x3e>
  3e:	48 89 c2             	mov    %rax,%rdx
  41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  45:	0f b6 40 46          	movzbl 0x46(%rax),%eax
  49:	0f b6 c0             	movzbl %al,%eax
  4c:	89 c6                	mov    %eax,%esi
  4e:	48 89 df             	mov    %rbx,%rdi
  51:	e8 00 00 00 00       	call   56 <DisplayUdf::ShowNodeName(ArtNetNode*)+0x56>
  56:	90                   	nop
  57:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf12ShowUniverseEP10ArtNetNode:

0000000000000000 <DisplayUdf::ShowUniverse(ArtNetNode*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 55                	push   %r13
   a:	41 54                	push   %r12
   c:	53                   	push   %rbx
   d:	48 83 ec 38          	sub    $0x38,%rsp
  11:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  15:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  26:	31 c0                	xor    %eax,%eax
  28:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  2f:	e9 10 01 00 00       	jmp    144 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x144>
  34:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  38:	8b 50 54             	mov    0x54(%rax),%edx
  3b:	8b 45 cc             	mov    -0x34(%rbp),%eax
  3e:	01 d0                	add    %edx,%eax
  40:	89 45 d0             	mov    %eax,-0x30(%rbp)
  43:	8b 45 cc             	mov    -0x34(%rbp),%eax
  46:	83 c0 08             	add    $0x8,%eax
  49:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4c:	81 7d d4 ff 00 00 00 	cmpl   $0xff,-0x2c(%rbp)
  53:	0f 84 e7 00 00 00    	je     140 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x140>
  59:	48 8d 55 ca          	lea    -0x36(%rbp),%rdx
  5d:	8b 75 d0             	mov    -0x30(%rbp),%esi
  60:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  64:	b9 01 00 00 00       	mov    $0x1,%ecx
  69:	48 89 c7             	mov    %rax,%rdi
  6c:	e8 00 00 00 00       	call   71 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x71>
  71:	84 c0                	test   %al,%al
  73:	0f 84 c7 00 00 00    	je     140 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x140>
  79:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  7d:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  81:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  84:	0f b6 54 11 40       	movzbl 0x40(%rcx,%rdx,1),%edx
  89:	0f b6 d2             	movzbl %dl,%edx
  8c:	89 d6                	mov    %edx,%esi
  8e:	48 89 c7             	mov    %rax,%rdi
  91:	e8 00 00 00 00       	call   96 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x96>
  96:	4c 8b 65 b8          	mov    -0x48(%rbp),%r12
  9a:	8b 55 d0             	mov    -0x30(%rbp),%edx
  9d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  a1:	89 d6                	mov    %edx,%esi
  a3:	48 89 c7             	mov    %rax,%rdi
  a6:	e8 00 00 00 00       	call   ab <DisplayUdf::ShowUniverse(ArtNetNode*)+0xab>
  ab:	84 c0                	test   %al,%al
  ad:	74 09                	je     b8 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xb8>
  af:	48 8d 1d 00 00 00 00 	lea    0x0(%rip),%rbx        # b6 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xb6>
  b6:	eb 07                	jmp    bf <DisplayUdf::ShowUniverse(ArtNetNode*)+0xbf>
  b8:	48 8d 1d 00 00 00 00 	lea    0x0(%rip),%rbx        # bf <DisplayUdf::ShowUniverse(ArtNetNode*)+0xbf>
  bf:	8b 55 d0             	mov    -0x30(%rbp),%edx
  c2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  c6:	89 d6                	mov    %edx,%esi
  c8:	48 89 c7             	mov    %rax,%rdi
  cb:	e8 00 00 00 00       	call   d0 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xd0>
  d0:	be 01 00 00 00       	mov    $0x1,%esi
  d5:	89 c7                	mov    %eax,%edi
  d7:	e8 00 00 00 00       	call   dc <DisplayUdf::ShowUniverse(ArtNetNode*)+0xdc>
  dc:	49 89 c5             	mov    %rax,%r13
  df:	8b 55 d0             	mov    -0x30(%rbp),%edx
  e2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  e6:	89 d6                	mov    %edx,%esi
  e8:	48 89 c7             	mov    %rax,%rdi
  eb:	e8 00 00 00 00       	call   f0 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xf0>
  f0:	be 01 00 00 00       	mov    $0x1,%esi
  f5:	89 c7                	mov    %eax,%edi
  f7:	e8 00 00 00 00       	call   fc <DisplayUdf::ShowUniverse(ArtNetNode*)+0xfc>
  fc:	48 89 c6             	mov    %rax,%rsi
  ff:	0f b7 45 ca          	movzwl -0x36(%rbp),%eax
 103:	0f b7 f8             	movzwl %ax,%edi
 106:	8b 45 cc             	mov    -0x34(%rbp),%eax
 109:	8d 50 41             	lea    0x41(%rax),%edx
 10c:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
 110:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 113:	0f b6 44 01 40       	movzbl 0x40(%rcx,%rax,1),%eax
 118:	0f b6 c0             	movzbl %al,%eax
 11b:	53                   	push   %rbx
 11c:	41 55                	push   %r13
 11e:	49 89 f1             	mov    %rsi,%r9
 121:	41 89 f8             	mov    %edi,%r8d
 124:	89 d1                	mov    %edx,%ecx
 126:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 12d <DisplayUdf::ShowUniverse(ArtNetNode*)+0x12d>
 12d:	89 c6                	mov    %eax,%esi
 12f:	4c 89 e7             	mov    %r12,%rdi
 132:	b8 00 00 00 00       	mov    $0x0,%eax
 137:	e8 00 00 00 00       	call   13c <DisplayUdf::ShowUniverse(ArtNetNode*)+0x13c>
 13c:	48 83 c4 10          	add    $0x10,%rsp
 140:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
 144:	83 7d cc 03          	cmpl   $0x3,-0x34(%rbp)
 148:	0f 86 e6 fe ff ff    	jbe    34 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x34>
 14e:	90                   	nop
 14f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 153:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 15a:	00 00 
 15c:	74 05                	je     163 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x163>
 15e:	e8 00 00 00 00       	call   163 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x163>
 163:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
 167:	5b                   	pop    %rbx
 168:	41 5c                	pop    %r12
 16a:	41 5d                	pop    %r13
 16c:	5d                   	pop    %rbp
 16d:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf17ShowDestinationIpEP10ArtNetNode:

0000000000000000 <DisplayUdf::ShowDestinationIp(ArtNetNode*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 56                	push   %r14
   a:	41 55                	push   %r13
   c:	41 54                	push   %r12
   e:	53                   	push   %rbx
   f:	48 83 ec 20          	sub    $0x20,%rsp
  13:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  17:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  1b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  22:	e9 a4 00 00 00       	jmp    cb <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0xcb>
  27:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  2b:	8b 55 dc             	mov    -0x24(%rbp),%edx
  2e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  32:	89 d6                	mov    %edx,%esi
  34:	48 89 c7             	mov    %rax,%rdi
  37:	e8 00 00 00 00       	call   3c <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0x3c>
  3c:	c1 e8 18             	shr    $0x18,%eax
  3f:	44 0f b6 e8          	movzbl %al,%r13d
  43:	8b 55 dc             	mov    -0x24(%rbp),%edx
  46:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4a:	89 d6                	mov    %edx,%esi
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	call   54 <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0x54>
  54:	c1 e8 10             	shr    $0x10,%eax
  57:	44 0f b6 e0          	movzbl %al,%r12d
  5b:	8b 55 dc             	mov    -0x24(%rbp),%edx
  5e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  62:	89 d6                	mov    %edx,%esi
  64:	48 89 c7             	mov    %rax,%rdi
  67:	e8 00 00 00 00       	call   6c <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0x6c>
  6c:	c1 e8 08             	shr    $0x8,%eax
  6f:	44 0f b6 f0          	movzbl %al,%r14d
  73:	8b 55 dc             	mov    -0x24(%rbp),%edx
  76:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  7a:	89 d6                	mov    %edx,%esi
  7c:	48 89 c7             	mov    %rax,%rdi
  7f:	e8 00 00 00 00       	call   84 <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0x84>
  84:	0f b6 c8             	movzbl %al,%ecx
  87:	8b 45 dc             	mov    -0x24(%rbp),%eax
  8a:	8d 50 41             	lea    0x41(%rax),%edx
  8d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  90:	8d 70 0e             	lea    0xe(%rax),%esi
  93:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  97:	89 f6                	mov    %esi,%esi
  99:	0f b6 44 30 40       	movzbl 0x40(%rax,%rsi,1),%eax
  9e:	0f b6 c0             	movzbl %al,%eax
  a1:	41 55                	push   %r13
  a3:	41 54                	push   %r12
  a5:	45 89 f1             	mov    %r14d,%r9d
  a8:	41 89 c8             	mov    %ecx,%r8d
  ab:	89 d1                	mov    %edx,%ecx
  ad:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # b4 <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0xb4>
  b4:	89 c6                	mov    %eax,%esi
  b6:	48 89 df             	mov    %rbx,%rdi
  b9:	b8 00 00 00 00       	mov    $0x0,%eax
  be:	e8 00 00 00 00       	call   c3 <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0xc3>
  c3:	48 83 c4 10          	add    $0x10,%rsp
  c7:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
  cb:	83 7d dc 03          	cmpl   $0x3,-0x24(%rbp)
  cf:	0f 86 52 ff ff ff    	jbe    27 <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0x27>
  d5:	90                   	nop
  d6:	90                   	nop
  d7:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
  db:	5b                   	pop    %rbx
  dc:	41 5c                	pop    %r12
  de:	41 5d                	pop    %r13
  e0:	41 5e                	pop    %r14
  e2:	5d                   	pop    %rbp
  e3:	c3                   	ret    

displayudfshowe131.o:     file format elf64-x86-64


Disassembly of section .text._ZN7Display6PrintfEjPKcz:

0000000000000000 <Display::Printf(unsigned int, char const*, ...)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   f:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  16:	89 b5 f4 fe ff ff    	mov    %esi,-0x10c(%rbp)
  1c:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
  23:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  2a:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  31:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  38:	84 c0                	test   %al,%al
  3a:	74 20                	je     5c <Display::Printf(unsigned int, char const*, ...)+0x5c>
  3c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  40:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  44:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  48:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  4c:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  50:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  54:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  58:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  5c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  63:	00 00 
  65:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  6c:	31 c0                	xor    %eax,%eax
  6e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  75:	48 8b 40 18          	mov    0x18(%rax),%rax
  79:	48 85 c0             	test   %rax,%rax
  7c:	75 0a                	jne    88 <Display::Printf(unsigned int, char const*, ...)+0x88>
  7e:	b8 00 00 00 00       	mov    $0x0,%eax
  83:	e9 94 00 00 00       	jmp    11c <Display::Printf(unsigned int, char const*, ...)+0x11c>
  88:	c7 85 08 ff ff ff 18 	movl   $0x18,-0xf8(%rbp)
  8f:	00 00 00 
  92:	c7 85 0c ff ff ff 30 	movl   $0x30,-0xf4(%rbp)
  99:	00 00 00 
  9c:	48 8d 45 10          	lea    0x10(%rbp),%rax
  a0:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  a7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  ae:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  b5:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
  bc:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  c3:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  ca:	be 20 00 00 00       	mov    $0x20,%esi
  cf:	48 89 c7             	mov    %rax,%rdi
  d2:	e8 00 00 00 00       	call   d7 <Display::Printf(unsigned int, char const*, ...)+0xd7>
  d7:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
  dd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  e4:	48 8b 40 18          	mov    0x18(%rax),%rax
  e8:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  ef:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  f3:	48 8b 12             	mov    (%rdx),%rdx
  f6:	48 83 c2 38          	add    $0x38,%rdx
  fa:	4c 8b 02             	mov    (%rdx),%r8
  fd:	8b 8d 04 ff ff ff    	mov    -0xfc(%rbp),%ecx
 103:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
 10a:	8b b5 f4 fe ff ff    	mov    -0x10c(%rbp),%esi
 110:	48 89 c7             	mov    %rax,%rdi
 113:	41 ff d0             	call   *%r8
 116:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
 11c:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
 123:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 12a:	00 00 
 12c:	74 05                	je     133 <Display::Printf(unsigned int, char const*, ...)+0x133>
 12e:	e8 00 00 00 00       	call   133 <Display::Printf(unsigned int, char const*, ...)+0x133>
 133:	c9                   	leave  
 134:	c3                   	ret    

Disassembly of section .text._ZN8lightsetL14get_merge_modeENS_9MergeModeEb:

0000000000000000 <lightset::get_merge_mode(lightset::MergeMode, bool)>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	89 f0                	mov    %esi,%eax
   9:	88 45 f8             	mov    %al,-0x8(%rbp)
   c:	80 7d f8 00          	cmpb   $0x0,-0x8(%rbp)
  10:	74 18                	je     2a <lightset::get_merge_mode(lightset::MergeMode, bool)+0x2a>
  12:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  16:	75 09                	jne    21 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x21>
  18:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f <lightset::get_merge_mode(lightset::MergeMode, bool)+0x1f>
  1f:	eb 1f                	jmp    40 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x40>
  21:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 28 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x28>
  28:	eb 16                	jmp    40 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x40>
  2a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  2e:	75 09                	jne    39 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x39>
  30:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 37 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x37>
  37:	eb 07                	jmp    40 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x40>
  39:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 40 <lightset::get_merge_mode(lightset::MergeMode, bool)+0x40>
  40:	5d                   	pop    %rbp
  41:	c3                   	ret    

Disassembly of section .text._ZNK10E131Bridge12GetMergeModeEj:

0000000000000000 <E131Bridge::GetMergeMode(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  13:	8b 55 f4             	mov    -0xc(%rbp),%edx
  16:	48 89 d0             	mov    %rdx,%rax
  19:	48 c1 e0 04          	shl    $0x4,%rax
  1d:	48 01 d0             	add    %rdx,%rax
  20:	48 c1 e0 02          	shl    $0x2,%rax
  24:	48 01 c8             	add    %rcx,%rax
  27:	48 05 68 05 00 00    	add    $0x568,%rax
  2d:	8b 00                	mov    (%rax),%eax
  2f:	5d                   	pop    %rbp
  30:	c3                   	ret    

Disassembly of section .text._ZNK10E131Bridge20GetActiveOutputPortsEv:

0000000000000000 <E131Bridge::GetActiveOutputPorts() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 80 23 05 00 00 	movzbl 0x523(%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	5d                   	pop    %rbp
  1b:	c3                   	ret    

Disassembly of section .text._ZNK10E131Bridge19GetActiveInputPortsEv:

0000000000000000 <E131Bridge::GetActiveInputPorts() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 80 22 05 00 00 	movzbl 0x522(%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	5d                   	pop    %rbp
  1b:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf11ShowDmxInfoEv:

0000000000000000 <DisplayUdf::ShowDmxInfo()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 40 58             	mov    0x58(%rax),%eax
  17:	83 f8 02             	cmp    $0x2,%eax
  1a:	74 0b                	je     27 <DisplayUdf::ShowDmxInfo()+0x27>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	8b 40 5c             	mov    0x5c(%rax),%eax
  23:	85 c0                	test   %eax,%eax
  25:	75 27                	jne    4e <DisplayUdf::ShowDmxInfo()+0x4e>
  27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2f:	0f b6 52 53          	movzbl 0x53(%rdx),%edx
  33:	0f b6 ca             	movzbl %dl,%ecx
  36:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3d <DisplayUdf::ShowDmxInfo()+0x3d>
  3d:	89 ce                	mov    %ecx,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	b8 00 00 00 00       	mov    $0x0,%eax
  47:	e8 00 00 00 00       	call   4c <DisplayUdf::ShowDmxInfo()+0x4c>
  4c:	eb 4b                	jmp    99 <DisplayUdf::ShowDmxInfo()+0x99>
  4e:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  56:	8b 48 5c             	mov    0x5c(%rax),%ecx
  59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5d:	8b 40 58             	mov    0x58(%rax),%eax
  60:	85 c0                	test   %eax,%eax
  62:	75 09                	jne    6d <DisplayUdf::ShowDmxInfo()+0x6d>
  64:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6b <DisplayUdf::ShowDmxInfo()+0x6b>
  6b:	eb 07                	jmp    74 <DisplayUdf::ShowDmxInfo()+0x74>
  6d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 74 <DisplayUdf::ShowDmxInfo()+0x74>
  74:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  78:	0f b6 52 53          	movzbl 0x53(%rdx),%edx
  7c:	0f b6 f2             	movzbl %dl,%esi
  7f:	41 89 c8             	mov    %ecx,%r8d
  82:	48 89 c1             	mov    %rax,%rcx
  85:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8c <DisplayUdf::ShowDmxInfo()+0x8c>
  8c:	48 89 c2             	mov    %rax,%rdx
  8f:	b8 00 00 00 00       	mov    $0x0,%eax
  94:	e8 00 00 00 00       	call   99 <DisplayUdf::ShowDmxInfo()+0x99>
  99:	c9                   	leave  
  9a:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf4ShowEP10E131Bridgej:

0000000000000000 <DisplayUdf::Show(E131Bridge*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 54                	push   %r12
   a:	53                   	push   %rbx
   b:	48 83 ec 40          	sub    $0x40,%rsp
   f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  13:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  17:	89 55 bc             	mov    %edx,-0x44(%rbp)
  1a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  21:	00 00 
  23:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  27:	31 c0                	xor    %eax,%eax
  29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  2d:	8b 55 bc             	mov    -0x44(%rbp),%edx
  30:	89 50 54             	mov    %edx,0x54(%rax)
  33:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	e8 00 00 00 00       	call   3f <DisplayUdf::Show(E131Bridge*, unsigned int)+0x3f>
  3f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  43:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  47:	48 89 c7             	mov    %rax,%rdi
  4a:	e8 00 00 00 00       	call   4f <DisplayUdf::Show(E131Bridge*, unsigned int)+0x4f>
  4f:	41 89 c4             	mov    %eax,%r12d
  52:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  56:	48 89 c7             	mov    %rax,%rdi
  59:	e8 00 00 00 00       	call   5e <DisplayUdf::Show(E131Bridge*, unsigned int)+0x5e>
  5e:	41 8d 14 04          	lea    (%r12,%rax,1),%edx
  62:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  66:	0f b6 40 45          	movzbl 0x45(%rax),%eax
  6a:	0f b6 c0             	movzbl %al,%eax
  6d:	89 d1                	mov    %edx,%ecx
  6f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 76 <DisplayUdf::Show(E131Bridge*, unsigned int)+0x76>
  76:	89 c6                	mov    %eax,%esi
  78:	48 89 df             	mov    %rbx,%rdi
  7b:	b8 00 00 00 00       	mov    $0x0,%eax
  80:	e8 00 00 00 00       	call   85 <DisplayUdf::Show(E131Bridge*, unsigned int)+0x85>
  85:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  8c:	e9 9f 00 00 00       	jmp    130 <DisplayUdf::Show(E131Bridge*, unsigned int)+0x130>
  91:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  95:	8b 50 54             	mov    0x54(%rax),%edx
  98:	8b 45 dc             	mov    -0x24(%rbp),%eax
  9b:	01 d0                	add    %edx,%eax
  9d:	89 45 e0             	mov    %eax,-0x20(%rbp)
  a0:	8b 45 dc             	mov    -0x24(%rbp),%eax
  a3:	83 c0 08             	add    $0x8,%eax
  a6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  a9:	81 7d e4 ff 00 00 00 	cmpl   $0xff,-0x1c(%rbp)
  b0:	74 7a                	je     12c <DisplayUdf::Show(E131Bridge*, unsigned int)+0x12c>
  b2:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  b6:	8b 75 e0             	mov    -0x20(%rbp),%esi
  b9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  bd:	b9 01 00 00 00       	mov    $0x1,%ecx
  c2:	48 89 c7             	mov    %rax,%rdi
  c5:	e8 00 00 00 00       	call   ca <DisplayUdf::Show(E131Bridge*, unsigned int)+0xca>
  ca:	84 c0                	test   %al,%al
  cc:	74 5e                	je     12c <DisplayUdf::Show(E131Bridge*, unsigned int)+0x12c>
  ce:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  d2:	8b 55 e0             	mov    -0x20(%rbp),%edx
  d5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  d9:	89 d6                	mov    %edx,%esi
  db:	48 89 c7             	mov    %rax,%rdi
  de:	e8 00 00 00 00       	call   e3 <DisplayUdf::Show(E131Bridge*, unsigned int)+0xe3>
  e3:	be 01 00 00 00       	mov    $0x1,%esi
  e8:	89 c7                	mov    %eax,%edi
  ea:	e8 00 00 00 00       	call   ef <DisplayUdf::Show(E131Bridge*, unsigned int)+0xef>
  ef:	48 89 c6             	mov    %rax,%rsi
  f2:	0f b7 45 d8          	movzwl -0x28(%rbp),%eax
  f6:	0f b7 f8             	movzwl %ax,%edi
  f9:	8b 45 dc             	mov    -0x24(%rbp),%eax
  fc:	8d 50 41             	lea    0x41(%rax),%edx
  ff:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 103:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 106:	0f b6 44 01 40       	movzbl 0x40(%rcx,%rax,1),%eax
 10b:	0f b6 c0             	movzbl %al,%eax
 10e:	49 89 f1             	mov    %rsi,%r9
 111:	41 89 f8             	mov    %edi,%r8d
 114:	89 d1                	mov    %edx,%ecx
 116:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 11d <DisplayUdf::Show(E131Bridge*, unsigned int)+0x11d>
 11d:	89 c6                	mov    %eax,%esi
 11f:	48 89 df             	mov    %rbx,%rdi
 122:	b8 00 00 00 00       	mov    $0x0,%eax
 127:	e8 00 00 00 00       	call   12c <DisplayUdf::Show(E131Bridge*, unsigned int)+0x12c>
 12c:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
 130:	c7 45 d8 04 00 00 00 	movl   $0x4,-0x28(%rbp)
 137:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 13b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 142 <DisplayUdf::Show(E131Bridge*, unsigned int)+0x142>
 142:	48 89 d6             	mov    %rdx,%rsi
 145:	48 89 c7             	mov    %rax,%rdi
 148:	e8 00 00 00 00       	call   14d <DisplayUdf::Show(E131Bridge*, unsigned int)+0x14d>
 14d:	8b 00                	mov    (%rax),%eax
 14f:	39 45 dc             	cmp    %eax,-0x24(%rbp)
 152:	0f 92 c0             	setb   %al
 155:	84 c0                	test   %al,%al
 157:	0f 85 34 ff ff ff    	jne    91 <DisplayUdf::Show(E131Bridge*, unsigned int)+0x91>
 15d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 161:	48 89 c7             	mov    %rax,%rdi
 164:	e8 00 00 00 00       	call   169 <DisplayUdf::Show(E131Bridge*, unsigned int)+0x169>
 169:	90                   	nop
 16a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 16e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 175:	00 00 
 177:	74 05                	je     17e <DisplayUdf::Show(E131Bridge*, unsigned int)+0x17e>
 179:	e8 00 00 00 00       	call   17e <DisplayUdf::Show(E131Bridge*, unsigned int)+0x17e>
 17e:	48 83 c4 40          	add    $0x40,%rsp
 182:	5b                   	pop    %rbx
 183:	41 5c                	pop    %r12
 185:	5d                   	pop    %rbp
 186:	c3                   	ret    

Disassembly of section .text._ZSt3minIjERKT_S2_S2_:

0000000000000000 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	8b 10                	mov    (%rax),%edx
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	8b 00                	mov    (%rax),%eax
  1c:	39 c2                	cmp    %eax,%edx
  1e:	73 06                	jae    26 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x26>
  20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  24:	eb 04                	jmp    2a <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x2a>
  26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2a:	5d                   	pop    %rbp
  2b:	c3                   	ret    

network.o:     file format elf64-x86-64


Disassembly of section .text._ZNK7Network5GetIpEv:

0000000000000000 <Network::GetIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 10             	mov    0x10(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK7Network11GetHostNameEv:

0000000000000000 <Network::GetHostName() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	48 83 c0 1c          	add    $0x1c,%rax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZNK7Network12GetGatewayIpEv:

0000000000000000 <Network::GetGatewayIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 14             	mov    0x14(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK7Network10GetNetmaskEv:

0000000000000000 <Network::GetNetmask() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 18             	mov    0x18(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK7Network14GetNetmaskCIDREv:

0000000000000000 <Network::GetNetmaskCIDR() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 40 18             	mov    0x18(%rax),%eax
  17:	89 c0                	mov    %eax,%eax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <Network::GetNetmaskCIDR() const+0x21>
  21:	c9                   	leave  
  22:	c3                   	ret    

Disassembly of section .text._ZNK7Network10IsDhcpUsedEv:

0000000000000000 <Network::IsDhcpUsed() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZNK7Network14IsZeroconfUsedEv:

0000000000000000 <Network::IsZeroconfUsed() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 03          	movzbl 0x3(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN7Network17GetAddressingModeEv:

0000000000000000 <Network::GetAddressingMode()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	e8 00 00 00 00       	call   15 <Network::GetAddressingMode()+0x15>
  15:	48 89 c7             	mov    %rax,%rdi
  18:	e8 00 00 00 00       	call   1d <Network::GetAddressingMode()+0x1d>
  1d:	84 c0                	test   %al,%al
  1f:	74 07                	je     28 <Network::GetAddressingMode()+0x28>
  21:	b8 5a 00 00 00       	mov    $0x5a,%eax
  26:	eb 35                	jmp    5d <Network::GetAddressingMode()+0x5d>
  28:	e8 00 00 00 00       	call   2d <Network::GetAddressingMode()+0x2d>
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <Network::GetAddressingMode()+0x35>
  35:	84 c0                	test   %al,%al
  37:	74 1f                	je     58 <Network::GetAddressingMode()+0x58>
  39:	e8 00 00 00 00       	call   3e <Network::GetAddressingMode()+0x3e>
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <Network::GetAddressingMode()+0x46>
  46:	84 c0                	test   %al,%al
  48:	74 07                	je     51 <Network::GetAddressingMode()+0x51>
  4a:	b8 44 00 00 00       	mov    $0x44,%eax
  4f:	eb 0c                	jmp    5d <Network::GetAddressingMode()+0x5d>
  51:	b8 53 00 00 00       	mov    $0x53,%eax
  56:	eb 05                	jmp    5d <Network::GetAddressingMode()+0x5d>
  58:	b8 55 00 00 00       	mov    $0x55,%eax
  5d:	c9                   	leave  
  5e:	c3                   	ret    

Disassembly of section .text._ZNK7Network11IsDhcpKnownEv:

0000000000000000 <Network::IsDhcpKnown() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	b8 01 00 00 00       	mov    $0x1,%eax
  11:	5d                   	pop    %rbp
  12:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Network::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZNK10DisplaySet10GetColumnsEv:

0000000000000000 <DisplaySet::GetColumns() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 08             	mov    0x8(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK10DisplaySet7GetRowsEv:

0000000000000000 <DisplaySet::GetRows() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 0c             	mov    0xc(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text.i2c_set_baudrate:

0000000000000000 <i2c_set_baudrate>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	90                   	nop
   8:	5d                   	pop    %rbp
   9:	c3                   	ret    

Disassembly of section .text.i2c_set_address:

0000000000000000 <i2c_set_address>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 f8                	mov    %edi,%eax
   6:	88 45 fc             	mov    %al,-0x4(%rbp)
   9:	90                   	nop
   a:	5d                   	pop    %rbp
   b:	c3                   	ret    

Disassembly of section .text.i2c_write:

0000000000000000 <i2c_write>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C13WriteRegisterEht:

0000000000000000 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  24:	00 00 
  26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2a:	31 c0                	xor    %eax,%eax
  2c:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  30:	88 45 f5             	mov    %al,-0xb(%rbp)
  33:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  37:	66 c1 e8 08          	shr    $0x8,%ax
  3b:	88 45 f6             	mov    %al,-0xa(%rbp)
  3e:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  42:	88 45 f7             	mov    %al,-0x9(%rbp)
  45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  49:	48 89 c7             	mov    %rax,%rdi
  4c:	e8 00 00 00 00       	call   51 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x51>
  51:	48 8d 45 f5          	lea    -0xb(%rbp),%rax
  55:	be 03 00 00 00       	mov    $0x3,%esi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	call   62 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x62>
  62:	90                   	nop
  63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  67:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  6e:	00 00 
  70:	74 05                	je     77 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x77>
  72:	e8 00 00 00 00       	call   77 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x77>
  77:	c9                   	leave  
  78:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5SetupEv:

0000000000000000 <HAL_I2C::Setup()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 08          	sub    $0x8,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	0f b6 00             	movzbl (%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	89 c7                	mov    %eax,%edi
  1c:	e8 00 00 00 00       	call   21 <HAL_I2C::Setup()+0x21>
  21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  25:	8b 40 04             	mov    0x4(%rax),%eax
  28:	89 c7                	mov    %eax,%edi
  2a:	e8 00 00 00 00       	call   2f <HAL_I2C::Setup()+0x2f>
  2f:	90                   	nop
  30:	c9                   	leave  
  31:	c3                   	ret    

Disassembly of section .text._ZN7Display9ClearLineEj:

0000000000000000 <Display::ClearLine(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 40 18          	mov    0x18(%rax),%rax
  1b:	48 85 c0             	test   %rax,%rax
  1e:	74 26                	je     46 <Display::ClearLine(unsigned int)+0x46>
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	48 8b 40 18          	mov    0x18(%rax),%rax
  28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2c:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  30:	48 8b 12             	mov    (%rdx),%rdx
  33:	48 83 c2 20          	add    $0x20,%rdx
  37:	48 8b 0a             	mov    (%rdx),%rcx
  3a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  3d:	89 d6                	mov    %edx,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	ff d1                	call   *%rcx
  44:	eb 01                	jmp    47 <Display::ClearLine(unsigned int)+0x47>
  46:	90                   	nop
  47:	c9                   	leave  
  48:	c3                   	ret    

Disassembly of section .text._ZN7Display7PutCharEi:

0000000000000000 <Display::PutChar(int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 40 18          	mov    0x18(%rax),%rax
  1b:	48 85 c0             	test   %rax,%rax
  1e:	74 26                	je     46 <Display::PutChar(int)+0x46>
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	48 8b 40 18          	mov    0x18(%rax),%rax
  28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2c:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  30:	48 8b 12             	mov    (%rdx),%rdx
  33:	48 83 c2 28          	add    $0x28,%rdx
  37:	48 8b 0a             	mov    (%rdx),%rcx
  3a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  3d:	89 d6                	mov    %edx,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	ff d1                	call   *%rcx
  44:	eb 01                	jmp    47 <Display::PutChar(int)+0x47>
  46:	90                   	nop
  47:	c9                   	leave  
  48:	c3                   	ret    

Disassembly of section .text._ZN7Display5WriteEjPKc:

0000000000000000 <Display::Write(unsigned int, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1b:	48 8b 40 18          	mov    0x18(%rax),%rax
  1f:	48 85 c0             	test   %rax,%rax
  22:	75 07                	jne    2b <Display::Write(unsigned int, char const*)+0x2b>
  24:	b8 00 00 00 00       	mov    $0x0,%eax
  29:	eb 7f                	jmp    aa <Display::Write(unsigned int, char const*)+0xaa>
  2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  33:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	48 8b 40 18          	mov    0x18(%rax),%rax
  42:	48 89 c7             	mov    %rax,%rdi
  45:	e8 00 00 00 00       	call   4a <Display::Write(unsigned int, char const*)+0x4a>
  4a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4d:	eb 05                	jmp    54 <Display::Write(unsigned int, char const*)+0x54>
  4f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  58:	0f b6 00             	movzbl (%rax),%eax
  5b:	84 c0                	test   %al,%al
  5d:	74 15                	je     74 <Display::Write(unsigned int, char const*)+0x74>
  5f:	8b 45 f0             	mov    -0x10(%rbp),%eax
  62:	8d 50 01             	lea    0x1(%rax),%edx
  65:	89 55 f0             	mov    %edx,-0x10(%rbp)
  68:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  6b:	76 07                	jbe    74 <Display::Write(unsigned int, char const*)+0x74>
  6d:	b8 01 00 00 00       	mov    $0x1,%eax
  72:	eb 05                	jmp    79 <Display::Write(unsigned int, char const*)+0x79>
  74:	b8 00 00 00 00       	mov    $0x0,%eax
  79:	84 c0                	test   %al,%al
  7b:	75 d2                	jne    4f <Display::Write(unsigned int, char const*)+0x4f>
  7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  81:	48 8b 40 18          	mov    0x18(%rax),%rax
  85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  89:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  8d:	48 8b 12             	mov    (%rdx),%rdx
  90:	48 83 c2 38          	add    $0x38,%rdx
  94:	4c 8b 02             	mov    (%rdx),%r8
  97:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  9a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  9e:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  a1:	48 89 c7             	mov    %rax,%rdi
  a4:	41 ff d0             	call   *%r8
  a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
  aa:	c9                   	leave  
  ab:	c3                   	ret    

Disassembly of section .text._ZN7Display6PrintfEjPKcz:

0000000000000000 <Display::Printf(unsigned int, char const*, ...)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   f:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  16:	89 b5 f4 fe ff ff    	mov    %esi,-0x10c(%rbp)
  1c:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
  23:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  2a:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  31:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  38:	84 c0                	test   %al,%al
  3a:	74 20                	je     5c <Display::Printf(unsigned int, char const*, ...)+0x5c>
  3c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  40:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  44:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  48:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  4c:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  50:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  54:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  58:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  5c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  63:	00 00 
  65:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  6c:	31 c0                	xor    %eax,%eax
  6e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  75:	48 8b 40 18          	mov    0x18(%rax),%rax
  79:	48 85 c0             	test   %rax,%rax
  7c:	75 0a                	jne    88 <Display::Printf(unsigned int, char const*, ...)+0x88>
  7e:	b8 00 00 00 00       	mov    $0x0,%eax
  83:	e9 94 00 00 00       	jmp    11c <Display::Printf(unsigned int, char const*, ...)+0x11c>
  88:	c7 85 08 ff ff ff 18 	movl   $0x18,-0xf8(%rbp)
  8f:	00 00 00 
  92:	c7 85 0c ff ff ff 30 	movl   $0x30,-0xf4(%rbp)
  99:	00 00 00 
  9c:	48 8d 45 10          	lea    0x10(%rbp),%rax
  a0:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  a7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  ae:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  b5:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
  bc:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  c3:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  ca:	be 20 00 00 00       	mov    $0x20,%esi
  cf:	48 89 c7             	mov    %rax,%rdi
  d2:	e8 00 00 00 00       	call   d7 <Display::Printf(unsigned int, char const*, ...)+0xd7>
  d7:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
  dd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  e4:	48 8b 40 18          	mov    0x18(%rax),%rax
  e8:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  ef:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  f3:	48 8b 12             	mov    (%rdx),%rdx
  f6:	48 83 c2 38          	add    $0x38,%rdx
  fa:	4c 8b 02             	mov    (%rdx),%r8
  fd:	8b 8d 04 ff ff ff    	mov    -0xfc(%rbp),%ecx
 103:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
 10a:	8b b5 f4 fe ff ff    	mov    -0x10c(%rbp),%esi
 110:	48 89 c7             	mov    %rax,%rdi
 113:	41 ff d0             	call   *%r8
 116:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
 11c:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
 123:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 12a:	00 00 
 12c:	74 05                	je     133 <Display::Printf(unsigned int, char const*, ...)+0x133>
 12e:	e8 00 00 00 00       	call   133 <Display::Printf(unsigned int, char const*, ...)+0x133>
 133:	c9                   	leave  
 134:	c3                   	ret    

Disassembly of section .text._ZN7Display10TextStatusEPKc:

0000000000000000 <Display::TextStatus(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  18:	48 8b 40 18          	mov    0x18(%rax),%rax
  1c:	48 85 c0             	test   %rax,%rax
  1f:	0f 84 94 00 00 00    	je     b9 <Display::TextStatus(char const*)+0xb9>
  25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  29:	48 8b 40 18          	mov    0x18(%rax),%rax
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <Display::TextStatus(char const*)+0x35>
  35:	89 45 f8             	mov    %eax,-0x8(%rbp)
  38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3c:	48 8b 40 18          	mov    0x18(%rax),%rax
  40:	48 89 c7             	mov    %rax,%rdi
  43:	e8 00 00 00 00       	call   48 <Display::TextStatus(char const*)+0x48>
  48:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4e:	8d 50 ff             	lea    -0x1(%rax),%edx
  51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  55:	be 00 00 00 00       	mov    $0x0,%esi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	call   62 <Display::TextStatus(char const*)+0x62>
  62:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  69:	eb 15                	jmp    80 <Display::TextStatus(char const*)+0x80>
  6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6f:	be 20 00 00 00       	mov    $0x20,%esi
  74:	48 89 c7             	mov    %rax,%rdi
  77:	e8 00 00 00 00       	call   7c <Display::TextStatus(char const*)+0x7c>
  7c:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  80:	8b 45 f8             	mov    -0x8(%rbp),%eax
  83:	83 e8 01             	sub    $0x1,%eax
  86:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  89:	72 e0                	jb     6b <Display::TextStatus(char const*)+0x6b>
  8b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  8e:	8d 50 ff             	lea    -0x1(%rax),%edx
  91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  95:	be 00 00 00 00       	mov    $0x0,%esi
  9a:	48 89 c7             	mov    %rax,%rdi
  9d:	e8 00 00 00 00       	call   a2 <Display::TextStatus(char const*)+0xa2>
  a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  a6:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ad:	89 ce                	mov    %ecx,%esi
  af:	48 89 c7             	mov    %rax,%rdi
  b2:	e8 00 00 00 00       	call   b7 <Display::TextStatus(char const*)+0xb7>
  b7:	eb 01                	jmp    ba <Display::TextStatus(char const*)+0xba>
  b9:	90                   	nop
  ba:	c9                   	leave  
  bb:	c3                   	ret    

Disassembly of section .text._ZN7Display10TextStatusEPKc22Display7SegmentMessagej:

0000000000000000 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 d6             	mov    %rdx,%rsi
  25:	48 89 c7             	mov    %rax,%rdi
  28:	e8 00 00 00 00       	call   2d <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x2d>
  2d:	8b 55 ec             	mov    -0x14(%rbp),%edx
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	89 d6                	mov    %edx,%esi
  36:	48 89 c7             	mov    %rax,%rdi
  39:	e8 00 00 00 00       	call   3e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3e>
  3e:	83 7d e8 ff          	cmpl   $0xffffffff,-0x18(%rbp)
  42:	74 13                	je     57 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x57>
  44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  48:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4b:	48 89 d6             	mov    %rdx,%rsi
  4e:	89 c7                	mov    %eax,%edi
  50:	e8 00 00 00 00       	call   55 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x55>
  55:	eb 01                	jmp    58 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x58>
  57:	90                   	nop
  58:	c9                   	leave  
  59:	c3                   	ret    

Disassembly of section .text._ZN7Display12SetCursorPosEjj:

0000000000000000 <Display::SetCursorPos(unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	48 8b 40 18          	mov    0x18(%rax),%rax
  1e:	48 85 c0             	test   %rax,%rax
  21:	74 2a                	je     4d <Display::SetCursorPos(unsigned int, unsigned int)+0x4d>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 8b 40 18          	mov    0x18(%rax),%rax
  2b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2f:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  33:	48 8b 12             	mov    (%rdx),%rdx
  36:	48 83 c2 40          	add    $0x40,%rdx
  3a:	4c 8b 02             	mov    (%rdx),%r8
  3d:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  43:	89 ce                	mov    %ecx,%esi
  45:	48 89 c7             	mov    %rax,%rdi
  48:	41 ff d0             	call   *%r8
  4b:	eb 01                	jmp    4e <Display::SetCursorPos(unsigned int, unsigned int)+0x4e>
  4d:	90                   	nop
  4e:	c9                   	leave  
  4f:	c3                   	ret    

Disassembly of section .text._ZN7Display6StatusE22Display7SegmentMessage:

0000000000000000 <Display::Status(Display7SegmentMessage)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  1b:	84 c0                	test   %al,%al
  1d:	74 1f                	je     3e <Display::Status(Display7SegmentMessage)+0x3e>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	48 8d 48 08          	lea    0x8(%rax),%rcx
  27:	8b 45 f4             	mov    -0xc(%rbp),%eax
  2a:	f7 d0                	not    %eax
  2c:	0f b7 c0             	movzwl %ax,%eax
  2f:	89 c2                	mov    %eax,%edx
  31:	be 12 00 00 00       	mov    $0x12,%esi
  36:	48 89 cf             	mov    %rcx,%rdi
  39:	e8 00 00 00 00       	call   3e <Display::Status(Display7SegmentMessage)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN7Display3GetEv:

0000000000000000 <Display::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Display::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf13ShowEmacStartEv:

0000000000000000 <DisplayUdf::ShowEmacStart()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  18:	0f b6 52 42          	movzbl 0x42(%rdx),%edx
  1c:	0f b6 d2             	movzbl %dl,%edx
  1f:	89 d6                	mov    %edx,%esi
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <DisplayUdf::ShowEmacStart()+0x29>
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  31:	0f b6 52 42          	movzbl 0x42(%rdx),%edx
  35:	0f b6 ca             	movzbl %dl,%ecx
  38:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3f <DisplayUdf::ShowEmacStart()+0x3f>
  3f:	89 ce                	mov    %ecx,%esi
  41:	48 89 c7             	mov    %rax,%rdi
  44:	b8 00 00 00 00       	mov    $0x0,%eax
  49:	e8 00 00 00 00       	call   4e <DisplayUdf::ShowEmacStart()+0x4e>
  4e:	90                   	nop
  4f:	c9                   	leave  
  50:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf13ShowIpAddressEv:

0000000000000000 <DisplayUdf::ShowIpAddress()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 57                	push   %r15
   a:	41 56                	push   %r14
   c:	41 55                	push   %r13
   e:	41 54                	push   %r12
  10:	53                   	push   %rbx
  11:	48 83 ec 18          	sub    $0x18,%rsp
  15:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  19:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  1d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  21:	0f b6 52 42          	movzbl 0x42(%rdx),%edx
  25:	0f b6 d2             	movzbl %dl,%edx
  28:	89 d6                	mov    %edx,%esi
  2a:	48 89 c7             	mov    %rax,%rdi
  2d:	e8 00 00 00 00       	call   32 <DisplayUdf::ShowIpAddress()+0x32>
  32:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  36:	e8 00 00 00 00       	call   3b <DisplayUdf::ShowIpAddress()+0x3b>
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	e8 00 00 00 00       	call   43 <DisplayUdf::ShowIpAddress()+0x43>
  43:	44 0f be f0          	movsbl %al,%r14d
  47:	e8 00 00 00 00       	call   4c <DisplayUdf::ShowIpAddress()+0x4c>
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	call   54 <DisplayUdf::ShowIpAddress()+0x54>
  54:	41 89 c4             	mov    %eax,%r12d
  57:	e8 00 00 00 00       	call   5c <DisplayUdf::ShowIpAddress()+0x5c>
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	e8 00 00 00 00       	call   64 <DisplayUdf::ShowIpAddress()+0x64>
  64:	c1 e8 18             	shr    $0x18,%eax
  67:	44 0f b6 e8          	movzbl %al,%r13d
  6b:	e8 00 00 00 00       	call   70 <DisplayUdf::ShowIpAddress()+0x70>
  70:	48 89 c7             	mov    %rax,%rdi
  73:	e8 00 00 00 00       	call   78 <DisplayUdf::ShowIpAddress()+0x78>
  78:	c1 e8 10             	shr    $0x10,%eax
  7b:	0f b6 c0             	movzbl %al,%eax
  7e:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  81:	e8 00 00 00 00       	call   86 <DisplayUdf::ShowIpAddress()+0x86>
  86:	48 89 c7             	mov    %rax,%rdi
  89:	e8 00 00 00 00       	call   8e <DisplayUdf::ShowIpAddress()+0x8e>
  8e:	c1 e8 08             	shr    $0x8,%eax
  91:	44 0f b6 f8          	movzbl %al,%r15d
  95:	e8 00 00 00 00       	call   9a <DisplayUdf::ShowIpAddress()+0x9a>
  9a:	48 89 c7             	mov    %rax,%rdi
  9d:	e8 00 00 00 00       	call   a2 <DisplayUdf::ShowIpAddress()+0xa2>
  a2:	0f b6 d0             	movzbl %al,%edx
  a5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  a9:	0f b6 40 42          	movzbl 0x42(%rax),%eax
  ad:	0f b6 c0             	movzbl %al,%eax
  b0:	48 83 ec 08          	sub    $0x8,%rsp
  b4:	41 56                	push   %r14
  b6:	41 54                	push   %r12
  b8:	41 55                	push   %r13
  ba:	44 8b 4d c4          	mov    -0x3c(%rbp),%r9d
  be:	45 89 f8             	mov    %r15d,%r8d
  c1:	89 d1                	mov    %edx,%ecx
  c3:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # ca <DisplayUdf::ShowIpAddress()+0xca>
  ca:	89 c6                	mov    %eax,%esi
  cc:	48 89 df             	mov    %rbx,%rdi
  cf:	b8 00 00 00 00       	mov    $0x0,%eax
  d4:	e8 00 00 00 00       	call   d9 <DisplayUdf::ShowIpAddress()+0xd9>
  d9:	48 83 c4 20          	add    $0x20,%rsp
  dd:	90                   	nop
  de:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
  e2:	5b                   	pop    %rbx
  e3:	41 5c                	pop    %r12
  e5:	41 5d                	pop    %r13
  e7:	41 5e                	pop    %r14
  e9:	41 5f                	pop    %r15
  eb:	5d                   	pop    %rbp
  ec:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf11ShowNetmaskEv:

0000000000000000 <DisplayUdf::ShowNetmask()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 56                	push   %r14
   a:	41 55                	push   %r13
   c:	41 54                	push   %r12
   e:	53                   	push   %rbx
   f:	48 83 ec 10          	sub    $0x10,%rsp
  13:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  17:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
  1b:	e8 00 00 00 00       	call   20 <DisplayUdf::ShowNetmask()+0x20>
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <DisplayUdf::ShowNetmask()+0x28>
  28:	c1 e8 18             	shr    $0x18,%eax
  2b:	44 0f b6 e0          	movzbl %al,%r12d
  2f:	e8 00 00 00 00       	call   34 <DisplayUdf::ShowNetmask()+0x34>
  34:	48 89 c7             	mov    %rax,%rdi
  37:	e8 00 00 00 00       	call   3c <DisplayUdf::ShowNetmask()+0x3c>
  3c:	c1 e8 10             	shr    $0x10,%eax
  3f:	44 0f b6 f0          	movzbl %al,%r14d
  43:	e8 00 00 00 00       	call   48 <DisplayUdf::ShowNetmask()+0x48>
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	e8 00 00 00 00       	call   50 <DisplayUdf::ShowNetmask()+0x50>
  50:	c1 e8 08             	shr    $0x8,%eax
  53:	44 0f b6 e8          	movzbl %al,%r13d
  57:	e8 00 00 00 00       	call   5c <DisplayUdf::ShowNetmask()+0x5c>
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	e8 00 00 00 00       	call   64 <DisplayUdf::ShowNetmask()+0x64>
  64:	0f b6 d0             	movzbl %al,%edx
  67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  6b:	0f b6 40 4c          	movzbl 0x4c(%rax),%eax
  6f:	0f b6 c0             	movzbl %al,%eax
  72:	48 83 ec 08          	sub    $0x8,%rsp
  76:	41 54                	push   %r12
  78:	45 89 f1             	mov    %r14d,%r9d
  7b:	45 89 e8             	mov    %r13d,%r8d
  7e:	89 d1                	mov    %edx,%ecx
  80:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 87 <DisplayUdf::ShowNetmask()+0x87>
  87:	89 c6                	mov    %eax,%esi
  89:	48 89 df             	mov    %rbx,%rdi
  8c:	b8 00 00 00 00       	mov    $0x0,%eax
  91:	e8 00 00 00 00       	call   96 <DisplayUdf::ShowNetmask()+0x96>
  96:	48 83 c4 10          	add    $0x10,%rsp
  9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9e:	48 89 c7             	mov    %rax,%rdi
  a1:	e8 00 00 00 00       	call   a6 <DisplayUdf::ShowNetmask()+0xa6>
  a6:	90                   	nop
  a7:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
  ab:	5b                   	pop    %rbx
  ac:	41 5c                	pop    %r12
  ae:	41 5d                	pop    %r13
  b0:	41 5e                	pop    %r14
  b2:	5d                   	pop    %rbp
  b3:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf13ShowGatewayIpEv:

0000000000000000 <DisplayUdf::ShowGatewayIp()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 56                	push   %r14
   a:	41 55                	push   %r13
   c:	41 54                	push   %r12
   e:	53                   	push   %rbx
   f:	48 83 ec 10          	sub    $0x10,%rsp
  13:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  1b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  1f:	0f b6 52 52          	movzbl 0x52(%rdx),%edx
  23:	0f b6 d2             	movzbl %dl,%edx
  26:	89 d6                	mov    %edx,%esi
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <DisplayUdf::ShowGatewayIp()+0x30>
  30:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
  34:	e8 00 00 00 00       	call   39 <DisplayUdf::ShowGatewayIp()+0x39>
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	call   41 <DisplayUdf::ShowGatewayIp()+0x41>
  41:	c1 e8 18             	shr    $0x18,%eax
  44:	44 0f b6 e0          	movzbl %al,%r12d
  48:	e8 00 00 00 00       	call   4d <DisplayUdf::ShowGatewayIp()+0x4d>
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	e8 00 00 00 00       	call   55 <DisplayUdf::ShowGatewayIp()+0x55>
  55:	c1 e8 10             	shr    $0x10,%eax
  58:	44 0f b6 f0          	movzbl %al,%r14d
  5c:	e8 00 00 00 00       	call   61 <DisplayUdf::ShowGatewayIp()+0x61>
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <DisplayUdf::ShowGatewayIp()+0x69>
  69:	c1 e8 08             	shr    $0x8,%eax
  6c:	44 0f b6 e8          	movzbl %al,%r13d
  70:	e8 00 00 00 00       	call   75 <DisplayUdf::ShowGatewayIp()+0x75>
  75:	48 89 c7             	mov    %rax,%rdi
  78:	e8 00 00 00 00       	call   7d <DisplayUdf::ShowGatewayIp()+0x7d>
  7d:	0f b6 d0             	movzbl %al,%edx
  80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  84:	0f b6 40 52          	movzbl 0x52(%rax),%eax
  88:	0f b6 c0             	movzbl %al,%eax
  8b:	48 83 ec 08          	sub    $0x8,%rsp
  8f:	41 54                	push   %r12
  91:	45 89 f1             	mov    %r14d,%r9d
  94:	45 89 e8             	mov    %r13d,%r8d
  97:	89 d1                	mov    %edx,%ecx
  99:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # a0 <DisplayUdf::ShowGatewayIp()+0xa0>
  a0:	89 c6                	mov    %eax,%esi
  a2:	48 89 df             	mov    %rbx,%rdi
  a5:	b8 00 00 00 00       	mov    $0x0,%eax
  aa:	e8 00 00 00 00       	call   af <DisplayUdf::ShowGatewayIp()+0xaf>
  af:	48 83 c4 10          	add    $0x10,%rsp
  b3:	90                   	nop
  b4:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
  b8:	5b                   	pop    %rbx
  b9:	41 5c                	pop    %r12
  bb:	41 5d                	pop    %r13
  bd:	41 5e                	pop    %r14
  bf:	5d                   	pop    %rbp
  c0:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf12ShowHostNameEv:

0000000000000000 <DisplayUdf::ShowHostName()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  19:	0f b6 52 47          	movzbl 0x47(%rdx),%edx
  1d:	0f b6 d2             	movzbl %dl,%edx
  20:	89 d6                	mov    %edx,%esi
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <DisplayUdf::ShowHostName()+0x2a>
  2a:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
  2e:	e8 00 00 00 00       	call   33 <DisplayUdf::ShowHostName()+0x33>
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	call   3b <DisplayUdf::ShowHostName()+0x3b>
  3b:	48 89 c2             	mov    %rax,%rdx
  3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  42:	0f b6 40 47          	movzbl 0x47(%rax),%eax
  46:	0f b6 c0             	movzbl %al,%eax
  49:	89 c6                	mov    %eax,%esi
  4b:	48 89 df             	mov    %rbx,%rdi
  4e:	e8 00 00 00 00       	call   53 <DisplayUdf::ShowHostName()+0x53>
  53:	90                   	nop
  54:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  58:	c9                   	leave  
  59:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf14ShowDhcpStatusEN7network4dhcp12ClientStatusE:

0000000000000000 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
  17:	0f 87 f0 00 00 00    	ja     10d <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x10d>
  1d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  20:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  27:	00 
  28:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2f <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2f>
  2f:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  32:	48 98                	cltq   
  34:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3b <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3b>
  3b:	48 01 d0             	add    %rdx,%rax
  3e:	3e ff e0             	notrack jmp *%rax
  41:	e8 00 00 00 00       	call   46 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x46>
  46:	be 00 5b 00 00       	mov    $0x5b00,%esi
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	call   53 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x53>
  53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  57:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  5b:	0f b6 52 42          	movzbl 0x42(%rdx),%edx
  5f:	0f b6 d2             	movzbl %dl,%edx
  62:	89 d6                	mov    %edx,%esi
  64:	48 89 c7             	mov    %rax,%rdi
  67:	e8 00 00 00 00       	call   6c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>
  6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  70:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  74:	0f b6 52 42          	movzbl 0x42(%rdx),%edx
  78:	0f b6 ca             	movzbl %dl,%ecx
  7b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 82 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x82>
  82:	89 ce                	mov    %ecx,%esi
  84:	48 89 c7             	mov    %rax,%rdi
  87:	b8 00 00 00 00       	mov    $0x0,%eax
  8c:	e8 00 00 00 00       	call   91 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x91>
  91:	eb 7e                	jmp    111 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x111>
  93:	e8 00 00 00 00       	call   98 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x98>
  98:	be 80 80 00 00       	mov    $0x8080,%esi
  9d:	48 89 c7             	mov    %rax,%rdi
  a0:	e8 00 00 00 00       	call   a5 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0xa5>
  a5:	eb 6a                	jmp    111 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x111>
  a7:	e8 00 00 00 00       	call   ac <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0xac>
  ac:	be 00 5b 00 00       	mov    $0x5b00,%esi
  b1:	48 89 c7             	mov    %rax,%rdi
  b4:	e8 00 00 00 00       	call   b9 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0xb9>
  b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  c1:	0f b6 52 42          	movzbl 0x42(%rdx),%edx
  c5:	0f b6 d2             	movzbl %dl,%edx
  c8:	89 d6                	mov    %edx,%esi
  ca:	48 89 c7             	mov    %rax,%rdi
  cd:	e8 00 00 00 00       	call   d2 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0xd2>
  d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  da:	0f b6 52 42          	movzbl 0x42(%rdx),%edx
  de:	0f b6 ca             	movzbl %dl,%ecx
  e1:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # e8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0xe8>
  e8:	89 ce                	mov    %ecx,%esi
  ea:	48 89 c7             	mov    %rax,%rdi
  ed:	b8 00 00 00 00       	mov    $0x0,%eax
  f2:	e8 00 00 00 00       	call   f7 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0xf7>
  f7:	eb 18                	jmp    111 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x111>
  f9:	e8 00 00 00 00       	call   fe <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0xfe>
  fe:	be 79 5b 00 00       	mov    $0x5b79,%esi
 103:	48 89 c7             	mov    %rax,%rdi
 106:	e8 00 00 00 00       	call   10b <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x10b>
 10b:	eb 04                	jmp    111 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x111>
 10d:	90                   	nop
 10e:	eb 01                	jmp    111 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x111>
 110:	90                   	nop
 111:	90                   	nop
 112:	c9                   	leave  
 113:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf12ShowShutdownEv:

0000000000000000 <DisplayUdf::ShowShutdown()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  19:	ba 00 6f 00 00       	mov    $0x6f00,%edx
  1e:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 25 <DisplayUdf::ShowShutdown()+0x25>
  25:	48 89 c7             	mov    %rax,%rdi
  28:	e8 00 00 00 00       	call   2d <DisplayUdf::ShowShutdown()+0x2d>
  2d:	90                   	nop
  2e:	c9                   	leave  
  2f:	c3                   	ret    

Disassembly of section .text._ZN10DisplayUdf3GetEv:

0000000000000000 <DisplayUdf::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <DisplayUdf::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN7network18display_emac_startEv:

0000000000000000 <network::display_emac_start()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	e8 00 00 00 00       	call   d <network::display_emac_start()+0xd>
   d:	48 89 c7             	mov    %rax,%rdi
  10:	e8 00 00 00 00       	call   15 <network::display_emac_start()+0x15>
  15:	90                   	nop
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    

Disassembly of section .text._ZN7network10display_ipEv:

0000000000000000 <network::display_ip()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	e8 00 00 00 00       	call   d <network::display_ip()+0xd>
   d:	48 89 c7             	mov    %rax,%rdi
  10:	e8 00 00 00 00       	call   15 <network::display_ip()+0x15>
  15:	90                   	nop
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    

Disassembly of section .text._ZN7network15display_netmaskEv:

0000000000000000 <network::display_netmask()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	e8 00 00 00 00       	call   d <network::display_netmask()+0xd>
   d:	48 89 c7             	mov    %rax,%rdi
  10:	e8 00 00 00 00       	call   15 <network::display_netmask()+0x15>
  15:	90                   	nop
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    

Disassembly of section .text._ZN7network15display_gatewayEv:

0000000000000000 <network::display_gateway()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	e8 00 00 00 00       	call   d <network::display_gateway()+0xd>
   d:	48 89 c7             	mov    %rax,%rdi
  10:	e8 00 00 00 00       	call   15 <network::display_gateway()+0x15>
  15:	90                   	nop
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    

Disassembly of section .text._ZN7network16display_hostnameEv:

0000000000000000 <network::display_hostname()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	e8 00 00 00 00       	call   d <network::display_hostname()+0xd>
   d:	48 89 c7             	mov    %rax,%rdi
  10:	e8 00 00 00 00       	call   15 <network::display_hostname()+0x15>
  15:	90                   	nop
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    

Disassembly of section .text._ZN7network21display_emac_shutdownEv:

0000000000000000 <network::display_emac_shutdown()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	e8 00 00 00 00       	call   d <network::display_emac_shutdown()+0xd>
   d:	48 89 c7             	mov    %rax,%rdi
  10:	e8 00 00 00 00       	call   15 <network::display_emac_shutdown()+0x15>
  15:	90                   	nop
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    

Disassembly of section .text._ZN7network19display_dhcp_statusENS_4dhcp12ClientStatusE:

0000000000000000 <network::display_dhcp_status(network::dhcp::ClientStatus)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	89 7d fc             	mov    %edi,-0x4(%rbp)
   f:	e8 00 00 00 00       	call   14 <network::display_dhcp_status(network::dhcp::ClientStatus)+0x14>
  14:	48 89 c2             	mov    %rax,%rdx
  17:	8b 45 fc             	mov    -0x4(%rbp),%eax
  1a:	89 c6                	mov    %eax,%esi
  1c:	48 89 d7             	mov    %rdx,%rdi
  1f:	e8 00 00 00 00       	call   24 <network::display_dhcp_status(network::dhcp::ClientStatus)+0x24>
  24:	90                   	nop
  25:	c9                   	leave  
  26:	c3                   	ret    

ntpclient.o:     file format elf64-x86-64


Disassembly of section .text._ZNK10DisplaySet10GetColumnsEv:

0000000000000000 <DisplaySet::GetColumns() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 08             	mov    0x8(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK10DisplaySet7GetRowsEv:

0000000000000000 <DisplaySet::GetRows() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 0c             	mov    0xc(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text.i2c_set_baudrate:

0000000000000000 <i2c_set_baudrate>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	90                   	nop
   8:	5d                   	pop    %rbp
   9:	c3                   	ret    

Disassembly of section .text.i2c_set_address:

0000000000000000 <i2c_set_address>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 f8                	mov    %edi,%eax
   6:	88 45 fc             	mov    %al,-0x4(%rbp)
   9:	90                   	nop
   a:	5d                   	pop    %rbp
   b:	c3                   	ret    

Disassembly of section .text.i2c_write:

0000000000000000 <i2c_write>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C13WriteRegisterEht:

0000000000000000 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  24:	00 00 
  26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2a:	31 c0                	xor    %eax,%eax
  2c:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  30:	88 45 f5             	mov    %al,-0xb(%rbp)
  33:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  37:	66 c1 e8 08          	shr    $0x8,%ax
  3b:	88 45 f6             	mov    %al,-0xa(%rbp)
  3e:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  42:	88 45 f7             	mov    %al,-0x9(%rbp)
  45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  49:	48 89 c7             	mov    %rax,%rdi
  4c:	e8 00 00 00 00       	call   51 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x51>
  51:	48 8d 45 f5          	lea    -0xb(%rbp),%rax
  55:	be 03 00 00 00       	mov    $0x3,%esi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	call   62 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x62>
  62:	90                   	nop
  63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  67:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  6e:	00 00 
  70:	74 05                	je     77 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x77>
  72:	e8 00 00 00 00       	call   77 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x77>
  77:	c9                   	leave  
  78:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5SetupEv:

0000000000000000 <HAL_I2C::Setup()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 08          	sub    $0x8,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	0f b6 00             	movzbl (%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	89 c7                	mov    %eax,%edi
  1c:	e8 00 00 00 00       	call   21 <HAL_I2C::Setup()+0x21>
  21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  25:	8b 40 04             	mov    0x4(%rax),%eax
  28:	89 c7                	mov    %eax,%edi
  2a:	e8 00 00 00 00       	call   2f <HAL_I2C::Setup()+0x2f>
  2f:	90                   	nop
  30:	c9                   	leave  
  31:	c3                   	ret    

Disassembly of section .text._ZN7Display7PutCharEi:

0000000000000000 <Display::PutChar(int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 40 18          	mov    0x18(%rax),%rax
  1b:	48 85 c0             	test   %rax,%rax
  1e:	74 26                	je     46 <Display::PutChar(int)+0x46>
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	48 8b 40 18          	mov    0x18(%rax),%rax
  28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2c:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  30:	48 8b 12             	mov    (%rdx),%rdx
  33:	48 83 c2 28          	add    $0x28,%rdx
  37:	48 8b 0a             	mov    (%rdx),%rcx
  3a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  3d:	89 d6                	mov    %edx,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	ff d1                	call   *%rcx
  44:	eb 01                	jmp    47 <Display::PutChar(int)+0x47>
  46:	90                   	nop
  47:	c9                   	leave  
  48:	c3                   	ret    

Disassembly of section .text._ZN7Display5WriteEjPKc:

0000000000000000 <Display::Write(unsigned int, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1b:	48 8b 40 18          	mov    0x18(%rax),%rax
  1f:	48 85 c0             	test   %rax,%rax
  22:	75 07                	jne    2b <Display::Write(unsigned int, char const*)+0x2b>
  24:	b8 00 00 00 00       	mov    $0x0,%eax
  29:	eb 7f                	jmp    aa <Display::Write(unsigned int, char const*)+0xaa>
  2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  33:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	48 8b 40 18          	mov    0x18(%rax),%rax
  42:	48 89 c7             	mov    %rax,%rdi
  45:	e8 00 00 00 00       	call   4a <Display::Write(unsigned int, char const*)+0x4a>
  4a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4d:	eb 05                	jmp    54 <Display::Write(unsigned int, char const*)+0x54>
  4f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  58:	0f b6 00             	movzbl (%rax),%eax
  5b:	84 c0                	test   %al,%al
  5d:	74 15                	je     74 <Display::Write(unsigned int, char const*)+0x74>
  5f:	8b 45 f0             	mov    -0x10(%rbp),%eax
  62:	8d 50 01             	lea    0x1(%rax),%edx
  65:	89 55 f0             	mov    %edx,-0x10(%rbp)
  68:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  6b:	76 07                	jbe    74 <Display::Write(unsigned int, char const*)+0x74>
  6d:	b8 01 00 00 00       	mov    $0x1,%eax
  72:	eb 05                	jmp    79 <Display::Write(unsigned int, char const*)+0x79>
  74:	b8 00 00 00 00       	mov    $0x0,%eax
  79:	84 c0                	test   %al,%al
  7b:	75 d2                	jne    4f <Display::Write(unsigned int, char const*)+0x4f>
  7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  81:	48 8b 40 18          	mov    0x18(%rax),%rax
  85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  89:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  8d:	48 8b 12             	mov    (%rdx),%rdx
  90:	48 83 c2 38          	add    $0x38,%rdx
  94:	4c 8b 02             	mov    (%rdx),%r8
  97:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  9a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  9e:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  a1:	48 89 c7             	mov    %rax,%rdi
  a4:	41 ff d0             	call   *%r8
  a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
  aa:	c9                   	leave  
  ab:	c3                   	ret    

Disassembly of section .text._ZN7Display10TextStatusEPKc:

0000000000000000 <Display::TextStatus(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  18:	48 8b 40 18          	mov    0x18(%rax),%rax
  1c:	48 85 c0             	test   %rax,%rax
  1f:	0f 84 94 00 00 00    	je     b9 <Display::TextStatus(char const*)+0xb9>
  25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  29:	48 8b 40 18          	mov    0x18(%rax),%rax
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <Display::TextStatus(char const*)+0x35>
  35:	89 45 f8             	mov    %eax,-0x8(%rbp)
  38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3c:	48 8b 40 18          	mov    0x18(%rax),%rax
  40:	48 89 c7             	mov    %rax,%rdi
  43:	e8 00 00 00 00       	call   48 <Display::TextStatus(char const*)+0x48>
  48:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4e:	8d 50 ff             	lea    -0x1(%rax),%edx
  51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  55:	be 00 00 00 00       	mov    $0x0,%esi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	call   62 <Display::TextStatus(char const*)+0x62>
  62:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  69:	eb 15                	jmp    80 <Display::TextStatus(char const*)+0x80>
  6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6f:	be 20 00 00 00       	mov    $0x20,%esi
  74:	48 89 c7             	mov    %rax,%rdi
  77:	e8 00 00 00 00       	call   7c <Display::TextStatus(char const*)+0x7c>
  7c:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  80:	8b 45 f8             	mov    -0x8(%rbp),%eax
  83:	83 e8 01             	sub    $0x1,%eax
  86:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  89:	72 e0                	jb     6b <Display::TextStatus(char const*)+0x6b>
  8b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  8e:	8d 50 ff             	lea    -0x1(%rax),%edx
  91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  95:	be 00 00 00 00       	mov    $0x0,%esi
  9a:	48 89 c7             	mov    %rax,%rdi
  9d:	e8 00 00 00 00       	call   a2 <Display::TextStatus(char const*)+0xa2>
  a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  a6:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ad:	89 ce                	mov    %ecx,%esi
  af:	48 89 c7             	mov    %rax,%rdi
  b2:	e8 00 00 00 00       	call   b7 <Display::TextStatus(char const*)+0xb7>
  b7:	eb 01                	jmp    ba <Display::TextStatus(char const*)+0xba>
  b9:	90                   	nop
  ba:	c9                   	leave  
  bb:	c3                   	ret    

Disassembly of section .text._ZN7Display10TextStatusEPKc22Display7SegmentMessagej:

0000000000000000 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 d6             	mov    %rdx,%rsi
  25:	48 89 c7             	mov    %rax,%rdi
  28:	e8 00 00 00 00       	call   2d <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x2d>
  2d:	8b 55 ec             	mov    -0x14(%rbp),%edx
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	89 d6                	mov    %edx,%esi
  36:	48 89 c7             	mov    %rax,%rdi
  39:	e8 00 00 00 00       	call   3e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3e>
  3e:	83 7d e8 ff          	cmpl   $0xffffffff,-0x18(%rbp)
  42:	74 13                	je     57 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x57>
  44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  48:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4b:	48 89 d6             	mov    %rdx,%rsi
  4e:	89 c7                	mov    %eax,%edi
  50:	e8 00 00 00 00       	call   55 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x55>
  55:	eb 01                	jmp    58 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x58>
  57:	90                   	nop
  58:	c9                   	leave  
  59:	c3                   	ret    

Disassembly of section .text._ZN7Display12SetCursorPosEjj:

0000000000000000 <Display::SetCursorPos(unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	48 8b 40 18          	mov    0x18(%rax),%rax
  1e:	48 85 c0             	test   %rax,%rax
  21:	74 2a                	je     4d <Display::SetCursorPos(unsigned int, unsigned int)+0x4d>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 8b 40 18          	mov    0x18(%rax),%rax
  2b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2f:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  33:	48 8b 12             	mov    (%rdx),%rdx
  36:	48 83 c2 40          	add    $0x40,%rdx
  3a:	4c 8b 02             	mov    (%rdx),%r8
  3d:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  43:	89 ce                	mov    %ecx,%esi
  45:	48 89 c7             	mov    %rax,%rdi
  48:	41 ff d0             	call   *%r8
  4b:	eb 01                	jmp    4e <Display::SetCursorPos(unsigned int, unsigned int)+0x4e>
  4d:	90                   	nop
  4e:	c9                   	leave  
  4f:	c3                   	ret    

Disassembly of section .text._ZN7Display6StatusE22Display7SegmentMessage:

0000000000000000 <Display::Status(Display7SegmentMessage)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  1b:	84 c0                	test   %al,%al
  1d:	74 1f                	je     3e <Display::Status(Display7SegmentMessage)+0x3e>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	48 8d 48 08          	lea    0x8(%rax),%rcx
  27:	8b 45 f4             	mov    -0xc(%rbp),%eax
  2a:	f7 d0                	not    %eax
  2c:	0f b7 c0             	movzwl %ax,%eax
  2f:	89 c2                	mov    %eax,%edx
  31:	be 12 00 00 00       	mov    $0x12,%esi
  36:	48 89 cf             	mov    %rcx,%rdi
  39:	e8 00 00 00 00       	call   3e <Display::Status(Display7SegmentMessage)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN7Display3GetEv:

0000000000000000 <Display::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Display::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN9ntpclient14display_statusENS_6StatusE:

0000000000000000 <ntpclient::display_status(ntpclient::Status)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	89 7d fc             	mov    %edi,-0x4(%rbp)
   f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  13:	75 23                	jne    38 <ntpclient::display_status(ntpclient::Status)+0x38>
  15:	e8 00 00 00 00       	call   1a <ntpclient::display_status(ntpclient::Status)+0x1a>
  1a:	48 89 c7             	mov    %rax,%rdi
  1d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  22:	ba 00 66 00 00       	mov    $0x6600,%edx
  27:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2e <ntpclient::display_status(ntpclient::Status)+0x2e>
  2e:	48 89 c6             	mov    %rax,%rsi
  31:	e8 00 00 00 00       	call   36 <ntpclient::display_status(ntpclient::Status)+0x36>
  36:	eb 28                	jmp    60 <ntpclient::display_status(ntpclient::Status)+0x60>
  38:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  3c:	75 22                	jne    60 <ntpclient::display_status(ntpclient::Status)+0x60>
  3e:	e8 00 00 00 00       	call   43 <ntpclient::display_status(ntpclient::Status)+0x43>
  43:	48 89 c7             	mov    %rax,%rdi
  46:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  4b:	ba 79 66 00 00       	mov    $0x6679,%edx
  50:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 57 <ntpclient::display_status(ntpclient::Status)+0x57>
  57:	48 89 c6             	mov    %rax,%rsi
  5a:	e8 00 00 00 00       	call   5f <ntpclient::display_status(ntpclient::Status)+0x5f>
  5f:	90                   	nop
  60:	c9                   	leave  
  61:	c3                   	ret    
