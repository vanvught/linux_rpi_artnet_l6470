In archive lib_linux/libtlc59711dmx.a:

tlc59711dmx.o:     file format elf64-x86-64


Disassembly of section .text._ZN8LightSetC2Ev:

0000000000000000 <LightSet::LightSet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <LightSet::LightSet()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN8LightSetD2Ev:

0000000000000000 <LightSet::~LightSet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <LightSet::~LightSet()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN8LightSetD0Ev:

0000000000000000 <LightSet::~LightSet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <LightSet::~LightSet()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <LightSet::~LightSet()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN8LightSet6FullOnEv:

0000000000000000 <LightSet::FullOn()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx18GetDmxStartAddressEv:

0000000000000000 <TLC59711Dmx::GetDmxStartAddress()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx15GetDmxFootprintEv:

0000000000000000 <TLC59711Dmx::GetDmxFootprint()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZL4ceilf:

0000000000000000 <ceil(float)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
   d:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
  12:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
  16:	89 45 fc             	mov    %eax,-0x4(%rbp)
  19:	66 0f ef c0          	pxor   %xmm0,%xmm0
  1d:	f3 0f 2a 45 fc       	cvtsi2ssl -0x4(%rbp),%xmm0
  22:	0f 2e 45 ec          	ucomiss -0x14(%rbp),%xmm0
  26:	7a 0d                	jp     35 <ceil(float)+0x35>
  28:	0f 2e 45 ec          	ucomiss -0x14(%rbp),%xmm0
  2c:	75 07                	jne    35 <ceil(float)+0x35>
  2e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  31:	48 98                	cltq   
  33:	eb 08                	jmp    3d <ceil(float)+0x3d>
  35:	8b 45 fc             	mov    -0x4(%rbp),%eax
  38:	83 c0 01             	add    $0x1,%eax
  3b:	48 98                	cltq   
  3d:	5d                   	pop    %rbp
  3e:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711DmxC2Ev:

0000000000000000 <TLC59711Dmx::TLC59711Dmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <TLC59711Dmx::TLC59711Dmx()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <TLC59711Dmx::TLC59711Dmx()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	66 c7 40 08 01 00    	movw   $0x1,0x8(%rax)
  34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  38:	66 c7 40 0a 0c 00    	movw   $0xc,0xa(%rax)
  3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42:	c6 40 0c 01          	movb   $0x1,0xc(%rax)
  46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4a:	c6 40 0d 00          	movb   $0x0,0xd(%rax)
  4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  52:	c6 40 0e 00          	movb   $0x0,0xe(%rax)
  56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5a:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  61:	00 
  62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  66:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
  6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  71:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7c:	c6 40 20 04          	movb   $0x4,0x20(%rax)
  80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  84:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  8b:	00 
  8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  90:	48 89 c7             	mov    %rax,%rdi
  93:	e8 00 00 00 00       	call   98 <TLC59711Dmx::TLC59711Dmx()+0x98>
  98:	90                   	nop
  99:	c9                   	leave  
  9a:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711DmxD2Ev:

0000000000000000 <TLC59711Dmx::~TLC59711Dmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 18 <TLC59711Dmx::~TLC59711Dmx()+0x18>
  18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1c:	48 89 10             	mov    %rdx,(%rax)
  1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  23:	48 8b 58 10          	mov    0x10(%rax),%rbx
  27:	48 85 db             	test   %rbx,%rbx
  2a:	74 10                	je     3c <TLC59711Dmx::~TLC59711Dmx()+0x3c>
  2c:	48 89 df             	mov    %rbx,%rdi
  2f:	e8 00 00 00 00       	call   34 <TLC59711Dmx::~TLC59711Dmx()+0x34>
  34:	48 89 df             	mov    %rbx,%rdi
  37:	e8 00 00 00 00       	call   3c <TLC59711Dmx::~TLC59711Dmx()+0x3c>
  3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  47:	00 
  48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	call   54 <TLC59711Dmx::~TLC59711Dmx()+0x54>
  54:	90                   	nop
  55:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  59:	c9                   	leave  
  5a:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711DmxD0Ev:

0000000000000000 <TLC59711Dmx::~TLC59711Dmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <TLC59711Dmx::~TLC59711Dmx()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <TLC59711Dmx::~TLC59711Dmx()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx5StartEj:

0000000000000000 <TLC59711Dmx::Start(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
  1b:	84 c0                	test   %al,%al
  1d:	75 2c                	jne    4b <TLC59711Dmx::Start(unsigned int)+0x4b>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	c6 40 0d 01          	movb   $0x1,0xd(%rax)
  27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2b:	48 8b 40 10          	mov    0x10(%rax),%rax
  2f:	48 85 c0             	test   %rax,%rax
  32:	0f 94 c0             	sete   %al
  35:	0f b6 c0             	movzbl %al,%eax
  38:	48 85 c0             	test   %rax,%rax
  3b:	74 0f                	je     4c <TLC59711Dmx::Start(unsigned int)+0x4c>
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <TLC59711Dmx::Start(unsigned int)+0x49>
  49:	eb 01                	jmp    4c <TLC59711Dmx::Start(unsigned int)+0x4c>
  4b:	90                   	nop
  4c:	c9                   	leave  
  4d:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx4StopEj:

0000000000000000 <TLC59711Dmx::Stop(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  13:	0f b6 40 0d          	movzbl 0xd(%rax),%eax
  17:	83 f0 01             	xor    $0x1,%eax
  1a:	84 c0                	test   %al,%al
  1c:	75 0a                	jne    28 <TLC59711Dmx::Stop(unsigned int)+0x28>
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	c6 40 0d 00          	movb   $0x0,0xd(%rax)
  26:	eb 01                	jmp    29 <TLC59711Dmx::Stop(unsigned int)+0x29>
  28:	90                   	nop
  29:	5d                   	pop    %rbp
  2a:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx7SetDataEjPKhj:

0000000000000000 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  1a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  1f:	75 28                	jne    49 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x49>
  21:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 28 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x28>
  28:	48 89 c1             	mov    %rax,%rcx
  2b:	ba 4c 00 00 00       	mov    $0x4c,%edx
  30:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 37 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x37>
  37:	48 89 c6             	mov    %rax,%rsi
  3a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 41 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x41>
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x49>
  49:	81 7d e0 00 02 00 00 	cmpl   $0x200,-0x20(%rbp)
  50:	76 28                	jbe    7a <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
  52:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 59 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x59>
  59:	48 89 c1             	mov    %rax,%rcx
  5c:	ba 4d 00 00 00       	mov    $0x4d,%edx
  61:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 68 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x68>
  68:	48 89 c6             	mov    %rax,%rsi
  6b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 72 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x72>
  72:	48 89 c7             	mov    %rax,%rdi
  75:	e8 00 00 00 00       	call   7a <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
  7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7e:	48 8b 40 10          	mov    0x10(%rax),%rax
  82:	48 85 c0             	test   %rax,%rax
  85:	0f 94 c0             	sete   %al
  88:	0f b6 c0             	movzbl %al,%eax
  8b:	48 85 c0             	test   %rax,%rax
  8e:	74 11                	je     a1 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xa1>
  90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  94:	be 00 00 00 00       	mov    $0x0,%esi
  99:	48 89 c7             	mov    %rax,%rdi
  9c:	e8 00 00 00 00       	call   a1 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xa1>
  a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a5:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  a9:	0f b7 c0             	movzwl %ax,%eax
  ac:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b4:	48 01 d0             	add    %rdx,%rax
  b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  bf:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  c3:	66 89 45 f0          	mov    %ax,-0x10(%rbp)
  c7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  ce:	eb 55                	jmp    125 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x125>
  d0:	0f b7 45 f0          	movzwl -0x10(%rbp),%eax
  d4:	39 45 e0             	cmp    %eax,-0x20(%rbp)
  d7:	72 5e                	jb     137 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x137>
  d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  dd:	0f b6 00             	movzbl (%rax),%eax
  e0:	0f b6 c0             	movzbl %al,%eax
  e3:	c1 e0 08             	shl    $0x8,%eax
  e6:	89 c2                	mov    %eax,%edx
  e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ec:	0f b6 00             	movzbl (%rax),%eax
  ef:	0f b6 c0             	movzbl %al,%eax
  f2:	09 d0                	or     %edx,%eax
  f4:	66 89 45 f2          	mov    %ax,-0xe(%rbp)
  f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  fc:	48 8b 40 10          	mov    0x10(%rax),%rax
 100:	0f b7 55 f2          	movzwl -0xe(%rbp),%edx
 104:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 107:	89 ce                	mov    %ecx,%esi
 109:	48 89 c7             	mov    %rax,%rdi
 10c:	e8 00 00 00 00       	call   111 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x111>
 111:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 116:	0f b7 45 f0          	movzwl -0x10(%rbp),%eax
 11a:	83 c0 01             	add    $0x1,%eax
 11d:	66 89 45 f0          	mov    %ax,-0x10(%rbp)
 121:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 125:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 129:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
 12d:	0f b7 c0             	movzwl %ax,%eax
 130:	39 45 f4             	cmp    %eax,-0xc(%rbp)
 133:	72 9b                	jb     d0 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0xd0>
 135:	eb 01                	jmp    138 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x138>
 137:	90                   	nop
 138:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 13c:	0f b7 40 08          	movzwl 0x8(%rax),%eax
 140:	66 39 45 f0          	cmp    %ax,-0x10(%rbp)
 144:	0f 94 c0             	sete   %al
 147:	0f b6 c0             	movzbl %al,%eax
 14a:	48 85 c0             	test   %rax,%rax
 14d:	75 21                	jne    170 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x170>
 14f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 153:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
 157:	83 f0 01             	xor    $0x1,%eax
 15a:	84 c0                	test   %al,%al
 15c:	74 13                	je     171 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x171>
 15e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 162:	48 8b 40 10          	mov    0x10(%rax),%rax
 166:	48 89 c7             	mov    %rax,%rdi
 169:	e8 00 00 00 00       	call   16e <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x16e>
 16e:	eb 01                	jmp    171 <TLC59711Dmx::SetData(unsigned int, unsigned char const*, unsigned int)+0x171>
 170:	90                   	nop
 171:	c9                   	leave  
 172:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx10SetLEDTypeE13TTLC59711Type:

0000000000000000 <TLC59711Dmx::SetLEDType(TTLC59711Type)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	8b 55 f4             	mov    -0xc(%rbp),%edx
  1a:	89 50 1c             	mov    %edx,0x1c(%rax)
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <TLC59711Dmx::SetLEDType(TTLC59711Type)+0x29>
  29:	90                   	nop
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx11SetLEDCountEh:

0000000000000000 <TLC59711Dmx::SetLEDCount(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  1d:	88 50 20             	mov    %dl,0x20(%rax)
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <TLC59711Dmx::SetLEDCount(unsigned char)+0x2c>
  2c:	90                   	nop
  2d:	c9                   	leave  
  2e:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx13SetSpiSpeedHzEj:

0000000000000000 <TLC59711Dmx::SetSpiSpeedHz(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  13:	8b 55 f4             	mov    -0xc(%rbp),%edx
  16:	89 50 18             	mov    %edx,0x18(%rax)
  19:	90                   	nop
  1a:	5d                   	pop    %rbp
  1b:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx10InitializeEv:

0000000000000000 <TLC59711Dmx::Initialize()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  15:	48 8b 40 10          	mov    0x10(%rax),%rax
  19:	48 85 c0             	test   %rax,%rax
  1c:	74 28                	je     46 <TLC59711Dmx::Initialize()+0x46>
  1e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 25 <TLC59711Dmx::Initialize()+0x25>
  25:	48 89 c1             	mov    %rax,%rcx
  28:	ba 7b 00 00 00       	mov    $0x7b,%edx
  2d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 34 <TLC59711Dmx::Initialize()+0x34>
  34:	48 89 c6             	mov    %rax,%rsi
  37:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3e <TLC59711Dmx::Initialize()+0x3e>
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <TLC59711Dmx::Initialize()+0x46>
  46:	bf 28 00 00 00       	mov    $0x28,%edi
  4b:	e8 00 00 00 00       	call   50 <TLC59711Dmx::Initialize()+0x50>
  50:	48 89 c3             	mov    %rax,%rbx
  53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  57:	8b 50 18             	mov    0x18(%rax),%edx
  5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5e:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  62:	0f b6 c0             	movzbl %al,%eax
  65:	89 c6                	mov    %eax,%esi
  67:	48 89 df             	mov    %rbx,%rdi
  6a:	e8 00 00 00 00       	call   6f <TLC59711Dmx::Initialize()+0x6f>
  6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  73:	48 89 58 10          	mov    %rbx,0x10(%rax)
  77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7b:	48 8b 40 10          	mov    0x10(%rax),%rax
  7f:	48 85 c0             	test   %rax,%rax
  82:	75 28                	jne    ac <TLC59711Dmx::Initialize()+0xac>
  84:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8b <TLC59711Dmx::Initialize()+0x8b>
  8b:	48 89 c1             	mov    %rax,%rcx
  8e:	ba 7d 00 00 00       	mov    $0x7d,%edx
  93:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9a <TLC59711Dmx::Initialize()+0x9a>
  9a:	48 89 c6             	mov    %rax,%rsi
  9d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a4 <TLC59711Dmx::Initialize()+0xa4>
  a4:	48 89 c7             	mov    %rax,%rdi
  a7:	e8 00 00 00 00       	call   ac <TLC59711Dmx::Initialize()+0xac>
  ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b0:	48 8b 40 10          	mov    0x10(%rax),%rax
  b4:	48 89 c7             	mov    %rax,%rdi
  b7:	e8 00 00 00 00       	call   bc <TLC59711Dmx::Initialize()+0xbc>
  bc:	90                   	nop
  bd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  c1:	c9                   	leave  
  c2:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx13UpdateMembersEv:

0000000000000000 <TLC59711Dmx::UpdateMembers()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 08          	sub    $0x8,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 40 1c             	mov    0x1c(%rax),%eax
  17:	85 c0                	test   %eax,%eax
  19:	75 1b                	jne    36 <TLC59711Dmx::UpdateMembers()+0x36>
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	0f b6 40 20          	movzbl 0x20(%rax),%eax
  23:	0f b6 d0             	movzbl %al,%edx
  26:	89 d0                	mov    %edx,%eax
  28:	01 c0                	add    %eax,%eax
  2a:	01 c2                	add    %eax,%edx
  2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  30:	66 89 50 0a          	mov    %dx,0xa(%rax)
  34:	eb 1a                	jmp    50 <TLC59711Dmx::UpdateMembers()+0x50>
  36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3a:	0f b6 40 20          	movzbl 0x20(%rax),%eax
  3e:	0f b6 c0             	movzbl %al,%eax
  41:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
  48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4c:	66 89 50 0a          	mov    %dx,0xa(%rax)
  50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  54:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  58:	0f b7 c0             	movzwl %ax,%eax
  5b:	66 0f ef c0          	pxor   %xmm0,%xmm0
  5f:	f3 0f 2a c0          	cvtsi2ss %eax,%xmm0
  63:	f3 0f 10 0d 00 00 00 	movss  0x0(%rip),%xmm1        # 6b <TLC59711Dmx::UpdateMembers()+0x6b>
  6a:	00 
  6b:	f3 0f 5e c1          	divss  %xmm1,%xmm0
  6f:	66 0f 7e c0          	movd   %xmm0,%eax
  73:	66 0f 6e c0          	movd   %eax,%xmm0
  77:	e8 00 00 00 00       	call   7c <TLC59711Dmx::UpdateMembers()+0x7c>
  7c:	89 c2                	mov    %eax,%edx
  7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  82:	88 50 0c             	mov    %dl,0xc(%rax)
  85:	90                   	nop
  86:	c9                   	leave  
  87:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx8BlackoutEb:

0000000000000000 <TLC59711Dmx::Blackout(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  1d:	88 50 0e             	mov    %dl,0xe(%rax)
  20:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
  24:	74 12                	je     38 <TLC59711Dmx::Blackout(bool)+0x38>
  26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2a:	48 8b 40 10          	mov    0x10(%rax),%rax
  2e:	48 89 c7             	mov    %rax,%rdi
  31:	e8 00 00 00 00       	call   36 <TLC59711Dmx::Blackout(bool)+0x36>
  36:	eb 10                	jmp    48 <TLC59711Dmx::Blackout(bool)+0x48>
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	48 8b 40 10          	mov    0x10(%rax),%rax
  40:	48 89 c7             	mov    %rax,%rdi
  43:	e8 00 00 00 00       	call   48 <TLC59711Dmx::Blackout(bool)+0x48>
  48:	90                   	nop
  49:	c9                   	leave  
  4a:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx18SetDmxStartAddressEt:

0000000000000000 <TLC59711Dmx::SetDmxStartAddress(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  16:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%rbp)
  1b:	74 08                	je     25 <TLC59711Dmx::SetDmxStartAddress(unsigned short)+0x25>
  1d:	66 81 7d f4 00 02    	cmpw   $0x200,-0xc(%rbp)
  23:	76 28                	jbe    4d <TLC59711Dmx::SetDmxStartAddress(unsigned short)+0x4d>
  25:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2c <TLC59711Dmx::SetDmxStartAddress(unsigned short)+0x2c>
  2c:	48 89 c1             	mov    %rax,%rcx
  2f:	ba 9a 00 00 00       	mov    $0x9a,%edx
  34:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3b <TLC59711Dmx::SetDmxStartAddress(unsigned short)+0x3b>
  3b:	48 89 c6             	mov    %rax,%rsi
  3e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 45 <TLC59711Dmx::SetDmxStartAddress(unsigned short)+0x45>
  45:	48 89 c7             	mov    %rax,%rdi
  48:	e8 00 00 00 00       	call   4d <TLC59711Dmx::SetDmxStartAddress(unsigned short)+0x4d>
  4d:	66 83 7d f4 00       	cmpw   $0x0,-0xc(%rbp)
  52:	74 54                	je     a8 <TLC59711Dmx::SetDmxStartAddress(unsigned short)+0xa8>
  54:	66 81 7d f4 00 02    	cmpw   $0x200,-0xc(%rbp)
  5a:	77 4c                	ja     a8 <TLC59711Dmx::SetDmxStartAddress(unsigned short)+0xa8>
  5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  60:	0f b7 55 f4          	movzwl -0xc(%rbp),%edx
  64:	66 89 50 08          	mov    %dx,0x8(%rax)
  68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6c:	48 8b 40 28          	mov    0x28(%rax),%rax
  70:	48 85 c0             	test   %rax,%rax
  73:	74 2c                	je     a1 <TLC59711Dmx::SetDmxStartAddress(unsigned short)+0xa1>
  75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  79:	48 8b 40 28          	mov    0x28(%rax),%rax
  7d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  81:	48 8b 52 28          	mov    0x28(%rdx),%rdx
  85:	48 8b 12             	mov    (%rdx),%rdx
  88:	48 83 c2 10          	add    $0x10,%rdx
  8c:	48 8b 0a             	mov    (%rdx),%rcx
  8f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  93:	0f b7 52 08          	movzwl 0x8(%rdx),%edx
  97:	0f b7 d2             	movzwl %dx,%edx
  9a:	89 d6                	mov    %edx,%esi
  9c:	48 89 c7             	mov    %rax,%rdi
  9f:	ff d1                	call   *%rcx
  a1:	b8 01 00 00 00       	mov    $0x1,%eax
  a6:	eb 05                	jmp    ad <TLC59711Dmx::SetDmxStartAddress(unsigned short)+0xad>
  a8:	b8 00 00 00 00       	mov    $0x0,%eax
  ad:	c9                   	leave  
  ae:	c3                   	ret    

Disassembly of section .text._ZN11TLC59711Dmx11GetSlotInfoEtRN8lightset8SlotInfoE:

0000000000000000 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1a:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  1e:	66 39 45 e4          	cmp    %ax,-0x1c(%rbp)
  22:	76 0a                	jbe    2e <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x2e>
  24:	b8 00 00 00 00       	mov    $0x0,%eax
  29:	e9 ac 00 00 00       	jmp    da <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xda>
  2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  32:	8b 40 1c             	mov    0x1c(%rax),%eax
  35:	85 c0                	test   %eax,%eax
  37:	75 27                	jne    60 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x60>
  39:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  3d:	83 e8 03             	sub    $0x3,%eax
  40:	89 c2                	mov    %eax,%edx
  42:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  46:	0f b7 c0             	movzwl %ax,%eax
  49:	69 c0 ab aa 00 00    	imul   $0xaaab,%eax,%eax
  4f:	c1 e8 10             	shr    $0x10,%eax
  52:	66 d1 e8             	shr    %ax
  55:	0f b7 c0             	movzwl %ax,%eax
  58:	0f af c2             	imul   %edx,%eax
  5b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  5e:	eb 1a                	jmp    7a <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0x7a>
  60:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  64:	83 e8 04             	sub    $0x4,%eax
  67:	89 c2                	mov    %eax,%edx
  69:	0f b7 45 e4          	movzwl -0x1c(%rbp),%eax
  6d:	66 c1 e8 02          	shr    $0x2,%ax
  71:	0f b7 c0             	movzwl %ax,%eax
  74:	0f af c2             	imul   %edx,%eax
  77:	89 45 fc             	mov    %eax,-0x4(%rbp)
  7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  7e:	c6 40 02 00          	movb   $0x0,0x2(%rax)
  82:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
  86:	74 41                	je     c9 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xc9>
  88:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
  8c:	77 46                	ja     d4 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xd4>
  8e:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
  92:	74 2a                	je     be <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xbe>
  94:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
  98:	77 3a                	ja     d4 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xd4>
  9a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  9e:	74 08                	je     a8 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xa8>
  a0:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  a4:	74 0d                	je     b3 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xb3>
  a6:	eb 2c                	jmp    d4 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xd4>
  a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ac:	66 c7 00 05 02       	movw   $0x205,(%rax)
  b1:	eb 22                	jmp    d5 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xd5>
  b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b7:	66 c7 00 06 02       	movw   $0x206,(%rax)
  bc:	eb 17                	jmp    d5 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xd5>
  be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c2:	66 c7 00 07 02       	movw   $0x207,(%rax)
  c7:	eb 0c                	jmp    d5 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xd5>
  c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  cd:	66 c7 00 12 02       	movw   $0x212,(%rax)
  d2:	eb 01                	jmp    d5 <TLC59711Dmx::GetSlotInfo(unsigned short, lightset::SlotInfo&)+0xd5>
  d4:	90                   	nop
  d5:	b8 01 00 00 00       	mov    $0x1,%eax
  da:	5d                   	pop    %rbp
  db:	c3                   	ret    

tlc59711dmxparams.o:     file format elf64-x86-64


Disassembly of section .text._ZN17TLC59711DmxParams9isMaskSetEj:

0000000000000000 <TLC59711DmxParams::isMaskSet(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8b 47 08             	mov    0x8(%rdi),%eax
   7:	21 f0                	and    %esi,%eax
   9:	39 f0                	cmp    %esi,%eax
   b:	0f 94 c0             	sete   %al
   e:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParamsC2EP22TLC59711DmxParamsStore:

0000000000000000 <TLC59711DmxParams::TLC59711DmxParams(TLC59711DmxParamsStore*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 89 37             	mov    %rsi,(%rdi)
   7:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   e:	00 
   f:	c6 47 10 04          	movb   $0x4,0x10(%rdi)
  13:	66 c7 47 12 01 00    	movw   $0x1,0x12(%rdi)
  19:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%rdi)
  20:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParams4LoadEv:

0000000000000000 <TLC59711DmxParams::Load()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	48 89 fa             	mov    %rdi,%rdx
   9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 10 <TLC59711DmxParams::Load()+0x10>
  10:	55                   	push   %rbp
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	48 83 ec 20          	sub    $0x20,%rsp
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  27:	31 c0                	xor    %eax,%eax
  29:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  30:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  35:	48 89 ef             	mov    %rbp,%rdi
  38:	e8 00 00 00 00       	call   3d <TLC59711DmxParams::Load()+0x3d>
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 47 <TLC59711DmxParams::Load()+0x47>
  47:	e8 00 00 00 00       	call   4c <TLC59711DmxParams::Load()+0x4c>
  4c:	48 8b 3b             	mov    (%rbx),%rdi
  4f:	84 c0                	test   %al,%al
  51:	41 89 c4             	mov    %eax,%r12d
  54:	74 11                	je     67 <TLC59711DmxParams::Load()+0x67>
  56:	48 85 ff             	test   %rdi,%rdi
  59:	74 1e                	je     79 <TLC59711DmxParams::Load()+0x79>
  5b:	48 8b 07             	mov    (%rdi),%rax
  5e:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  62:	ff 50 10             	call   *0x10(%rax)
  65:	eb 12                	jmp    79 <TLC59711DmxParams::Load()+0x79>
  67:	48 85 ff             	test   %rdi,%rdi
  6a:	74 0d                	je     79 <TLC59711DmxParams::Load()+0x79>
  6c:	48 8b 07             	mov    (%rdi),%rax
  6f:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  73:	41 b4 01             	mov    $0x1,%r12b
  76:	ff 50 18             	call   *0x18(%rax)
  79:	48 89 ef             	mov    %rbp,%rdi
  7c:	e8 00 00 00 00       	call   81 <TLC59711DmxParams::Load()+0x81>
  81:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  86:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8d:	00 00 
  8f:	74 05                	je     96 <TLC59711DmxParams::Load()+0x96>
  91:	e8 00 00 00 00       	call   96 <TLC59711DmxParams::Load()+0x96>
  96:	48 83 c4 20          	add    $0x20,%rsp
  9a:	44 89 e0             	mov    %r12d,%eax
  9d:	5b                   	pop    %rbx
  9e:	5d                   	pop    %rbp
  9f:	41 5c                	pop    %r12
  a1:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParams4LoadEPKcj:

0000000000000000 <TLC59711DmxParams::Load(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	55                   	push   %rbp
   9:	53                   	push   %rbx
   a:	48 83 ec 28          	sub    $0x28,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 85 f6             	test   %rsi,%rsi
  21:	75 1c                	jne    3f <TLC59711DmxParams::Load(char const*, unsigned int)+0x3f>
  23:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 2a <TLC59711DmxParams::Load(char const*, unsigned int)+0x2a>
  2a:	ba 53 00 00 00       	mov    $0x53,%edx
  2f:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 36 <TLC59711DmxParams::Load(char const*, unsigned int)+0x36>
  36:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 3d <TLC59711DmxParams::Load(char const*, unsigned int)+0x3d>
  3d:	eb 21                	jmp    60 <TLC59711DmxParams::Load(char const*, unsigned int)+0x60>
  3f:	41 89 d4             	mov    %edx,%r12d
  42:	85 d2                	test   %edx,%edx
  44:	75 1f                	jne    65 <TLC59711DmxParams::Load(char const*, unsigned int)+0x65>
  46:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 4d <TLC59711DmxParams::Load(char const*, unsigned int)+0x4d>
  4d:	ba 54 00 00 00       	mov    $0x54,%edx
  52:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 59 <TLC59711DmxParams::Load(char const*, unsigned int)+0x59>
  59:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 60 <TLC59711DmxParams::Load(char const*, unsigned int)+0x60>
  60:	e8 00 00 00 00       	call   65 <TLC59711DmxParams::Load(char const*, unsigned int)+0x65>
  65:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  69:	48 89 fb             	mov    %rdi,%rbx
  6c:	75 1c                	jne    8a <TLC59711DmxParams::Load(char const*, unsigned int)+0x8a>
  6e:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 75 <TLC59711DmxParams::Load(char const*, unsigned int)+0x75>
  75:	ba 55 00 00 00       	mov    $0x55,%edx
  7a:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 81 <TLC59711DmxParams::Load(char const*, unsigned int)+0x81>
  81:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 88 <TLC59711DmxParams::Load(char const*, unsigned int)+0x88>
  88:	eb d6                	jmp    60 <TLC59711DmxParams::Load(char const*, unsigned int)+0x60>
  8a:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  91:	4c 8d 6c 24 08       	lea    0x8(%rsp),%r13
  96:	48 89 fa             	mov    %rdi,%rdx
  99:	48 89 f5             	mov    %rsi,%rbp
  9c:	4c 89 ef             	mov    %r13,%rdi
  9f:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # a6 <TLC59711DmxParams::Load(char const*, unsigned int)+0xa6>
  a6:	e8 00 00 00 00       	call   ab <TLC59711DmxParams::Load(char const*, unsigned int)+0xab>
  ab:	44 89 e2             	mov    %r12d,%edx
  ae:	48 89 ee             	mov    %rbp,%rsi
  b1:	4c 89 ef             	mov    %r13,%rdi
  b4:	e8 00 00 00 00       	call   b9 <TLC59711DmxParams::Load(char const*, unsigned int)+0xb9>
  b9:	48 8b 3b             	mov    (%rbx),%rdi
  bc:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  c0:	48 8b 07             	mov    (%rdi),%rax
  c3:	ff 50 10             	call   *0x10(%rax)
  c6:	4c 89 ef             	mov    %r13,%rdi
  c9:	e8 00 00 00 00       	call   ce <TLC59711DmxParams::Load(char const*, unsigned int)+0xce>
  ce:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  d3:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  da:	00 00 
  dc:	74 05                	je     e3 <TLC59711DmxParams::Load(char const*, unsigned int)+0xe3>
  de:	e8 00 00 00 00       	call   e3 <TLC59711DmxParams::Load(char const*, unsigned int)+0xe3>
  e3:	48 83 c4 28          	add    $0x28,%rsp
  e7:	5b                   	pop    %rbx
  e8:	5d                   	pop    %rbp
  e9:	41 5c                	pop    %r12
  eb:	41 5d                	pop    %r13
  ed:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParams16callbackFunctionEPKc:

0000000000000000 <TLC59711DmxParams::callbackFunction(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	55                   	push   %rbp
   7:	53                   	push   %rbx
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1a:	31 c0                	xor    %eax,%eax
  1c:	48 85 f6             	test   %rsi,%rsi
  1f:	75 1f                	jne    40 <TLC59711DmxParams::callbackFunction(char const*)+0x40>
  21:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 28 <TLC59711DmxParams::callbackFunction(char const*)+0x28>
  28:	ba 65 00 00 00       	mov    $0x65,%edx
  2d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 34 <TLC59711DmxParams::callbackFunction(char const*)+0x34>
  34:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 3b <TLC59711DmxParams::callbackFunction(char const*)+0x3b>
  3b:	e8 00 00 00 00       	call   40 <TLC59711DmxParams::callbackFunction(char const*)+0x40>
  40:	48 89 f5             	mov    %rsi,%rbp
  43:	4c 8d 64 24 0c       	lea    0xc(%rsp),%r12
  48:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  4d:	48 89 fb             	mov    %rdi,%rbx
  50:	4c 89 e2             	mov    %r12,%rdx
  53:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 5a <TLC59711DmxParams::callbackFunction(char const*)+0x5a>
  5a:	48 89 ef             	mov    %rbp,%rdi
  5d:	c7 44 24 08 09 00 00 	movl   $0x9,0x8(%rsp)
  64:	00 
  65:	e8 00 00 00 00       	call   6a <TLC59711DmxParams::callbackFunction(char const*)+0x6a>
  6a:	85 c0                	test   %eax,%eax
  6c:	75 4c                	jne    ba <TLC59711DmxParams::callbackFunction(char const*)+0xba>
  6e:	8b 44 24 08          	mov    0x8(%rsp),%eax
  72:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 79 <TLC59711DmxParams::callbackFunction(char const*)+0x79>
  79:	4c 89 e7             	mov    %r12,%rdi
  7c:	c6 44 04 0c 00       	movb   $0x0,0xc(%rsp,%rax,1)
  81:	e8 00 00 00 00       	call   86 <TLC59711DmxParams::callbackFunction(char const*)+0x86>
  86:	85 c0                	test   %eax,%eax
  88:	75 09                	jne    93 <TLC59711DmxParams::callbackFunction(char const*)+0x93>
  8a:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%rbx)
  91:	eb 1e                	jmp    b1 <TLC59711DmxParams::callbackFunction(char const*)+0xb1>
  93:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 9a <TLC59711DmxParams::callbackFunction(char const*)+0x9a>
  9a:	4c 89 e7             	mov    %r12,%rdi
  9d:	e8 00 00 00 00       	call   a2 <TLC59711DmxParams::callbackFunction(char const*)+0xa2>
  a2:	85 c0                	test   %eax,%eax
  a4:	0f 85 91 00 00 00    	jne    13b <TLC59711DmxParams::callbackFunction(char const*)+0x13b>
  aa:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%rbx)
  b1:	83 4b 08 01          	orl    $0x1,0x8(%rbx)
  b5:	e9 81 00 00 00       	jmp    13b <TLC59711DmxParams::callbackFunction(char const*)+0x13b>
  ba:	48 8d 54 24 01       	lea    0x1(%rsp),%rdx
  bf:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # c6 <TLC59711DmxParams::callbackFunction(char const*)+0xc6>
  c6:	48 89 ef             	mov    %rbp,%rdi
  c9:	e8 00 00 00 00       	call   ce <TLC59711DmxParams::callbackFunction(char const*)+0xce>
  ce:	85 c0                	test   %eax,%eax
  d0:	75 15                	jne    e7 <TLC59711DmxParams::callbackFunction(char const*)+0xe7>
  d2:	8a 44 24 01          	mov    0x1(%rsp),%al
  d6:	8d 50 ff             	lea    -0x1(%rax),%edx
  d9:	80 fa a9             	cmp    $0xa9,%dl
  dc:	77 5d                	ja     13b <TLC59711DmxParams::callbackFunction(char const*)+0x13b>
  de:	83 4b 08 02          	orl    $0x2,0x8(%rbx)
  e2:	88 43 10             	mov    %al,0x10(%rbx)
  e5:	eb 54                	jmp    13b <TLC59711DmxParams::callbackFunction(char const*)+0x13b>
  e7:	48 8d 54 24 02       	lea    0x2(%rsp),%rdx
  ec:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # f3 <TLC59711DmxParams::callbackFunction(char const*)+0xf3>
  f3:	48 89 ef             	mov    %rbp,%rdi
  f6:	e8 00 00 00 00       	call   fb <TLC59711DmxParams::callbackFunction(char const*)+0xfb>
  fb:	85 c0                	test   %eax,%eax
  fd:	75 19                	jne    118 <TLC59711DmxParams::callbackFunction(char const*)+0x118>
  ff:	66 8b 44 24 02       	mov    0x2(%rsp),%ax
 104:	8d 50 ff             	lea    -0x1(%rax),%edx
 107:	66 81 fa ff 01       	cmp    $0x1ff,%dx
 10c:	77 2d                	ja     13b <TLC59711DmxParams::callbackFunction(char const*)+0x13b>
 10e:	83 4b 08 04          	orl    $0x4,0x8(%rbx)
 112:	66 89 43 12          	mov    %ax,0x12(%rbx)
 116:	eb 23                	jmp    13b <TLC59711DmxParams::callbackFunction(char const*)+0x13b>
 118:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
 11d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 124 <TLC59711DmxParams::callbackFunction(char const*)+0x124>
 124:	48 89 ef             	mov    %rbp,%rdi
 127:	e8 00 00 00 00       	call   12c <TLC59711DmxParams::callbackFunction(char const*)+0x12c>
 12c:	85 c0                	test   %eax,%eax
 12e:	75 0b                	jne    13b <TLC59711DmxParams::callbackFunction(char const*)+0x13b>
 130:	8b 44 24 04          	mov    0x4(%rsp),%eax
 134:	83 4b 08 08          	orl    $0x8,0x8(%rbx)
 138:	89 43 14             	mov    %eax,0x14(%rbx)
 13b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
 140:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 147:	00 00 
 149:	74 05                	je     150 <TLC59711DmxParams::callbackFunction(char const*)+0x150>
 14b:	e8 00 00 00 00       	call   150 <TLC59711DmxParams::callbackFunction(char const*)+0x150>
 150:	48 83 c4 20          	add    $0x20,%rsp
 154:	5b                   	pop    %rbx
 155:	5d                   	pop    %rbp
 156:	41 5c                	pop    %r12
 158:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParams4DumpEv:

0000000000000000 <TLC59711DmxParams::Dump()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	53                   	push   %rbx
   5:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # c <TLC59711DmxParams::Dump()+0xc>
   c:	31 c0                	xor    %eax,%eax
   e:	48 89 fb             	mov    %rdi,%rbx
  11:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 18 <TLC59711DmxParams::Dump()+0x18>
  18:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 1f <TLC59711DmxParams::Dump()+0x1f>
  1f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26 <TLC59711DmxParams::Dump()+0x26>
  26:	e8 00 00 00 00       	call   2b <TLC59711DmxParams::Dump()+0x2b>
  2b:	be 01 00 00 00       	mov    $0x1,%esi
  30:	48 89 df             	mov    %rbx,%rdi
  33:	e8 00 00 00 00       	call   38 <TLC59711DmxParams::Dump()+0x38>
  38:	84 c0                	test   %al,%al
  3a:	74 2a                	je     66 <TLC59711DmxParams::Dump()+0x66>
  3c:	48 63 53 0c          	movslq 0xc(%rbx),%rdx
  40:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 47 <TLC59711DmxParams::Dump()+0x47>
  47:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 4e <TLC59711DmxParams::Dump()+0x4e>
  4e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 55 <TLC59711DmxParams::Dump()+0x55>
  55:	48 89 d1             	mov    %rdx,%rcx
  58:	48 6b d2 0a          	imul   $0xa,%rdx,%rdx
  5c:	48 01 c2             	add    %rax,%rdx
  5f:	31 c0                	xor    %eax,%eax
  61:	e8 00 00 00 00       	call   66 <TLC59711DmxParams::Dump()+0x66>
  66:	be 02 00 00 00       	mov    $0x2,%esi
  6b:	48 89 df             	mov    %rbx,%rdi
  6e:	e8 00 00 00 00       	call   73 <TLC59711DmxParams::Dump()+0x73>
  73:	84 c0                	test   %al,%al
  75:	74 19                	je     90 <TLC59711DmxParams::Dump()+0x90>
  77:	0f b6 53 10          	movzbl 0x10(%rbx),%edx
  7b:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 82 <TLC59711DmxParams::Dump()+0x82>
  82:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 89 <TLC59711DmxParams::Dump()+0x89>
  89:	31 c0                	xor    %eax,%eax
  8b:	e8 00 00 00 00       	call   90 <TLC59711DmxParams::Dump()+0x90>
  90:	be 04 00 00 00       	mov    $0x4,%esi
  95:	48 89 df             	mov    %rbx,%rdi
  98:	e8 00 00 00 00       	call   9d <TLC59711DmxParams::Dump()+0x9d>
  9d:	84 c0                	test   %al,%al
  9f:	74 19                	je     ba <TLC59711DmxParams::Dump()+0xba>
  a1:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
  a5:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # ac <TLC59711DmxParams::Dump()+0xac>
  ac:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # b3 <TLC59711DmxParams::Dump()+0xb3>
  b3:	31 c0                	xor    %eax,%eax
  b5:	e8 00 00 00 00       	call   ba <TLC59711DmxParams::Dump()+0xba>
  ba:	be 08 00 00 00       	mov    $0x8,%esi
  bf:	48 89 df             	mov    %rbx,%rdi
  c2:	e8 00 00 00 00       	call   c7 <TLC59711DmxParams::Dump()+0xc7>
  c7:	84 c0                	test   %al,%al
  c9:	74 19                	je     e4 <TLC59711DmxParams::Dump()+0xe4>
  cb:	8b 53 14             	mov    0x14(%rbx),%edx
  ce:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # d5 <TLC59711DmxParams::Dump()+0xd5>
  d5:	31 c0                	xor    %eax,%eax
  d7:	5b                   	pop    %rbx
  d8:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # df <TLC59711DmxParams::Dump()+0xdf>
  df:	e9 00 00 00 00       	jmp    e4 <TLC59711DmxParams::Dump()+0xe4>
  e4:	5b                   	pop    %rbx
  e5:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParams22staticCallbackFunctionEPvPKc:

0000000000000000 <TLC59711DmxParams::staticCallbackFunction(void*, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	52                   	push   %rdx
   5:	48 85 ff             	test   %rdi,%rdi
   8:	75 1c                	jne    26 <TLC59711DmxParams::staticCallbackFunction(void*, char const*)+0x26>
   a:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 11 <TLC59711DmxParams::staticCallbackFunction(void*, char const*)+0x11>
  11:	ba a8 00 00 00       	mov    $0xa8,%edx
  16:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1d <TLC59711DmxParams::staticCallbackFunction(void*, char const*)+0x1d>
  1d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 24 <TLC59711DmxParams::staticCallbackFunction(void*, char const*)+0x24>
  24:	eb 1f                	jmp    45 <TLC59711DmxParams::staticCallbackFunction(void*, char const*)+0x45>
  26:	48 85 f6             	test   %rsi,%rsi
  29:	75 1f                	jne    4a <TLC59711DmxParams::staticCallbackFunction(void*, char const*)+0x4a>
  2b:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 32 <TLC59711DmxParams::staticCallbackFunction(void*, char const*)+0x32>
  32:	ba a9 00 00 00       	mov    $0xa9,%edx
  37:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 3e <TLC59711DmxParams::staticCallbackFunction(void*, char const*)+0x3e>
  3e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 45 <TLC59711DmxParams::staticCallbackFunction(void*, char const*)+0x45>
  45:	e8 00 00 00 00       	call   4a <TLC59711DmxParams::staticCallbackFunction(void*, char const*)+0x4a>
  4a:	58                   	pop    %rax
  4b:	e9 00 00 00 00       	jmp    50 <.LC2+0x2>

Disassembly of section .text._ZN17TLC59711DmxParams7GetTypeE13TTLC59711Type:

0000000000000000 <TLC59711DmxParams::GetType(TTLC59711Type)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	83 ff 01             	cmp    $0x1,%edi
   7:	7e 20                	jle    29 <TLC59711DmxParams::GetType(TTLC59711Type)+0x29>
   9:	50                   	push   %rax
   a:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 11 <TLC59711DmxParams::GetType(TTLC59711Type)+0x11>
  11:	ba b3 00 00 00       	mov    $0xb3,%edx
  16:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1d <TLC59711DmxParams::GetType(TTLC59711Type)+0x1d>
  1d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 24 <TLC59711DmxParams::GetType(TTLC59711Type)+0x24>
  24:	e8 00 00 00 00       	call   29 <TLC59711DmxParams::GetType(TTLC59711Type)+0x29>
  29:	48 63 c7             	movslq %edi,%rax
  2c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 33 <TLC59711DmxParams::GetType(TTLC59711Type)+0x33>
  33:	48 6b c0 0a          	imul   $0xa,%rax,%rax
  37:	48 01 d0             	add    %rdx,%rax
  3a:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParams7GetTypeEPKc:

0000000000000000 <TLC59711DmxParams::GetType(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 85 ff             	test   %rdi,%rdi
   8:	75 1f                	jne    29 <TLC59711DmxParams::GetType(char const*)+0x29>
   a:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 11 <TLC59711DmxParams::GetType(char const*)+0x11>
  11:	ba ba 00 00 00       	mov    $0xba,%edx
  16:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1d <TLC59711DmxParams::GetType(char const*)+0x1d>
  1d:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 24 <TLC59711DmxParams::GetType(char const*)+0x24>
  24:	e8 00 00 00 00       	call   29 <TLC59711DmxParams::GetType(char const*)+0x29>
  29:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 30 <TLC59711DmxParams::GetType(char const*)+0x30>
  30:	48 89 fd             	mov    %rdi,%rbp
  33:	e8 00 00 00 00       	call   38 <TLC59711DmxParams::GetType(char const*)+0x38>
  38:	41 89 c0             	mov    %eax,%r8d
  3b:	31 c0                	xor    %eax,%eax
  3d:	45 85 c0             	test   %r8d,%r8d
  40:	74 17                	je     59 <TLC59711DmxParams::GetType(char const*)+0x59>
  42:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 49 <TLC59711DmxParams::GetType(char const*)+0x49>
  49:	48 89 ef             	mov    %rbp,%rdi
  4c:	e8 00 00 00 00       	call   51 <TLC59711DmxParams::GetType(char const*)+0x51>
  51:	83 f8 01             	cmp    $0x1,%eax
  54:	19 c0                	sbb    %eax,%eax
  56:	83 c0 02             	add    $0x2,%eax
  59:	5d                   	pop    %rbp
  5a:	c3                   	ret    

tlc59711dmxparamsset.o:     file format elf64-x86-64


Disassembly of section .text._ZN17TLC59711DmxParams9isMaskSetEj:

0000000000000000 <TLC59711DmxParams::isMaskSet(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  13:	8b 40 08             	mov    0x8(%rax),%eax
  16:	23 45 f4             	and    -0xc(%rbp),%eax
  19:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  1c:	0f 94 c0             	sete   %al
  1f:	5d                   	pop    %rbp
  20:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParams3SetEP11TLC59711Dmx:

0000000000000000 <TLC59711DmxParams::Set(TLC59711Dmx*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  19:	75 28                	jne    43 <TLC59711DmxParams::Set(TLC59711Dmx*)+0x43>
  1b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 22 <TLC59711DmxParams::Set(TLC59711Dmx*)+0x22>
  22:	48 89 c1             	mov    %rax,%rcx
  25:	ba 20 00 00 00       	mov    $0x20,%edx
  2a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 31 <TLC59711DmxParams::Set(TLC59711Dmx*)+0x31>
  31:	48 89 c6             	mov    %rax,%rsi
  34:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3b <TLC59711DmxParams::Set(TLC59711Dmx*)+0x3b>
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	e8 00 00 00 00       	call   43 <TLC59711DmxParams::Set(TLC59711Dmx*)+0x43>
  43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  47:	be 01 00 00 00       	mov    $0x1,%esi
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	call   54 <TLC59711DmxParams::Set(TLC59711Dmx*)+0x54>
  54:	84 c0                	test   %al,%al
  56:	74 15                	je     6d <TLC59711DmxParams::Set(TLC59711Dmx*)+0x6d>
  58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5c:	8b 50 0c             	mov    0xc(%rax),%edx
  5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  63:	89 d6                	mov    %edx,%esi
  65:	48 89 c7             	mov    %rax,%rdi
  68:	e8 00 00 00 00       	call   6d <TLC59711DmxParams::Set(TLC59711Dmx*)+0x6d>
  6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  71:	be 02 00 00 00       	mov    $0x2,%esi
  76:	48 89 c7             	mov    %rax,%rdi
  79:	e8 00 00 00 00       	call   7e <TLC59711DmxParams::Set(TLC59711Dmx*)+0x7e>
  7e:	84 c0                	test   %al,%al
  80:	74 19                	je     9b <TLC59711DmxParams::Set(TLC59711Dmx*)+0x9b>
  82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  86:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  8a:	0f b6 d0             	movzbl %al,%edx
  8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  91:	89 d6                	mov    %edx,%esi
  93:	48 89 c7             	mov    %rax,%rdi
  96:	e8 00 00 00 00       	call   9b <TLC59711DmxParams::Set(TLC59711Dmx*)+0x9b>
  9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  9f:	be 04 00 00 00       	mov    $0x4,%esi
  a4:	48 89 c7             	mov    %rax,%rdi
  a7:	e8 00 00 00 00       	call   ac <TLC59711DmxParams::Set(TLC59711Dmx*)+0xac>
  ac:	84 c0                	test   %al,%al
  ae:	74 19                	je     c9 <TLC59711DmxParams::Set(TLC59711Dmx*)+0xc9>
  b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b4:	0f b7 40 12          	movzwl 0x12(%rax),%eax
  b8:	0f b7 d0             	movzwl %ax,%edx
  bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  bf:	89 d6                	mov    %edx,%esi
  c1:	48 89 c7             	mov    %rax,%rdi
  c4:	e8 00 00 00 00       	call   c9 <TLC59711DmxParams::Set(TLC59711Dmx*)+0xc9>
  c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  cd:	be 08 00 00 00       	mov    $0x8,%esi
  d2:	48 89 c7             	mov    %rax,%rdi
  d5:	e8 00 00 00 00       	call   da <TLC59711DmxParams::Set(TLC59711Dmx*)+0xda>
  da:	84 c0                	test   %al,%al
  dc:	74 15                	je     f3 <TLC59711DmxParams::Set(TLC59711Dmx*)+0xf3>
  de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e2:	8b 50 14             	mov    0x14(%rax),%edx
  e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  e9:	89 d6                	mov    %edx,%esi
  eb:	48 89 c7             	mov    %rax,%rdi
  ee:	e8 00 00 00 00       	call   f3 <TLC59711DmxParams::Set(TLC59711Dmx*)+0xf3>
  f3:	90                   	nop
  f4:	c9                   	leave  
  f5:	c3                   	ret    

tlc59711dmxprint.o:     file format elf64-x86-64


Disassembly of section .text._ZN11TLC59711Dmx5PrintEv:

0000000000000000 <TLC59711Dmx::Print()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 18 <TLC59711Dmx::Print()+0x18>
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <TLC59711Dmx::Print()+0x20>
  20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  24:	8b 40 1c             	mov    0x1c(%rax),%eax
  27:	89 c3                	mov    %eax,%ebx
  29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2d:	8b 40 1c             	mov    0x1c(%rax),%eax
  30:	89 c7                	mov    %eax,%edi
  32:	e8 00 00 00 00       	call   37 <TLC59711Dmx::Print()+0x37>
  37:	89 da                	mov    %ebx,%edx
  39:	48 89 c6             	mov    %rax,%rsi
  3c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 43 <TLC59711Dmx::Print()+0x43>
  43:	48 89 c7             	mov    %rax,%rdi
  46:	b8 00 00 00 00       	mov    $0x0,%eax
  4b:	e8 00 00 00 00       	call   50 <TLC59711Dmx::Print()+0x50>
  50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  54:	8b 40 1c             	mov    0x1c(%rax),%eax
  57:	85 c0                	test   %eax,%eax
  59:	75 09                	jne    64 <TLC59711Dmx::Print()+0x64>
  5b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 62 <TLC59711Dmx::Print()+0x62>
  62:	eb 07                	jmp    6b <TLC59711Dmx::Print()+0x6b>
  64:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6b <TLC59711Dmx::Print()+0x6b>
  6b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  6f:	0f b6 52 20          	movzbl 0x20(%rdx),%edx
  73:	0f b6 ca             	movzbl %dl,%ecx
  76:	48 89 c2             	mov    %rax,%rdx
  79:	89 ce                	mov    %ecx,%esi
  7b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 82 <TLC59711Dmx::Print()+0x82>
  82:	48 89 c7             	mov    %rax,%rdi
  85:	b8 00 00 00 00       	mov    $0x0,%eax
  8a:	e8 00 00 00 00       	call   8f <TLC59711Dmx::Print()+0x8f>
  8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  93:	8b 40 18             	mov    0x18(%rax),%eax
  96:	85 c0                	test   %eax,%eax
  98:	75 09                	jne    a3 <TLC59711Dmx::Print()+0xa3>
  9a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a1 <TLC59711Dmx::Print()+0xa1>
  a1:	eb 07                	jmp    aa <TLC59711Dmx::Print()+0xaa>
  a3:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # aa <TLC59711Dmx::Print()+0xaa>
  aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  ae:	8b 72 18             	mov    0x18(%rdx),%esi
  b1:	41 b8 80 96 98 00    	mov    $0x989680,%r8d
  b7:	b9 40 4b 4c 00       	mov    $0x4c4b40,%ecx
  bc:	48 89 c2             	mov    %rax,%rdx
  bf:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # c6 <TLC59711Dmx::Print()+0xc6>
  c6:	48 89 c7             	mov    %rax,%rdi
  c9:	b8 00 00 00 00       	mov    $0x0,%eax
  ce:	e8 00 00 00 00       	call   d3 <TLC59711Dmx::Print()+0xd3>
  d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d7:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  db:	0f b7 d0             	movzwl %ax,%edx
  de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e2:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  e6:	0f b7 c0             	movzwl %ax,%eax
  e9:	89 c6                	mov    %eax,%esi
  eb:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # f2 <TLC59711Dmx::Print()+0xf2>
  f2:	48 89 c7             	mov    %rax,%rdi
  f5:	b8 00 00 00 00       	mov    $0x0,%eax
  fa:	e8 00 00 00 00       	call   ff <TLC59711Dmx::Print()+0xff>
  ff:	90                   	nop
 100:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 104:	c9                   	leave  
 105:	c3                   	ret    

tlc59711paramssave.o:     file format elf64-x86-64


Disassembly of section .text._ZN17TLC59711DmxParams9isMaskSetEj:

0000000000000000 <TLC59711DmxParams::isMaskSet(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  13:	8b 40 08             	mov    0x8(%rax),%eax
  16:	23 45 f4             	and    -0xc(%rbp),%eax
  19:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  1c:	0f 94 c0             	sete   %al
  1f:	5d                   	pop    %rbp
  20:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder7GetSizeEv:

0000000000000000 <PropertiesBuilder::GetSize()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  14:	84 c0                	test   %al,%al
  16:	74 47                	je     5f <PropertiesBuilder::GetSize()+0x5f>
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	48 8b 10             	mov    (%rax),%rdx
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  27:	0f b7 c0             	movzwl %ax,%eax
  2a:	48 83 e8 01          	sub    $0x1,%rax
  2e:	48 01 d0             	add    %rdx,%rax
  31:	c6 00 7d             	movb   $0x7d,(%rax)
  34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  38:	48 8b 10             	mov    (%rax),%rdx
  3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3f:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  43:	0f b7 c0             	movzwl %ax,%eax
  46:	48 01 d0             	add    %rdx,%rax
  49:	c6 00 7d             	movb   $0x7d,(%rax)
  4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  50:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  54:	8d 50 01             	lea    0x1(%rax),%edx
  57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5b:	66 89 50 0a          	mov    %dx,0xa(%rax)
  5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  63:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  67:	5d                   	pop    %rbp
  68:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIPcEEiS1_jPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  1b:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  1f:	44 89 c8             	mov    %r9d,%eax
  22:	88 45 e8             	mov    %al,-0x18(%rbp)
  25:	80 7d e8 00          	cmpb   $0x0,-0x18(%rbp)
  29:	75 0c                	jne    37 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x37>
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  33:	84 c0                	test   %al,%al
  35:	74 62                	je     99 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x99>
  37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3b:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  3f:	84 c0                	test   %al,%al
  41:	74 2b                	je     6e <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x6e>
  43:	8b 75 ec             	mov    -0x14(%rbp),%esi
  46:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  52:	49 89 c8             	mov    %rcx,%r8
  55:	48 89 d1             	mov    %rdx,%rcx
  58:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5f <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x5f>
  5f:	48 89 c7             	mov    %rax,%rdi
  62:	b8 00 00 00 00       	mov    $0x0,%eax
  67:	e8 00 00 00 00       	call   6c <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x6c>
  6c:	eb 55                	jmp    c3 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0xc3>
  6e:	8b 75 ec             	mov    -0x14(%rbp),%esi
  71:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  75:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  7d:	49 89 c8             	mov    %rcx,%r8
  80:	48 89 d1             	mov    %rdx,%rcx
  83:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 8a <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x8a>
  8a:	48 89 c7             	mov    %rax,%rdi
  8d:	b8 00 00 00 00       	mov    $0x0,%eax
  92:	e8 00 00 00 00       	call   97 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x97>
  97:	eb 2a                	jmp    c3 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0xc3>
  99:	8b 75 ec             	mov    -0x14(%rbp),%esi
  9c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  a0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  a8:	49 89 c8             	mov    %rcx,%r8
  ab:	48 89 d1             	mov    %rdx,%rcx
  ae:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # b5 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0xb5>
  b5:	48 89 c7             	mov    %rax,%rdi
  b8:	b8 00 00 00 00       	mov    $0x0,%eax
  bd:	e8 00 00 00 00       	call   c2 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0xc2>
  c2:	90                   	nop
  c3:	c9                   	leave  
  c4:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIPKcEEiPcjS2_T_bj:

0000000000000000 <int PropertiesBuilder::add_part<char const*>(char*, unsigned int, char const*, char const*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  1b:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  1f:	44 89 c8             	mov    %r9d,%eax
  22:	88 45 e8             	mov    %al,-0x18(%rbp)
  25:	44 0f b6 4d e8       	movzbl -0x18(%rbp),%r9d
  2a:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
  2e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  32:	8b 55 ec             	mov    -0x14(%rbp),%edx
  35:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3d:	48 83 ec 08          	sub    $0x8,%rsp
  41:	8b 7d 10             	mov    0x10(%rbp),%edi
  44:	57                   	push   %rdi
  45:	48 89 c7             	mov    %rax,%rdi
  48:	e8 00 00 00 00       	call   4d <int PropertiesBuilder::add_part<char const*>(char*, unsigned int, char const*, char const*, bool, unsigned int)+0x4d>
  4d:	48 83 c4 10          	add    $0x10,%rsp
  51:	c9                   	leave  
  52:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParams7BuilderEPK18TTLC59711DmxParamsPcjRj:

0000000000000000 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 58          	sub    $0x58,%rsp
   d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  11:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  15:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  19:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  1c:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
  20:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  27:	00 00 
  29:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  2d:	31 c0                	xor    %eax,%eax
  2f:	b9 27 00 00 00       	mov    $0x27,%ecx
  34:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3b <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x3b>
  3b:	48 89 c2             	mov    %rax,%rdx
  3e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 45 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x45>
  45:	48 89 c6             	mov    %rax,%rsi
  48:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4f <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x4f>
  4f:	48 89 c7             	mov    %rax,%rdi
  52:	b8 00 00 00 00       	mov    $0x0,%eax
  57:	e8 00 00 00 00       	call   5c <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x5c>
  5c:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  61:	75 28                	jne    8b <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x8b>
  63:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6a <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
  6a:	48 89 c1             	mov    %rax,%rcx
  6d:	ba 29 00 00 00       	mov    $0x29,%edx
  72:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 79 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x79>
  79:	48 89 c6             	mov    %rax,%rsi
  7c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 83 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x83>
  83:	48 89 c7             	mov    %rax,%rdi
  86:	e8 00 00 00 00       	call   8b <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x8b>
  8b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  90:	74 1c                	je     ae <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0xae>
  92:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  96:	48 8d 48 08          	lea    0x8(%rax),%rcx
  9a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  9e:	48 8b 50 08          	mov    0x8(%rax),%rdx
  a2:	48 8b 00             	mov    (%rax),%rax
  a5:	48 89 01             	mov    %rax,(%rcx)
  a8:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  ac:	eb 28                	jmp    d6 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0xd6>
  ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  b2:	48 8b 00             	mov    (%rax),%rax
  b5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  b9:	48 8b 12             	mov    (%rdx),%rdx
  bc:	48 8b 12             	mov    (%rdx),%rdx
  bf:	48 83 c2 18          	add    $0x18,%rdx
  c3:	48 8b 12             	mov    (%rdx),%rdx
  c6:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  ca:	48 83 c1 08          	add    $0x8,%rcx
  ce:	48 89 ce             	mov    %rcx,%rsi
  d1:	48 89 c7             	mov    %rax,%rdi
  d4:	ff d2                	call   *%rdx
  d6:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  d9:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  dd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  e1:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # e8 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0xe8>
  e8:	48 89 c7             	mov    %rax,%rdi
  eb:	e8 00 00 00 00       	call   f0 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0xf0>
  f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  f4:	be 01 00 00 00       	mov    $0x1,%esi
  f9:	48 89 c7             	mov    %rax,%rdi
  fc:	e8 00 00 00 00       	call   101 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x101>
 101:	0f b6 d8             	movzbl %al,%ebx
 104:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 108:	8b 40 0c             	mov    0xc(%rax),%eax
 10b:	89 c7                	mov    %eax,%edi
 10d:	e8 00 00 00 00       	call   112 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x112>
 112:	48 89 c2             	mov    %rax,%rdx
 115:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 119:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 11f:	89 d9                	mov    %ebx,%ecx
 121:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 128 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x128>
 128:	48 89 c7             	mov    %rax,%rdi
 12b:	e8 00 00 00 00       	call   130 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x130>
 130:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 134:	be 02 00 00 00       	mov    $0x2,%esi
 139:	48 89 c7             	mov    %rax,%rdi
 13c:	e8 00 00 00 00       	call   141 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x141>
 141:	0f b6 c8             	movzbl %al,%ecx
 144:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 148:	0f b6 40 10          	movzbl 0x10(%rax),%eax
 14c:	0f b6 d0             	movzbl %al,%edx
 14f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 153:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 159:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 160 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x160>
 160:	48 89 c7             	mov    %rax,%rdi
 163:	e8 00 00 00 00       	call   168 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x168>
 168:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 16c:	be 04 00 00 00       	mov    $0x4,%esi
 171:	48 89 c7             	mov    %rax,%rdi
 174:	e8 00 00 00 00       	call   179 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x179>
 179:	0f b6 c8             	movzbl %al,%ecx
 17c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 180:	0f b7 40 12          	movzwl 0x12(%rax),%eax
 184:	0f b7 d0             	movzwl %ax,%edx
 187:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 18b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 191:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 198 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x198>
 198:	48 89 c7             	mov    %rax,%rdi
 19b:	e8 00 00 00 00       	call   1a0 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x1a0>
 1a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1a4:	be 08 00 00 00       	mov    $0x8,%esi
 1a9:	48 89 c7             	mov    %rax,%rdi
 1ac:	e8 00 00 00 00       	call   1b1 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x1b1>
 1b1:	0f b6 c8             	movzbl %al,%ecx
 1b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 1b8:	8b 50 14             	mov    0x14(%rax),%edx
 1bb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 1bf:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 1c5:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 1cc <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x1cc>
 1cc:	48 89 c7             	mov    %rax,%rdi
 1cf:	e8 00 00 00 00       	call   1d4 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x1d4>
 1d4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 1d8:	48 89 c7             	mov    %rax,%rdi
 1db:	e8 00 00 00 00       	call   1e0 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x1e0>
 1e0:	0f b7 d0             	movzwl %ax,%edx
 1e3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 1e7:	89 10                	mov    %edx,(%rax)
 1e9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 1ed:	8b 10                	mov    (%rax),%edx
 1ef:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1f6 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x1f6>
 1f6:	41 89 d1             	mov    %edx,%r9d
 1f9:	41 b8 3a 00 00 00    	mov    $0x3a,%r8d
 1ff:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 206 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x206>
 206:	48 89 d1             	mov    %rdx,%rcx
 209:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 210 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x210>
 210:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 217 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x217>
 217:	48 89 c7             	mov    %rax,%rdi
 21a:	b8 00 00 00 00       	mov    $0x0,%eax
 21f:	e8 00 00 00 00       	call   224 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x224>
 224:	b9 3b 00 00 00       	mov    $0x3b,%ecx
 229:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 230 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x230>
 230:	48 89 c2             	mov    %rax,%rdx
 233:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 23a <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x23a>
 23a:	48 89 c6             	mov    %rax,%rsi
 23d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 244 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x244>
 244:	48 89 c7             	mov    %rax,%rdi
 247:	b8 00 00 00 00       	mov    $0x0,%eax
 24c:	e8 00 00 00 00       	call   251 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x251>
 251:	90                   	nop
 252:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 256:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 25d:	00 00 
 25f:	74 05                	je     266 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x266>
 261:	e8 00 00 00 00       	call   266 <TLC59711DmxParams::Builder(TTLC59711DmxParams const*, char*, unsigned int, unsigned int&)+0x266>
 266:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 26a:	c9                   	leave  
 26b:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParams4SaveEPcjRj:

0000000000000000 <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  1b:	b9 3f 00 00 00       	mov    $0x3f,%ecx
  20:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 27 <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0x27>
  27:	48 89 c2             	mov    %rax,%rdx
  2a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 31 <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0x31>
  31:	48 89 c6             	mov    %rax,%rsi
  34:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3b <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0x3b>
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	b8 00 00 00 00       	mov    $0x0,%eax
  43:	e8 00 00 00 00       	call   48 <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0x48>
  48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4c:	48 8b 00             	mov    (%rax),%rax
  4f:	48 85 c0             	test   %rax,%rax
  52:	75 39                	jne    8d <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0x8d>
  54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  58:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  5e:	b9 43 00 00 00       	mov    $0x43,%ecx
  63:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6a <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0x6a>
  6a:	48 89 c2             	mov    %rax,%rdx
  6d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 74 <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0x74>
  74:	48 89 c6             	mov    %rax,%rsi
  77:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7e <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0x7e>
  7e:	48 89 c7             	mov    %rax,%rdi
  81:	b8 00 00 00 00       	mov    $0x0,%eax
  86:	e8 00 00 00 00       	call   8b <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0x8b>
  8b:	eb 1f                	jmp    ac <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0xac>
  8d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  91:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  9c:	49 89 f0             	mov    %rsi,%r8
  9f:	be 00 00 00 00       	mov    $0x0,%esi
  a4:	48 89 c7             	mov    %rax,%rdi
  a7:	e8 00 00 00 00       	call   ac <TLC59711DmxParams::Save(char*, unsigned int, unsigned int&)+0xac>
  ac:	c9                   	leave  
  ad:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIPKcEEbS2_T_bj:

0000000000000000 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  18:	89 c8                	mov    %ecx,%eax
  1a:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
  1e:	88 45 c4             	mov    %al,-0x3c(%rbp)
  21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  25:	0f b7 50 0a          	movzwl 0xa(%rax),%edx
  29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2d:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  31:	66 39 c2             	cmp    %ax,%dx
  34:	72 0a                	jb     40 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0x40>
  36:	b8 00 00 00 00       	mov    $0x0,%eax
  3b:	e9 a2 00 00 00       	jmp    e2 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0xe2>
  40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  44:	48 8b 10             	mov    (%rax),%rdx
  47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4b:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  4f:	0f b7 c0             	movzwl %ax,%eax
  52:	48 01 d0             	add    %rdx,%rax
  55:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5d:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  61:	0f b7 d0             	movzwl %ax,%edx
  64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  68:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  6c:	0f b7 c8             	movzwl %ax,%ecx
  6f:	89 d0                	mov    %edx,%eax
  71:	29 c8                	sub    %ecx,%eax
  73:	48 98                	cltq   
  75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  79:	44 0f b6 45 c4       	movzbl -0x3c(%rbp),%r8d
  7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  82:	41 89 c2             	mov    %eax,%r10d
  85:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  89:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  8d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  95:	48 83 ec 08          	sub    $0x8,%rsp
  99:	8b 4d c0             	mov    -0x40(%rbp),%ecx
  9c:	51                   	push   %rcx
  9d:	45 89 c1             	mov    %r8d,%r9d
  a0:	49 89 f8             	mov    %rdi,%r8
  a3:	48 89 d1             	mov    %rdx,%rcx
  a6:	44 89 d2             	mov    %r10d,%edx
  a9:	48 89 c7             	mov    %rax,%rdi
  ac:	e8 00 00 00 00       	call   b1 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0xb1>
  b1:	48 83 c4 10          	add    $0x10,%rsp
  b5:	89 45 ec             	mov    %eax,-0x14(%rbp)
  b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bc:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  bf:	7e 07                	jle    c8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0xc8>
  c1:	b8 00 00 00 00       	mov    $0x0,%eax
  c6:	eb 1a                	jmp    e2 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int)+0xe2>
  c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  cc:	0f b7 50 0a          	movzwl 0xa(%rax),%edx
  d0:	8b 45 ec             	mov    -0x14(%rbp),%eax
  d3:	01 c2                	add    %eax,%edx
  d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  d9:	66 89 50 0a          	mov    %dx,0xa(%rax)
  dd:	b8 01 00 00 00       	mov    $0x1,%eax
  e2:	c9                   	leave  
  e3:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIhEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	89 c8                	mov    %ecx,%eax
  16:	44 89 45 c4          	mov    %r8d,-0x3c(%rbp)
  1a:	88 55 cc             	mov    %dl,-0x34(%rbp)
  1d:	88 45 c8             	mov    %al,-0x38(%rbp)
  20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  24:	0f b7 50 0a          	movzwl 0xa(%rax),%edx
  28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2c:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  30:	66 39 c2             	cmp    %ax,%dx
  33:	72 0a                	jb     3f <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0x3f>
  35:	b8 00 00 00 00       	mov    $0x0,%eax
  3a:	e9 a2 00 00 00       	jmp    e1 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0xe1>
  3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43:	48 8b 10             	mov    (%rax),%rdx
  46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4a:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  4e:	0f b7 c0             	movzwl %ax,%eax
  51:	48 01 d0             	add    %rdx,%rax
  54:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5c:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  60:	0f b7 d0             	movzwl %ax,%edx
  63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  67:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  6b:	0f b7 c8             	movzwl %ax,%ecx
  6e:	89 d0                	mov    %edx,%eax
  70:	29 c8                	sub    %ecx,%eax
  72:	48 98                	cltq   
  74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  78:	44 0f b6 45 c8       	movzbl -0x38(%rbp),%r8d
  7d:	0f b6 7d cc          	movzbl -0x34(%rbp),%edi
  81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  85:	41 89 c2             	mov    %eax,%r10d
  88:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  8c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  94:	48 83 ec 08          	sub    $0x8,%rsp
  98:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  9b:	51                   	push   %rcx
  9c:	45 89 c1             	mov    %r8d,%r9d
  9f:	41 89 f8             	mov    %edi,%r8d
  a2:	48 89 d1             	mov    %rdx,%rcx
  a5:	44 89 d2             	mov    %r10d,%edx
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	call   b0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0xb0>
  b0:	48 83 c4 10          	add    $0x10,%rsp
  b4:	89 45 ec             	mov    %eax,-0x14(%rbp)
  b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bb:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  be:	7e 07                	jle    c7 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0xc7>
  c0:	b8 00 00 00 00       	mov    $0x0,%eax
  c5:	eb 1a                	jmp    e1 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0xe1>
  c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  cb:	0f b7 50 0a          	movzwl 0xa(%rax),%edx
  cf:	8b 45 ec             	mov    -0x14(%rbp),%eax
  d2:	01 c2                	add    %eax,%edx
  d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  d8:	66 89 50 0a          	mov    %dx,0xa(%rax)
  dc:	b8 01 00 00 00       	mov    $0x1,%eax
  e1:	c9                   	leave  
  e2:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddItEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	89 d0                	mov    %edx,%eax
  16:	89 ca                	mov    %ecx,%edx
  18:	44 89 45 c4          	mov    %r8d,-0x3c(%rbp)
  1c:	66 89 45 cc          	mov    %ax,-0x34(%rbp)
  20:	89 d0                	mov    %edx,%eax
  22:	88 45 c8             	mov    %al,-0x38(%rbp)
  25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  29:	0f b7 50 0a          	movzwl 0xa(%rax),%edx
  2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  31:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  35:	66 39 c2             	cmp    %ax,%dx
  38:	72 0a                	jb     44 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x44>
  3a:	b8 00 00 00 00       	mov    $0x0,%eax
  3f:	e9 a2 00 00 00       	jmp    e6 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0xe6>
  44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  48:	48 8b 10             	mov    (%rax),%rdx
  4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4f:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  53:	0f b7 c0             	movzwl %ax,%eax
  56:	48 01 d0             	add    %rdx,%rax
  59:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  61:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  65:	0f b7 d0             	movzwl %ax,%edx
  68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  6c:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  70:	0f b7 c8             	movzwl %ax,%ecx
  73:	89 d0                	mov    %edx,%eax
  75:	29 c8                	sub    %ecx,%eax
  77:	48 98                	cltq   
  79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  7d:	44 0f b6 45 c8       	movzbl -0x38(%rbp),%r8d
  82:	0f b7 7d cc          	movzwl -0x34(%rbp),%edi
  86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8a:	41 89 c2             	mov    %eax,%r10d
  8d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  91:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  99:	48 83 ec 08          	sub    $0x8,%rsp
  9d:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  a0:	51                   	push   %rcx
  a1:	45 89 c1             	mov    %r8d,%r9d
  a4:	41 89 f8             	mov    %edi,%r8d
  a7:	48 89 d1             	mov    %rdx,%rcx
  aa:	44 89 d2             	mov    %r10d,%edx
  ad:	48 89 c7             	mov    %rax,%rdi
  b0:	e8 00 00 00 00       	call   b5 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0xb5>
  b5:	48 83 c4 10          	add    $0x10,%rsp
  b9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c0:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  c3:	7e 07                	jle    cc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0xcc>
  c5:	b8 00 00 00 00       	mov    $0x0,%eax
  ca:	eb 1a                	jmp    e6 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0xe6>
  cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  d0:	0f b7 50 0a          	movzwl 0xa(%rax),%edx
  d4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  d7:	01 c2                	add    %eax,%edx
  d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  dd:	66 89 50 0a          	mov    %dx,0xa(%rax)
  e1:	b8 01 00 00 00       	mov    $0x1,%eax
  e6:	c9                   	leave  
  e7:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIjEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	89 55 cc             	mov    %edx,-0x34(%rbp)
  17:	89 c8                	mov    %ecx,%eax
  19:	44 89 45 c4          	mov    %r8d,-0x3c(%rbp)
  1d:	88 45 c8             	mov    %al,-0x38(%rbp)
  20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  24:	0f b7 50 0a          	movzwl 0xa(%rax),%edx
  28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2c:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  30:	66 39 c2             	cmp    %ax,%dx
  33:	72 0a                	jb     3f <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)+0x3f>
  35:	b8 00 00 00 00       	mov    $0x0,%eax
  3a:	e9 a1 00 00 00       	jmp    e0 <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)+0xe0>
  3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43:	48 8b 10             	mov    (%rax),%rdx
  46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4a:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  4e:	0f b7 c0             	movzwl %ax,%eax
  51:	48 01 d0             	add    %rdx,%rax
  54:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5c:	0f b7 40 08          	movzwl 0x8(%rax),%eax
  60:	0f b7 d0             	movzwl %ax,%edx
  63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  67:	0f b7 40 0a          	movzwl 0xa(%rax),%eax
  6b:	0f b7 c8             	movzwl %ax,%ecx
  6e:	89 d0                	mov    %edx,%eax
  70:	29 c8                	sub    %ecx,%eax
  72:	48 98                	cltq   
  74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  78:	44 0f b6 45 c8       	movzbl -0x38(%rbp),%r8d
  7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  81:	41 89 c2             	mov    %eax,%r10d
  84:	8b 7d cc             	mov    -0x34(%rbp),%edi
  87:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  8b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  93:	48 83 ec 08          	sub    $0x8,%rsp
  97:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  9a:	51                   	push   %rcx
  9b:	45 89 c1             	mov    %r8d,%r9d
  9e:	41 89 f8             	mov    %edi,%r8d
  a1:	48 89 d1             	mov    %rdx,%rcx
  a4:	44 89 d2             	mov    %r10d,%edx
  a7:	48 89 c7             	mov    %rax,%rdi
  aa:	e8 00 00 00 00       	call   af <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)+0xaf>
  af:	48 83 c4 10          	add    $0x10,%rsp
  b3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ba:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  bd:	7e 07                	jle    c6 <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)+0xc6>
  bf:	b8 00 00 00 00       	mov    $0x0,%eax
  c4:	eb 1a                	jmp    e0 <bool PropertiesBuilder::Add<unsigned int>(char const*, unsigned int, bool, unsigned int)+0xe0>
  c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ca:	0f b7 50 0a          	movzwl 0xa(%rax),%edx
  ce:	8b 45 ec             	mov    -0x14(%rbp),%eax
  d1:	01 c2                	add    %eax,%edx
  d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  d7:	66 89 50 0a          	mov    %dx,0xa(%rax)
  db:	b8 01 00 00 00       	mov    $0x1,%eax
  e0:	c9                   	leave  
  e1:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIhEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  1b:	44 89 c0             	mov    %r8d,%eax
  1e:	44 89 ca             	mov    %r9d,%edx
  21:	88 45 e8             	mov    %al,-0x18(%rbp)
  24:	89 d0                	mov    %edx,%eax
  26:	88 45 dc             	mov    %al,-0x24(%rbp)
  29:	80 7d dc 00          	cmpb   $0x0,-0x24(%rbp)
  2d:	75 0c                	jne    3b <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x3b>
  2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  33:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  37:	84 c0                	test   %al,%al
  39:	74 62                	je     9d <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x9d>
  3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3f:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  43:	84 c0                	test   %al,%al
  45:	74 2b                	je     72 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x72>
  47:	0f b6 4d e8          	movzbl -0x18(%rbp),%ecx
  4b:	8b 75 ec             	mov    -0x14(%rbp),%esi
  4e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  56:	41 89 c8             	mov    %ecx,%r8d
  59:	48 89 d1             	mov    %rdx,%rcx
  5c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 63 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x63>
  63:	48 89 c7             	mov    %rax,%rdi
  66:	b8 00 00 00 00       	mov    $0x0,%eax
  6b:	e8 00 00 00 00       	call   70 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x70>
  70:	eb 55                	jmp    c7 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0xc7>
  72:	0f b6 4d e8          	movzbl -0x18(%rbp),%ecx
  76:	8b 75 ec             	mov    -0x14(%rbp),%esi
  79:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  81:	41 89 c8             	mov    %ecx,%r8d
  84:	48 89 d1             	mov    %rdx,%rcx
  87:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 8e <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x8e>
  8e:	48 89 c7             	mov    %rax,%rdi
  91:	b8 00 00 00 00       	mov    $0x0,%eax
  96:	e8 00 00 00 00       	call   9b <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x9b>
  9b:	eb 2a                	jmp    c7 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0xc7>
  9d:	0f b6 4d e8          	movzbl -0x18(%rbp),%ecx
  a1:	8b 75 ec             	mov    -0x14(%rbp),%esi
  a4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ac:	41 89 c8             	mov    %ecx,%r8d
  af:	48 89 d1             	mov    %rdx,%rcx
  b2:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # b9 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0xb9>
  b9:	48 89 c7             	mov    %rax,%rdi
  bc:	b8 00 00 00 00       	mov    $0x0,%eax
  c1:	e8 00 00 00 00       	call   c6 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0xc6>
  c6:	90                   	nop
  c7:	c9                   	leave  
  c8:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partItEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  1b:	44 89 c0             	mov    %r8d,%eax
  1e:	44 89 ca             	mov    %r9d,%edx
  21:	66 89 45 e8          	mov    %ax,-0x18(%rbp)
  25:	89 d0                	mov    %edx,%eax
  27:	88 45 dc             	mov    %al,-0x24(%rbp)
  2a:	80 7d dc 00          	cmpb   $0x0,-0x24(%rbp)
  2e:	75 0c                	jne    3c <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x3c>
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  38:	84 c0                	test   %al,%al
  3a:	74 62                	je     9e <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x9e>
  3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  44:	84 c0                	test   %al,%al
  46:	74 2b                	je     73 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x73>
  48:	0f b7 4d e8          	movzwl -0x18(%rbp),%ecx
  4c:	8b 75 ec             	mov    -0x14(%rbp),%esi
  4f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  57:	41 89 c8             	mov    %ecx,%r8d
  5a:	48 89 d1             	mov    %rdx,%rcx
  5d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 64 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x64>
  64:	48 89 c7             	mov    %rax,%rdi
  67:	b8 00 00 00 00       	mov    $0x0,%eax
  6c:	e8 00 00 00 00       	call   71 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x71>
  71:	eb 55                	jmp    c8 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0xc8>
  73:	0f b7 4d e8          	movzwl -0x18(%rbp),%ecx
  77:	8b 75 ec             	mov    -0x14(%rbp),%esi
  7a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  82:	41 89 c8             	mov    %ecx,%r8d
  85:	48 89 d1             	mov    %rdx,%rcx
  88:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 8f <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x8f>
  8f:	48 89 c7             	mov    %rax,%rdi
  92:	b8 00 00 00 00       	mov    $0x0,%eax
  97:	e8 00 00 00 00       	call   9c <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x9c>
  9c:	eb 2a                	jmp    c8 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0xc8>
  9e:	0f b7 4d e8          	movzwl -0x18(%rbp),%ecx
  a2:	8b 75 ec             	mov    -0x14(%rbp),%esi
  a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ad:	41 89 c8             	mov    %ecx,%r8d
  b0:	48 89 d1             	mov    %rdx,%rcx
  b3:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # ba <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0xba>
  ba:	48 89 c7             	mov    %rax,%rdi
  bd:	b8 00 00 00 00       	mov    $0x0,%eax
  c2:	e8 00 00 00 00       	call   c7 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0xc7>
  c7:	90                   	nop
  c8:	c9                   	leave  
  c9:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIjEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  1b:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
  1f:	44 89 c8             	mov    %r9d,%eax
  22:	88 45 dc             	mov    %al,-0x24(%rbp)
  25:	80 7d dc 00          	cmpb   $0x0,-0x24(%rbp)
  29:	75 0c                	jne    37 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x37>
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  33:	84 c0                	test   %al,%al
  35:	74 60                	je     97 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x97>
  37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3b:	0f b6 40 0c          	movzbl 0xc(%rax),%eax
  3f:	84 c0                	test   %al,%al
  41:	74 2a                	je     6d <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x6d>
  43:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  46:	8b 75 ec             	mov    -0x14(%rbp),%esi
  49:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  51:	41 89 c8             	mov    %ecx,%r8d
  54:	48 89 d1             	mov    %rdx,%rcx
  57:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5e <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x5e>
  5e:	48 89 c7             	mov    %rax,%rdi
  61:	b8 00 00 00 00       	mov    $0x0,%eax
  66:	e8 00 00 00 00       	call   6b <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x6b>
  6b:	eb 53                	jmp    c0 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0xc0>
  6d:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  70:	8b 75 ec             	mov    -0x14(%rbp),%esi
  73:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  7b:	41 89 c8             	mov    %ecx,%r8d
  7e:	48 89 d1             	mov    %rdx,%rcx
  81:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 88 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x88>
  88:	48 89 c7             	mov    %rax,%rdi
  8b:	b8 00 00 00 00       	mov    $0x0,%eax
  90:	e8 00 00 00 00       	call   95 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0x95>
  95:	eb 29                	jmp    c0 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0xc0>
  97:	8b 4d e8             	mov    -0x18(%rbp),%ecx
  9a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  9d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  a5:	41 89 c8             	mov    %ecx,%r8d
  a8:	48 89 d1             	mov    %rdx,%rcx
  ab:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # b2 <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0xb2>
  b2:	48 89 c7             	mov    %rax,%rdi
  b5:	b8 00 00 00 00       	mov    $0x0,%eax
  ba:	e8 00 00 00 00       	call   bf <int PropertiesBuilder::add_part<unsigned int>(char*, unsigned int, char const*, unsigned int, bool, unsigned int)+0xbf>
  bf:	90                   	nop
  c0:	c9                   	leave  
  c1:	c3                   	ret    
