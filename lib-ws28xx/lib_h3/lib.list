In archive lib_h3/libws28xx.a:

pixel8x4.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <getPIXEL8X4_SIZE>:
   0:	e30a0909 	movw	r0, #43273	; 0xa909
   4:	e3400000 	movt	r0, #0
   8:	e12fff1e 	bx	lr

pixelconfiguration.o:     file format elf32-littlearm


Disassembly of section .text._ZN18PixelConfiguration13GetRgbMappingEN5pixel4TypeE:

00000000 <PixelConfiguration::GetRgbMapping(pixel::Type)>:
   0:	e2400001 	sub	r0, r0, #1
   4:	e3500009 	cmp	r0, #9
   8:	959f3008 	ldrls	r3, [pc, #8]	; 18 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x18>
   c:	919300d0 	ldrsbls	r0, [r3, r0]
  10:	83a00002 	movhi	r0, #2
  14:	e12fff1e 	bx	lr
  18:	00000000 	.word	0x00000000

Disassembly of section .text._ZN18PixelConfiguration6GetTxHEN5pixel4TypeERhS2_:

00000000 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
   0:	e3500003 	cmp	r0, #3
   4:	e3e0303f 	mvn	r3, #63	; 0x3f
   8:	e5c13000 	strb	r3, [r1]
   c:	03a030f8 	moveq	r3, #248	; 0xf8
  10:	0a000003 	beq	24 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x24>
  14:	e2400008 	sub	r0, r0, #8
  18:	e3500003 	cmp	r0, #3
  1c:	33a030fc 	movcc	r3, #252	; 0xfc
  20:	23a030f0 	movcs	r3, #240	; 0xf0
  24:	e5c23000 	strb	r3, [r2]
  28:	e12fff1e 	bx	lr

Disassembly of section .text._ZN18PixelConfiguration8ValidateERj:

00000000 <PixelConfiguration::Validate(unsigned int&)>:
   0:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
   4:	e1a04000 	mov	r4, r0
   8:	e59f2150 	ldr	r2, [pc, #336]	; 160 <PixelConfiguration::Validate(unsigned int&)+0x160>
   c:	e3a03029 	mov	r3, #41	; 0x29
  10:	e59f014c 	ldr	r0, [pc, #332]	; 164 <PixelConfiguration::Validate(unsigned int&)+0x164>
  14:	e1a06001 	mov	r6, r1
  18:	e59f1148 	ldr	r1, [pc, #328]	; 168 <PixelConfiguration::Validate(unsigned int&)+0x168>
  1c:	ebfffffe 	bl	0 <printf>
  20:	e5945000 	ldr	r5, [r4]
  24:	e5943004 	ldr	r3, [r4, #4]
  28:	e3550007 	cmp	r5, #7
  2c:	e245200b 	sub	r2, r5, #11
  30:	1a000005 	bne	4c <PixelConfiguration::Validate(unsigned int&)+0x4c>
  34:	e3530c02 	cmp	r3, #512	; 0x200
  38:	23a03c02 	movcs	r3, #512	; 0x200
  3c:	e5843004 	str	r3, [r4, #4]
  40:	e3a03004 	mov	r3, #4
  44:	e5863000 	str	r3, [r6]
  48:	ea00000c 	b	80 <PixelConfiguration::Validate(unsigned int&)+0x80>
  4c:	e3530faa 	cmp	r3, #680	; 0x2a8
  50:	23a03faa 	movcs	r3, #680	; 0x2a8
  54:	e3520001 	cmp	r2, #1
  58:	e5843004 	str	r3, [r4, #4]
  5c:	e3a03003 	mov	r3, #3
  60:	e5863000 	str	r3, [r6]
  64:	8a000005 	bhi	80 <PixelConfiguration::Validate(unsigned int&)+0x80>
  68:	e5d43012 	ldrb	r3, [r4, #18]
  6c:	e353001f 	cmp	r3, #31
  70:	91e03d83 	mvnls	r3, r3, lsl #27
  74:	83e03000 	mvnhi	r3, #0
  78:	91e03da3 	mvnls	r3, r3, lsr #27
  7c:	e5c43012 	strb	r3, [r4, #18]
  80:	e3550000 	cmp	r5, #0
  84:	13520002 	cmpne	r2, #2
  88:	e5943008 	ldr	r3, [r4, #8]
  8c:	8a000012 	bhi	dc <PixelConfiguration::Validate(unsigned int&)+0xdc>
  90:	e3530006 	cmp	r3, #6
  94:	e3a02000 	mov	r2, #0
  98:	05842008 	streq	r2, [r4, #8]
  9c:	e355000d 	cmp	r5, #13
  a0:	e594300c 	ldr	r3, [r4, #12]
  a4:	e5c42014 	strb	r2, [r4, #20]
  a8:	1a000005 	bne	c4 <PixelConfiguration::Validate(unsigned int&)+0xc4>
  ac:	e3530000 	cmp	r3, #0
  b0:	1a000001 	bne	bc <PixelConfiguration::Validate(unsigned int&)+0xbc>
  b4:	e59f30b0 	ldr	r3, [pc, #176]	; 16c <PixelConfiguration::Validate(unsigned int&)+0x16c>
  b8:	ea000020 	b	140 <PixelConfiguration::Validate(unsigned int&)+0x140>
  bc:	e59f20ac 	ldr	r2, [pc, #172]	; 170 <PixelConfiguration::Validate(unsigned int&)+0x170>
  c0:	ea000002 	b	d0 <PixelConfiguration::Validate(unsigned int&)+0xd0>
  c4:	e3530000 	cmp	r3, #0
  c8:	0afffff9 	beq	b4 <PixelConfiguration::Validate(unsigned int&)+0xb4>
  cc:	e59f20a0 	ldr	r2, [pc, #160]	; 174 <PixelConfiguration::Validate(unsigned int&)+0x174>
  d0:	e1530002 	cmp	r3, r2
  d4:	8584200c 	strhi	r2, [r4, #12]
  d8:	ea000019 	b	144 <PixelConfiguration::Validate(unsigned int&)+0x144>
  dc:	e3530006 	cmp	r3, #6
  e0:	e3a02001 	mov	r2, #1
  e4:	e5c42014 	strb	r2, [r4, #20]
  e8:	1a000002 	bne	f8 <PixelConfiguration::Validate(unsigned int&)+0xf8>
  ec:	e1a00005 	mov	r0, r5
  f0:	ebfffffe 	bl	0 <PixelConfiguration::Validate(unsigned int&)>
  f4:	e5840008 	str	r0, [r4, #8]
  f8:	e5d43011 	ldrb	r3, [r4, #17]
  fc:	e28d1006 	add	r1, sp, #6
 100:	e5d42010 	ldrb	r2, [r4, #16]
 104:	e1a00005 	mov	r0, r5
 108:	e1520003 	cmp	r2, r3
 10c:	e28d2007 	add	r2, sp, #7
 110:	23a03000 	movcs	r3, #0
 114:	21c431b0 	strhcs	r3, [r4, #16]
 118:	ebfffffe 	bl	0 <PixelConfiguration::Validate(unsigned int&)>
 11c:	e5d43010 	ldrb	r3, [r4, #16]
 120:	e3530000 	cmp	r3, #0
 124:	05dd3006 	ldrbeq	r3, [sp, #6]
 128:	05c43010 	strbeq	r3, [r4, #16]
 12c:	e5d43011 	ldrb	r3, [r4, #17]
 130:	e3530000 	cmp	r3, #0
 134:	05dd3007 	ldrbeq	r3, [sp, #7]
 138:	05c43011 	strbeq	r3, [r4, #17]
 13c:	e59f3034 	ldr	r3, [pc, #52]	; 178 <PixelConfiguration::Validate(unsigned int&)+0x178>
 140:	e584300c 	str	r3, [r4, #12]
 144:	e59f2014 	ldr	r2, [pc, #20]	; 160 <PixelConfiguration::Validate(unsigned int&)+0x160>
 148:	e3a0306a 	mov	r3, #106	; 0x6a
 14c:	e59f1014 	ldr	r1, [pc, #20]	; 168 <PixelConfiguration::Validate(unsigned int&)+0x168>
 150:	e59f0024 	ldr	r0, [pc, #36]	; 17c <PixelConfiguration::Validate(unsigned int&)+0x17c>
 154:	e28dd008 	add	sp, sp, #8
 158:	e8bd4070 	pop	{r4, r5, r6, lr}
 15c:	eafffffe 	b	0 <printf>
 160:	00000000 	.word	0x00000000
 164:	00000024 	.word	0x00000024
 168:	00000009 	.word	0x00000009
 16c:	003d0900 	.word	0x003d0900
 170:	00e4e1c0 	.word	0x00e4e1c0
 174:	017d7840 	.word	0x017d7840
 178:	0061a800 	.word	0x0061a800
 17c:	00000032 	.word	0x00000032

Disassembly of section .text._ZN18PixelConfiguration4DumpEv:

00000000 <PixelConfiguration::Dump()>:
   0:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
   4:	e1a04000 	mov	r4, r0
   8:	e5900000 	ldr	r0, [r0]
   c:	ebfffffe 	bl	0 <PixelType::GetType(pixel::Type)>
  10:	e1a01000 	mov	r1, r0
  14:	e1c420d0 	ldrd	r2, [r4]
  18:	e59f005c 	ldr	r0, [pc, #92]	; 7c <PixelConfiguration::Dump()+0x7c>
  1c:	ebfffffe 	bl	0 <printf>
  20:	e5940008 	ldr	r0, [r4, #8]
  24:	e5d45010 	ldrb	r5, [r4, #16]
  28:	e5d46011 	ldrb	r6, [r4, #17]
  2c:	ebfffffe 	bl	0 <PixelType::GetMap(pixel::Map)>
  30:	e5942008 	ldr	r2, [r4, #8]
  34:	e1a03000 	mov	r3, r0
  38:	e59f0040 	ldr	r0, [pc, #64]	; 80 <PixelConfiguration::Dump()+0x80>
  3c:	e1a01005 	mov	r1, r5
  40:	e58d2000 	str	r2, [sp]
  44:	e1a02006 	mov	r2, r6
  48:	ebfffffe 	bl	0 <printf>
  4c:	e5943000 	ldr	r3, [r4]
  50:	e243300b 	sub	r3, r3, #11
  54:	e3530001 	cmp	r3, #1
  58:	8a000002 	bhi	68 <PixelConfiguration::Dump()+0x68>
  5c:	e5d41012 	ldrb	r1, [r4, #18]
  60:	e59f001c 	ldr	r0, [pc, #28]	; 84 <PixelConfiguration::Dump()+0x84>
  64:	ebfffffe 	bl	0 <printf>
  68:	e594100c 	ldr	r1, [r4, #12]
  6c:	e59f0014 	ldr	r0, [pc, #20]	; 88 <PixelConfiguration::Dump()+0x88>
  70:	e28dd008 	add	sp, sp, #8
  74:	e8bd4070 	pop	{r4, r5, r6, lr}
  78:	eafffffe 	b	0 <printf>
  7c:	00000000 	.word	0x00000000
  80:	00000018 	.word	0x00000018
  84:	00000037 	.word	0x00000037
  88:	0000004d 	.word	0x0000004d

pixelpatterns.o:     file format elf32-littlearm


Disassembly of section .text._ZN13PixelPatternsC2Ej:

00000000 <PixelPatterns::PixelPatterns(unsigned int)>:
   0:	e3003000 	movw	r3, #0
   4:	e3403000 	movt	r3, #0
   8:	e92d4070 	push	{r4, r5, r6, lr}
   c:	e3005000 	movw	r5, #0
  10:	e5933000 	ldr	r3, [r3]
  14:	e1a06000 	mov	r6, r0
  18:	e3405000 	movt	r5, #0
  1c:	e1a04001 	mov	r4, r1
  20:	e3530000 	cmp	r3, #0
  24:	e5853000 	str	r3, [r5]
  28:	0a000013 	beq	7c <PixelPatterns::PixelPatterns(unsigned int)+0x7c>
  2c:	e593c004 	ldr	ip, [r3, #4]
  30:	e3003000 	movw	r3, #0
  34:	e3403000 	movt	r3, #0
  38:	e3540001 	cmp	r4, #1
  3c:	e3002000 	movw	r2, #0
  40:	e3a01b03 	mov	r1, #3072	; 0xc00
  44:	e3402000 	movt	r2, #0
  48:	23a04001 	movcs	r4, #1
  4c:	e34011c2 	movt	r1, #450	; 0x1c2
  50:	e1a00006 	mov	r0, r6
  54:	e5834000 	str	r4, [r3]
  58:	e3003000 	movw	r3, #0
  5c:	e3403000 	movt	r3, #0
  60:	e582c000 	str	ip, [r2]
  64:	e5912084 	ldr	r2, [r1, #132]	; 0x84
  68:	e5832000 	str	r2, [r3]
  6c:	e3a02000 	mov	r2, #0
  70:	e583201c 	str	r2, [r3, #28]
  74:	e5832018 	str	r2, [r3, #24]
  78:	e8bd8070 	pop	{r4, r5, r6, pc}
  7c:	e3003000 	movw	r3, #0
  80:	e3002000 	movw	r2, #0
  84:	e3403000 	movt	r3, #0
  88:	e3000000 	movw	r0, #0
  8c:	e3402000 	movt	r2, #0
  90:	e3a0103e 	mov	r1, #62	; 0x3e
  94:	e3400000 	movt	r0, #0
  98:	ebfffffe 	bl	0 <__assert_func>
  9c:	e5953000 	ldr	r3, [r5]
  a0:	eaffffe1 	b	2c <PixelPatterns::PixelPatterns(unsigned int)+0x2c>

Disassembly of section .text._ZN13PixelPatterns7GetNameEN13pixelpatterns7PatternE:

00000000 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
   0:	e3500005 	cmp	r0, #5
   4:	d3003000 	movwle	r3, #0
   8:	d3a0200e 	movle	r2, #14
   c:	d3403000 	movtle	r3, #0
  10:	d0203092 	mlale	r0, r2, r0, r3
  14:	c3000000 	movwgt	r0, #0
  18:	c3400000 	movtgt	r0, #0
  1c:	e12fff1e 	bx	lr

Disassembly of section .text._ZN13PixelPatterns12RainbowCycleEjjN13pixelpatterns9DirectionE:

00000000 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
   0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	e3005000 	movw	r5, #0
   8:	e3405000 	movt	r5, #0
   c:	e24dd008 	sub	sp, sp, #8
  10:	e1a0a001 	mov	sl, r1
  14:	e1a09002 	mov	r9, r2
  18:	e5950000 	ldr	r0, [r5]
  1c:	e1a08003 	mov	r8, r3
  20:	e3500000 	cmp	r0, #0
  24:	0a000018 	beq	8c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x8c>
  28:	e3a04000 	mov	r4, #0
  2c:	e3006000 	movw	r6, #0
  30:	e3406000 	movt	r6, #0
  34:	e1a07004 	mov	r7, r4
  38:	ea000006 	b	58 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x58>
  3c:	e58d7004 	str	r7, [sp, #4]
  40:	e2844001 	add	r4, r4, #1
  44:	e58d7000 	str	r7, [sp]
  48:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  4c:	e5953000 	ldr	r3, [r5]
  50:	e1540003 	cmp	r4, r3
  54:	2a00000c 	bcs	8c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x8c>
  58:	e5960000 	ldr	r0, [r6]
  5c:	e3a03000 	mov	r3, #0
  60:	e1a01004 	mov	r1, r4
  64:	e1a02003 	mov	r2, r3
  68:	e590c000 	ldr	ip, [r0]
  6c:	e35c0007 	cmp	ip, #7
  70:	0afffff1 	beq	3c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x3c>
  74:	e58d7000 	str	r7, [sp]
  78:	e2844001 	add	r4, r4, #1
  7c:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  80:	e5953000 	ldr	r3, [r5]
  84:	e1540003 	cmp	r4, r3
  88:	3afffff2 	bcc	58 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x58>
  8c:	e3003000 	movw	r3, #0
  90:	e3a02001 	mov	r2, #1
  94:	e3403000 	movt	r3, #0
  98:	e3a010ff 	mov	r1, #255	; 0xff
  9c:	e083328a 	add	r3, r3, sl, lsl #5
  a0:	e583201c 	str	r2, [r3, #28]
  a4:	e3a02000 	mov	r2, #0
  a8:	e5839004 	str	r9, [r3, #4]
  ac:	e5831010 	str	r1, [r3, #16]
  b0:	e5832014 	str	r2, [r3, #20]
  b4:	e5838018 	str	r8, [r3, #24]
  b8:	e28dd008 	add	sp, sp, #8
  bc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

Disassembly of section .text._ZN13PixelPatterns12TheaterChaseEjjjjN13pixelpatterns9DirectionE:

00000000 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
   0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	e3005000 	movw	r5, #0
   8:	e3405000 	movt	r5, #0
   c:	e1a08003 	mov	r8, r3
  10:	e24dd008 	sub	sp, sp, #8
  14:	e1a0a001 	mov	sl, r1
  18:	e5953000 	ldr	r3, [r5]
  1c:	e1a09002 	mov	r9, r2
  20:	e3530000 	cmp	r3, #0
  24:	0a000018 	beq	8c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x8c>
  28:	e3a04000 	mov	r4, #0
  2c:	e3006000 	movw	r6, #0
  30:	e3406000 	movt	r6, #0
  34:	e1a07004 	mov	r7, r4
  38:	ea000006 	b	58 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x58>
  3c:	e58d7004 	str	r7, [sp, #4]
  40:	e2844001 	add	r4, r4, #1
  44:	e58d7000 	str	r7, [sp]
  48:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  4c:	e5953000 	ldr	r3, [r5]
  50:	e1540003 	cmp	r4, r3
  54:	2a00000c 	bcs	8c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x8c>
  58:	e5960000 	ldr	r0, [r6]
  5c:	e3a03000 	mov	r3, #0
  60:	e1a01004 	mov	r1, r4
  64:	e1a02003 	mov	r2, r3
  68:	e590c000 	ldr	ip, [r0]
  6c:	e35c0007 	cmp	ip, #7
  70:	0afffff1 	beq	3c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x3c>
  74:	e58d7000 	str	r7, [sp]
  78:	e2844001 	add	r4, r4, #1
  7c:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  80:	e5953000 	ldr	r3, [r5]
  84:	e1540003 	cmp	r4, r3
  88:	3afffff2 	bcc	58 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x58>
  8c:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
  90:	e3002000 	movw	r2, #0
  94:	e3402000 	movt	r2, #0
  98:	e082228a 	add	r2, r2, sl, lsl #5
  9c:	e5823010 	str	r3, [r2, #16]
  a0:	e3a03000 	mov	r3, #0
  a4:	e5823014 	str	r3, [r2, #20]
  a8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
  ac:	e5821004 	str	r1, [r2, #4]
  b0:	e5823018 	str	r3, [r2, #24]
  b4:	e3a03002 	mov	r3, #2
  b8:	e5829008 	str	r9, [r2, #8]
  bc:	e582800c 	str	r8, [r2, #12]
  c0:	e582301c 	str	r3, [r2, #28]
  c4:	e28dd008 	add	sp, sp, #8
  c8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

Disassembly of section .text._ZN13PixelPatterns10ColourWipeEjjjN13pixelpatterns9DirectionE:

00000000 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
   0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	e3005000 	movw	r5, #0
   8:	e3405000 	movt	r5, #0
   c:	e24dd008 	sub	sp, sp, #8
  10:	e1a0a001 	mov	sl, r1
  14:	e1a08002 	mov	r8, r2
  18:	e5950000 	ldr	r0, [r5]
  1c:	e1a09003 	mov	r9, r3
  20:	e3500000 	cmp	r0, #0
  24:	0a000018 	beq	8c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x8c>
  28:	e3a04000 	mov	r4, #0
  2c:	e3006000 	movw	r6, #0
  30:	e3406000 	movt	r6, #0
  34:	e1a07004 	mov	r7, r4
  38:	ea000006 	b	58 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x58>
  3c:	e58d7004 	str	r7, [sp, #4]
  40:	e2844001 	add	r4, r4, #1
  44:	e58d7000 	str	r7, [sp]
  48:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  4c:	e5950000 	ldr	r0, [r5]
  50:	e1540000 	cmp	r4, r0
  54:	2a00000c 	bcs	8c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x8c>
  58:	e5960000 	ldr	r0, [r6]
  5c:	e3a03000 	mov	r3, #0
  60:	e1a01004 	mov	r1, r4
  64:	e1a02003 	mov	r2, r3
  68:	e590c000 	ldr	ip, [r0]
  6c:	e35c0007 	cmp	ip, #7
  70:	0afffff1 	beq	3c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x3c>
  74:	e58d7000 	str	r7, [sp]
  78:	e2844001 	add	r4, r4, #1
  7c:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  80:	e5950000 	ldr	r0, [r5]
  84:	e1540000 	cmp	r4, r0
  88:	3afffff2 	bcc	58 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x58>
  8c:	e3003000 	movw	r3, #0
  90:	e3a02000 	mov	r2, #0
  94:	e3403000 	movt	r3, #0
  98:	e083328a 	add	r3, r3, sl, lsl #5
  9c:	e5832014 	str	r2, [r3, #20]
  a0:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
  a4:	e5839004 	str	r9, [r3, #4]
  a8:	e5832018 	str	r2, [r3, #24]
  ac:	e3a02003 	mov	r2, #3
  b0:	e5830010 	str	r0, [r3, #16]
  b4:	e5838008 	str	r8, [r3, #8]
  b8:	e583201c 	str	r2, [r3, #28]
  bc:	e28dd008 	add	sp, sp, #8
  c0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

Disassembly of section .text._ZN13PixelPatterns7ScannerEjjj:

00000000 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
   0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	e3005000 	movw	r5, #0
   8:	e3405000 	movt	r5, #0
   c:	e24dd008 	sub	sp, sp, #8
  10:	e1a0a001 	mov	sl, r1
  14:	e1a08002 	mov	r8, r2
  18:	e5950000 	ldr	r0, [r5]
  1c:	e1a09003 	mov	r9, r3
  20:	e3500000 	cmp	r0, #0
  24:	0a000051 	beq	170 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x170>
  28:	e3a04000 	mov	r4, #0
  2c:	e3006000 	movw	r6, #0
  30:	e3406000 	movt	r6, #0
  34:	e1a07004 	mov	r7, r4
  38:	ea000006 	b	58 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>
  3c:	e58d7004 	str	r7, [sp, #4]
  40:	e2844001 	add	r4, r4, #1
  44:	e58d7000 	str	r7, [sp]
  48:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  4c:	e5953000 	ldr	r3, [r5]
  50:	e1540003 	cmp	r4, r3
  54:	2a00000c 	bcs	8c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x8c>
  58:	e5960000 	ldr	r0, [r6]
  5c:	e3a03000 	mov	r3, #0
  60:	e1a01004 	mov	r1, r4
  64:	e1a02003 	mov	r2, r3
  68:	e590c000 	ldr	ip, [r0]
  6c:	e35c0007 	cmp	ip, #7
  70:	0afffff1 	beq	3c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x3c>
  74:	e58d7000 	str	r7, [sp]
  78:	e2844001 	add	r4, r4, #1
  7c:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  80:	e5953000 	ldr	r3, [r5]
  84:	e1540003 	cmp	r4, r3
  88:	3afffff2 	bcc	58 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>
  8c:	e3004000 	movw	r4, #0
  90:	e3a00000 	mov	r0, #0
  94:	e3404000 	movt	r4, #0
  98:	e3002000 	movw	r2, #0
  9c:	e3402000 	movt	r2, #0
  a0:	e5941000 	ldr	r1, [r4]
  a4:	e082228a 	add	r2, r2, sl, lsl #5
  a8:	e1510000 	cmp	r1, r0
  ac:	e2431001 	sub	r1, r3, #1
  b0:	e5829004 	str	r9, [r2, #4]
  b4:	e1a01081 	lsl	r1, r1, #1
  b8:	e5828008 	str	r8, [r2, #8]
  bc:	e6ff1071 	uxth	r1, r1
  c0:	e5821010 	str	r1, [r2, #16]
  c4:	e3a01004 	mov	r1, #4
  c8:	e5820014 	str	r0, [r2, #20]
  cc:	e582101c 	str	r1, [r2, #28]
  d0:	0a000001 	beq	dc <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0xdc>
  d4:	e28dd008 	add	sp, sp, #8
  d8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
  dc:	e373022e 	cmn	r3, #-536870910	; 0xe0000002
  e0:	91a00103 	lslls	r0, r3, #2
  e4:	83e00000 	mvnhi	r0, #0
  e8:	ebfffffe 	bl	0 <operator new[](unsigned int)>
  ec:	e5951000 	ldr	r1, [r5]
  f0:	e5840000 	str	r0, [r4]
  f4:	e3510000 	cmp	r1, #0
  f8:	0afffff5 	beq	d4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0xd4>
  fc:	e3510008 	cmp	r1, #8
 100:	9a00002a 	bls	1b0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x1b0>
 104:	e2413009 	sub	r3, r1, #9
 108:	e3a0e000 	mov	lr, #0
 10c:	e3c33007 	bic	r3, r3, #7
 110:	e2802088 	add	r2, r0, #136	; 0x88
 114:	e2833008 	add	r3, r3, #8
 118:	e1a0c00e 	mov	ip, lr
 11c:	f5d2f000 	pld	[r2]
 120:	e28ee008 	add	lr, lr, #8
 124:	e15e0003 	cmp	lr, r3
 128:	e2822020 	add	r2, r2, #32
 12c:	e502c0a8 	str	ip, [r2, #-168]	; 0xffffff58
 130:	e502c0a4 	str	ip, [r2, #-164]	; 0xffffff5c
 134:	e502c0a0 	str	ip, [r2, #-160]	; 0xffffff60
 138:	e502c09c 	str	ip, [r2, #-156]	; 0xffffff64
 13c:	e502c098 	str	ip, [r2, #-152]	; 0xffffff68
 140:	e502c094 	str	ip, [r2, #-148]	; 0xffffff6c
 144:	e502c090 	str	ip, [r2, #-144]	; 0xffffff70
 148:	e502c08c 	str	ip, [r2, #-140]	; 0xffffff74
 14c:	1afffff2 	bne	11c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x11c>
 150:	e0802103 	add	r2, r0, r3, lsl #2
 154:	e3a00000 	mov	r0, #0
 158:	e4820004 	str	r0, [r2], #4
 15c:	e2833001 	add	r3, r3, #1
 160:	e1510003 	cmp	r1, r3
 164:	8afffffb 	bhi	158 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x158>
 168:	e28dd008 	add	sp, sp, #8
 16c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 170:	e3003000 	movw	r3, #0
 174:	e3004000 	movw	r4, #0
 178:	e3403000 	movt	r3, #0
 17c:	e0833281 	add	r3, r3, r1, lsl #5
 180:	e3404000 	movt	r4, #0
 184:	e5832008 	str	r2, [r3, #8]
 188:	e5942000 	ldr	r2, [r4]
 18c:	e5839004 	str	r9, [r3, #4]
 190:	e5830014 	str	r0, [r3, #20]
 194:	e3520000 	cmp	r2, #0
 198:	e3a02004 	mov	r2, #4
 19c:	e583201c 	str	r2, [r3, #28]
 1a0:	e30f2ffe 	movw	r2, #65534	; 0xfffe
 1a4:	e5832010 	str	r2, [r3, #16]
 1a8:	1affffc9 	bne	d4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0xd4>
 1ac:	eaffffcd 	b	e8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0xe8>
 1b0:	e3a03000 	mov	r3, #0
 1b4:	eaffffe5 	b	150 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x150>

Disassembly of section .text._ZN13PixelPatterns4FadeEjjjjjN13pixelpatterns9DirectionE:

00000000 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
   0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	e3005000 	movw	r5, #0
   8:	e3405000 	movt	r5, #0
   c:	e1a08003 	mov	r8, r3
  10:	e24dd008 	sub	sp, sp, #8
  14:	e1a0a001 	mov	sl, r1
  18:	e5953000 	ldr	r3, [r5]
  1c:	e1a09002 	mov	r9, r2
  20:	e3530000 	cmp	r3, #0
  24:	0a000018 	beq	8c <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x8c>
  28:	e3a04000 	mov	r4, #0
  2c:	e3006000 	movw	r6, #0
  30:	e3406000 	movt	r6, #0
  34:	e1a07004 	mov	r7, r4
  38:	ea000006 	b	58 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x58>
  3c:	e58d7004 	str	r7, [sp, #4]
  40:	e2844001 	add	r4, r4, #1
  44:	e58d7000 	str	r7, [sp]
  48:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  4c:	e5953000 	ldr	r3, [r5]
  50:	e1540003 	cmp	r4, r3
  54:	2a00000c 	bcs	8c <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x8c>
  58:	e5960000 	ldr	r0, [r6]
  5c:	e3a03000 	mov	r3, #0
  60:	e1a01004 	mov	r1, r4
  64:	e1a02003 	mov	r2, r3
  68:	e590c000 	ldr	ip, [r0]
  6c:	e35c0007 	cmp	ip, #7
  70:	0afffff1 	beq	3c <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x3c>
  74:	e58d7000 	str	r7, [sp]
  78:	e2844001 	add	r4, r4, #1
  7c:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  80:	e5953000 	ldr	r3, [r5]
  84:	e1540003 	cmp	r4, r3
  88:	3afffff2 	bcc	58 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x58>
  8c:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
  90:	e3003000 	movw	r3, #0
  94:	e3403000 	movt	r3, #0
  98:	e083328a 	add	r3, r3, sl, lsl #5
  9c:	e5832004 	str	r2, [r3, #4]
  a0:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
  a4:	e5839008 	str	r9, [r3, #8]
  a8:	e5832010 	str	r2, [r3, #16]
  ac:	e3a02000 	mov	r2, #0
  b0:	e5832014 	str	r2, [r3, #20]
  b4:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
  b8:	e583800c 	str	r8, [r3, #12]
  bc:	e5832018 	str	r2, [r3, #24]
  c0:	e3a02005 	mov	r2, #5
  c4:	e583201c 	str	r2, [r3, #28]
  c8:	e28dd008 	add	sp, sp, #8
  cc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

Disassembly of section .text._ZN13PixelPatterns5WheelEh:

00000000 <PixelPatterns::Wheel(unsigned char)>:
   0:	e1e03001 	mvn	r3, r1
   4:	e6ef3073 	uxtb	r3, r3
   8:	e3530054 	cmp	r3, #84	; 0x54
   c:	8a000008 	bhi	34 <PixelPatterns::Wheel(unsigned char)+0x34>
  10:	e1a02103 	lsl	r2, r3, #2
  14:	e0433002 	sub	r3, r3, r2
  18:	e6ef3073 	uxtb	r3, r3
  1c:	e2432001 	sub	r2, r3, #1
  20:	e2630000 	rsb	r0, r3, #0
  24:	e6ef3072 	uxtb	r3, r2
  28:	e6ef0070 	uxtb	r0, r0
  2c:	e1800803 	orr	r0, r0, r3, lsl #16
  30:	e12fff1e 	bx	lr
  34:	e35300a9 	cmp	r3, #169	; 0xa9
  38:	8a000008 	bhi	60 <PixelPatterns::Wheel(unsigned char)+0x60>
  3c:	e3e03055 	mvn	r3, #85	; 0x55
  40:	e0433001 	sub	r3, r3, r1
  44:	e1a02083 	lsl	r2, r3, #1
  48:	e0833002 	add	r3, r3, r2
  4c:	e6ef3073 	uxtb	r3, r3
  50:	e1e00003 	mvn	r0, r3
  54:	e6ef0070 	uxtb	r0, r0
  58:	e1800403 	orr	r0, r0, r3, lsl #8
  5c:	e12fff1e 	bx	lr
  60:	e2611055 	rsb	r1, r1, #85	; 0x55
  64:	e1a03081 	lsl	r3, r1, #1
  68:	e0811003 	add	r1, r1, r3
  6c:	e6ef1071 	uxtb	r1, r1
  70:	e1a00401 	lsl	r0, r1, #8
  74:	e2200cff 	eor	r0, r0, #65280	; 0xff00
  78:	e1800801 	orr	r0, r0, r1, lsl #16
  7c:	e12fff1e 	bx	lr

Disassembly of section .text._ZN13PixelPatterns9IncrementEj:

00000000 <PixelPatterns::Increment(unsigned int)>:
   0:	e1a01281 	lsl	r1, r1, #5
   4:	e3003000 	movw	r3, #0
   8:	e3403000 	movt	r3, #0
   c:	e0832001 	add	r2, r3, r1
  10:	e5920018 	ldr	r0, [r2, #24]
  14:	e3500000 	cmp	r0, #0
  18:	1a000006 	bne	38 <PixelPatterns::Increment(unsigned int)+0x38>
  1c:	e5923014 	ldr	r3, [r2, #20]
  20:	e5921010 	ldr	r1, [r2, #16]
  24:	e2833001 	add	r3, r3, #1
  28:	e1530001 	cmp	r3, r1
  2c:	11a00003 	movne	r0, r3
  30:	e5820014 	str	r0, [r2, #20]
  34:	e12fff1e 	bx	lr
  38:	e5920014 	ldr	r0, [r2, #20]
  3c:	e3500000 	cmp	r0, #0
  40:	0a000003 	beq	54 <PixelPatterns::Increment(unsigned int)+0x54>
  44:	e2400001 	sub	r0, r0, #1
  48:	e5820014 	str	r0, [r2, #20]
  4c:	e3500000 	cmp	r0, #0
  50:	112fff1e 	bxne	lr
  54:	e0833001 	add	r3, r3, r1
  58:	e5932010 	ldr	r2, [r3, #16]
  5c:	e2422001 	sub	r2, r2, #1
  60:	e6ff2072 	uxth	r2, r2
  64:	e5832014 	str	r2, [r3, #20]
  68:	e12fff1e 	bx	lr

Disassembly of section .text._ZN13PixelPatterns18RainbowCycleUpdateEj:

00000000 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
   0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	e3007000 	movw	r7, #0
   8:	e3407000 	movt	r7, #0
   c:	e3002000 	movw	r2, #0
  10:	e3402000 	movt	r2, #0
  14:	e24dd00c 	sub	sp, sp, #12
  18:	e5973000 	ldr	r3, [r7]
  1c:	e1a0a001 	mov	sl, r1
  20:	e0822281 	add	r2, r2, r1, lsl #5
  24:	e1a06000 	mov	r6, r0
  28:	e3530000 	cmp	r3, #0
  2c:	e5928014 	ldr	r8, [r2, #20]
  30:	0a00002c 	beq	e8 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0xe8>
  34:	e3a04000 	mov	r4, #0
  38:	e3009000 	movw	r9, #0
  3c:	e3409000 	movt	r9, #0
  40:	e6ef8078 	uxtb	r8, r8
  44:	e1a05004 	mov	r5, r4
  48:	ea000007 	b	6c <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x6c>
  4c:	e58dc000 	str	ip, [sp]
  50:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  54:	e5973000 	ldr	r3, [r7]
  58:	e2844001 	add	r4, r4, #1
  5c:	e6ff4074 	uxth	r4, r4
  60:	e1540003 	cmp	r4, r3
  64:	e1a05004 	mov	r5, r4
  68:	2a00001e 	bcs	e8 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0xe8>
  6c:	e1a01405 	lsl	r1, r5, #8
  70:	e1a00006 	mov	r0, r6
  74:	e731f311 	udiv	r1, r1, r3
  78:	e0881001 	add	r1, r8, r1
  7c:	e6ef1071 	uxtb	r1, r1
  80:	ebfffffe 	bl	0 <PixelPatterns::RainbowCycleUpdate(unsigned int)>
  84:	e1a0c000 	mov	ip, r0
  88:	e1a01005 	mov	r1, r5
  8c:	e5990000 	ldr	r0, [r9]
  90:	e7e7e45c 	ubfx	lr, ip, #8, #8
  94:	e5903000 	ldr	r3, [r0]
  98:	e7e7285c 	ubfx	r2, ip, #16, #8
  9c:	e6efc07c 	uxtb	ip, ip
  a0:	e3530007 	cmp	r3, #7
  a4:	e1a0300e 	mov	r3, lr
  a8:	1affffe7 	bne	4c <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x4c>
  ac:	e152000e 	cmp	r2, lr
  b0:	015e000c 	cmpeq	lr, ip
  b4:	e3a03000 	mov	r3, #0
  b8:	058d2004 	streq	r2, [sp, #4]
  bc:	01a02003 	moveq	r2, r3
  c0:	158dc000 	strne	ip, [sp]
  c4:	01a01002 	moveq	r1, r2
  c8:	058d1000 	streq	r1, [sp]
  cc:	13a0b000 	movne	fp, #0
  d0:	158db004 	strne	fp, [sp, #4]
  d4:	01a01005 	moveq	r1, r5
  d8:	11a0300e 	movne	r3, lr
  dc:	03a0b001 	moveq	fp, #1
  e0:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  e4:	eaffffda 	b	54 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
  e8:	e1a0100a 	mov	r1, sl
  ec:	e1a00006 	mov	r0, r6
  f0:	e28dd00c 	add	sp, sp, #12
  f4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  f8:	eafffffe 	b	0 <PixelPatterns::RainbowCycleUpdate(unsigned int)>

Disassembly of section .text._ZN13PixelPatterns18TheaterChaseUpdateEj:

00000000 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
   0:	e3003000 	movw	r3, #0
   4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8:	e3005000 	movw	r5, #0
   c:	e3403000 	movt	r3, #0
  10:	e24dd02c 	sub	sp, sp, #44	; 0x2c
  14:	e0833281 	add	r3, r3, r1, lsl #5
  18:	e3405000 	movt	r5, #0
  1c:	e5932008 	ldr	r2, [r3, #8]
  20:	e5939014 	ldr	r9, [r3, #20]
  24:	e58d1024 	str	r1, [sp, #36]	; 0x24
  28:	e593100c 	ldr	r1, [r3, #12]
  2c:	e5953000 	ldr	r3, [r5]
  30:	e58d0020 	str	r0, [sp, #32]
  34:	e3530000 	cmp	r3, #0
  38:	0a000053 	beq	18c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x18c>
  3c:	e7e73451 	ubfx	r3, r1, #8, #8
  40:	e3a04000 	mov	r4, #0
  44:	e7e7b851 	ubfx	fp, r1, #16, #8
  48:	e6ef1071 	uxtb	r1, r1
  4c:	e7e70452 	ubfx	r0, r2, #8, #8
  50:	e3006000 	movw	r6, #0
  54:	e7e7a852 	ubfx	sl, r2, #16, #8
  58:	e6ef2072 	uxtb	r2, r2
  5c:	e15b0003 	cmp	fp, r3
  60:	01530001 	cmpeq	r3, r1
  64:	e30a8aab 	movw	r8, #43691	; 0xaaab
  68:	e58d3018 	str	r3, [sp, #24]
  6c:	03a03001 	moveq	r3, #1
  70:	e58d101c 	str	r1, [sp, #28]
  74:	13a03000 	movne	r3, #0
  78:	e15a0000 	cmp	sl, r0
  7c:	01500002 	cmpeq	r0, r2
  80:	e3057555 	movw	r7, #21845	; 0x5555
  84:	e58d300c 	str	r3, [sp, #12]
  88:	03a03001 	moveq	r3, #1
  8c:	e3406000 	movt	r6, #0
  90:	13a03000 	movne	r3, #0
  94:	e34a8aaa 	movt	r8, #43690	; 0xaaaa
  98:	e1a01004 	mov	r1, r4
  9c:	e3457555 	movt	r7, #21845	; 0x5555
  a0:	e58d0010 	str	r0, [sp, #16]
  a4:	e58d2014 	str	r2, [sp, #20]
  a8:	e58d3008 	str	r3, [sp, #8]
  ac:	ea00000c 	b	e4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0xe4>
  b0:	e3530007 	cmp	r3, #7
  b4:	0a000018 	beq	11c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x11c>
  b8:	e59d3014 	ldr	r3, [sp, #20]
  bc:	e1a0200a 	mov	r2, sl
  c0:	e58d3000 	str	r3, [sp]
  c4:	e59d3010 	ldr	r3, [sp, #16]
  c8:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  cc:	e5953000 	ldr	r3, [r5]
  d0:	e2844001 	add	r4, r4, #1
  d4:	e6ff4074 	uxth	r4, r4
  d8:	e1540003 	cmp	r4, r3
  dc:	e1a01004 	mov	r1, r4
  e0:	2a000029 	bcs	18c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x18c>
  e4:	e0893001 	add	r3, r9, r1
  e8:	e0030398 	mul	r3, r8, r3
  ec:	e5960000 	ldr	r0, [r6]
  f0:	e1530007 	cmp	r3, r7
  f4:	e5903000 	ldr	r3, [r0]
  f8:	9affffec 	bls	b0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0xb0>
  fc:	e3530007 	cmp	r3, #7
 100:	0a000013 	beq	154 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x154>
 104:	e59d301c 	ldr	r3, [sp, #28]
 108:	e1a0200b 	mov	r2, fp
 10c:	e58d3000 	str	r3, [sp]
 110:	e59d3018 	ldr	r3, [sp, #24]
 114:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 118:	eaffffeb 	b	cc <PixelPatterns::TheaterChaseUpdate(unsigned int)+0xcc>
 11c:	e59d3008 	ldr	r3, [sp, #8]
 120:	e3530000 	cmp	r3, #0
 124:	158da004 	strne	sl, [sp, #4]
 128:	13a03000 	movne	r3, #0
 12c:	059d3008 	ldreq	r3, [sp, #8]
 130:	11a02003 	movne	r2, r3
 134:	158d3000 	strne	r3, [sp]
 138:	01a0200a 	moveq	r2, sl
 13c:	058d3004 	streq	r3, [sp, #4]
 140:	059d3014 	ldreq	r3, [sp, #20]
 144:	058d3000 	streq	r3, [sp]
 148:	059d3010 	ldreq	r3, [sp, #16]
 14c:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 150:	eaffffdd 	b	cc <PixelPatterns::TheaterChaseUpdate(unsigned int)+0xcc>
 154:	e59d300c 	ldr	r3, [sp, #12]
 158:	e3530000 	cmp	r3, #0
 15c:	158db004 	strne	fp, [sp, #4]
 160:	13a03000 	movne	r3, #0
 164:	059d300c 	ldreq	r3, [sp, #12]
 168:	11a02003 	movne	r2, r3
 16c:	158d3000 	strne	r3, [sp]
 170:	01a0200b 	moveq	r2, fp
 174:	058d3004 	streq	r3, [sp, #4]
 178:	059d301c 	ldreq	r3, [sp, #28]
 17c:	058d3000 	streq	r3, [sp]
 180:	059d3018 	ldreq	r3, [sp, #24]
 184:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 188:	eaffffcf 	b	cc <PixelPatterns::TheaterChaseUpdate(unsigned int)+0xcc>
 18c:	e1cd02d0 	ldrd	r0, [sp, #32]
 190:	e28dd02c 	add	sp, sp, #44	; 0x2c
 194:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 198:	eafffffe 	b	0 <PixelPatterns::TheaterChaseUpdate(unsigned int)>

Disassembly of section .text._ZN13PixelPatterns16ColourWipeUpdateEj:

00000000 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
   0:	e3003000 	movw	r3, #0
   4:	e3403000 	movt	r3, #0
   8:	e0833281 	add	r3, r3, r1, lsl #5
   c:	e92d4030 	push	{r4, r5, lr}
  10:	e1a04001 	mov	r4, r1
  14:	e593c008 	ldr	ip, [r3, #8]
  18:	e1a05000 	mov	r5, r0
  1c:	e5931014 	ldr	r1, [r3, #20]
  20:	e3003000 	movw	r3, #0
  24:	e3403000 	movt	r3, #0
  28:	e24dd00c 	sub	sp, sp, #12
  2c:	e7e7285c 	ubfx	r2, ip, #16, #8
  30:	e5930000 	ldr	r0, [r3]
  34:	e7e7345c 	ubfx	r3, ip, #8, #8
  38:	e6efc07c 	uxtb	ip, ip
  3c:	e590e000 	ldr	lr, [r0]
  40:	e35e0007 	cmp	lr, #7
  44:	1a00000e 	bne	84 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x84>
  48:	e1520003 	cmp	r2, r3
  4c:	0153000c 	cmpeq	r3, ip
  50:	058d2004 	streq	r2, [sp, #4]
  54:	03a03000 	moveq	r3, #0
  58:	058d3000 	streq	r3, [sp]
  5c:	13a0e000 	movne	lr, #0
  60:	01a02003 	moveq	r2, r3
  64:	03a0e001 	moveq	lr, #1
  68:	188d5000 	stmne	sp, {ip, lr}
  6c:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  70:	e1a01004 	mov	r1, r4
  74:	e1a00005 	mov	r0, r5
  78:	e28dd00c 	add	sp, sp, #12
  7c:	e8bd4030 	pop	{r4, r5, lr}
  80:	eafffffe 	b	0 <PixelPatterns::ColourWipeUpdate(unsigned int)>
  84:	e58dc000 	str	ip, [sp]
  88:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  8c:	eafffff7 	b	70 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x70>

Disassembly of section .text._ZN13PixelPatterns13ScannerUpdateEj:

00000000 <PixelPatterns::ScannerUpdate(unsigned int)>:
   0:	e3003000 	movw	r3, #0
   4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8:	e3007000 	movw	r7, #0
   c:	e3403000 	movt	r3, #0
  10:	e24dd02c 	sub	sp, sp, #44	; 0x2c
  14:	e0833281 	add	r3, r3, r1, lsl #5
  18:	e3407000 	movt	r7, #0
  1c:	e5932008 	ldr	r2, [r3, #8]
  20:	e5939010 	ldr	r9, [r3, #16]
  24:	e5938014 	ldr	r8, [r3, #20]
  28:	e5973000 	ldr	r3, [r7]
  2c:	e58d1024 	str	r1, [sp, #36]	; 0x24
  30:	e58d0020 	str	r0, [sp, #32]
  34:	e3530000 	cmp	r3, #0
  38:	e58d200c 	str	r2, [sp, #12]
  3c:	0a000064 	beq	1d4 <PixelPatterns::ScannerUpdate(unsigned int)+0x1d4>
  40:	e59d300c 	ldr	r3, [sp, #12]
  44:	e3a04000 	mov	r4, #0
  48:	e0499008 	sub	r9, r9, r8
  4c:	e300a000 	movw	sl, #0
  50:	e7e72853 	ubfx	r2, r3, #16, #8
  54:	e3006000 	movw	r6, #0
  58:	e7e71453 	ubfx	r1, r3, #8, #8
  5c:	e6ef3073 	uxtb	r3, r3
  60:	e58d301c 	str	r3, [sp, #28]
  64:	e1a05004 	mov	r5, r4
  68:	e1520001 	cmp	r2, r1
  6c:	01510003 	cmpeq	r1, r3
  70:	e340a000 	movt	sl, #0
  74:	03a03001 	moveq	r3, #1
  78:	e3406000 	movt	r6, #0
  7c:	13a03000 	movne	r3, #0
  80:	e58d2010 	str	r2, [sp, #16]
  84:	e58d1018 	str	r1, [sp, #24]
  88:	e58d3014 	str	r3, [sp, #20]
  8c:	ea00001b 	b	100 <PixelPatterns::ScannerUpdate(unsigned int)+0x100>
  90:	e5963000 	ldr	r3, [r6]
  94:	e1a02105 	lsl	r2, r5, #2
  98:	e7933105 	ldr	r3, [r3, r5, lsl #2]
  9c:	e59a0000 	ldr	r0, [sl]
  a0:	e58d2008 	str	r2, [sp, #8]
  a4:	e7e624d3 	ubfx	r2, r3, #9, #7
  a8:	e7e618d3 	ubfx	r1, r3, #17, #7
  ac:	e590c000 	ldr	ip, [r0]
  b0:	e1a02402 	lsl	r2, r2, #8
  b4:	e1822801 	orr	r2, r2, r1, lsl #16
  b8:	e35c0007 	cmp	ip, #7
  bc:	e7e610d3 	ubfx	r1, r3, #1, #7
  c0:	e182b001 	orr	fp, r2, r1
  c4:	e7e63452 	ubfx	r3, r2, #8, #7
  c8:	e1a02822 	lsr	r2, r2, #16
  cc:	0a00001d 	beq	148 <PixelPatterns::ScannerUpdate(unsigned int)+0x148>
  d0:	e58d1000 	str	r1, [sp]
  d4:	e1a01005 	mov	r1, r5
  d8:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  dc:	e5963000 	ldr	r3, [r6]
  e0:	e59d2008 	ldr	r2, [sp, #8]
  e4:	e783b002 	str	fp, [r3, r2]
  e8:	e5973000 	ldr	r3, [r7]
  ec:	e2844001 	add	r4, r4, #1
  f0:	e6ff4074 	uxth	r4, r4
  f4:	e1540003 	cmp	r4, r3
  f8:	e1a05004 	mov	r5, r4
  fc:	2a000034 	bcs	1d4 <PixelPatterns::ScannerUpdate(unsigned int)+0x1d4>
 100:	e1580005 	cmp	r8, r5
 104:	0a00001c 	beq	17c <PixelPatterns::ScannerUpdate(unsigned int)+0x17c>
 108:	e1590005 	cmp	r9, r5
 10c:	1affffdf 	bne	90 <PixelPatterns::ScannerUpdate(unsigned int)+0x90>
 110:	e59a0000 	ldr	r0, [sl]
 114:	e5903000 	ldr	r3, [r0]
 118:	e3530007 	cmp	r3, #7
 11c:	0a000021 	beq	1a8 <PixelPatterns::ScannerUpdate(unsigned int)+0x1a8>
 120:	e59d301c 	ldr	r3, [sp, #28]
 124:	e1a01009 	mov	r1, r9
 128:	e59d2010 	ldr	r2, [sp, #16]
 12c:	e58d3000 	str	r3, [sp]
 130:	e59d3018 	ldr	r3, [sp, #24]
 134:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 138:	e5963000 	ldr	r3, [r6]
 13c:	e59d200c 	ldr	r2, [sp, #12]
 140:	e7832105 	str	r2, [r3, r5, lsl #2]
 144:	eaffffe7 	b	e8 <PixelPatterns::ScannerUpdate(unsigned int)+0xe8>
 148:	e1520003 	cmp	r2, r3
 14c:	01530001 	cmpeq	r3, r1
 150:	058d2004 	streq	r2, [sp, #4]
 154:	03a03000 	moveq	r3, #0
 158:	058d3000 	streq	r3, [sp]
 15c:	13a0c000 	movne	ip, #0
 160:	188d1002 	stmne	sp, {r1, ip}
 164:	01a01005 	moveq	r1, r5
 168:	01a02003 	moveq	r2, r3
 16c:	11a01005 	movne	r1, r5
 170:	03a0c001 	moveq	ip, #1
 174:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 178:	eaffffd7 	b	dc <PixelPatterns::ScannerUpdate(unsigned int)+0xdc>
 17c:	e59a0000 	ldr	r0, [sl]
 180:	e5903000 	ldr	r3, [r0]
 184:	e3530007 	cmp	r3, #7
 188:	0a000015 	beq	1e4 <PixelPatterns::ScannerUpdate(unsigned int)+0x1e4>
 18c:	e59d301c 	ldr	r3, [sp, #28]
 190:	e1a01008 	mov	r1, r8
 194:	e59d2010 	ldr	r2, [sp, #16]
 198:	e58d3000 	str	r3, [sp]
 19c:	e59d3018 	ldr	r3, [sp, #24]
 1a0:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 1a4:	eaffffe3 	b	138 <PixelPatterns::ScannerUpdate(unsigned int)+0x138>
 1a8:	e59d3014 	ldr	r3, [sp, #20]
 1ac:	e3530000 	cmp	r3, #0
 1b0:	0a000016 	beq	210 <PixelPatterns::ScannerUpdate(unsigned int)+0x210>
 1b4:	e59d3010 	ldr	r3, [sp, #16]
 1b8:	e1a01009 	mov	r1, r9
 1bc:	e58d3004 	str	r3, [sp, #4]
 1c0:	e3a03000 	mov	r3, #0
 1c4:	e58d3000 	str	r3, [sp]
 1c8:	e1a02003 	mov	r2, r3
 1cc:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 1d0:	eaffffd8 	b	138 <PixelPatterns::ScannerUpdate(unsigned int)+0x138>
 1d4:	e1cd02d0 	ldrd	r0, [sp, #32]
 1d8:	e28dd02c 	add	sp, sp, #44	; 0x2c
 1dc:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1e0:	eafffffe 	b	0 <PixelPatterns::ScannerUpdate(unsigned int)>
 1e4:	e59d3014 	ldr	r3, [sp, #20]
 1e8:	e3530000 	cmp	r3, #0
 1ec:	0a000010 	beq	234 <PixelPatterns::ScannerUpdate(unsigned int)+0x234>
 1f0:	e59d3010 	ldr	r3, [sp, #16]
 1f4:	e1a01008 	mov	r1, r8
 1f8:	e58d3004 	str	r3, [sp, #4]
 1fc:	e3a03000 	mov	r3, #0
 200:	e58d3000 	str	r3, [sp]
 204:	e1a02003 	mov	r2, r3
 208:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 20c:	eaffffc9 	b	138 <PixelPatterns::ScannerUpdate(unsigned int)+0x138>
 210:	e59d3014 	ldr	r3, [sp, #20]
 214:	e1a01009 	mov	r1, r9
 218:	e59d2010 	ldr	r2, [sp, #16]
 21c:	e58d3004 	str	r3, [sp, #4]
 220:	e59d301c 	ldr	r3, [sp, #28]
 224:	e58d3000 	str	r3, [sp]
 228:	e59d3018 	ldr	r3, [sp, #24]
 22c:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 230:	eaffffc0 	b	138 <PixelPatterns::ScannerUpdate(unsigned int)+0x138>
 234:	e59d3014 	ldr	r3, [sp, #20]
 238:	e1a01008 	mov	r1, r8
 23c:	e59d2010 	ldr	r2, [sp, #16]
 240:	e58d3004 	str	r3, [sp, #4]
 244:	e59d301c 	ldr	r3, [sp, #28]
 248:	e58d3000 	str	r3, [sp]
 24c:	e59d3018 	ldr	r3, [sp, #24]
 250:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 254:	eaffffb7 	b	138 <PixelPatterns::ScannerUpdate(unsigned int)+0x138>

Disassembly of section .text._ZN13PixelPatterns10FadeUpdateEj:

00000000 <PixelPatterns::FadeUpdate(unsigned int)>:
   0:	e3003000 	movw	r3, #0
   4:	e3403000 	movt	r3, #0
   8:	e0833281 	add	r3, r3, r1, lsl #5
   c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  10:	e24dd014 	sub	sp, sp, #20
  14:	e593200c 	ldr	r2, [r3, #12]
  18:	e1a0b001 	mov	fp, r1
  1c:	e593c014 	ldr	ip, [r3, #20]
  20:	e3008000 	movw	r8, #0
  24:	e5931008 	ldr	r1, [r3, #8]
  28:	e58d000c 	str	r0, [sp, #12]
  2c:	e5930010 	ldr	r0, [r3, #16]
  30:	e7e75452 	ubfx	r5, r2, #8, #8
  34:	e7e73852 	ubfx	r3, r2, #16, #8
  38:	e6ef2072 	uxtb	r2, r2
  3c:	e7e7e451 	ubfx	lr, r1, #8, #8
  40:	e005059c 	mul	r5, ip, r5
  44:	e003039c 	mul	r3, ip, r3
  48:	e002029c 	mul	r2, ip, r2
  4c:	e040c00c 	sub	ip, r0, ip
  50:	e0255e9c 	mla	r5, ip, lr, r5
  54:	e7e7e851 	ubfx	lr, r1, #16, #8
  58:	e6ef1071 	uxtb	r1, r1
  5c:	e0233e9c 	mla	r3, ip, lr, r3
  60:	e735f015 	udiv	r5, r5, r0
  64:	e733f013 	udiv	r3, r3, r0
  68:	e022219c 	mla	r2, ip, r1, r2
  6c:	e1a05405 	lsl	r5, r5, #8
  70:	e732f012 	udiv	r2, r2, r0
  74:	e1a03803 	lsl	r3, r3, #16
  78:	e6ff5075 	uxth	r5, r5
  7c:	e3408000 	movt	r8, #0
  80:	e20338ff 	and	r3, r3, #16711680	; 0xff0000
  84:	e1855003 	orr	r5, r5, r3
  88:	e6ef3072 	uxtb	r3, r2
  8c:	e1855003 	orr	r5, r5, r3
  90:	e5983000 	ldr	r3, [r8]
  94:	e3530000 	cmp	r3, #0
  98:	0a000026 	beq	138 <PixelPatterns::FadeUpdate(unsigned int)+0x138>
  9c:	e1a06825 	lsr	r6, r5, #16
  a0:	e3009000 	movw	r9, #0
  a4:	e7e77455 	ubfx	r7, r5, #8, #8
  a8:	e6ef5075 	uxtb	r5, r5
  ac:	e3409000 	movt	r9, #0
  b0:	e3a04000 	mov	r4, #0
  b4:	e1560007 	cmp	r6, r7
  b8:	01570005 	cmpeq	r7, r5
  bc:	03a0a001 	moveq	sl, #1
  c0:	13a0a000 	movne	sl, #0
  c4:	ea000005 	b	e0 <PixelPatterns::FadeUpdate(unsigned int)+0xe0>
  c8:	e58d5000 	str	r5, [sp]
  cc:	e2844001 	add	r4, r4, #1
  d0:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  d4:	e5983000 	ldr	r3, [r8]
  d8:	e1540003 	cmp	r4, r3
  dc:	2a000015 	bcs	138 <PixelPatterns::FadeUpdate(unsigned int)+0x138>
  e0:	e5990000 	ldr	r0, [r9]
  e4:	e1a03007 	mov	r3, r7
  e8:	e1a02006 	mov	r2, r6
  ec:	e1a01004 	mov	r1, r4
  f0:	e590c000 	ldr	ip, [r0]
  f4:	e35c0007 	cmp	ip, #7
  f8:	1afffff2 	bne	c8 <PixelPatterns::FadeUpdate(unsigned int)+0xc8>
  fc:	e35a0000 	cmp	sl, #0
 100:	e3a03000 	mov	r3, #0
 104:	158d6004 	strne	r6, [sp, #4]
 108:	11a02003 	movne	r2, r3
 10c:	058da004 	streq	sl, [sp, #4]
 110:	11a01002 	movne	r1, r2
 114:	158d1000 	strne	r1, [sp]
 118:	01a03007 	moveq	r3, r7
 11c:	058d5000 	streq	r5, [sp]
 120:	11a01004 	movne	r1, r4
 124:	e2844001 	add	r4, r4, #1
 128:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 12c:	e5983000 	ldr	r3, [r8]
 130:	e1540003 	cmp	r4, r3
 134:	3affffe9 	bcc	e0 <PixelPatterns::FadeUpdate(unsigned int)+0xe0>
 138:	e59d000c 	ldr	r0, [sp, #12]
 13c:	e1a0100b 	mov	r1, fp
 140:	e28dd014 	add	sp, sp, #20
 144:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 148:	eafffffe 	b	0 <PixelPatterns::FadeUpdate(unsigned int)>

Disassembly of section .text._ZN13PixelPatterns10PortUpdateEjj:

00000000 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
   0:	e92d4030 	push	{r4, r5, lr}
   4:	e1a04001 	mov	r4, r1
   8:	e3003000 	movw	r3, #0
   c:	e1a05000 	mov	r5, r0
  10:	e3403000 	movt	r3, #0
  14:	e24dd00c 	sub	sp, sp, #12
  18:	e1a0c284 	lsl	ip, r4, #5
  1c:	e083000c 	add	r0, r3, ip
  20:	e7931281 	ldr	r1, [r3, r1, lsl #5]
  24:	e590e004 	ldr	lr, [r0, #4]
  28:	e0421001 	sub	r1, r2, r1
  2c:	e151000e 	cmp	r1, lr
  30:	3a00000a 	bcc	60 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x60>
  34:	e7832284 	str	r2, [r3, r4, lsl #5]
  38:	e590201c 	ldr	r2, [r0, #28]
  3c:	e2422001 	sub	r2, r2, #1
  40:	e3520004 	cmp	r2, #4
  44:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
  48:	ea000004 	b	60 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x60>
  4c:	00000084 	.word	0x00000084
  50:	0000009c 	.word	0x0000009c
  54:	000000b4 	.word	0x000000b4
  58:	00000104 	.word	0x00000104
  5c:	0000006c 	.word	0x0000006c
  60:	e3a00000 	mov	r0, #0
  64:	e28dd00c 	add	sp, sp, #12
  68:	e8bd8030 	pop	{r4, r5, pc}
  6c:	e1a00005 	mov	r0, r5
  70:	e1a01004 	mov	r1, r4
  74:	ebfffffe 	bl	0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
  78:	e3a00001 	mov	r0, #1
  7c:	e28dd00c 	add	sp, sp, #12
  80:	e8bd8030 	pop	{r4, r5, pc}
  84:	e1a00005 	mov	r0, r5
  88:	e1a01004 	mov	r1, r4
  8c:	ebfffffe 	bl	0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
  90:	e3a00001 	mov	r0, #1
  94:	e28dd00c 	add	sp, sp, #12
  98:	e8bd8030 	pop	{r4, r5, pc}
  9c:	e1a00005 	mov	r0, r5
  a0:	e1a01004 	mov	r1, r4
  a4:	ebfffffe 	bl	0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
  a8:	e3a00001 	mov	r0, #1
  ac:	e28dd00c 	add	sp, sp, #12
  b0:	e8bd8030 	pop	{r4, r5, pc}
  b4:	e083300c 	add	r3, r3, ip
  b8:	e593c008 	ldr	ip, [r3, #8]
  bc:	e5931014 	ldr	r1, [r3, #20]
  c0:	e3003000 	movw	r3, #0
  c4:	e3403000 	movt	r3, #0
  c8:	e7e7285c 	ubfx	r2, ip, #16, #8
  cc:	e5930000 	ldr	r0, [r3]
  d0:	e7e7345c 	ubfx	r3, ip, #8, #8
  d4:	e6efc07c 	uxtb	ip, ip
  d8:	e590e000 	ldr	lr, [r0]
  dc:	e35e0007 	cmp	lr, #7
  e0:	0a00000d 	beq	11c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x11c>
  e4:	e58dc000 	str	ip, [sp]
  e8:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  ec:	e1a00005 	mov	r0, r5
  f0:	e1a01004 	mov	r1, r4
  f4:	ebfffffe 	bl	0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
  f8:	e3a00001 	mov	r0, #1
  fc:	e28dd00c 	add	sp, sp, #12
 100:	e8bd8030 	pop	{r4, r5, pc}
 104:	e1a00005 	mov	r0, r5
 108:	e1a01004 	mov	r1, r4
 10c:	ebfffffe 	bl	0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 110:	e3a00001 	mov	r0, #1
 114:	e28dd00c 	add	sp, sp, #12
 118:	e8bd8030 	pop	{r4, r5, pc}
 11c:	e1520003 	cmp	r2, r3
 120:	0153000c 	cmpeq	r3, ip
 124:	058d2004 	streq	r2, [sp, #4]
 128:	03a03000 	moveq	r3, #0
 12c:	058d3000 	streq	r3, [sp]
 130:	13a0e000 	movne	lr, #0
 134:	01a02003 	moveq	r2, r3
 138:	03a0e001 	moveq	lr, #1
 13c:	188d5000 	stmne	sp, {ip, lr}
 140:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 144:	eaffffe8 	b	ec <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0xec>

Disassembly of section .text._ZN13PixelPatterns3RunEv:

00000000 <PixelPatterns::Run()>:
   0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   4:	e1a06000 	mov	r6, r0
   8:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
   c:	e2505000 	subs	r5, r0, #0
  10:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}
  14:	e3007000 	movw	r7, #0
  18:	e3a03b03 	mov	r3, #3072	; 0xc00
  1c:	e3407000 	movt	r7, #0
  20:	e34031c2 	movt	r3, #450	; 0x1c2
  24:	e5972000 	ldr	r2, [r7]
  28:	e5938084 	ldr	r8, [r3, #132]	; 0x84
  2c:	e3520000 	cmp	r2, #0
  30:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
  34:	e1a04005 	mov	r4, r5
  38:	e1a01005 	mov	r1, r5
  3c:	e1a02008 	mov	r2, r8
  40:	e1a00006 	mov	r0, r6
  44:	e2844001 	add	r4, r4, #1
  48:	ebfffffe 	bl	0 <PixelPatterns::Run()>
  4c:	e5973000 	ldr	r3, [r7]
  50:	e6ef4074 	uxtb	r4, r4
  54:	e1800005 	orr	r0, r0, r5
  58:	e1a01004 	mov	r1, r4
  5c:	e1540003 	cmp	r4, r3
  60:	e6ef5070 	uxtb	r5, r0
  64:	3afffff4 	bcc	3c <PixelPatterns::Run()+0x3c>
  68:	e3550000 	cmp	r5, #0
  6c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
  70:	e3003000 	movw	r3, #0
  74:	e3403000 	movt	r3, #0
  78:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  7c:	e5930000 	ldr	r0, [r3]
  80:	eafffffe 	b	0 <WS28xx::Update()>

Disassembly of section .text._ZN13PixelPatterns7ReverseEj:

00000000 <PixelPatterns::Reverse(unsigned int)>:
   0:	e1a01281 	lsl	r1, r1, #5
   4:	e3003000 	movw	r3, #0
   8:	e3403000 	movt	r3, #0
   c:	e0830001 	add	r0, r3, r1
  10:	e0833001 	add	r3, r3, r1
  14:	e5902018 	ldr	r2, [r0, #24]
  18:	e3520000 	cmp	r2, #0
  1c:	13a02000 	movne	r2, #0
  20:	03a0c001 	moveq	ip, #1
  24:	05902010 	ldreq	r2, [r0, #16]
  28:	0580c018 	streq	ip, [r0, #24]
  2c:	15802018 	strne	r2, [r0, #24]
  30:	02422001 	subeq	r2, r2, #1
  34:	06ff2072 	uxtheq	r2, r2
  38:	e5832014 	str	r2, [r3, #20]
  3c:	e12fff1e 	bx	lr

pixeltestpattern.o:     file format elf32-littlearm


pixeltype.o:     file format elf32-littlearm


Disassembly of section .text._ZN9PixelType7GetTypeEN5pixel4TypeE:

00000000 <PixelType::GetType(pixel::Type)>:
   0:	e350000d 	cmp	r0, #13
   4:	d59f3008 	ldrle	r3, [pc, #8]	; 14 <PixelType::GetType(pixel::Type)+0x14>
   8:	d0830180 	addle	r0, r3, r0, lsl #3
   c:	c59f0004 	ldrgt	r0, [pc, #4]	; 18 <PixelType::GetType(pixel::Type)+0x18>
  10:	e12fff1e 	bx	lr
	...

Disassembly of section .text._ZN9PixelType7GetTypeEPKc:

00000000 <PixelType::GetType(char const*)>:
   0:	e92d4070 	push	{r4, r5, r6, lr}
   4:	e2504000 	subs	r4, r0, #0
   8:	1a000004 	bne	20 <PixelType::GetType(char const*)+0x20>
   c:	e59f3068 	ldr	r3, [pc, #104]	; 7c <PixelType::GetType(char const*)+0x7c>
  10:	e3a0103c 	mov	r1, #60	; 0x3c
  14:	e59f2064 	ldr	r2, [pc, #100]	; 80 <PixelType::GetType(char const*)+0x80>
  18:	e59f0064 	ldr	r0, [pc, #100]	; 84 <PixelType::GetType(char const*)+0x84>
  1c:	ebfffffe 	bl	0 <__assert_func>
  20:	e59f1060 	ldr	r1, [pc, #96]	; 88 <PixelType::GetType(char const*)+0x88>
  24:	e3a00000 	mov	r0, #0
  28:	e244e001 	sub	lr, r4, #1
  2c:	e241c001 	sub	ip, r1, #1
  30:	e5fe2001 	ldrb	r2, [lr, #1]!
  34:	e2423041 	sub	r3, r2, #65	; 0x41
  38:	e1a05002 	mov	r5, r2
  3c:	e3530019 	cmp	r3, #25
  40:	e5fc3001 	ldrb	r3, [ip, #1]!
  44:	92825020 	addls	r5, r2, #32
  48:	e2436041 	sub	r6, r3, #65	; 0x41
  4c:	e3560019 	cmp	r6, #25
  50:	92833020 	addls	r3, r3, #32
  54:	e1530005 	cmp	r3, r5
  58:	1a000002 	bne	68 <PixelType::GetType(char const*)+0x68>
  5c:	e3520000 	cmp	r2, #0
  60:	1afffff2 	bne	30 <PixelType::GetType(char const*)+0x30>
  64:	e8bd8070 	pop	{r4, r5, r6, pc}
  68:	e2800001 	add	r0, r0, #1
  6c:	e2811008 	add	r1, r1, #8
  70:	e350000e 	cmp	r0, #14
  74:	1affffeb 	bne	28 <PixelType::GetType(char const*)+0x28>
  78:	e8bd8070 	pop	{r4, r5, r6, pc}
  7c:	00000000 	.word	0x00000000
  80:	00000013 	.word	0x00000013
  84:	0000001b 	.word	0x0000001b
  88:	00000000 	.word	0x00000000

Disassembly of section .text._ZN9PixelType6GetMapEPKc:

00000000 <PixelType::GetMap(char const*)>:
   0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   4:	e2504000 	subs	r4, r0, #0
   8:	1a000004 	bne	20 <PixelType::GetMap(char const*)+0x20>
   c:	e59f3074 	ldr	r3, [pc, #116]	; 88 <PixelType::GetMap(char const*)+0x88>
  10:	e3a01048 	mov	r1, #72	; 0x48
  14:	e59f2070 	ldr	r2, [pc, #112]	; 8c <PixelType::GetMap(char const*)+0x8c>
  18:	e59f0070 	ldr	r0, [pc, #112]	; 90 <PixelType::GetMap(char const*)+0x90>
  1c:	ebfffffe 	bl	0 <__assert_func>
  20:	e59f306c 	ldr	r3, [pc, #108]	; 94 <PixelType::GetMap(char const*)+0x94>
  24:	e3a00000 	mov	r0, #0
  28:	e243c001 	sub	ip, r3, #1
  2c:	e244e001 	sub	lr, r4, #1
  30:	e2836002 	add	r6, r3, #2
  34:	e5fc2001 	ldrb	r2, [ip, #1]!
  38:	e2421041 	sub	r1, r2, #65	; 0x41
  3c:	e1a05002 	mov	r5, r2
  40:	e3510019 	cmp	r1, #25
  44:	e5fe1001 	ldrb	r1, [lr, #1]!
  48:	92825020 	addls	r5, r2, #32
  4c:	e2417041 	sub	r7, r1, #65	; 0x41
  50:	e3570019 	cmp	r7, #25
  54:	92811020 	addls	r1, r1, #32
  58:	e1510005 	cmp	r1, r5
  5c:	0a000004 	beq	74 <PixelType::GetMap(char const*)+0x74>
  60:	e2800001 	add	r0, r0, #1
  64:	e2833004 	add	r3, r3, #4
  68:	e3500006 	cmp	r0, #6
  6c:	1affffed 	bne	28 <PixelType::GetMap(char const*)+0x28>
  70:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
  74:	e3520000 	cmp	r2, #0
  78:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
  7c:	e156000c 	cmp	r6, ip
  80:	1affffeb 	bne	34 <PixelType::GetMap(char const*)+0x34>
  84:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
	...
  90:	0000001b 	.word	0x0000001b
  94:	00000000 	.word	0x00000000

Disassembly of section .text._ZN9PixelType6GetMapEN5pixel3MapE:

00000000 <PixelType::GetMap(pixel::Map)>:
   0:	e3500005 	cmp	r0, #5
   4:	d59f3008 	ldrle	r3, [pc, #8]	; 14 <PixelType::GetMap(pixel::Map)+0x14>
   8:	d0830100 	addle	r0, r3, r0, lsl #2
   c:	c59f0004 	ldrgt	r0, [pc, #4]	; 18 <PixelType::GetMap(pixel::Map)+0x18>
  10:	e12fff1e 	bx	lr
	...

Disassembly of section .text._ZN9PixelType10ConvertTxHEh:

00000000 <PixelType::ConvertTxH(unsigned char)>:
   0:	e35000f0 	cmp	r0, #240	; 0xf0
   4:	0a000011 	beq	50 <PixelType::ConvertTxH(unsigned char)+0x50>
   8:	8a000007 	bhi	2c <PixelType::ConvertTxH(unsigned char)+0x2c>
   c:	e35000c0 	cmp	r0, #192	; 0xc0
  10:	0a000010 	beq	58 <PixelType::ConvertTxH(unsigned char)+0x58>
  14:	e35000e0 	cmp	r0, #224	; 0xe0
  18:	0a000010 	beq	60 <PixelType::ConvertTxH(unsigned char)+0x60>
  1c:	ed9f0a15 	vldr	s0, [pc, #84]	; 78 <PixelType::ConvertTxH(unsigned char)+0x78>
  20:	e3500080 	cmp	r0, #128	; 0x80
  24:	eef47a04 	vmov.f32	s15, #68	; 0x3e200000  0.1562500
  28:	ea000006 	b	48 <PixelType::ConvertTxH(unsigned char)+0x48>
  2c:	e35000fc 	cmp	r0, #252	; 0xfc
  30:	0a00000c 	beq	68 <PixelType::ConvertTxH(unsigned char)+0x68>
  34:	e35000fe 	cmp	r0, #254	; 0xfe
  38:	0a00000c 	beq	70 <PixelType::ConvertTxH(unsigned char)+0x70>
  3c:	ed9f0a0d 	vldr	s0, [pc, #52]	; 78 <PixelType::ConvertTxH(unsigned char)+0x78>
  40:	e35000f8 	cmp	r0, #248	; 0xf8
  44:	eef67a09 	vmov.f32	s15, #105	; 0x3f480000  0.7812500
  48:	0eb00a67 	vmoveq.f32	s0, s15
  4c:	e12fff1e 	bx	lr
  50:	eeb60a04 	vmov.f32	s0, #100	; 0x3f200000  0.625
  54:	e12fff1e 	bx	lr
  58:	eeb50a04 	vmov.f32	s0, #84	; 0x3ea00000  0.3125000
  5c:	e12fff1e 	bx	lr
  60:	eeb50a0e 	vmov.f32	s0, #94	; 0x3ef00000  0.4687500
  64:	e12fff1e 	bx	lr
  68:	eeb60a0e 	vmov.f32	s0, #110	; 0x3f700000  0.9375000
  6c:	e12fff1e 	bx	lr
  70:	ed9f0a01 	vldr	s0, [pc, #4]	; 7c <PixelType::ConvertTxH(unsigned char)+0x7c>
  74:	e12fff1e 	bx	lr
  78:	00000000 	.word	0x00000000
  7c:	3f8c0000 	.word	0x3f8c0000

Disassembly of section .text._ZN9PixelType10ConvertTxHEf:

00000000 <PixelType::ConvertTxH(float)>:
   0:	eddf7a2e 	vldr	s15, [pc, #184]	; c0 <PixelType::ConvertTxH(float)+0xc0>
   4:	eeb40ae7 	vcmpe.f32	s0, s15
   8:	eef1fa10 	vmrs	APSR_nzcv, fpscr
   c:	4a00001d 	bmi	88 <PixelType::ConvertTxH(float)+0x88>
  10:	eef47a0e 	vmov.f32	s15, #78	; 0x3e700000  0.2343750
  14:	eeb40ae7 	vcmpe.f32	s0, s15
  18:	eef1fa10 	vmrs	APSR_nzcv, fpscr
  1c:	4a00001b 	bmi	90 <PixelType::ConvertTxH(float)+0x90>
  20:	eef57a09 	vmov.f32	s15, #89	; 0x3ec80000  0.3906250
  24:	eeb40ae7 	vcmpe.f32	s0, s15
  28:	eef1fa10 	vmrs	APSR_nzcv, fpscr
  2c:	4a000019 	bmi	98 <PixelType::ConvertTxH(float)+0x98>
  30:	eddf7a23 	vldr	s15, [pc, #140]	; c4 <PixelType::ConvertTxH(float)+0xc4>
  34:	eeb40ae7 	vcmpe.f32	s0, s15
  38:	eef1fa10 	vmrs	APSR_nzcv, fpscr
  3c:	4a000017 	bmi	a0 <PixelType::ConvertTxH(float)+0xa0>
  40:	eddf7a20 	vldr	s15, [pc, #128]	; c8 <PixelType::ConvertTxH(float)+0xc8>
  44:	eeb40ae7 	vcmpe.f32	s0, s15
  48:	eef1fa10 	vmrs	APSR_nzcv, fpscr
  4c:	4a000015 	bmi	a8 <PixelType::ConvertTxH(float)+0xa8>
  50:	eddf7a1d 	vldr	s15, [pc, #116]	; cc <PixelType::ConvertTxH(float)+0xcc>
  54:	eeb40ae7 	vcmpe.f32	s0, s15
  58:	eef1fa10 	vmrs	APSR_nzcv, fpscr
  5c:	4a000013 	bmi	b0 <PixelType::ConvertTxH(float)+0xb0>
  60:	eddf7a1a 	vldr	s15, [pc, #104]	; d0 <PixelType::ConvertTxH(float)+0xd0>
  64:	eeb40ae7 	vcmpe.f32	s0, s15
  68:	eef1fa10 	vmrs	APSR_nzcv, fpscr
  6c:	4a000011 	bmi	b8 <PixelType::ConvertTxH(float)+0xb8>
  70:	eddf7a17 	vldr	s15, [pc, #92]	; d4 <PixelType::ConvertTxH(float)+0xd4>
  74:	eeb40ae7 	vcmpe.f32	s0, s15
  78:	eef1fa10 	vmrs	APSR_nzcv, fpscr
  7c:	43a000fe 	movmi	r0, #254	; 0xfe
  80:	53a00000 	movpl	r0, #0
  84:	e12fff1e 	bx	lr
  88:	e3a00000 	mov	r0, #0
  8c:	e12fff1e 	bx	lr
  90:	e3a00080 	mov	r0, #128	; 0x80
  94:	e12fff1e 	bx	lr
  98:	e3a000c0 	mov	r0, #192	; 0xc0
  9c:	e12fff1e 	bx	lr
  a0:	e3a000e0 	mov	r0, #224	; 0xe0
  a4:	e12fff1e 	bx	lr
  a8:	e3a000f0 	mov	r0, #240	; 0xf0
  ac:	e12fff1e 	bx	lr
  b0:	e3a000f8 	mov	r0, #248	; 0xf8
  b4:	e12fff1e 	bx	lr
  b8:	e3a000fc 	mov	r0, #252	; 0xfc
  bc:	e12fff1e 	bx	lr
  c0:	3da00000 	.word	0x3da00000
  c4:	3f0c0000 	.word	0x3f0c0000
  c8:	3f340000 	.word	0x3f340000
  cc:	3f5c0000 	.word	0x3f5c0000
  d0:	3f820000 	.word	0x3f820000
  d4:	3f960000 	.word	0x3f960000

ws28xx.o:     file format elf32-littlearm


Disassembly of section .text._ZN6WS28xx5PrintEv:

00000000 <WS28xx::Print()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	e3000000 	movw	r0, #0
   c:	e24dd008 	sub	sp, sp, #8
  10:	e3400000 	movt	r0, #0
  14:	ebfffffe 	bl	0 <printf>
  18:	e5940000 	ldr	r0, [r4]
  1c:	ebfffffe 	bl	0 <PixelType::GetType(pixel::Type)>
  20:	e5942000 	ldr	r2, [r4]
  24:	e1a01000 	mov	r1, r0
  28:	e3000000 	movw	r0, #0
  2c:	e3400000 	movt	r0, #0
  30:	ebfffffe 	bl	0 <printf>
  34:	e5941004 	ldr	r1, [r4, #4]
  38:	e3000000 	movw	r0, #0
  3c:	e3400000 	movt	r0, #0
  40:	ebfffffe 	bl	0 <printf>
  44:	e5d43012 	ldrb	r3, [r4, #18]
  48:	e3530000 	cmp	r3, #0
  4c:	1a00000e 	bne	8c <WS28xx::Print()+0x8c>
  50:	e594c01c 	ldr	ip, [r4, #28]
  54:	e3001000 	movw	r1, #0
  58:	e3401000 	movt	r1, #0
  5c:	e3002000 	movw	r2, #0
  60:	e15c0001 	cmp	ip, r1
  64:	e3003000 	movw	r3, #0
  68:	e3402000 	movt	r2, #0
  6c:	e3000000 	movw	r0, #0
  70:	e3403000 	movt	r3, #0
  74:	01a01002 	moveq	r1, r2
  78:	e3400000 	movt	r0, #0
  7c:	11a01003 	movne	r1, r3
  80:	e28dd008 	add	sp, sp, #8
  84:	e8bd4010 	pop	{r4, lr}
  88:	eafffffe 	b	0 <printf>
  8c:	e5940008 	ldr	r0, [r4, #8]
  90:	ebfffffe 	bl	0 <PixelType::GetMap(pixel::Map)>
  94:	e5942008 	ldr	r2, [r4, #8]
  98:	e1a01000 	mov	r1, r0
  9c:	e3000000 	movw	r0, #0
  a0:	e3400000 	movt	r0, #0
  a4:	ebfffffe 	bl	0 <printf>
  a8:	e5d40010 	ldrb	r0, [r4, #16]
  ac:	ebfffffe 	bl	0 <PixelType::ConvertTxH(unsigned char)>
  b0:	eef70ac0 	vcvt.f64.f32	d16, s0
  b4:	e3000000 	movw	r0, #0
  b8:	e5d41010 	ldrb	r1, [r4, #16]
  bc:	e3400000 	movt	r0, #0
  c0:	e58d1000 	str	r1, [sp]
  c4:	ec532b30 	vmov	r2, r3, d16
  c8:	ebfffffe 	bl	0 <printf>
  cc:	e5d40011 	ldrb	r0, [r4, #17]
  d0:	ebfffffe 	bl	0 <PixelType::ConvertTxH(unsigned char)>
  d4:	eef70ac0 	vcvt.f64.f32	d16, s0
  d8:	e3000000 	movw	r0, #0
  dc:	e5d41011 	ldrb	r1, [r4, #17]
  e0:	e3400000 	movt	r0, #0
  e4:	e58d1000 	str	r1, [sp]
  e8:	ec532b30 	vmov	r2, r3, d16
  ec:	ebfffffe 	bl	0 <printf>
  f0:	eaffffd6 	b	50 <WS28xx::Print()+0x50>

Disassembly of section .text._ZN6WS28xx14SetColorWS28xxEjh:

00000000 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)>:
   0:	e5903014 	ldr	r3, [r0, #20]
   4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   8:	e3530000 	cmp	r3, #0
   c:	e1a04000 	mov	r4, r0
  10:	e1a05001 	mov	r5, r1
  14:	e1a06002 	mov	r6, r2
  18:	0a000036 	beq	f8 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)+0xf8>
  1c:	e5943000 	ldr	r3, [r4]
  20:	e3530000 	cmp	r3, #0
  24:	0a00003e 	beq	124 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)+0x124>
  28:	e594300c 	ldr	r3, [r4, #12]
  2c:	e2857007 	add	r7, r5, #7
  30:	e1570003 	cmp	r7, r3
  34:	2a000046 	bcs	154 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)+0x154>
  38:	e5942014 	ldr	r2, [r4, #20]
  3c:	e3160080 	tst	r6, #128	; 0x80
  40:	e2853001 	add	r3, r5, #1
  44:	05d41010 	ldrbeq	r1, [r4, #16]
  48:	15d41011 	ldrbne	r1, [r4, #17]
  4c:	e3160040 	tst	r6, #64	; 0x40
  50:	e7c21003 	strb	r1, [r2, r3]
  54:	e2853002 	add	r3, r5, #2
  58:	05d41010 	ldrbeq	r1, [r4, #16]
  5c:	15d41011 	ldrbne	r1, [r4, #17]
  60:	e3160020 	tst	r6, #32
  64:	e5942014 	ldr	r2, [r4, #20]
  68:	e7c21003 	strb	r1, [r2, r3]
  6c:	e2853003 	add	r3, r5, #3
  70:	05d41010 	ldrbeq	r1, [r4, #16]
  74:	15d41011 	ldrbne	r1, [r4, #17]
  78:	e3160010 	tst	r6, #16
  7c:	e5942014 	ldr	r2, [r4, #20]
  80:	e7c21003 	strb	r1, [r2, r3]
  84:	e2853004 	add	r3, r5, #4
  88:	05d41010 	ldrbeq	r1, [r4, #16]
  8c:	15d41011 	ldrbne	r1, [r4, #17]
  90:	e3160008 	tst	r6, #8
  94:	e5942014 	ldr	r2, [r4, #20]
  98:	e7c21003 	strb	r1, [r2, r3]
  9c:	e2853005 	add	r3, r5, #5
  a0:	05d41010 	ldrbeq	r1, [r4, #16]
  a4:	15d41011 	ldrbne	r1, [r4, #17]
  a8:	e3160004 	tst	r6, #4
  ac:	e5942014 	ldr	r2, [r4, #20]
  b0:	e7c21003 	strb	r1, [r2, r3]
  b4:	e2853006 	add	r3, r5, #6
  b8:	e5942014 	ldr	r2, [r4, #20]
  bc:	e2855008 	add	r5, r5, #8
  c0:	05d41010 	ldrbeq	r1, [r4, #16]
  c4:	15d41011 	ldrbne	r1, [r4, #17]
  c8:	e3160002 	tst	r6, #2
  cc:	e7c21003 	strb	r1, [r2, r3]
  d0:	05d42010 	ldrbeq	r2, [r4, #16]
  d4:	15d42011 	ldrbne	r2, [r4, #17]
  d8:	e3160001 	tst	r6, #1
  dc:	e5943014 	ldr	r3, [r4, #20]
  e0:	e7c32007 	strb	r2, [r3, r7]
  e4:	15d42011 	ldrbne	r2, [r4, #17]
  e8:	05d42010 	ldrbeq	r2, [r4, #16]
  ec:	e5943014 	ldr	r3, [r4, #20]
  f0:	e7c32005 	strb	r2, [r3, r5]
  f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
  f8:	e3003000 	movw	r3, #0
  fc:	e3002000 	movw	r2, #0
 100:	e3403000 	movt	r3, #0
 104:	e3000000 	movw	r0, #0
 108:	e3402000 	movt	r2, #0
 10c:	e3a010a7 	mov	r1, #167	; 0xa7
 110:	e3400000 	movt	r0, #0
 114:	ebfffffe 	bl	0 <__assert_func>
 118:	e5943000 	ldr	r3, [r4]
 11c:	e3530000 	cmp	r3, #0
 120:	1affffc0 	bne	28 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)+0x28>
 124:	e3003000 	movw	r3, #0
 128:	e3002000 	movw	r2, #0
 12c:	e3403000 	movt	r3, #0
 130:	e3000000 	movw	r0, #0
 134:	e3402000 	movt	r2, #0
 138:	e3a010a8 	mov	r1, #168	; 0xa8
 13c:	e3400000 	movt	r0, #0
 140:	e2857007 	add	r7, r5, #7
 144:	ebfffffe 	bl	0 <__assert_func>
 148:	e594300c 	ldr	r3, [r4, #12]
 14c:	e1570003 	cmp	r7, r3
 150:	3affffb8 	bcc	38 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)+0x38>
 154:	e3003000 	movw	r3, #0
 158:	e3002000 	movw	r2, #0
 15c:	e3403000 	movt	r3, #0
 160:	e3000000 	movw	r0, #0
 164:	e3402000 	movt	r2, #0
 168:	e3a010a9 	mov	r1, #169	; 0xa9
 16c:	e3400000 	movt	r0, #0
 170:	ebfffffe 	bl	0 <__assert_func>
 174:	eaffffaf 	b	38 <WS28xx::SetColorWS28xx(unsigned int, unsigned char)+0x38>

Disassembly of section .text._ZN6WS28xx8SetPixelEjhhh:

00000000 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>:
   0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	e1a04000 	mov	r4, r0
   8:	e5900014 	ldr	r0, [r0, #20]
   c:	e1a05001 	mov	r5, r1
  10:	e5dd8020 	ldrb	r8, [sp, #32]
  14:	e1a06002 	mov	r6, r2
  18:	e3500000 	cmp	r0, #0
  1c:	e1a07003 	mov	r7, r3
  20:	0a000063 	beq	1b4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x1b4>
  24:	e5943004 	ldr	r3, [r4, #4]
  28:	e1530005 	cmp	r3, r5
  2c:	9a00006b 	bls	1e0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x1e0>
  30:	e5d43012 	ldrb	r3, [r4, #18]
  34:	e3530000 	cmp	r3, #0
  38:	1a000021 	bne	c4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0xc4>
  3c:	e5943000 	ldr	r3, [r4]
  40:	e243200b 	sub	r2, r3, #11
  44:	e3520001 	cmp	r2, #1
  48:	9a00002d 	bls	104 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x104>
  4c:	e3530000 	cmp	r3, #0
  50:	0a000043 	beq	164 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x164>
  54:	e353000d 	cmp	r3, #13
  58:	1a0000b7 	bne	33c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x33c>
  5c:	e594300c 	ldr	r3, [r4, #12]
  60:	e2855001 	add	r5, r5, #1
  64:	e1a09105 	lsl	r9, r5, #2
  68:	e289a003 	add	sl, r9, #3
  6c:	e15a0003 	cmp	sl, r3
  70:	2a000096 	bcs	2d0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x2d0>
  74:	e5941014 	ldr	r1, [r4, #20]
  78:	e22620c0 	eor	r2, r6, #192	; 0xc0
  7c:	e1e03128 	mvn	r3, r8, lsr #2
  80:	e2033030 	and	r3, r3, #48	; 0x30
  84:	e1833322 	orr	r3, r3, r2, lsr #6
  88:	e1e02227 	mvn	r2, r7, lsr #4
  8c:	e202200c 	and	r2, r2, #12
  90:	e1833002 	orr	r3, r3, r2
  94:	e1e03d03 	mvn	r3, r3, lsl #26
  98:	e1e03d23 	mvn	r3, r3, lsr #26
  9c:	e7c13105 	strb	r3, [r1, r5, lsl #2]
  a0:	e5943014 	ldr	r3, [r4, #20]
  a4:	e0833009 	add	r3, r3, r9
  a8:	e5c38001 	strb	r8, [r3, #1]
  ac:	e5943014 	ldr	r3, [r4, #20]
  b0:	e0833009 	add	r3, r3, r9
  b4:	e5c37002 	strb	r7, [r3, #2]
  b8:	e5943014 	ldr	r3, [r4, #20]
  bc:	e7c3600a 	strb	r6, [r3, sl]
  c0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
  c4:	e5942008 	ldr	r2, [r4, #8]
  c8:	e594301c 	ldr	r3, [r4, #28]
  cc:	e2422001 	sub	r2, r2, #1
  d0:	e7d36006 	ldrb	r6, [r3, r6]
  d4:	e7d37007 	ldrb	r7, [r3, r7]
  d8:	e7d38008 	ldrb	r8, [r3, r8]
  dc:	e3a03018 	mov	r3, #24
  e0:	e0050593 	mul	r5, r3, r5
  e4:	e3520004 	cmp	r2, #4
  e8:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
  ec:	ea00009a 	b	35c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x35c>
  f0:	00000238 	.word	0x00000238
  f4:	0000026c 	.word	0x0000026c
  f8:	000002a0 	.word	0x000002a0
  fc:	000002b8 	.word	0x000002b8
 100:	00000204 	.word	0x00000204
 104:	e594300c 	ldr	r3, [r4, #12]
 108:	e2855001 	add	r5, r5, #1
 10c:	e1a09105 	lsl	r9, r5, #2
 110:	e289a003 	add	sl, r9, #3
 114:	e15a0003 	cmp	sl, r3
 118:	2a000075 	bcs	2f4 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x2f4>
 11c:	e5d42013 	ldrb	r2, [r4, #19]
 120:	e5943014 	ldr	r3, [r4, #20]
 124:	e7c32105 	strb	r2, [r3, r5, lsl #2]
 128:	e5943020 	ldr	r3, [r4, #32]
 12c:	e7d32006 	ldrb	r2, [r3, r6]
 130:	e5943014 	ldr	r3, [r4, #20]
 134:	e0833009 	add	r3, r3, r9
 138:	e5c32001 	strb	r2, [r3, #1]
 13c:	e5943020 	ldr	r3, [r4, #32]
 140:	e7d32007 	ldrb	r2, [r3, r7]
 144:	e5943014 	ldr	r3, [r4, #20]
 148:	e0833009 	add	r3, r3, r9
 14c:	e5c32002 	strb	r2, [r3, #2]
 150:	e5942020 	ldr	r2, [r4, #32]
 154:	e5943014 	ldr	r3, [r4, #20]
 158:	e7d22008 	ldrb	r2, [r2, r8]
 15c:	e7c3200a 	strb	r2, [r3, sl]
 160:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 164:	e594300c 	ldr	r3, [r4, #12]
 168:	e3a02003 	mov	r2, #3
 16c:	e0050592 	mul	r5, r2, r5
 170:	e2859002 	add	r9, r5, #2
 174:	e1590003 	cmp	r9, r3
 178:	2a000066 	bcs	318 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x318>
 17c:	e5943024 	ldr	r3, [r4, #36]	; 0x24
 180:	e7d32006 	ldrb	r2, [r3, r6]
 184:	e5943014 	ldr	r3, [r4, #20]
 188:	e7c32005 	strb	r2, [r3, r5]
 18c:	e5943024 	ldr	r3, [r4, #36]	; 0x24
 190:	e7d32007 	ldrb	r2, [r3, r7]
 194:	e5943014 	ldr	r3, [r4, #20]
 198:	e0833005 	add	r3, r3, r5
 19c:	e5c32001 	strb	r2, [r3, #1]
 1a0:	e5942024 	ldr	r2, [r4, #36]	; 0x24
 1a4:	e5943014 	ldr	r3, [r4, #20]
 1a8:	e7d22008 	ldrb	r2, [r2, r8]
 1ac:	e7c32009 	strb	r2, [r3, r9]
 1b0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 1b4:	e3003000 	movw	r3, #0
 1b8:	e3002000 	movw	r2, #0
 1bc:	e3403000 	movt	r3, #0
 1c0:	e3000000 	movw	r0, #0
 1c4:	e3402000 	movt	r2, #0
 1c8:	e3a01039 	mov	r1, #57	; 0x39
 1cc:	e3400000 	movt	r0, #0
 1d0:	ebfffffe 	bl	0 <__assert_func>
 1d4:	e5943004 	ldr	r3, [r4, #4]
 1d8:	e1530005 	cmp	r3, r5
 1dc:	8affff93 	bhi	30 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x30>
 1e0:	e3003000 	movw	r3, #0
 1e4:	e3002000 	movw	r2, #0
 1e8:	e3403000 	movt	r3, #0
 1ec:	e3000000 	movw	r0, #0
 1f0:	e3402000 	movt	r2, #0
 1f4:	e3a0103a 	mov	r1, #58	; 0x3a
 1f8:	e3400000 	movt	r0, #0
 1fc:	ebfffffe 	bl	0 <__assert_func>
 200:	eaffff8a 	b	30 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x30>
 204:	e1a02008 	mov	r2, r8
 208:	e1a01005 	mov	r1, r5
 20c:	e1a00004 	mov	r0, r4
 210:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 214:	e1a02007 	mov	r2, r7
 218:	e2851008 	add	r1, r5, #8
 21c:	e1a00004 	mov	r0, r4
 220:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 224:	e1a02006 	mov	r2, r6
 228:	e2851010 	add	r1, r5, #16
 22c:	e1a00004 	mov	r0, r4
 230:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 234:	eafffffe 	b	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 238:	e1a02006 	mov	r2, r6
 23c:	e1a01005 	mov	r1, r5
 240:	e1a00004 	mov	r0, r4
 244:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 248:	e1a02008 	mov	r2, r8
 24c:	e2851008 	add	r1, r5, #8
 250:	e1a00004 	mov	r0, r4
 254:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 258:	e1a02007 	mov	r2, r7
 25c:	e2851010 	add	r1, r5, #16
 260:	e1a00004 	mov	r0, r4
 264:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 268:	eafffffe 	b	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 26c:	e1a02007 	mov	r2, r7
 270:	e1a01005 	mov	r1, r5
 274:	e1a00004 	mov	r0, r4
 278:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 27c:	e1a02006 	mov	r2, r6
 280:	e2851008 	add	r1, r5, #8
 284:	e1a00004 	mov	r0, r4
 288:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 28c:	e1a02008 	mov	r2, r8
 290:	e2851010 	add	r1, r5, #16
 294:	e1a00004 	mov	r0, r4
 298:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 29c:	eafffffe 	b	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 2a0:	e1a02007 	mov	r2, r7
 2a4:	e1a01005 	mov	r1, r5
 2a8:	e1a00004 	mov	r0, r4
 2ac:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 2b0:	e1a02008 	mov	r2, r8
 2b4:	eaffffd7 	b	218 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x218>
 2b8:	e1a02008 	mov	r2, r8
 2bc:	e1a01005 	mov	r1, r5
 2c0:	e1a00004 	mov	r0, r4
 2c4:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 2c8:	e1a02006 	mov	r2, r6
 2cc:	eaffffde 	b	24c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x24c>
 2d0:	e3003000 	movw	r3, #0
 2d4:	e3002000 	movw	r2, #0
 2d8:	e3403000 	movt	r3, #0
 2dc:	e3000000 	movw	r0, #0
 2e0:	e3402000 	movt	r2, #0
 2e4:	e3a01086 	mov	r1, #134	; 0x86
 2e8:	e3400000 	movt	r0, #0
 2ec:	ebfffffe 	bl	0 <__assert_func>
 2f0:	eaffff5f 	b	74 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x74>
 2f4:	e3003000 	movw	r3, #0
 2f8:	e3002000 	movw	r2, #0
 2fc:	e3403000 	movt	r3, #0
 300:	e3000000 	movw	r0, #0
 304:	e3402000 	movt	r2, #0
 308:	e3a0106f 	mov	r1, #111	; 0x6f
 30c:	e3400000 	movt	r0, #0
 310:	ebfffffe 	bl	0 <__assert_func>
 314:	eaffff80 	b	11c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x11c>
 318:	e3003000 	movw	r3, #0
 31c:	e3002000 	movw	r2, #0
 320:	e3403000 	movt	r3, #0
 324:	e3000000 	movw	r0, #0
 328:	e3402000 	movt	r2, #0
 32c:	e3a0107b 	mov	r1, #123	; 0x7b
 330:	e3400000 	movt	r0, #0
 334:	ebfffffe 	bl	0 <__assert_func>
 338:	eaffff8f 	b	17c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x17c>
 33c:	e3003000 	movw	r3, #0
 340:	e3002000 	movw	r2, #0
 344:	e3403000 	movt	r3, #0
 348:	e3000000 	movw	r0, #0
 34c:	e3402000 	movt	r2, #0
 350:	e3a01092 	mov	r1, #146	; 0x92
 354:	e3400000 	movt	r0, #0
 358:	ebfffffe 	bl	0 <__assert_func>
 35c:	e1a02006 	mov	r2, r6
 360:	e1a01005 	mov	r1, r5
 364:	e1a00004 	mov	r0, r4
 368:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
 36c:	e1a02007 	mov	r2, r7
 370:	eaffffc2 	b	280 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)+0x280>

Disassembly of section .text._ZN6WS28xx8SetPixelEjhhhh:

00000000 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
   0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	e1a05000 	mov	r5, r0
   8:	e5900004 	ldr	r0, [r0, #4]
   c:	e1a04001 	mov	r4, r1
  10:	e5dd7020 	ldrb	r7, [sp, #32]
  14:	e1a06002 	mov	r6, r2
  18:	e1500001 	cmp	r0, r1
  1c:	e1a09003 	mov	r9, r3
  20:	e5dd8024 	ldrb	r8, [sp, #36]	; 0x24
  24:	9a000020 	bls	ac <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xac>
  28:	e5951000 	ldr	r1, [r5]
  2c:	e3510007 	cmp	r1, #7
  30:	1a000011 	bne	7c <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x7c>
  34:	e1a04284 	lsl	r4, r4, #5
  38:	e1a02009 	mov	r2, r9
  3c:	e1a01004 	mov	r1, r4
  40:	e1a00005 	mov	r0, r5
  44:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  48:	e1a02006 	mov	r2, r6
  4c:	e2841008 	add	r1, r4, #8
  50:	e1a00005 	mov	r0, r5
  54:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  58:	e1a02007 	mov	r2, r7
  5c:	e2841010 	add	r1, r4, #16
  60:	e1a00005 	mov	r0, r5
  64:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  68:	e1a02008 	mov	r2, r8
  6c:	e2841018 	add	r1, r4, #24
  70:	e1a00005 	mov	r0, r5
  74:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
  78:	eafffffe 	b	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
  7c:	e3003000 	movw	r3, #0
  80:	e3002000 	movw	r2, #0
  84:	e3403000 	movt	r3, #0
  88:	e3000000 	movw	r0, #0
  8c:	e3402000 	movt	r2, #0
  90:	e3a01098 	mov	r1, #152	; 0x98
  94:	e3400000 	movt	r0, #0
  98:	ebfffffe 	bl	0 <__assert_func>
  9c:	e5953000 	ldr	r3, [r5]
  a0:	e3530007 	cmp	r3, #7
  a4:	18bd87f0 	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
  a8:	eaffffe1 	b	34 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x34>
  ac:	e3003000 	movw	r3, #0
  b0:	e3002000 	movw	r2, #0
  b4:	e3403000 	movt	r3, #0
  b8:	e3000000 	movw	r0, #0
  bc:	e3402000 	movt	r2, #0
  c0:	e3a01097 	mov	r1, #151	; 0x97
  c4:	e3400000 	movt	r0, #0
  c8:	ebfffffe 	bl	0 <__assert_func>
  cc:	eaffffd5 	b	28 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x28>

ws28xx.o:     file format elf32-littlearm


Disassembly of section .text._ZN6WS28xxD2Ev:

00000000 <WS28xx::~WS28xx()>:
   0:	e3003000 	movw	r3, #0
   4:	e3a02000 	mov	r2, #0
   8:	e3403000 	movt	r3, #0
   c:	e5832000 	str	r2, [r3]
  10:	e12fff1e 	bx	lr

Disassembly of section .text._ZN6WS28xx12SetupBuffersEv:

00000000 <WS28xx::SetupBuffers()>:
   0:	e92d4070 	push	{r4, r5, r6, lr}
   4:	e3002000 	movw	r2, #0
   8:	e3402000 	movt	r2, #0
   c:	e1a04000 	mov	r4, r0
  10:	e3001000 	movw	r1, #0
  14:	e3000000 	movw	r0, #0
  18:	e3401000 	movt	r1, #0
  1c:	e24dd018 	sub	sp, sp, #24
  20:	e3400000 	movt	r0, #0
  24:	e3a0306a 	mov	r3, #106	; 0x6a
  28:	ebfffffe 	bl	0 <printf>
  2c:	e28d0014 	add	r0, sp, #20
  30:	ebfffffe 	bl	0 <h3_spi_dma_tx_prepare>
  34:	e5840014 	str	r0, [r4, #20]
  38:	e3500000 	cmp	r0, #0
  3c:	0a00008b 	beq	270 <WS28xx::SetupBuffers()+0x270>
  40:	e59d5014 	ldr	r5, [sp, #20]
  44:	e594300c 	ldr	r3, [r4, #12]
  48:	e1a050a5 	lsr	r5, r5, #1
  4c:	e1530005 	cmp	r3, r5
  50:	8a00008f 	bhi	294 <WS28xx::SetupBuffers()+0x294>
  54:	e5940014 	ldr	r0, [r4, #20]
  58:	e3002000 	movw	r2, #0
  5c:	e3c55003 	bic	r5, r5, #3
  60:	e3001000 	movw	r1, #0
  64:	e0805005 	add	r5, r0, r5
  68:	e58d3000 	str	r3, [sp]
  6c:	e3a03080 	mov	r3, #128	; 0x80
  70:	e5845018 	str	r5, [r4, #24]
  74:	e98d0021 	stmib	sp, {r0, r5}
  78:	e3402000 	movt	r2, #0
  7c:	e3000000 	movw	r0, #0
  80:	e3401000 	movt	r1, #0
  84:	e3400000 	movt	r0, #0
  88:	ebfffffe 	bl	0 <printf>
  8c:	e5943000 	ldr	r3, [r4]
  90:	e243300b 	sub	r3, r3, #11
  94:	e3530002 	cmp	r3, #2
  98:	e5943014 	ldr	r3, [r4, #20]
  9c:	8a000034 	bhi	174 <WS28xx::SetupBuffers()+0x174>
  a0:	e3a05000 	mov	r5, #0
  a4:	e5c35000 	strb	r5, [r3]
  a8:	e5c35001 	strb	r5, [r3, #1]
  ac:	e5c35002 	strb	r5, [r3, #2]
  b0:	e5c35003 	strb	r5, [r3, #3]
  b4:	e5943004 	ldr	r3, [r4, #4]
  b8:	e1530005 	cmp	r3, r5
  bc:	11a06005 	movne	r6, r5
  c0:	0a000009 	beq	ec <WS28xx::SetupBuffers()+0xec>
  c4:	e58d6000 	str	r6, [sp]
  c8:	e3a03000 	mov	r3, #0
  cc:	e1a01005 	mov	r1, r5
  d0:	e1a02003 	mov	r2, r3
  d4:	e1a00004 	mov	r0, r4
  d8:	e2855001 	add	r5, r5, #1
  dc:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  e0:	e5943004 	ldr	r3, [r4, #4]
  e4:	e1530005 	cmp	r3, r5
  e8:	8afffff5 	bhi	c4 <WS28xx::SetupBuffers()+0xc4>
  ec:	e5943000 	ldr	r3, [r4]
  f0:	e243300b 	sub	r3, r3, #11
  f4:	e3530001 	cmp	r3, #1
  f8:	9a000058 	bls	260 <WS28xx::SetupBuffers()+0x260>
  fc:	e594200c 	ldr	r2, [r4, #12]
 100:	e3a03000 	mov	r3, #0
 104:	e5940014 	ldr	r0, [r4, #20]
 108:	e2422004 	sub	r2, r2, #4
 10c:	e0801002 	add	r1, r0, r2
 110:	e7c03002 	strb	r3, [r0, r2]
 114:	e5c13001 	strb	r3, [r1, #1]
 118:	e5c13002 	strb	r3, [r1, #2]
 11c:	e5c13003 	strb	r3, [r1, #3]
 120:	e594000c 	ldr	r0, [r4, #12]
 124:	e5942018 	ldr	r2, [r4, #24]
 128:	e5943014 	ldr	r3, [r4, #20]
 12c:	e3500000 	cmp	r0, #0
 130:	0a000005 	beq	14c <WS28xx::SetupBuffers()+0x14c>
 134:	e0830000 	add	r0, r3, r0
 138:	e2422001 	sub	r2, r2, #1
 13c:	e4d31001 	ldrb	r1, [r3], #1
 140:	e1530000 	cmp	r3, r0
 144:	e5e21001 	strb	r1, [r2, #1]!
 148:	1afffffb 	bne	13c <WS28xx::SetupBuffers()+0x13c>
 14c:	e3002000 	movw	r2, #0
 150:	e3001000 	movw	r1, #0
 154:	e3402000 	movt	r2, #0
 158:	e3000000 	movw	r0, #0
 15c:	e3401000 	movt	r1, #0
 160:	e3a03095 	mov	r3, #149	; 0x95
 164:	e3400000 	movt	r0, #0
 168:	ebfffffe 	bl	0 <printf>
 16c:	e28dd018 	add	sp, sp, #24
 170:	e8bd8070 	pop	{r4, r5, r6, pc}
 174:	e3a02000 	mov	r2, #0
 178:	e5c32000 	strb	r2, [r3]
 17c:	e5942000 	ldr	r2, [r4]
 180:	e594100c 	ldr	r1, [r4, #12]
 184:	e5940014 	ldr	r0, [r4, #20]
 188:	e3520000 	cmp	r2, #0
 18c:	15d42010 	ldrbne	r2, [r4, #16]
 190:	e3510000 	cmp	r1, #0
 194:	e2803001 	add	r3, r0, #1
 198:	e2411001 	sub	r1, r1, #1
 19c:	0affffea 	beq	14c <WS28xx::SetupBuffers()+0x14c>
 1a0:	e351001f 	cmp	r1, #31
 1a4:	e6ef2072 	uxtb	r2, r2
 1a8:	9a000026 	bls	248 <WS28xx::SetupBuffers()+0x248>
 1ac:	e2800021 	add	r0, r0, #33	; 0x21
 1b0:	f5d0f008 	pld	[r0, #8]
 1b4:	e2411020 	sub	r1, r1, #32
 1b8:	e5402020 	strb	r2, [r0, #-32]	; 0xffffffe0
 1bc:	e351001f 	cmp	r1, #31
 1c0:	e540201f 	strb	r2, [r0, #-31]	; 0xffffffe1
 1c4:	e1a03000 	mov	r3, r0
 1c8:	e540201e 	strb	r2, [r0, #-30]	; 0xffffffe2
 1cc:	e2800020 	add	r0, r0, #32
 1d0:	e540203d 	strb	r2, [r0, #-61]	; 0xffffffc3
 1d4:	e540203c 	strb	r2, [r0, #-60]	; 0xffffffc4
 1d8:	e540203b 	strb	r2, [r0, #-59]	; 0xffffffc5
 1dc:	e540203a 	strb	r2, [r0, #-58]	; 0xffffffc6
 1e0:	e5402039 	strb	r2, [r0, #-57]	; 0xffffffc7
 1e4:	e5402038 	strb	r2, [r0, #-56]	; 0xffffffc8
 1e8:	e5402037 	strb	r2, [r0, #-55]	; 0xffffffc9
 1ec:	e5402036 	strb	r2, [r0, #-54]	; 0xffffffca
 1f0:	e5402035 	strb	r2, [r0, #-53]	; 0xffffffcb
 1f4:	e5402034 	strb	r2, [r0, #-52]	; 0xffffffcc
 1f8:	e5402033 	strb	r2, [r0, #-51]	; 0xffffffcd
 1fc:	e5402032 	strb	r2, [r0, #-50]	; 0xffffffce
 200:	e5402031 	strb	r2, [r0, #-49]	; 0xffffffcf
 204:	e5402030 	strb	r2, [r0, #-48]	; 0xffffffd0
 208:	e540202f 	strb	r2, [r0, #-47]	; 0xffffffd1
 20c:	e540202e 	strb	r2, [r0, #-46]	; 0xffffffd2
 210:	e540202d 	strb	r2, [r0, #-45]	; 0xffffffd3
 214:	e540202c 	strb	r2, [r0, #-44]	; 0xffffffd4
 218:	e540202b 	strb	r2, [r0, #-43]	; 0xffffffd5
 21c:	e540202a 	strb	r2, [r0, #-42]	; 0xffffffd6
 220:	e5402029 	strb	r2, [r0, #-41]	; 0xffffffd7
 224:	e5402028 	strb	r2, [r0, #-40]	; 0xffffffd8
 228:	e5402027 	strb	r2, [r0, #-39]	; 0xffffffd9
 22c:	e5402026 	strb	r2, [r0, #-38]	; 0xffffffda
 230:	e5402025 	strb	r2, [r0, #-37]	; 0xffffffdb
 234:	e5402024 	strb	r2, [r0, #-36]	; 0xffffffdc
 238:	e5402023 	strb	r2, [r0, #-35]	; 0xffffffdd
 23c:	e5402022 	strb	r2, [r0, #-34]	; 0xffffffde
 240:	e5402021 	strb	r2, [r0, #-33]	; 0xffffffdf
 244:	8affffd9 	bhi	1b0 <WS28xx::SetupBuffers()+0x1b0>
 248:	e2811001 	add	r1, r1, #1
 24c:	e0831001 	add	r1, r3, r1
 250:	e4c32001 	strb	r2, [r3], #1
 254:	e1530001 	cmp	r3, r1
 258:	1afffffc 	bne	250 <WS28xx::SetupBuffers()+0x250>
 25c:	eaffffaf 	b	120 <WS28xx::SetupBuffers()+0x120>
 260:	e594200c 	ldr	r2, [r4, #12]
 264:	e3e03000 	mvn	r3, #0
 268:	e5940014 	ldr	r0, [r4, #20]
 26c:	eaffffa5 	b	108 <WS28xx::SetupBuffers()+0x108>
 270:	e3003000 	movw	r3, #0
 274:	e3002000 	movw	r2, #0
 278:	e3403000 	movt	r3, #0
 27c:	e3000000 	movw	r0, #0
 280:	e3402000 	movt	r2, #0
 284:	e3a01070 	mov	r1, #112	; 0x70
 288:	e3400000 	movt	r0, #0
 28c:	ebfffffe 	bl	0 <__assert_func>
 290:	eaffff6a 	b	40 <WS28xx::SetupBuffers()+0x40>
 294:	e3003000 	movw	r3, #0
 298:	e3002000 	movw	r2, #0
 29c:	e3403000 	movt	r3, #0
 2a0:	e3000000 	movw	r0, #0
 2a4:	e3402000 	movt	r2, #0
 2a8:	e3a01073 	mov	r1, #115	; 0x73
 2ac:	e3400000 	movt	r0, #0
 2b0:	ebfffffe 	bl	0 <__assert_func>
 2b4:	e594300c 	ldr	r3, [r4, #12]
 2b8:	eaffff65 	b	54 <WS28xx::SetupBuffers()+0x54>

Disassembly of section .text._ZN6WS28xxC2ER18PixelConfiguration:

00000000 <WS28xx::WS28xx(PixelConfiguration&)>:
   0:	e3a02003 	mov	r2, #3
   4:	e3a030aa 	mov	r3, #170	; 0xaa
   8:	e92d4070 	push	{r4, r5, r6, lr}
   c:	e300c000 	movw	ip, #0
  10:	e1c020f0 	strd	r2, [r0]
  14:	e340c000 	movt	ip, #0
  18:	e3a03006 	mov	r3, #6
  1c:	e5803008 	str	r3, [r0, #8]
  20:	e1a05001 	mov	r5, r1
  24:	e580c01c 	str	ip, [r0, #28]
  28:	e3a01000 	mov	r1, #0
  2c:	e5801014 	str	r1, [r0, #20]
  30:	e3a03cff 	mov	r3, #65280	; 0xff00
  34:	e1c031b2 	strh	r3, [r0, #18]
  38:	e3006000 	movw	r6, #0
  3c:	e5801018 	str	r1, [r0, #24]
  40:	e1a04000 	mov	r4, r0
  44:	e580c020 	str	ip, [r0, #32]
  48:	e3002000 	movw	r2, #0
  4c:	e580c024 	str	ip, [r0, #36]	; 0x24
  50:	e3001000 	movw	r1, #0
  54:	e3406000 	movt	r6, #0
  58:	e3000000 	movw	r0, #0
  5c:	e3402000 	movt	r2, #0
  60:	e3a0302b 	mov	r3, #43	; 0x2b
  64:	e3401000 	movt	r1, #0
  68:	e24dd008 	sub	sp, sp, #8
  6c:	e3400000 	movt	r0, #0
  70:	ebfffffe 	bl	0 <printf>
  74:	e5963000 	ldr	r3, [r6]
  78:	e3530000 	cmp	r3, #0
  7c:	1a00003d 	bne	178 <WS28xx::WS28xx(PixelConfiguration&)+0x178>
  80:	e5864000 	str	r4, [r6]
  84:	e28d1004 	add	r1, sp, #4
  88:	e1a00005 	mov	r0, r5
  8c:	ebfffffe 	bl	0 <PixelConfiguration::Validate(unsigned int&)>
  90:	e1a00005 	mov	r0, r5
  94:	ebfffffe 	bl	0 <PixelConfiguration::Dump()>
  98:	e5953008 	ldr	r3, [r5, #8]
  9c:	e5d51013 	ldrb	r1, [r5, #19]
  a0:	e5843008 	str	r3, [r4, #8]
  a4:	e1d531b0 	ldrh	r3, [r5, #16]
  a8:	e3510000 	cmp	r1, #0
  ac:	e5d5c012 	ldrb	ip, [r5, #18]
  b0:	03001000 	movweq	r1, #0
  b4:	e5950004 	ldr	r0, [r5, #4]
  b8:	1300e000 	movwne	lr, #0
  bc:	e1c431b0 	strh	r3, [r4, #16]
  c0:	13001000 	movwne	r1, #0
  c4:	e59d3004 	ldr	r3, [sp, #4]
  c8:	e5d56014 	ldrb	r6, [r5, #20]
  cc:	e0030093 	mul	r3, r3, r0
  d0:	03401000 	movteq	r1, #0
  d4:	e5c4c013 	strb	ip, [r4, #19]
  d8:	1300c000 	movwne	ip, #0
  dc:	1340e000 	movtne	lr, #0
  e0:	01a0e001 	moveq	lr, r1
  e4:	1340c000 	movtne	ip, #0
  e8:	01a0c001 	moveq	ip, r1
  ec:	13401000 	movtne	r1, #0
  f0:	e3560000 	cmp	r6, #0
  f4:	e5952000 	ldr	r2, [r5]
  f8:	e584300c 	str	r3, [r4, #12]
  fc:	11a03183 	lslne	r3, r3, #3
 100:	e5842000 	str	r2, [r4]
 104:	12833001 	addne	r3, r3, #1
 108:	1584300c 	strne	r3, [r4, #12]
 10c:	e242200b 	sub	r2, r2, #11
 110:	e5840004 	str	r0, [r4, #4]
 114:	e3520002 	cmp	r2, #2
 118:	e584101c 	str	r1, [r4, #28]
 11c:	92800008 	addls	r0, r0, #8
 120:	9594300c 	ldrls	r3, [r4, #12]
 124:	e584e020 	str	lr, [r4, #32]
 128:	90833000 	addls	r3, r3, r0
 12c:	e1a00004 	mov	r0, r4
 130:	9584300c 	strls	r3, [r4, #12]
 134:	e584c024 	str	ip, [r4, #36]	; 0x24
 138:	e5c46012 	strb	r6, [r4, #18]
 13c:	ebfffffe 	bl	0 <WS28xx::WS28xx(PixelConfiguration&)>
 140:	ebfffffe 	bl	0 <h3_spi_begin>
 144:	e595000c 	ldr	r0, [r5, #12]
 148:	ebfffffe 	bl	0 <h3_spi_set_speed_hz>
 14c:	e3002000 	movw	r2, #0
 150:	e3001000 	movw	r1, #0
 154:	e3402000 	movt	r2, #0
 158:	e3000000 	movw	r0, #0
 15c:	e3401000 	movt	r1, #0
 160:	e3a03053 	mov	r3, #83	; 0x53
 164:	e3400000 	movt	r0, #0
 168:	ebfffffe 	bl	0 <printf>
 16c:	e1a00004 	mov	r0, r4
 170:	e28dd008 	add	sp, sp, #8
 174:	e8bd8070 	pop	{r4, r5, r6, pc}
 178:	e3003000 	movw	r3, #0
 17c:	e3002000 	movw	r2, #0
 180:	e3403000 	movt	r3, #0
 184:	e3000000 	movw	r0, #0
 188:	e3402000 	movt	r2, #0
 18c:	e3a0102d 	mov	r1, #45	; 0x2d
 190:	e3400000 	movt	r0, #0
 194:	ebfffffe 	bl	0 <__assert_func>
 198:	eaffffb8 	b	80 <WS28xx::WS28xx(PixelConfiguration&)+0x80>

Disassembly of section .text._ZN6WS28xx6UpdateEv:

00000000 <WS28xx::Update()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
   c:	e3500000 	cmp	r0, #0
  10:	1a000003 	bne	24 <WS28xx::Update()+0x24>
  14:	e594100c 	ldr	r1, [r4, #12]
  18:	e5940014 	ldr	r0, [r4, #20]
  1c:	e8bd4010 	pop	{r4, lr}
  20:	eafffffe 	b	0 <h3_spi_dma_tx_start>
  24:	e3003000 	movw	r3, #0
  28:	e3002000 	movw	r2, #0
  2c:	e3403000 	movt	r3, #0
  30:	e3000000 	movw	r0, #0
  34:	e3400000 	movt	r0, #0
  38:	e3a0109a 	mov	r1, #154	; 0x9a
  3c:	e3402000 	movt	r2, #0
  40:	ebfffffe 	bl	0 <__assert_func>
  44:	e594100c 	ldr	r1, [r4, #12]
  48:	e5940014 	ldr	r0, [r4, #20]
  4c:	e8bd4010 	pop	{r4, lr}
  50:	eafffffe 	b	0 <h3_spi_dma_tx_start>

Disassembly of section .text._ZN6WS28xx8BlackoutEv:

00000000 <WS28xx::Blackout()>:
   0:	e3002000 	movw	r2, #0
   4:	e3001000 	movw	r1, #0
   8:	e92d4010 	push	{r4, lr}
   c:	e1a04000 	mov	r4, r0
  10:	e3402000 	movt	r2, #0
  14:	e3000000 	movw	r0, #0
  18:	e3401000 	movt	r1, #0
  1c:	e3a030a2 	mov	r3, #162	; 0xa2
  20:	e3400000 	movt	r0, #0
  24:	ebfffffe 	bl	0 <printf>
  28:	f57ff06f 	isb	sy
  2c:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
  30:	e3500000 	cmp	r0, #0
  34:	1afffffb 	bne	28 <WS28xx::Blackout()+0x28>
  38:	e594100c 	ldr	r1, [r4, #12]
  3c:	e5940018 	ldr	r0, [r4, #24]
  40:	ebfffffe 	bl	0 <h3_spi_dma_tx_start>
  44:	f57ff06f 	isb	sy
  48:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
  4c:	e3500000 	cmp	r0, #0
  50:	1afffffb 	bne	44 <WS28xx::Blackout()+0x44>
  54:	e3002000 	movw	r2, #0
  58:	e3001000 	movw	r1, #0
  5c:	e3402000 	movt	r2, #0
  60:	e3000000 	movw	r0, #0
  64:	e8bd4010 	pop	{r4, lr}
  68:	e3401000 	movt	r1, #0
  6c:	e3a030b4 	mov	r3, #180	; 0xb4
  70:	e3400000 	movt	r0, #0
  74:	eafffffe 	b	0 <printf>

Disassembly of section .text._ZN6WS28xx6FullOnEv:

00000000 <WS28xx::FullOn()>:
   0:	e92d4070 	push	{r4, r5, r6, lr}
   4:	e3002000 	movw	r2, #0
   8:	e3402000 	movt	r2, #0
   c:	e1a04000 	mov	r4, r0
  10:	e3001000 	movw	r1, #0
  14:	e3000000 	movw	r0, #0
  18:	e3401000 	movt	r1, #0
  1c:	e3a030b8 	mov	r3, #184	; 0xb8
  20:	e3400000 	movt	r0, #0
  24:	e24dd008 	sub	sp, sp, #8
  28:	ebfffffe 	bl	0 <printf>
  2c:	e5943000 	ldr	r3, [r4]
  30:	e243300b 	sub	r3, r3, #11
  34:	e3530002 	cmp	r3, #2
  38:	e5943014 	ldr	r3, [r4, #20]
  3c:	8a000034 	bhi	114 <WS28xx::FullOn()+0x114>
  40:	e3e02000 	mvn	r2, #0
  44:	e5c32000 	strb	r2, [r3]
  48:	e5c32001 	strb	r2, [r3, #1]
  4c:	e5c32002 	strb	r2, [r3, #2]
  50:	e5c32003 	strb	r2, [r3, #3]
  54:	e5943004 	ldr	r3, [r4, #4]
  58:	e3530000 	cmp	r3, #0
  5c:	13a05000 	movne	r5, #0
  60:	13a060ff 	movne	r6, #255	; 0xff
  64:	0a000009 	beq	90 <WS28xx::FullOn()+0x90>
  68:	e58d6000 	str	r6, [sp]
  6c:	e3a030ff 	mov	r3, #255	; 0xff
  70:	e1a01005 	mov	r1, r5
  74:	e1a02003 	mov	r2, r3
  78:	e1a00004 	mov	r0, r4
  7c:	e2855001 	add	r5, r5, #1
  80:	ebfffffe 	bl	0 <WS28xx::SetPixel(unsigned int, unsigned char, unsigned char, unsigned char)>
  84:	e5943004 	ldr	r3, [r4, #4]
  88:	e1530005 	cmp	r3, r5
  8c:	8afffff5 	bhi	68 <WS28xx::FullOn()+0x68>
  90:	e5943000 	ldr	r3, [r4]
  94:	e243300b 	sub	r3, r3, #11
  98:	e3530001 	cmp	r3, #1
  9c:	9a000063 	bls	230 <WS28xx::FullOn()+0x230>
  a0:	e594200c 	ldr	r2, [r4, #12]
  a4:	e3a03000 	mov	r3, #0
  a8:	e5940014 	ldr	r0, [r4, #20]
  ac:	e2422004 	sub	r2, r2, #4
  b0:	e0801002 	add	r1, r0, r2
  b4:	e7c03002 	strb	r3, [r0, r2]
  b8:	e5c13001 	strb	r3, [r1, #1]
  bc:	e5c13002 	strb	r3, [r1, #2]
  c0:	e5c13003 	strb	r3, [r1, #3]
  c4:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
  c8:	e3500000 	cmp	r0, #0
  cc:	1a00004e 	bne	20c <WS28xx::FullOn()+0x20c>
  d0:	e594100c 	ldr	r1, [r4, #12]
  d4:	e5940014 	ldr	r0, [r4, #20]
  d8:	ebfffffe 	bl	0 <h3_spi_dma_tx_start>
  dc:	f57ff06f 	isb	sy
  e0:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
  e4:	e3500000 	cmp	r0, #0
  e8:	1afffffb 	bne	dc <WS28xx::FullOn()+0xdc>
  ec:	e3002000 	movw	r2, #0
  f0:	e3001000 	movw	r1, #0
  f4:	e3402000 	movt	r2, #0
  f8:	e3000000 	movw	r0, #0
  fc:	e3401000 	movt	r1, #0
 100:	e3a030d4 	mov	r3, #212	; 0xd4
 104:	e3400000 	movt	r0, #0
 108:	e28dd008 	add	sp, sp, #8
 10c:	e8bd4070 	pop	{r4, r5, r6, lr}
 110:	eafffffe 	b	0 <printf>
 114:	e3a02000 	mov	r2, #0
 118:	e5c32000 	strb	r2, [r3]
 11c:	e5943000 	ldr	r3, [r4]
 120:	e594100c 	ldr	r1, [r4, #12]
 124:	e1530002 	cmp	r3, r2
 128:	e5940014 	ldr	r0, [r4, #20]
 12c:	03a020ff 	moveq	r2, #255	; 0xff
 130:	15d42011 	ldrbne	r2, [r4, #17]
 134:	e3510000 	cmp	r1, #0
 138:	e2803001 	add	r3, r0, #1
 13c:	e2411001 	sub	r1, r1, #1
 140:	0affffdf 	beq	c4 <WS28xx::FullOn()+0xc4>
 144:	e351001f 	cmp	r1, #31
 148:	e6ef2072 	uxtb	r2, r2
 14c:	9a000026 	bls	1ec <WS28xx::FullOn()+0x1ec>
 150:	e2800021 	add	r0, r0, #33	; 0x21
 154:	f5d0f008 	pld	[r0, #8]
 158:	e2411020 	sub	r1, r1, #32
 15c:	e5402020 	strb	r2, [r0, #-32]	; 0xffffffe0
 160:	e351001f 	cmp	r1, #31
 164:	e540201f 	strb	r2, [r0, #-31]	; 0xffffffe1
 168:	e1a03000 	mov	r3, r0
 16c:	e540201e 	strb	r2, [r0, #-30]	; 0xffffffe2
 170:	e2800020 	add	r0, r0, #32
 174:	e540203d 	strb	r2, [r0, #-61]	; 0xffffffc3
 178:	e540203c 	strb	r2, [r0, #-60]	; 0xffffffc4
 17c:	e540203b 	strb	r2, [r0, #-59]	; 0xffffffc5
 180:	e540203a 	strb	r2, [r0, #-58]	; 0xffffffc6
 184:	e5402039 	strb	r2, [r0, #-57]	; 0xffffffc7
 188:	e5402038 	strb	r2, [r0, #-56]	; 0xffffffc8
 18c:	e5402037 	strb	r2, [r0, #-55]	; 0xffffffc9
 190:	e5402036 	strb	r2, [r0, #-54]	; 0xffffffca
 194:	e5402035 	strb	r2, [r0, #-53]	; 0xffffffcb
 198:	e5402034 	strb	r2, [r0, #-52]	; 0xffffffcc
 19c:	e5402033 	strb	r2, [r0, #-51]	; 0xffffffcd
 1a0:	e5402032 	strb	r2, [r0, #-50]	; 0xffffffce
 1a4:	e5402031 	strb	r2, [r0, #-49]	; 0xffffffcf
 1a8:	e5402030 	strb	r2, [r0, #-48]	; 0xffffffd0
 1ac:	e540202f 	strb	r2, [r0, #-47]	; 0xffffffd1
 1b0:	e540202e 	strb	r2, [r0, #-46]	; 0xffffffd2
 1b4:	e540202d 	strb	r2, [r0, #-45]	; 0xffffffd3
 1b8:	e540202c 	strb	r2, [r0, #-44]	; 0xffffffd4
 1bc:	e540202b 	strb	r2, [r0, #-43]	; 0xffffffd5
 1c0:	e540202a 	strb	r2, [r0, #-42]	; 0xffffffd6
 1c4:	e5402029 	strb	r2, [r0, #-41]	; 0xffffffd7
 1c8:	e5402028 	strb	r2, [r0, #-40]	; 0xffffffd8
 1cc:	e5402027 	strb	r2, [r0, #-39]	; 0xffffffd9
 1d0:	e5402026 	strb	r2, [r0, #-38]	; 0xffffffda
 1d4:	e5402025 	strb	r2, [r0, #-37]	; 0xffffffdb
 1d8:	e5402024 	strb	r2, [r0, #-36]	; 0xffffffdc
 1dc:	e5402023 	strb	r2, [r0, #-35]	; 0xffffffdd
 1e0:	e5402022 	strb	r2, [r0, #-34]	; 0xffffffde
 1e4:	e5402021 	strb	r2, [r0, #-33]	; 0xffffffdf
 1e8:	8affffd9 	bhi	154 <WS28xx::FullOn()+0x154>
 1ec:	e2811001 	add	r1, r1, #1
 1f0:	e0831001 	add	r1, r3, r1
 1f4:	e4c32001 	strb	r2, [r3], #1
 1f8:	e1530001 	cmp	r3, r1
 1fc:	1afffffc 	bne	1f4 <WS28xx::FullOn()+0x1f4>
 200:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
 204:	e3500000 	cmp	r0, #0
 208:	0affffb0 	beq	d0 <WS28xx::FullOn()+0xd0>
 20c:	e3003000 	movw	r3, #0
 210:	e3002000 	movw	r2, #0
 214:	e3403000 	movt	r3, #0
 218:	e3000000 	movw	r0, #0
 21c:	e3402000 	movt	r2, #0
 220:	e3a0109a 	mov	r1, #154	; 0x9a
 224:	e3400000 	movt	r0, #0
 228:	ebfffffe 	bl	0 <__assert_func>
 22c:	eaffffa7 	b	d0 <WS28xx::FullOn()+0xd0>
 230:	e594200c 	ldr	r2, [r4, #12]
 234:	e3e03000 	mvn	r3, #0
 238:	e5940014 	ldr	r0, [r4, #20]
 23c:	eaffff9a 	b	ac <WS28xx::FullOn()+0xac>

ws28xxmulti.o:     file format elf32-littlearm


Disassembly of section .text._ZN11WS28xxMultiD2Ev:

00000000 <WS28xxMulti::~WS28xxMulti()>:
   0:	e3003000 	movw	r3, #0
   4:	e3a02000 	mov	r2, #0
   8:	e3403000 	movt	r3, #0
   c:	e5832000 	str	r2, [r3]
  10:	e12fff1e 	bx	lr

Disassembly of section .text._ZN11WS28xxMulti5PrintEv:

00000000 <WS28xxMulti::Print()>:
   0:	e92d4070 	push	{r4, r5, r6, lr}
   4:	e1a04000 	mov	r4, r0
   8:	e3000000 	movw	r0, #0
   c:	e24dd008 	sub	sp, sp, #8
  10:	e3400000 	movt	r0, #0
  14:	ebfffffe 	bl	0 <printf>
  18:	e5940004 	ldr	r0, [r4, #4]
  1c:	ebfffffe 	bl	0 <PixelType::GetType(pixel::Type)>
  20:	e5946004 	ldr	r6, [r4, #4]
  24:	e1a05000 	mov	r5, r0
  28:	e594000c 	ldr	r0, [r4, #12]
  2c:	ebfffffe 	bl	0 <PixelType::GetMap(pixel::Map)>
  30:	e594200c 	ldr	r2, [r4, #12]
  34:	e1a03000 	mov	r3, r0
  38:	e3000000 	movw	r0, #0
  3c:	e1a01005 	mov	r1, r5
  40:	e58d2000 	str	r2, [sp]
  44:	e1a02006 	mov	r2, r6
  48:	e3400000 	movt	r0, #0
  4c:	ebfffffe 	bl	0 <printf>
  50:	e5941008 	ldr	r1, [r4, #8]
  54:	e3000000 	movw	r0, #0
  58:	e3400000 	movt	r0, #0
  5c:	ebfffffe 	bl	0 <printf>
  60:	e5d41000 	ldrb	r1, [r4]
  64:	e3002000 	movw	r2, #0
  68:	e3402000 	movt	r2, #0
  6c:	e3003000 	movw	r3, #0
  70:	e3403000 	movt	r3, #0
  74:	e3510000 	cmp	r1, #0
  78:	e3000000 	movw	r0, #0
  7c:	11a01002 	movne	r1, r2
  80:	e3400000 	movt	r0, #0
  84:	01a01003 	moveq	r1, r3
  88:	e28dd008 	add	sp, sp, #8
  8c:	e8bd4070 	pop	{r4, r5, r6, lr}
  90:	eafffffe 	b	0 <printf>

Disassembly of section .text._ZN11WS28xxMulti10SetupHC595Ehh:

00000000 <WS28xxMulti::SetupHC595(unsigned char, unsigned char)>:
   0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   4:	e1a04001 	mov	r4, r1
   8:	e1a05002 	mov	r5, r2
   c:	e3007000 	movw	r7, #0
  10:	e3407000 	movt	r7, #0
  14:	e3006000 	movw	r6, #0
  18:	e3406000 	movt	r6, #0
  1c:	e3000000 	movw	r0, #0
  20:	e3400000 	movt	r0, #0
  24:	e24dd008 	sub	sp, sp, #8
  28:	e1a02007 	mov	r2, r7
  2c:	e1a01006 	mov	r1, r6
  30:	e3a03096 	mov	r3, #150	; 0x96
  34:	e3a08b02 	mov	r8, #2048	; 0x800
  38:	e1a04084 	lsl	r4, r4, #1
  3c:	ebfffffe 	bl	0 <printf>
  40:	e1a05085 	lsl	r5, r5, #1
  44:	e6ef4074 	uxtb	r4, r4
  48:	e34081c2 	movt	r8, #450	; 0x1c2
  4c:	e6ef5075 	uxtb	r5, r5
  50:	e58d4000 	str	r4, [sp]
  54:	e3000000 	movw	r0, #0
  58:	e58d5004 	str	r5, [sp, #4]
  5c:	e1a02006 	mov	r2, r6
  60:	e3400000 	movt	r0, #0
  64:	e3a0309b 	mov	r3, #155	; 0x9b
  68:	e1a01007 	mov	r1, r7
  6c:	ebfffffe 	bl	0 <printf>
  70:	e3a01001 	mov	r1, #1
  74:	e3a0000a 	mov	r0, #10
  78:	ebfffffe 	bl	0 <h3_gpio_fsel>
  7c:	e5983010 	ldr	r3, [r8, #16]
  80:	e3833b01 	orr	r3, r3, #1024	; 0x400
  84:	e5883010 	str	r3, [r8, #16]
  88:	ebfffffe 	bl	0 <h3_spi_begin>
  8c:	e3a00004 	mov	r0, #4
  90:	ebfffffe 	bl	0 <h3_spi_chipSelect>
  94:	e3040240 	movw	r0, #16960	; 0x4240
  98:	e340000f 	movt	r0, #15
  9c:	ebfffffe 	bl	0 <h3_spi_set_speed_hz>
  a0:	e5983010 	ldr	r3, [r8, #16]
  a4:	e1840405 	orr	r0, r4, r5, lsl #8
  a8:	e3c33b01 	bic	r3, r3, #1024	; 0x400
  ac:	e5883010 	str	r3, [r8, #16]
  b0:	ebfffffe 	bl	0 <h3_spi_write>
  b4:	e5982010 	ldr	r2, [r8, #16]
  b8:	e3000000 	movw	r0, #0
  bc:	e3400000 	movt	r0, #0
  c0:	e3a030a8 	mov	r3, #168	; 0xa8
  c4:	e3822b01 	orr	r2, r2, #1024	; 0x400
  c8:	e1a01006 	mov	r1, r6
  cc:	e5882010 	str	r2, [r8, #16]
  d0:	e1a02007 	mov	r2, r7
  d4:	e28dd008 	add	sp, sp, #8
  d8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
  dc:	eafffffe 	b	0 <printf>

Disassembly of section .text._ZN11WS28xxMulti8SetupSPIEj:

00000000 <WS28xxMulti::SetupSPI(unsigned int)>:
   0:	e92d4070 	push	{r4, r5, r6, lr}
   4:	e3005000 	movw	r5, #0
   8:	e3405000 	movt	r5, #0
   c:	e3004000 	movw	r4, #0
  10:	e3404000 	movt	r4, #0
  14:	e3000000 	movw	r0, #0
  18:	e3400000 	movt	r0, #0
  1c:	e24dd008 	sub	sp, sp, #8
  20:	e1a02005 	mov	r2, r5
  24:	e3a030ac 	mov	r3, #172	; 0xac
  28:	e1a06001 	mov	r6, r1
  2c:	e1a01004 	mov	r1, r4
  30:	ebfffffe 	bl	0 <printf>
  34:	ebfffffe 	bl	0 <h3_spi_begin>
  38:	e3a00000 	mov	r0, #0
  3c:	ebfffffe 	bl	0 <h3_spi_chipSelect>
  40:	e1a00006 	mov	r0, r6
  44:	ebfffffe 	bl	0 <h3_spi_set_speed_hz>
  48:	e58d6000 	str	r6, [sp]
  4c:	e3000000 	movw	r0, #0
  50:	e3400000 	movt	r0, #0
  54:	e1a02004 	mov	r2, r4
  58:	e1a01005 	mov	r1, r5
  5c:	e3a030b2 	mov	r3, #178	; 0xb2
  60:	ebfffffe 	bl	0 <printf>
  64:	e3000000 	movw	r0, #0
  68:	e3a030b3 	mov	r3, #179	; 0xb3
  6c:	e3400000 	movt	r0, #0
  70:	e1a02005 	mov	r2, r5
  74:	e1a01004 	mov	r1, r4
  78:	e28dd008 	add	sp, sp, #8
  7c:	e8bd4070 	pop	{r4, r5, r6, lr}
  80:	eafffffe 	b	0 <printf>

Disassembly of section .text._ZN11WS28xxMulti9SetupCPLDEv:

00000000 <WS28xxMulti::SetupCPLD()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e3002000 	movw	r2, #0
   8:	e3402000 	movt	r2, #0
   c:	e1a04000 	mov	r4, r0
  10:	e3001000 	movw	r1, #0
  14:	e3000000 	movw	r0, #0
  18:	e3401000 	movt	r1, #0
  1c:	e24dd030 	sub	sp, sp, #48	; 0x30
  20:	e3400000 	movt	r0, #0
  24:	e3a030bd 	mov	r3, #189	; 0xbd
  28:	ebfffffe 	bl	0 <printf>
  2c:	ebfffffe 	bl	0 <getPIXEL8X4_SIZE>
  30:	e58d0008 	str	r0, [sp, #8]
  34:	e3003000 	movw	r3, #0
  38:	e3403000 	movt	r3, #0
  3c:	e3a02000 	mov	r2, #0
  40:	e58d3004 	str	r3, [sp, #4]
  44:	e3a03002 	mov	r3, #2
  48:	e1cd20bc 	strh	r2, [sp, #12]
  4c:	e3a01001 	mov	r1, #1
  50:	e58d202c 	str	r2, [sp, #44]	; 0x2c
  54:	e3e02000 	mvn	r2, #0
  58:	e1cd21f8 	strd	r2, [sp, #24]
  5c:	e58d1010 	str	r1, [sp, #16]
  60:	e3a03018 	mov	r3, #24
  64:	e58d3020 	str	r3, [sp, #32]
  68:	e28d0004 	add	r0, sp, #4
  6c:	ebfffffe 	bl	0 <JamSTAPL::PlatformInit(bool)>
  70:	e5943020 	ldr	r3, [r4, #32]
  74:	e28d0004 	add	r0, sp, #4
  78:	e58d302c 	str	r3, [sp, #44]	; 0x2c
  7c:	ebfffffe 	bl	0 <JamSTAPL::PrintInfo()>
  80:	e2501000 	subs	r1, r0, #0
  84:	1a000003 	bne	98 <WS28xxMulti::SetupCPLD()+0x98>
  88:	e28d0004 	add	r0, sp, #4
  8c:	ebfffffe 	bl	0 <JamSTAPL::CheckCRC(bool)>
  90:	e3500000 	cmp	r0, #0
  94:	0a00000a 	beq	c4 <WS28xxMulti::SetupCPLD()+0xc4>
  98:	e3002000 	movw	r2, #0
  9c:	e3001000 	movw	r1, #0
  a0:	e3402000 	movt	r2, #0
  a4:	e3000000 	movw	r0, #0
  a8:	e3401000 	movt	r1, #0
  ac:	e3a030d0 	mov	r3, #208	; 0xd0
  b0:	e3400000 	movt	r0, #0
  b4:	ebfffffe 	bl	0 <printf>
  b8:	e3a00000 	mov	r0, #0
  bc:	e28dd030 	add	sp, sp, #48	; 0x30
  c0:	e8bd8010 	pop	{r4, pc}
  c4:	e1dd20bc 	ldrh	r2, [sp, #12]
  c8:	e3013d3c 	movw	r3, #7484	; 0x1d3c
  cc:	e1520003 	cmp	r2, r3
  d0:	1afffff0 	bne	98 <WS28xxMulti::SetupCPLD()+0x98>
  d4:	e28d0004 	add	r0, sp, #4
  d8:	ebfffffe 	bl	0 <JamSTAPL::CheckIdCode()>
  dc:	e59d3018 	ldr	r3, [sp, #24]
  e0:	e3530000 	cmp	r3, #0
  e4:	1affffeb 	bne	98 <WS28xxMulti::SetupCPLD()+0x98>
  e8:	e28d0004 	add	r0, sp, #4
  ec:	ebfffffe 	bl	0 <JamSTAPL::ReadUsercode()>
  f0:	e59d3018 	ldr	r3, [sp, #24]
  f4:	e3530000 	cmp	r3, #0
  f8:	1a000006 	bne	118 <WS28xxMulti::SetupCPLD()+0x118>
  fc:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
 100:	e30a3d81 	movw	r3, #44417	; 0xad81
 104:	e3403018 	movt	r3, #24
 108:	e1520003 	cmp	r2, r3
 10c:	0a000001 	beq	118 <WS28xxMulti::SetupCPLD()+0x118>
 110:	e28d0004 	add	r0, sp, #4
 114:	ebfffffe 	bl	0 <JamSTAPL::Program()>
 118:	e3002000 	movw	r2, #0
 11c:	e3001000 	movw	r1, #0
 120:	e3402000 	movt	r2, #0
 124:	e3000000 	movw	r0, #0
 128:	e3401000 	movt	r1, #0
 12c:	e3a030ca 	mov	r3, #202	; 0xca
 130:	e3400000 	movt	r0, #0
 134:	ebfffffe 	bl	0 <printf>
 138:	e3a00001 	mov	r0, #1
 13c:	eaffffde 	b	bc <WS28xxMulti::SetupCPLD()+0xbc>

Disassembly of section .text._ZN11WS28xxMulti11ReverseBitsEh:

00000000 <WS28xxMulti::ReverseBits(unsigned char)>:
   0:	e6ff0f31 	rbit	r0, r1
   4:	e1a00c20 	lsr	r0, r0, #24
   8:	e12fff1e 	bx	lr

Disassembly of section .text._ZN11WS28xxMulti9SetColourEjjhhh:

00000000 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
   0:	e3a0c001 	mov	ip, #1
   4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   8:	e3a0e080 	mov	lr, #128	; 0x80
   c:	e1a0111c 	lsl	r1, ip, r1
  10:	e3a0c018 	mov	ip, #24
  14:	e002029c 	mul	r2, ip, r2
  18:	e5dd5020 	ldrb	r5, [sp, #32]
  1c:	e6ef1071 	uxtb	r1, r1
  20:	e1e07001 	mvn	r7, r1
  24:	e282c010 	add	ip, r2, #16
  28:	e5dd6024 	ldrb	r6, [sp, #36]	; 0x24
  2c:	e6ef7077 	uxtb	r7, r7
  30:	e2828018 	add	r8, r2, #24
  34:	e5909018 	ldr	r9, [r0, #24]
  38:	e113000e 	tst	r3, lr
  3c:	e7d94002 	ldrb	r4, [r9, r2]
  40:	11814004 	orrne	r4, r1, r4
  44:	00044007 	andeq	r4, r4, r7
  48:	e7c94002 	strb	r4, [r9, r2]
  4c:	e24c4008 	sub	r4, ip, #8
  50:	e115000e 	tst	r5, lr
  54:	e1a09004 	mov	r9, r4
  58:	e590a018 	ldr	sl, [r0, #24]
  5c:	e2822001 	add	r2, r2, #1
  60:	07da9004 	ldrbeq	r9, [sl, r4]
  64:	17da4004 	ldrbne	r4, [sl, r4]
  68:	00099007 	andeq	r9, r9, r7
  6c:	11814004 	orrne	r4, r1, r4
  70:	17ca4009 	strbne	r4, [sl, r9]
  74:	07ca9004 	strbeq	r9, [sl, r4]
  78:	e5909018 	ldr	r9, [r0, #24]
  7c:	e116000e 	tst	r6, lr
  80:	e7d9400c 	ldrb	r4, [r9, ip]
  84:	e1a0e0ae 	lsr	lr, lr, #1
  88:	11814004 	orrne	r4, r1, r4
  8c:	00044007 	andeq	r4, r4, r7
  90:	e7c9400c 	strb	r4, [r9, ip]
  94:	e28cc001 	add	ip, ip, #1
  98:	e158000c 	cmp	r8, ip
  9c:	1affffe4 	bne	34 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x34>
  a0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

Disassembly of section .text._ZN11WS28xxMulti8SetPixelEjjhhhh:

00000000 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
   0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4:	e1a04000 	mov	r4, r0
   8:	e5900004 	ldr	r0, [r0, #4]
   c:	e1a05003 	mov	r5, r3
  10:	e5dd6020 	ldrb	r6, [sp, #32]
  14:	e1a0a001 	mov	sl, r1
  18:	e5dd7024 	ldrb	r7, [sp, #36]	; 0x24
  1c:	e240300b 	sub	r3, r0, #11
  20:	e5dd8028 	ldrb	r8, [sp, #40]	; 0x28
  24:	e1a09002 	mov	r9, r2
  28:	e3500007 	cmp	r0, #7
  2c:	13530002 	cmpne	r3, #2
  30:	8a000028 	bhi	d8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xd8>
  34:	e3a01001 	mov	r1, #1
  38:	e3a0e080 	mov	lr, #128	; 0x80
  3c:	e1a02289 	lsl	r2, r9, #5
  40:	e1a01a11 	lsl	r1, r1, sl
  44:	e282c018 	add	ip, r2, #24
  48:	e6ef1071 	uxtb	r1, r1
  4c:	e2822020 	add	r2, r2, #32
  50:	e1e03001 	mvn	r3, r1
  54:	e6ef3073 	uxtb	r3, r3
  58:	e594a018 	ldr	sl, [r4, #24]
  5c:	e24c9018 	sub	r9, ip, #24
  60:	e116000e 	tst	r6, lr
  64:	e7da0009 	ldrb	r0, [sl, r9]
  68:	11810000 	orrne	r0, r1, r0
  6c:	00000003 	andeq	r0, r0, r3
  70:	e7ca0009 	strb	r0, [sl, r9]
  74:	e24c9010 	sub	r9, ip, #16
  78:	e594a018 	ldr	sl, [r4, #24]
  7c:	e115000e 	tst	r5, lr
  80:	e7da0009 	ldrb	r0, [sl, r9]
  84:	11810000 	orrne	r0, r1, r0
  88:	00000003 	andeq	r0, r0, r3
  8c:	e7ca0009 	strb	r0, [sl, r9]
  90:	e24c9008 	sub	r9, ip, #8
  94:	e594a018 	ldr	sl, [r4, #24]
  98:	e117000e 	tst	r7, lr
  9c:	e7da0009 	ldrb	r0, [sl, r9]
  a0:	11810000 	orrne	r0, r1, r0
  a4:	00000003 	andeq	r0, r0, r3
  a8:	e7ca0009 	strb	r0, [sl, r9]
  ac:	e5949018 	ldr	r9, [r4, #24]
  b0:	e118000e 	tst	r8, lr
  b4:	e7d9000c 	ldrb	r0, [r9, ip]
  b8:	e1a0e0ae 	lsr	lr, lr, #1
  bc:	11810000 	orrne	r0, r1, r0
  c0:	00000003 	andeq	r0, r0, r3
  c4:	e7c9000c 	strb	r0, [r9, ip]
  c8:	e28cc001 	add	ip, ip, #1
  cc:	e152000c 	cmp	r2, ip
  d0:	1affffe0 	bne	58 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x58>
  d4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
  d8:	e3003000 	movw	r3, #0
  dc:	e3002000 	movw	r2, #0
  e0:	e3403000 	movt	r3, #0
  e4:	e3000000 	movw	r0, #0
  e8:	e3402000 	movt	r2, #0
  ec:	e3a01f49 	mov	r1, #292	; 0x124
  f0:	e3400000 	movt	r0, #0
  f4:	ebfffffe 	bl	0 <__assert_func>
  f8:	eaffffcd 	b	34 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x34>

Disassembly of section .text._ZN11WS28xxMulti12SetupBuffersEv:

00000000 <WS28xxMulti::SetupBuffers()>:
   0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   4:	e3002000 	movw	r2, #0
   8:	e3402000 	movt	r2, #0
   c:	e1a05000 	mov	r5, r0
  10:	e3001000 	movw	r1, #0
  14:	e3000000 	movw	r0, #0
  18:	e3401000 	movt	r1, #0
  1c:	e24dd018 	sub	sp, sp, #24
  20:	e3400000 	movt	r0, #0
  24:	e3a03066 	mov	r3, #102	; 0x66
  28:	ebfffffe 	bl	0 <printf>
  2c:	e28d0014 	add	r0, sp, #20
  30:	ebfffffe 	bl	0 <h3_spi_dma_tx_prepare>
  34:	e5850018 	str	r0, [r5, #24]
  38:	e3500000 	cmp	r0, #0
  3c:	0a0000d6 	beq	39c <WS28xxMulti::SetupBuffers()+0x39c>
  40:	e59d4014 	ldr	r4, [sp, #20]
  44:	e5953014 	ldr	r3, [r5, #20]
  48:	e1a040a4 	lsr	r4, r4, #1
  4c:	e1530004 	cmp	r3, r4
  50:	8a0000da 	bhi	3c0 <WS28xxMulti::SetupBuffers()+0x3c0>
  54:	e5953004 	ldr	r3, [r5, #4]
  58:	e595c018 	ldr	ip, [r5, #24]
  5c:	e3c40003 	bic	r0, r4, #3
  60:	e243300b 	sub	r3, r3, #11
  64:	e08c0000 	add	r0, ip, r0
  68:	e3530002 	cmp	r3, #2
  6c:	e585001c 	str	r0, [r5, #28]
  70:	9a000081 	bls	27c <WS28xxMulti::SetupBuffers()+0x27c>
  74:	e5953014 	ldr	r3, [r5, #20]
  78:	e3530000 	cmp	r3, #0
  7c:	e2433001 	sub	r3, r3, #1
  80:	0a000067 	beq	224 <WS28xxMulti::SetupBuffers()+0x224>
  84:	e353001f 	cmp	r3, #31
  88:	9a000027 	bls	12c <WS28xxMulti::SetupBuffers()+0x12c>
  8c:	e28c2020 	add	r2, ip, #32
  90:	e3a01000 	mov	r1, #0
  94:	f5d2f008 	pld	[r2, #8]
  98:	e2433020 	sub	r3, r3, #32
  9c:	e5421020 	strb	r1, [r2, #-32]	; 0xffffffe0
  a0:	e353001f 	cmp	r3, #31
  a4:	e542101f 	strb	r1, [r2, #-31]	; 0xffffffe1
  a8:	e1a0c002 	mov	ip, r2
  ac:	e542101e 	strb	r1, [r2, #-30]	; 0xffffffe2
  b0:	e2822020 	add	r2, r2, #32
  b4:	e542103d 	strb	r1, [r2, #-61]	; 0xffffffc3
  b8:	e542103c 	strb	r1, [r2, #-60]	; 0xffffffc4
  bc:	e542103b 	strb	r1, [r2, #-59]	; 0xffffffc5
  c0:	e542103a 	strb	r1, [r2, #-58]	; 0xffffffc6
  c4:	e5421039 	strb	r1, [r2, #-57]	; 0xffffffc7
  c8:	e5421038 	strb	r1, [r2, #-56]	; 0xffffffc8
  cc:	e5421037 	strb	r1, [r2, #-55]	; 0xffffffc9
  d0:	e5421036 	strb	r1, [r2, #-54]	; 0xffffffca
  d4:	e5421035 	strb	r1, [r2, #-53]	; 0xffffffcb
  d8:	e5421034 	strb	r1, [r2, #-52]	; 0xffffffcc
  dc:	e5421033 	strb	r1, [r2, #-51]	; 0xffffffcd
  e0:	e5421032 	strb	r1, [r2, #-50]	; 0xffffffce
  e4:	e5421031 	strb	r1, [r2, #-49]	; 0xffffffcf
  e8:	e5421030 	strb	r1, [r2, #-48]	; 0xffffffd0
  ec:	e542102f 	strb	r1, [r2, #-47]	; 0xffffffd1
  f0:	e542102e 	strb	r1, [r2, #-46]	; 0xffffffd2
  f4:	e542102d 	strb	r1, [r2, #-45]	; 0xffffffd3
  f8:	e542102c 	strb	r1, [r2, #-44]	; 0xffffffd4
  fc:	e542102b 	strb	r1, [r2, #-43]	; 0xffffffd5
 100:	e542102a 	strb	r1, [r2, #-42]	; 0xffffffd6
 104:	e5421029 	strb	r1, [r2, #-41]	; 0xffffffd7
 108:	e5421028 	strb	r1, [r2, #-40]	; 0xffffffd8
 10c:	e5421027 	strb	r1, [r2, #-39]	; 0xffffffd9
 110:	e5421026 	strb	r1, [r2, #-38]	; 0xffffffda
 114:	e5421025 	strb	r1, [r2, #-37]	; 0xffffffdb
 118:	e5421024 	strb	r1, [r2, #-36]	; 0xffffffdc
 11c:	e5421023 	strb	r1, [r2, #-35]	; 0xffffffdd
 120:	e5421022 	strb	r1, [r2, #-34]	; 0xffffffde
 124:	e5421021 	strb	r1, [r2, #-33]	; 0xffffffdf
 128:	8affffd9 	bhi	94 <WS28xxMulti::SetupBuffers()+0x94>
 12c:	e2833001 	add	r3, r3, #1
 130:	e3a02000 	mov	r2, #0
 134:	e08c3003 	add	r3, ip, r3
 138:	e4cc2001 	strb	r2, [ip], #1
 13c:	e153000c 	cmp	r3, ip
 140:	1afffffc 	bne	138 <WS28xxMulti::SetupBuffers()+0x138>
 144:	e5953014 	ldr	r3, [r5, #20]
 148:	e595001c 	ldr	r0, [r5, #28]
 14c:	e3530000 	cmp	r3, #0
 150:	e2433001 	sub	r3, r3, #1
 154:	0595c018 	ldreq	ip, [r5, #24]
 158:	0a000031 	beq	224 <WS28xxMulti::SetupBuffers()+0x224>
 15c:	e353001f 	cmp	r3, #31
 160:	9a000027 	bls	204 <WS28xxMulti::SetupBuffers()+0x204>
 164:	e2802020 	add	r2, r0, #32
 168:	e3a01000 	mov	r1, #0
 16c:	f5d2f008 	pld	[r2, #8]
 170:	e2433020 	sub	r3, r3, #32
 174:	e5421020 	strb	r1, [r2, #-32]	; 0xffffffe0
 178:	e353001f 	cmp	r3, #31
 17c:	e542101f 	strb	r1, [r2, #-31]	; 0xffffffe1
 180:	e1a00002 	mov	r0, r2
 184:	e542101e 	strb	r1, [r2, #-30]	; 0xffffffe2
 188:	e2822020 	add	r2, r2, #32
 18c:	e542103d 	strb	r1, [r2, #-61]	; 0xffffffc3
 190:	e542103c 	strb	r1, [r2, #-60]	; 0xffffffc4
 194:	e542103b 	strb	r1, [r2, #-59]	; 0xffffffc5
 198:	e542103a 	strb	r1, [r2, #-58]	; 0xffffffc6
 19c:	e5421039 	strb	r1, [r2, #-57]	; 0xffffffc7
 1a0:	e5421038 	strb	r1, [r2, #-56]	; 0xffffffc8
 1a4:	e5421037 	strb	r1, [r2, #-55]	; 0xffffffc9
 1a8:	e5421036 	strb	r1, [r2, #-54]	; 0xffffffca
 1ac:	e5421035 	strb	r1, [r2, #-53]	; 0xffffffcb
 1b0:	e5421034 	strb	r1, [r2, #-52]	; 0xffffffcc
 1b4:	e5421033 	strb	r1, [r2, #-51]	; 0xffffffcd
 1b8:	e5421032 	strb	r1, [r2, #-50]	; 0xffffffce
 1bc:	e5421031 	strb	r1, [r2, #-49]	; 0xffffffcf
 1c0:	e5421030 	strb	r1, [r2, #-48]	; 0xffffffd0
 1c4:	e542102f 	strb	r1, [r2, #-47]	; 0xffffffd1
 1c8:	e542102e 	strb	r1, [r2, #-46]	; 0xffffffd2
 1cc:	e542102d 	strb	r1, [r2, #-45]	; 0xffffffd3
 1d0:	e542102c 	strb	r1, [r2, #-44]	; 0xffffffd4
 1d4:	e542102b 	strb	r1, [r2, #-43]	; 0xffffffd5
 1d8:	e542102a 	strb	r1, [r2, #-42]	; 0xffffffd6
 1dc:	e5421029 	strb	r1, [r2, #-41]	; 0xffffffd7
 1e0:	e5421028 	strb	r1, [r2, #-40]	; 0xffffffd8
 1e4:	e5421027 	strb	r1, [r2, #-39]	; 0xffffffd9
 1e8:	e5421026 	strb	r1, [r2, #-38]	; 0xffffffda
 1ec:	e5421025 	strb	r1, [r2, #-37]	; 0xffffffdb
 1f0:	e5421024 	strb	r1, [r2, #-36]	; 0xffffffdc
 1f4:	e5421023 	strb	r1, [r2, #-35]	; 0xffffffdd
 1f8:	e5421022 	strb	r1, [r2, #-34]	; 0xffffffde
 1fc:	e5421021 	strb	r1, [r2, #-33]	; 0xffffffdf
 200:	8affffd9 	bhi	16c <WS28xxMulti::SetupBuffers()+0x16c>
 204:	e2833001 	add	r3, r3, #1
 208:	e3a02000 	mov	r2, #0
 20c:	e0803003 	add	r3, r0, r3
 210:	e4c02001 	strb	r2, [r0], #1
 214:	e1500003 	cmp	r0, r3
 218:	1afffffc 	bne	210 <WS28xxMulti::SetupBuffers()+0x210>
 21c:	e595c018 	ldr	ip, [r5, #24]
 220:	e595001c 	ldr	r0, [r5, #28]
 224:	e59de014 	ldr	lr, [sp, #20]
 228:	e3002000 	movw	r2, #0
 22c:	e58d0008 	str	r0, [sp, #8]
 230:	e3001000 	movw	r1, #0
 234:	e58dc004 	str	ip, [sp, #4]
 238:	e3000000 	movw	r0, #0
 23c:	e58de000 	str	lr, [sp]
 240:	e3a03088 	mov	r3, #136	; 0x88
 244:	e3402000 	movt	r2, #0
 248:	e3401000 	movt	r1, #0
 24c:	e3400000 	movt	r0, #0
 250:	ebfffffe 	bl	0 <printf>
 254:	e3002000 	movw	r2, #0
 258:	e3001000 	movw	r1, #0
 25c:	e3402000 	movt	r2, #0
 260:	e3000000 	movw	r0, #0
 264:	e3401000 	movt	r1, #0
 268:	e3a03089 	mov	r3, #137	; 0x89
 26c:	e3400000 	movt	r0, #0
 270:	ebfffffe 	bl	0 <printf>
 274:	e28dd018 	add	sp, sp, #24
 278:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 27c:	e300c000 	movw	ip, #0
 280:	e3002000 	movw	r2, #0
 284:	e340c000 	movt	ip, #0
 288:	e3001000 	movw	r1, #0
 28c:	e3402000 	movt	r2, #0
 290:	e3000000 	movw	r0, #0
 294:	e3401000 	movt	r1, #0
 298:	e3a07000 	mov	r7, #0
 29c:	e3400000 	movt	r0, #0
 2a0:	e3a03073 	mov	r3, #115	; 0x73
 2a4:	e58dc000 	str	ip, [sp]
 2a8:	e1a06007 	mov	r6, r7
 2ac:	e3a080e0 	mov	r8, #224	; 0xe0
 2b0:	ebfffffe 	bl	0 <printf>
 2b4:	e58d6008 	str	r6, [sp, #8]
 2b8:	e3a03000 	mov	r3, #0
 2bc:	e58d6004 	str	r6, [sp, #4]
 2c0:	e1a02003 	mov	r2, r3
 2c4:	e58d6000 	str	r6, [sp]
 2c8:	e1a01007 	mov	r1, r7
 2cc:	e1a00005 	mov	r0, r5
 2d0:	ebfffffe 	bl	0 <WS28xxMulti::SetupBuffers()>
 2d4:	e5953008 	ldr	r3, [r5, #8]
 2d8:	e3530000 	cmp	r3, #0
 2dc:	0a00002c 	beq	394 <WS28xxMulti::SetupBuffers()+0x394>
 2e0:	e3a04001 	mov	r4, #1
 2e4:	e58d6008 	str	r6, [sp, #8]
 2e8:	e1a02004 	mov	r2, r4
 2ec:	e58d6004 	str	r6, [sp, #4]
 2f0:	e3a03000 	mov	r3, #0
 2f4:	e58d8000 	str	r8, [sp]
 2f8:	e1a01007 	mov	r1, r7
 2fc:	e1a00005 	mov	r0, r5
 300:	e2844001 	add	r4, r4, #1
 304:	ebfffffe 	bl	0 <WS28xxMulti::SetupBuffers()>
 308:	e5952008 	ldr	r2, [r5, #8]
 30c:	e1520004 	cmp	r2, r4
 310:	2afffff3 	bcs	2e4 <WS28xxMulti::SetupBuffers()+0x2e4>
 314:	e2822001 	add	r2, r2, #1
 318:	e5953004 	ldr	r3, [r5, #4]
 31c:	e1a01007 	mov	r1, r7
 320:	e1a00005 	mov	r0, r5
 324:	e2877001 	add	r7, r7, #1
 328:	e243300b 	sub	r3, r3, #11
 32c:	e3530001 	cmp	r3, #1
 330:	858d6008 	strhi	r6, [sp, #8]
 334:	93a030ff 	movls	r3, #255	; 0xff
 338:	958d3008 	strls	r3, [sp, #8]
 33c:	83a03000 	movhi	r3, #0
 340:	958d3004 	strls	r3, [sp, #4]
 344:	958d3000 	strls	r3, [sp]
 348:	858d6004 	strhi	r6, [sp, #4]
 34c:	858d6000 	strhi	r6, [sp]
 350:	ebfffffe 	bl	0 <WS28xxMulti::SetupBuffers()>
 354:	e3570008 	cmp	r7, #8
 358:	1affffd5 	bne	2b4 <WS28xxMulti::SetupBuffers()+0x2b4>
 35c:	e5952014 	ldr	r2, [r5, #20]
 360:	e595001c 	ldr	r0, [r5, #28]
 364:	e595c018 	ldr	ip, [r5, #24]
 368:	e3520000 	cmp	r2, #0
 36c:	0affffac 	beq	224 <WS28xxMulti::SetupBuffers()+0x224>
 370:	e08c2002 	add	r2, ip, r2
 374:	e2400001 	sub	r0, r0, #1
 378:	e4dc3001 	ldrb	r3, [ip], #1
 37c:	e15c0002 	cmp	ip, r2
 380:	e5e03001 	strb	r3, [r0, #1]!
 384:	1afffffb 	bne	378 <WS28xxMulti::SetupBuffers()+0x378>
 388:	e595c018 	ldr	ip, [r5, #24]
 38c:	e595001c 	ldr	r0, [r5, #28]
 390:	eaffffa3 	b	224 <WS28xxMulti::SetupBuffers()+0x224>
 394:	e3a02001 	mov	r2, #1
 398:	eaffffde 	b	318 <WS28xxMulti::SetupBuffers()+0x318>
 39c:	e3003000 	movw	r3, #0
 3a0:	e3002000 	movw	r2, #0
 3a4:	e3403000 	movt	r3, #0
 3a8:	e3000000 	movw	r0, #0
 3ac:	e3402000 	movt	r2, #0
 3b0:	e3a0106b 	mov	r1, #107	; 0x6b
 3b4:	e3400000 	movt	r0, #0
 3b8:	ebfffffe 	bl	0 <__assert_func>
 3bc:	eaffff1f 	b	40 <WS28xxMulti::SetupBuffers()+0x40>
 3c0:	e3003000 	movw	r3, #0
 3c4:	e3002000 	movw	r2, #0
 3c8:	e3403000 	movt	r3, #0
 3cc:	e3000000 	movw	r0, #0
 3d0:	e3402000 	movt	r2, #0
 3d4:	e3a0106e 	mov	r1, #110	; 0x6e
 3d8:	e3400000 	movt	r0, #0
 3dc:	ebfffffe 	bl	0 <__assert_func>
 3e0:	eaffff1b 	b	54 <WS28xxMulti::SetupBuffers()+0x54>

Disassembly of section .text._ZN11WS28xxMultiC2ER18PixelConfiguration:

00000000 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
   0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   4:	e3a03006 	mov	r3, #6
   8:	e580300c 	str	r3, [r0, #12]
   c:	e3a06003 	mov	r6, #3
  10:	e3a070aa 	mov	r7, #170	; 0xaa
  14:	e3a0c000 	mov	ip, #0
  18:	e1c060f4 	strd	r6, [r0, #4]
  1c:	e5c0c000 	strb	ip, [r0]
  20:	e3e030fe 	mvn	r3, #254	; 0xfe
  24:	e1c031b0 	strh	r3, [r0, #16]
  28:	e3006000 	movw	r6, #0
  2c:	e580c014 	str	ip, [r0, #20]
  30:	e1a04000 	mov	r4, r0
  34:	e580c018 	str	ip, [r0, #24]
  38:	e1a05001 	mov	r5, r1
  3c:	e580c01c 	str	ip, [r0, #28]
  40:	e3002000 	movw	r2, #0
  44:	e580c020 	str	ip, [r0, #32]
  48:	e3001000 	movw	r1, #0
  4c:	e3406000 	movt	r6, #0
  50:	e3000000 	movw	r0, #0
  54:	e3402000 	movt	r2, #0
  58:	e3a0302f 	mov	r3, #47	; 0x2f
  5c:	e3401000 	movt	r1, #0
  60:	e24dd014 	sub	sp, sp, #20
  64:	e3400000 	movt	r0, #0
  68:	ebfffffe 	bl	0 <printf>
  6c:	e5963000 	ldr	r3, [r6]
  70:	e3530000 	cmp	r3, #0
  74:	1a000044 	bne	18c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x18c>
  78:	e5864000 	str	r4, [r6]
  7c:	e28d100c 	add	r1, sp, #12
  80:	e1a00005 	mov	r0, r5
  84:	ebfffffe 	bl	0 <PixelConfiguration::Validate(unsigned int&)>
  88:	e1a00005 	mov	r0, r5
  8c:	ebfffffe 	bl	0 <PixelConfiguration::Dump()>
  90:	e5953000 	ldr	r3, [r5]
  94:	e5952004 	ldr	r2, [r5, #4]
  98:	e59d000c 	ldr	r0, [sp, #12]
  9c:	e5843004 	str	r3, [r4, #4]
  a0:	e243300b 	sub	r3, r3, #11
  a4:	e5951008 	ldr	r1, [r5, #8]
  a8:	e3530002 	cmp	r3, #2
  ac:	e0000290 	mul	r0, r0, r2
  b0:	e5842008 	str	r2, [r4, #8]
  b4:	92822008 	addls	r2, r2, #8
  b8:	90800002 	addls	r0, r0, r2
  bc:	e3002000 	movw	r2, #0
  c0:	e5d53012 	ldrb	r3, [r5, #18]
  c4:	e584100c 	str	r1, [r4, #12]
  c8:	e5d51014 	ldrb	r1, [r5, #20]
  cc:	e1a00180 	lsl	r0, r0, #3
  d0:	e5c41010 	strb	r1, [r4, #16]
  d4:	e3001000 	movw	r1, #0
  d8:	e5c43011 	strb	r3, [r4, #17]
  dc:	e3a03046 	mov	r3, #70	; 0x46
  e0:	e5840014 	str	r0, [r4, #20]
  e4:	e58d0000 	str	r0, [sp]
  e8:	e3000000 	movw	r0, #0
  ec:	e3402000 	movt	r2, #0
  f0:	e3401000 	movt	r1, #0
  f4:	e3400000 	movt	r0, #0
  f8:	ebfffffe 	bl	0 <printf>
  fc:	e5d57010 	ldrb	r7, [r5, #16]
 100:	e1a00004 	mov	r0, r4
 104:	e5d56011 	ldrb	r6, [r5, #17]
 108:	ebfffffe 	bl	0 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 10c:	e5c40000 	strb	r0, [r4]
 110:	e1a00004 	mov	r0, r4
 114:	e6ff1f37 	rbit	r1, r7
 118:	e6ff2f36 	rbit	r2, r6
 11c:	e1a01c21 	lsr	r1, r1, #24
 120:	e1a02c22 	lsr	r2, r2, #24
 124:	ebfffffe 	bl	0 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 128:	e5d53014 	ldrb	r3, [r5, #20]
 12c:	e3530000 	cmp	r3, #0
 130:	1a000011 	bne	17c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x17c>
 134:	e5d43000 	ldrb	r3, [r4]
 138:	e3530000 	cmp	r3, #0
 13c:	13a01006 	movne	r1, #6
 140:	11a00004 	movne	r0, r4
 144:	1595300c 	ldrne	r3, [r5, #12]
 148:	01a00004 	moveq	r0, r4
 14c:	0595100c 	ldreq	r1, [r5, #12]
 150:	10010391 	mulne	r1, r1, r3
 154:	01a01101 	lsleq	r1, r1, #2
 158:	ebfffffe 	bl	0 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 15c:	e5943014 	ldr	r3, [r4, #20]
 160:	e1a00004 	mov	r0, r4
 164:	e2833001 	add	r3, r3, #1
 168:	e5843014 	str	r3, [r4, #20]
 16c:	ebfffffe 	bl	0 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 170:	e1a00004 	mov	r0, r4
 174:	e28dd014 	add	sp, sp, #20
 178:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 17c:	e595100c 	ldr	r1, [r5, #12]
 180:	e1a00004 	mov	r0, r4
 184:	ebfffffe 	bl	0 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 188:	eafffff3 	b	15c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x15c>
 18c:	e3003000 	movw	r3, #0
 190:	e3002000 	movw	r2, #0
 194:	e3403000 	movt	r3, #0
 198:	e3000000 	movw	r0, #0
 19c:	e3402000 	movt	r2, #0
 1a0:	e3a01031 	mov	r1, #49	; 0x31
 1a4:	e3400000 	movt	r0, #0
 1a8:	ebfffffe 	bl	0 <__assert_func>
 1ac:	eaffffb1 	b	78 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x78>

Disassembly of section .text._ZN11WS28xxMulti8SetPixelEjjhhh:

00000000 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
   0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
   4:	e24dd014 	sub	sp, sp, #20
   8:	e5d04010 	ldrb	r4, [r0, #16]
   c:	e1a0e000 	mov	lr, r0
  10:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
  14:	e1a06001 	mov	r6, r1
  18:	e5ddc02c 	ldrb	ip, [sp, #44]	; 0x2c
  1c:	e3540000 	cmp	r4, #0
  20:	e1a04003 	mov	r4, r3
  24:	1a000016 	bne	84 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x84>
  28:	e5907004 	ldr	r7, [r0, #4]
  2c:	e3570000 	cmp	r7, #0
  30:	0a000013 	beq	84 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x84>
  34:	e247600b 	sub	r6, r7, #11
  38:	e3560001 	cmp	r6, #1
  3c:	9a000035 	bls	118 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x118>
  40:	e357000d 	cmp	r7, #13
  44:	1a00003b 	bne	138 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x138>
  48:	e58dc008 	str	ip, [sp, #8]
  4c:	e22340c0 	eor	r4, r3, #192	; 0xc0
  50:	e1e0c12c 	mvn	ip, ip, lsr #2
  54:	e2822001 	add	r2, r2, #1
  58:	e58d5004 	str	r5, [sp, #4]
  5c:	e20cc030 	and	ip, ip, #48	; 0x30
  60:	e1e05225 	mvn	r5, r5, lsr #4
  64:	e18cc324 	orr	ip, ip, r4, lsr #6
  68:	e205500c 	and	r5, r5, #12
  6c:	e18cc005 	orr	ip, ip, r5
  70:	e38cc0c0 	orr	ip, ip, #192	; 0xc0
  74:	e58dc000 	str	ip, [sp]
  78:	ebfffffe 	bl	0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
  7c:	e28dd014 	add	sp, sp, #20
  80:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
  84:	e59e300c 	ldr	r3, [lr, #12]
  88:	e3530005 	cmp	r3, #5
  8c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
  90:	ea00001c 	b	108 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x108>
  94:	000000cc 	.word	0x000000cc
  98:	000000d8 	.word	0x000000d8
  9c:	00000108 	.word	0x00000108
  a0:	000000e8 	.word	0x000000e8
  a4:	000000f8 	.word	0x000000f8
  a8:	000000ac 	.word	0x000000ac
  ac:	e58d402c 	str	r4, [sp, #44]	; 0x2c
  b0:	e1a0300c 	mov	r3, ip
  b4:	e58d5028 	str	r5, [sp, #40]	; 0x28
  b8:	e1a01006 	mov	r1, r6
  bc:	e1a0000e 	mov	r0, lr
  c0:	e28dd014 	add	sp, sp, #20
  c4:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
  c8:	eafffffe 	b	0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
  cc:	e58dc02c 	str	ip, [sp, #44]	; 0x2c
  d0:	e1a03004 	mov	r3, r4
  d4:	eafffff6 	b	b4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb4>
  d8:	e58d502c 	str	r5, [sp, #44]	; 0x2c
  dc:	e1a03004 	mov	r3, r4
  e0:	e58dc028 	str	ip, [sp, #40]	; 0x28
  e4:	eafffff3 	b	b8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb8>
  e8:	e58d402c 	str	r4, [sp, #44]	; 0x2c
  ec:	e1a03005 	mov	r3, r5
  f0:	e58dc028 	str	ip, [sp, #40]	; 0x28
  f4:	eaffffef 	b	b8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb8>
  f8:	e58d502c 	str	r5, [sp, #44]	; 0x2c
  fc:	e1a0300c 	mov	r3, ip
 100:	e58d4028 	str	r4, [sp, #40]	; 0x28
 104:	eaffffeb 	b	b8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb8>
 108:	e58dc02c 	str	ip, [sp, #44]	; 0x2c
 10c:	e1a03005 	mov	r3, r5
 110:	e58d4028 	str	r4, [sp, #40]	; 0x28
 114:	eaffffe7 	b	b8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb8>
 118:	e58d3008 	str	r3, [sp, #8]
 11c:	e2822001 	add	r2, r2, #1
 120:	e58d5004 	str	r5, [sp, #4]
 124:	e1a0300c 	mov	r3, ip
 128:	e5d0e011 	ldrb	lr, [r0, #17]
 12c:	e58de000 	str	lr, [sp]
 130:	ebfffffe 	bl	0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 134:	eaffffd0 	b	7c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x7c>
 138:	e3003000 	movw	r3, #0
 13c:	e3002000 	movw	r2, #0
 140:	e3403000 	movt	r3, #0
 144:	e3000000 	movw	r0, #0
 148:	e3402000 	movt	r2, #0
 14c:	e300111f 	movw	r1, #287	; 0x11f
 150:	e3400000 	movt	r0, #0
 154:	ebfffffe 	bl	0 <__assert_func>

Disassembly of section .text._ZN11WS28xxMulti6UpdateEv:

00000000 <WS28xxMulti::Update()>:
   0:	e5903018 	ldr	r3, [r0, #24]
   4:	e92d4010 	push	{r4, lr}
   8:	e3530000 	cmp	r3, #0
   c:	e1a04000 	mov	r4, r0
  10:	0a000006 	beq	30 <WS28xxMulti::Update()+0x30>
  14:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
  18:	e3500000 	cmp	r0, #0
  1c:	1a00000e 	bne	5c <WS28xxMulti::Update()+0x5c>
  20:	e5941014 	ldr	r1, [r4, #20]
  24:	e5940018 	ldr	r0, [r4, #24]
  28:	e8bd4010 	pop	{r4, lr}
  2c:	eafffffe 	b	0 <h3_spi_dma_tx_start>
  30:	e3003000 	movw	r3, #0
  34:	e3002000 	movw	r2, #0
  38:	e3403000 	movt	r3, #0
  3c:	e3000000 	movw	r0, #0
  40:	e3402000 	movt	r2, #0
  44:	e3a01f52 	mov	r1, #328	; 0x148
  48:	e3400000 	movt	r0, #0
  4c:	ebfffffe 	bl	0 <__assert_func>
  50:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
  54:	e3500000 	cmp	r0, #0
  58:	0afffff0 	beq	20 <WS28xxMulti::Update()+0x20>
  5c:	e3003000 	movw	r3, #0
  60:	e3002000 	movw	r2, #0
  64:	e3403000 	movt	r3, #0
  68:	e3000000 	movw	r0, #0
  6c:	e3400000 	movt	r0, #0
  70:	e3001149 	movw	r1, #329	; 0x149
  74:	e3402000 	movt	r2, #0
  78:	ebfffffe 	bl	0 <__assert_func>
  7c:	e5941014 	ldr	r1, [r4, #20]
  80:	e5940018 	ldr	r0, [r4, #24]
  84:	e8bd4010 	pop	{r4, lr}
  88:	eafffffe 	b	0 <h3_spi_dma_tx_start>

Disassembly of section .text._ZN11WS28xxMulti8BlackoutEv:

00000000 <WS28xxMulti::Blackout()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e3002000 	movw	r2, #0
   8:	e3402000 	movt	r2, #0
   c:	e1a04000 	mov	r4, r0
  10:	e3001000 	movw	r1, #0
  14:	e3000000 	movw	r0, #0
  18:	e3401000 	movt	r1, #0
  1c:	e3a03e15 	mov	r3, #336	; 0x150
  20:	e3400000 	movt	r0, #0
  24:	ebfffffe 	bl	0 <printf>
  28:	e594301c 	ldr	r3, [r4, #28]
  2c:	e3530000 	cmp	r3, #0
  30:	0a000012 	beq	80 <WS28xxMulti::Blackout()+0x80>
  34:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
  38:	e3500000 	cmp	r0, #0
  3c:	1a00001a 	bne	ac <WS28xxMulti::Blackout()+0xac>
  40:	e5941014 	ldr	r1, [r4, #20]
  44:	e594001c 	ldr	r0, [r4, #28]
  48:	ebfffffe 	bl	0 <h3_spi_dma_tx_start>
  4c:	f57ff06f 	isb	sy
  50:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
  54:	e3500000 	cmp	r0, #0
  58:	1afffffb 	bne	4c <WS28xxMulti::Blackout()+0x4c>
  5c:	e3002000 	movw	r2, #0
  60:	e3001000 	movw	r1, #0
  64:	e3402000 	movt	r2, #0
  68:	e3000000 	movw	r0, #0
  6c:	e8bd4010 	pop	{r4, lr}
  70:	e3401000 	movt	r1, #0
  74:	e3a03f57 	mov	r3, #348	; 0x15c
  78:	e3400000 	movt	r0, #0
  7c:	eafffffe 	b	0 <printf>
  80:	e3003000 	movw	r3, #0
  84:	e3002000 	movw	r2, #0
  88:	e3403000 	movt	r3, #0
  8c:	e3000000 	movw	r0, #0
  90:	e3402000 	movt	r2, #0
  94:	e3001152 	movw	r1, #338	; 0x152
  98:	e3400000 	movt	r0, #0
  9c:	ebfffffe 	bl	0 <__assert_func>
  a0:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
  a4:	e3500000 	cmp	r0, #0
  a8:	0affffe4 	beq	40 <WS28xxMulti::Blackout()+0x40>
  ac:	e3003000 	movw	r3, #0
  b0:	e3002000 	movw	r2, #0
  b4:	e3403000 	movt	r3, #0
  b8:	e3000000 	movw	r0, #0
  bc:	e3402000 	movt	r2, #0
  c0:	e3001153 	movw	r1, #339	; 0x153
  c4:	e3400000 	movt	r0, #0
  c8:	ebfffffe 	bl	0 <__assert_func>
  cc:	eaffffdb 	b	40 <WS28xxMulti::Blackout()+0x40>

Disassembly of section .text._ZN11WS28xxMulti6FullOnEv:

00000000 <WS28xxMulti::FullOn()>:
   0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   4:	e3002000 	movw	r2, #0
   8:	e3402000 	movt	r2, #0
   c:	e1a05000 	mov	r5, r0
  10:	e3001000 	movw	r1, #0
  14:	e3000000 	movw	r0, #0
  18:	e3401000 	movt	r1, #0
  1c:	e3a03e16 	mov	r3, #352	; 0x160
  20:	e3400000 	movt	r0, #0
  24:	e24dd014 	sub	sp, sp, #20
  28:	ebfffffe 	bl	0 <printf>
  2c:	e5953004 	ldr	r3, [r5, #4]
  30:	e243300b 	sub	r3, r3, #11
  34:	e3530002 	cmp	r3, #2
  38:	8a00003d 	bhi	134 <WS28xxMulti::FullOn()+0x134>
  3c:	e3a07000 	mov	r7, #0
  40:	e3a060ff 	mov	r6, #255	; 0xff
  44:	e1a09007 	mov	r9, r7
  48:	e58d9008 	str	r9, [sp, #8]
  4c:	e3a03000 	mov	r3, #0
  50:	e58d9004 	str	r9, [sp, #4]
  54:	e1a02003 	mov	r2, r3
  58:	e58d9000 	str	r9, [sp]
  5c:	e1a01007 	mov	r1, r7
  60:	e1a00005 	mov	r0, r5
  64:	ebfffffe 	bl	0 <WS28xxMulti::FullOn()>
  68:	e5953008 	ldr	r3, [r5, #8]
  6c:	e3530000 	cmp	r3, #0
  70:	0a000064 	beq	208 <WS28xxMulti::FullOn()+0x208>
  74:	e3a04001 	mov	r4, #1
  78:	e3a080e0 	mov	r8, #224	; 0xe0
  7c:	e58d6008 	str	r6, [sp, #8]
  80:	e1a02004 	mov	r2, r4
  84:	e58d6004 	str	r6, [sp, #4]
  88:	e3a030ff 	mov	r3, #255	; 0xff
  8c:	e58d8000 	str	r8, [sp]
  90:	e1a01007 	mov	r1, r7
  94:	e1a00005 	mov	r0, r5
  98:	e2844001 	add	r4, r4, #1
  9c:	ebfffffe 	bl	0 <WS28xxMulti::FullOn()>
  a0:	e5952008 	ldr	r2, [r5, #8]
  a4:	e1520004 	cmp	r2, r4
  a8:	2afffff3 	bcs	7c <WS28xxMulti::FullOn()+0x7c>
  ac:	e2822001 	add	r2, r2, #1
  b0:	e5953004 	ldr	r3, [r5, #4]
  b4:	e1a01007 	mov	r1, r7
  b8:	e1a00005 	mov	r0, r5
  bc:	e2877001 	add	r7, r7, #1
  c0:	e243300b 	sub	r3, r3, #11
  c4:	e3530001 	cmp	r3, #1
  c8:	958d6008 	strls	r6, [sp, #8]
  cc:	93a030ff 	movls	r3, #255	; 0xff
  d0:	958d6004 	strls	r6, [sp, #4]
  d4:	83a03000 	movhi	r3, #0
  d8:	958d6000 	strls	r6, [sp]
  dc:	858d9008 	strhi	r9, [sp, #8]
  e0:	858d9004 	strhi	r9, [sp, #4]
  e4:	858d9000 	strhi	r9, [sp]
  e8:	ebfffffe 	bl	0 <WS28xxMulti::FullOn()>
  ec:	e3570008 	cmp	r7, #8
  f0:	1affffd4 	bne	48 <WS28xxMulti::FullOn()+0x48>
  f4:	e1a00005 	mov	r0, r5
  f8:	ebfffffe 	bl	0 <WS28xxMulti::FullOn()>
  fc:	f57ff06f 	isb	sy
 100:	ebfffffe 	bl	0 <h3_spi_dma_tx_is_active>
 104:	e3500000 	cmp	r0, #0
 108:	1afffffb 	bne	fc <WS28xxMulti::FullOn()+0xfc>
 10c:	e3002000 	movw	r2, #0
 110:	e3001000 	movw	r1, #0
 114:	e3402000 	movt	r2, #0
 118:	e3000000 	movw	r0, #0
 11c:	e3401000 	movt	r1, #0
 120:	e300317b 	movw	r3, #379	; 0x17b
 124:	e3400000 	movt	r0, #0
 128:	e28dd014 	add	sp, sp, #20
 12c:	e8bd43f0 	pop	{r4, r5, r6, r7, r8, r9, lr}
 130:	eafffffe 	b	0 <printf>
 134:	e1c521d4 	ldrd	r2, [r5, #20]
 138:	e3520000 	cmp	r2, #0
 13c:	e2422001 	sub	r2, r2, #1
 140:	0affffeb 	beq	f4 <WS28xxMulti::FullOn()+0xf4>
 144:	e352001f 	cmp	r2, #31
 148:	9a000027 	bls	1ec <WS28xxMulti::FullOn()+0x1ec>
 14c:	e2831020 	add	r1, r3, #32
 150:	e3e00000 	mvn	r0, #0
 154:	f5d1f008 	pld	[r1, #8]
 158:	e2422020 	sub	r2, r2, #32
 15c:	e5410020 	strb	r0, [r1, #-32]	; 0xffffffe0
 160:	e352001f 	cmp	r2, #31
 164:	e541001f 	strb	r0, [r1, #-31]	; 0xffffffe1
 168:	e1a03001 	mov	r3, r1
 16c:	e541001e 	strb	r0, [r1, #-30]	; 0xffffffe2
 170:	e2811020 	add	r1, r1, #32
 174:	e541003d 	strb	r0, [r1, #-61]	; 0xffffffc3
 178:	e541003c 	strb	r0, [r1, #-60]	; 0xffffffc4
 17c:	e541003b 	strb	r0, [r1, #-59]	; 0xffffffc5
 180:	e541003a 	strb	r0, [r1, #-58]	; 0xffffffc6
 184:	e5410039 	strb	r0, [r1, #-57]	; 0xffffffc7
 188:	e5410038 	strb	r0, [r1, #-56]	; 0xffffffc8
 18c:	e5410037 	strb	r0, [r1, #-55]	; 0xffffffc9
 190:	e5410036 	strb	r0, [r1, #-54]	; 0xffffffca
 194:	e5410035 	strb	r0, [r1, #-53]	; 0xffffffcb
 198:	e5410034 	strb	r0, [r1, #-52]	; 0xffffffcc
 19c:	e5410033 	strb	r0, [r1, #-51]	; 0xffffffcd
 1a0:	e5410032 	strb	r0, [r1, #-50]	; 0xffffffce
 1a4:	e5410031 	strb	r0, [r1, #-49]	; 0xffffffcf
 1a8:	e5410030 	strb	r0, [r1, #-48]	; 0xffffffd0
 1ac:	e541002f 	strb	r0, [r1, #-47]	; 0xffffffd1
 1b0:	e541002e 	strb	r0, [r1, #-46]	; 0xffffffd2
 1b4:	e541002d 	strb	r0, [r1, #-45]	; 0xffffffd3
 1b8:	e541002c 	strb	r0, [r1, #-44]	; 0xffffffd4
 1bc:	e541002b 	strb	r0, [r1, #-43]	; 0xffffffd5
 1c0:	e541002a 	strb	r0, [r1, #-42]	; 0xffffffd6
 1c4:	e5410029 	strb	r0, [r1, #-41]	; 0xffffffd7
 1c8:	e5410028 	strb	r0, [r1, #-40]	; 0xffffffd8
 1cc:	e5410027 	strb	r0, [r1, #-39]	; 0xffffffd9
 1d0:	e5410026 	strb	r0, [r1, #-38]	; 0xffffffda
 1d4:	e5410025 	strb	r0, [r1, #-37]	; 0xffffffdb
 1d8:	e5410024 	strb	r0, [r1, #-36]	; 0xffffffdc
 1dc:	e5410023 	strb	r0, [r1, #-35]	; 0xffffffdd
 1e0:	e5410022 	strb	r0, [r1, #-34]	; 0xffffffde
 1e4:	e5410021 	strb	r0, [r1, #-33]	; 0xffffffdf
 1e8:	8affffd9 	bhi	154 <WS28xxMulti::FullOn()+0x154>
 1ec:	e2822001 	add	r2, r2, #1
 1f0:	e3e01000 	mvn	r1, #0
 1f4:	e0832002 	add	r2, r3, r2
 1f8:	e4c31001 	strb	r1, [r3], #1
 1fc:	e1530002 	cmp	r3, r2
 200:	1afffffc 	bne	1f8 <WS28xxMulti::FullOn()+0x1f8>
 204:	eaffffba 	b	f4 <WS28xxMulti::FullOn()+0xf4>
 208:	e3a02001 	mov	r2, #1
 20c:	eaffffa7 	b	b0 <WS28xxMulti::FullOn()+0xb0>
