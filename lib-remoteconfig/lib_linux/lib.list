In archive lib_linux/libremoteconfig.a:

remoteconfigconst.o:     file format elf64-x86-64


remoteconfig.o:     file format elf64-x86-64


Disassembly of section .text._ZNK7Network5GetIpEv:

0000000000000000 <Network::GetIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8b 47 10             	mov    0x10(%rdi),%eax
   7:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <Network::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig17HandleGetNoParamsEv:

0000000000000000 <RemoteConfig::HandleGetNoParams()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	31 d2                	xor    %edx,%edx
   6:	31 f6                	xor    %esi,%esi
   8:	e9 00 00 00 00       	jmp    d <.LC10+0x4>

Disassembly of section .text._ZN15FirmwareVersion8GetPrintEv:

0000000000000000 <FirmwareVersion::GetPrint()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b <FirmwareVersion::GetPrint()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN15FirmwareVersion3GetEv:

0000000000000000 <FirmwareVersion::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <FirmwareVersion::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <Hardware::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN7Display8SetSleepEb:

0000000000000000 <Display::SetSleep(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	52                   	push   %rdx
   a:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
   e:	48 85 ff             	test   %rdi,%rdi
  11:	74 25                	je     38 <Display::SetSleep(bool)+0x38>
  13:	48 8b 07             	mov    (%rdi),%rax
  16:	89 f5                	mov    %esi,%ebp
  18:	40 88 73 10          	mov    %sil,0x10(%rbx)
  1c:	40 0f b6 f6          	movzbl %sil,%esi
  20:	ff 50 50             	call   *0x50(%rax)
  23:	40 84 ed             	test   %bpl,%bpl
  26:	75 10                	jne    38 <Display::SetSleep(bool)+0x38>
  28:	e8 00 00 00 00       	call   2d <Display::SetSleep(bool)+0x2d>
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <Display::SetSleep(bool)+0x35>
  35:	89 43 04             	mov    %eax,0x4(%rbx)
  38:	58                   	pop    %rax
  39:	5b                   	pop    %rbx
  3a:	5d                   	pop    %rbp
  3b:	c3                   	ret    

Disassembly of section .text._ZNK7Display7isSleepEv:

0000000000000000 <Display::isSleep() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8a 47 10             	mov    0x10(%rdi),%al
   7:	c3                   	ret    

Disassembly of section .text._ZN7Display3GetEv:

0000000000000000 <Display::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <Display::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN16PropertiesConfig6IsJSONEv:

0000000000000000 <PropertiesConfig::IsJSON()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	bf 01 00 00 00       	mov    $0x1,%edi
   9:	e9 00 00 00 00       	jmp    e <.LC10+0x5>

Disassembly of section .text._ZN16PropertiesConfig9isMaskSetEh:

0000000000000000 <PropertiesConfig::isMaskSet(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8a 05 00 00 00 00    	mov    0x0(%rip),%al        # a <PropertiesConfig::isMaskSet(unsigned char)+0xa>
   a:	21 f8                	and    %edi,%eax
   c:	40 38 f8             	cmp    %dil,%al
   f:	0f 94 c0             	sete   %al
  12:	c3                   	ret    

Disassembly of section .text._ZN17StoreRemoteConfig3GetEv:

0000000000000000 <StoreRemoteConfig::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreRemoteConfig::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN12StoreNetwork3GetEv:

0000000000000000 <StoreNetwork::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreNetwork::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN15StoreDisplayUdf3GetEv:

0000000000000000 <StoreDisplayUdf::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreDisplayUdf::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN11StoreArtNet3GetEv:

0000000000000000 <StoreArtNet::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreArtNet::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN9StoreE1313GetEv:

0000000000000000 <StoreE131::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreE131::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscClient3GetEv:

0000000000000000 <StoreOscClient::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreOscClient::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN14StoreOscServer3GetEv:

0000000000000000 <StoreOscServer::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreOscServer::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN8StoreLtc3GetEv:

0000000000000000 <StoreLtc::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreLtc::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN15StoreLtcDisplay3GetEv:

0000000000000000 <StoreLtcDisplay::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreLtcDisplay::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN10StoreTCNet3GetEv:

0000000000000000 <StoreTCNet::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreTCNet::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN8StoreGPS3GetEv:

0000000000000000 <StoreGPS::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreGPS::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN11StoreLtcEtc3GetEv:

0000000000000000 <StoreLtcEtc::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreLtcEtc::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN13StoreShowFile3GetEv:

0000000000000000 <StoreShowFile::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreShowFile::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN12StoreDmxSend3GetEv:

0000000000000000 <StoreDmxSend::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreDmxSend::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN14PixelDmxParamsD2Ev:

0000000000000000 <PixelDmxParams::~PixelDmxParams()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	c3                   	ret    

Disassembly of section .text._ZN13StorePixelDmx3GetEv:

0000000000000000 <StorePixelDmx::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StorePixelDmx::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN17TLC59711DmxParams12IsSetLedTypeEv:

0000000000000000 <TLC59711DmxParams::IsSetLedType()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	be 01 00 00 00       	mov    $0x1,%esi
   9:	e9 00 00 00 00       	jmp    e <.LC10+0x5>

Disassembly of section .text._ZN17TLC59711DmxParams9isMaskSetEj:

0000000000000000 <TLC59711DmxParams::isMaskSet(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8b 47 08             	mov    0x8(%rdi),%eax
   7:	21 f0                	and    %esi,%eax
   9:	39 f0                	cmp    %esi,%eax
   b:	0f 94 c0             	sete   %al
   e:	c3                   	ret    

Disassembly of section .text._ZN13StoreTLC597113GetEv:

0000000000000000 <StoreTLC59711::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreTLC59711::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN16StoreSparkFunDmx3GetEv:

0000000000000000 <StoreSparkFunDmx::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreSparkFunDmx::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN11StoreMotors3GetEv:

0000000000000000 <StoreMotors::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreMotors::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN13StoreRgbPanel3GetEv:

0000000000000000 <StoreRgbPanel::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreRgbPanel::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN14StoreRDMDevice3GetEv:

0000000000000000 <StoreRDMDevice::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <StoreRDMDevice::Get()+0xb>
   b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfigC2EN12remoteconfig4NodeENS0_6OutputEj:

0000000000000000 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 89 f5             	mov    %esi,%r13d
   9:	41 54                	push   %r12
   b:	41 89 d4             	mov    %edx,%r12d
   e:	55                   	push   %rbp
   f:	89 cd                	mov    %ecx,%ebp
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	50                   	push   %rax
  16:	89 57 04             	mov    %edx,0x4(%rdi)
  19:	89 4f 08             	mov    %ecx,0x8(%rdi)
  1c:	89 37                	mov    %esi,(%rdi)
  1e:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%rdi)
  25:	66 c7 47 10 00 00    	movw   $0x0,0x10(%rdi)
  2b:	c7 47 14 ff ff ff ff 	movl   $0xffffffff,0x14(%rdi)
  32:	48 c7 47 18 00 00 00 	movq   $0x0,0x18(%rdi)
  39:	00 
  3a:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
  41:	00 
  42:	c6 47 28 00          	movb   $0x0,0x28(%rdi)
  46:	48 89 3d 00 00 00 00 	mov    %rdi,0x0(%rip)        # 4d <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x4d>
  4d:	e8 00 00 00 00       	call   52 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x52>
  52:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 59 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x59>
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x61>
  61:	44 88 2d 00 00 00 00 	mov    %r13b,0x0(%rip)        # 68 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x68>
  68:	44 88 25 00 00 00 00 	mov    %r12b,0x0(%rip)        # 6f <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x6f>
  6f:	40 88 2d 00 00 00 00 	mov    %bpl,0x0(%rip)        # 76 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x76>
  76:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 7d <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7d>
  7d:	e8 00 00 00 00       	call   82 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x82>
  82:	be 05 29 00 00       	mov    $0x2905,%esi
  87:	48 89 c7             	mov    %rax,%rdi
  8a:	e8 00 00 00 00       	call   8f <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x8f>
  8f:	89 43 14             	mov    %eax,0x14(%rbx)
  92:	5a                   	pop    %rdx
  93:	5b                   	pop    %rbx
  94:	5d                   	pop    %rbp
  95:	41 5c                	pop    %r12
  97:	41 5d                	pop    %r13
  99:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfigD2Ev:

0000000000000000 <RemoteConfig::~RemoteConfig()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	50                   	push   %rax
   5:	e8 00 00 00 00       	call   a <RemoteConfig::~RemoteConfig()+0xa>
   a:	be 05 29 00 00       	mov    $0x2905,%esi
   f:	5a                   	pop    %rdx
  10:	48 89 c7             	mov    %rax,%rdi
  13:	e9 00 00 00 00       	jmp    18 <.LC10+0xf>

Disassembly of section .text._ZNK12RemoteConfig13GetStringNodeEv:

0000000000000000 <RemoteConfig::GetStringNode() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # b <RemoteConfig::GetStringNode() const+0xb>
   b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 12 <RemoteConfig::GetStringNode() const+0x12>
  12:	48 6b c0 12          	imul   $0x12,%rax,%rax
  16:	48 01 d0             	add    %rdx,%rax
  19:	c3                   	ret    

Disassembly of section .text._ZNK12RemoteConfig15GetStringOutputEv:

0000000000000000 <RemoteConfig::GetStringOutput() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # b <RemoteConfig::GetStringOutput() const+0xb>
   b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 12 <RemoteConfig::GetStringOutput() const+0x12>
  12:	48 6b c0 0c          	imul   $0xc,%rax,%rax
  16:	48 01 d0             	add    %rdx,%rax
  19:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig10SetDisableEb:

0000000000000000 <RemoteConfig::SetDisable(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	53                   	push   %rbx
   5:	48 89 fb             	mov    %rdi,%rbx
   8:	8a 47 0c             	mov    0xc(%rdi),%al
   b:	40 84 f6             	test   %sil,%sil
   e:	74 23                	je     33 <RemoteConfig::SetDisable(bool)+0x33>
  10:	84 c0                	test   %al,%al
  12:	75 3c                	jne    50 <RemoteConfig::SetDisable(bool)+0x50>
  14:	e8 00 00 00 00       	call   19 <RemoteConfig::SetDisable(bool)+0x19>
  19:	be 05 29 00 00       	mov    $0x2905,%esi
  1e:	48 89 c7             	mov    %rax,%rdi
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::SetDisable(bool)+0x26>
  26:	c7 43 14 ff ff ff ff 	movl   $0xffffffff,0x14(%rbx)
  2d:	c6 43 0c 01          	movb   $0x1,0xc(%rbx)
  31:	eb 1d                	jmp    50 <RemoteConfig::SetDisable(bool)+0x50>
  33:	84 c0                	test   %al,%al
  35:	74 19                	je     50 <RemoteConfig::SetDisable(bool)+0x50>
  37:	e8 00 00 00 00       	call   3c <RemoteConfig::SetDisable(bool)+0x3c>
  3c:	be 05 29 00 00       	mov    $0x2905,%esi
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <RemoteConfig::SetDisable(bool)+0x49>
  49:	c6 43 0c 00          	movb   $0x0,0xc(%rbx)
  4d:	89 43 14             	mov    %eax,0x14(%rbx)
  50:	5b                   	pop    %rbx
  51:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig14SetDisplayNameEPKc:

0000000000000000 <RemoteConfig::SetDisplayName(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	50                   	push   %rax
   5:	ba 17 00 00 00       	mov    $0x17,%edx
   a:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 11 <RemoteConfig::SetDisplayName(char const*)+0x11>
  11:	e8 00 00 00 00       	call   16 <RemoteConfig::SetDisplayName(char const*)+0x16>
  16:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 1d <RemoteConfig::SetDisplayName(char const*)+0x1d>
  1d:	5a                   	pop    %rdx
  1e:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig3RunEv:

0000000000000000 <RemoteConfig::Run()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 57                	push   %r15
   6:	41 56                	push   %r14
   8:	41 55                	push   %r13
   a:	41 54                	push   %r12
   c:	55                   	push   %rbp
   d:	53                   	push   %rbx
   e:	48 83 ec 18          	sub    $0x18,%rsp
  12:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  19:	00 00 
  1b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  20:	31 c0                	xor    %eax,%eax
  22:	80 7f 0c 00          	cmpb   $0x0,0xc(%rdi)
  26:	0f 85 b9 01 00 00    	jne    1e5 <RemoteConfig::Run()+0x1e5>
  2c:	48 89 fd             	mov    %rdi,%rbp
  2f:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
  33:	48 85 ff             	test   %rdi,%rdi
  36:	74 05                	je     3d <RemoteConfig::Run()+0x3d>
  38:	e8 00 00 00 00       	call   3d <RemoteConfig::Run()+0x3d>
  3d:	e8 00 00 00 00       	call   42 <RemoteConfig::Run()+0x42>
  42:	8b 75 14             	mov    0x14(%rbp),%esi
  45:	48 8d 4d 18          	lea    0x18(%rbp),%rcx
  49:	4c 8d 44 24 06       	lea    0x6(%rsp),%r8
  4e:	48 89 c7             	mov    %rax,%rdi
  51:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 58 <RemoteConfig::Run()+0x58>
  58:	e8 00 00 00 00       	call   5d <RemoteConfig::Run()+0x5d>
  5d:	0f b7 c0             	movzwl %ax,%eax
  60:	89 45 1c             	mov    %eax,0x1c(%rbp)
  63:	83 f8 03             	cmp    $0x3,%eax
  66:	0f 86 79 01 00 00    	jbe    1e5 <RemoteConfig::Run()+0x1e5>
  6c:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 73 <RemoteConfig::Run()+0x73>
  73:	8d 48 ff             	lea    -0x1(%rax),%ecx
  76:	48 89 ca             	mov    %rcx,%rdx
  79:	80 3c 0f 0a          	cmpb   $0xa,(%rdi,%rcx,1)
  7d:	0f 45 d0             	cmovne %eax,%edx
  80:	89 55 1c             	mov    %edx,0x1c(%rbp)
  83:	8a 07                	mov    (%rdi),%al
  85:	3c 3f                	cmp    $0x3f,%al
  87:	0f 85 9b 00 00 00    	jne    128 <RemoteConfig::Run()+0x128>
  8d:	8d 5a ff             	lea    -0x1(%rdx),%ebx
  90:	4c 8d 3d 00 00 00 00 	lea    0x0(%rip),%r15        # 97 <RemoteConfig::Run()+0x97>
  97:	45 31 e4             	xor    %r12d,%r12d
  9a:	89 5d 1c             	mov    %ebx,0x1c(%rbp)
  9d:	4d 89 fe             	mov    %r15,%r14
  a0:	4c 8d 6f 01          	lea    0x1(%rdi),%r13
  a4:	41 0f b7 47 18       	movzwl 0x18(%r15),%eax
  a9:	41 80 7f 1a 00       	cmpb   $0x0,0x1a(%r15)
  ae:	48 89 c2             	mov    %rax,%rdx
  b1:	74 06                	je     b9 <RemoteConfig::Run()+0xb9>
  b3:	39 c3                	cmp    %eax,%ebx
  b5:	77 06                	ja     bd <RemoteConfig::Run()+0xbd>
  b7:	eb 3c                	jmp    f5 <RemoteConfig::Run()+0xf5>
  b9:	39 c3                	cmp    %eax,%ebx
  bb:	75 38                	jne    f5 <RemoteConfig::Run()+0xf5>
  bd:	49 8b 77 10          	mov    0x10(%r15),%rsi
  c1:	4c 89 ef             	mov    %r13,%rdi
  c4:	e8 00 00 00 00       	call   c9 <RemoteConfig::Run()+0xc9>
  c9:	85 c0                	test   %eax,%eax
  cb:	75 28                	jne    f5 <RemoteConfig::Run()+0xf5>
  cd:	49 c1 e4 05          	shl    $0x5,%r12
  d1:	4d 01 f4             	add    %r14,%r12
  d4:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
  d9:	49 8b 04 24          	mov    (%r12),%rax
  dd:	48 01 ef             	add    %rbp,%rdi
  e0:	a8 01                	test   $0x1,%al
  e2:	0f 84 d3 00 00 00    	je     1bb <RemoteConfig::Run()+0x1bb>
  e8:	48 8b 17             	mov    (%rdi),%rdx
  eb:	48 8b 44 02 ff       	mov    -0x1(%rdx,%rax,1),%rax
  f0:	e9 c6 00 00 00       	jmp    1bb <RemoteConfig::Run()+0x1bb>
  f5:	41 ff c4             	inc    %r12d
  f8:	49 83 c7 20          	add    $0x20,%r15
  fc:	41 83 fc 09          	cmp    $0x9,%r12d
 100:	75 a2                	jne    a4 <RemoteConfig::Run()+0xa4>
 102:	e8 00 00 00 00       	call   107 <RemoteConfig::Run()+0x107>
 107:	8b 75 14             	mov    0x14(%rbp),%esi
 10a:	44 8b 45 18          	mov    0x18(%rbp),%r8d
 10e:	41 b9 05 29 00 00    	mov    $0x2905,%r9d
 114:	48 89 c7             	mov    %rax,%rdi
 117:	b9 08 00 00 00       	mov    $0x8,%ecx
 11c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 123 <RemoteConfig::Run()+0x123>
 123:	e9 b8 00 00 00       	jmp    1e0 <RemoteConfig::Run()+0x1e0>
 128:	80 7d 0d 00          	cmpb   $0x0,0xd(%rbp)
 12c:	0f 85 b3 00 00 00    	jne    1e5 <RemoteConfig::Run()+0x1e5>
 132:	3c 23                	cmp    $0x23,%al
 134:	75 11                	jne    147 <RemoteConfig::Run()+0x147>
 136:	31 d2                	xor    %edx,%edx
 138:	31 f6                	xor    %esi,%esi
 13a:	48 89 ef             	mov    %rbp,%rdi
 13d:	e8 00 00 00 00       	call   142 <RemoteConfig::Run()+0x142>
 142:	e9 9e 00 00 00       	jmp    1e5 <RemoteConfig::Run()+0x1e5>
 147:	3c 21                	cmp    $0x21,%al
 149:	0f 85 96 00 00 00    	jne    1e5 <RemoteConfig::Run()+0x1e5>
 14f:	8d 5a ff             	lea    -0x1(%rdx),%ebx
 152:	89 5d 1c             	mov    %ebx,0x1c(%rbp)
 155:	83 fb 05             	cmp    $0x5,%ebx
 158:	76 65                	jbe    1bf <RemoteConfig::Run()+0x1bf>
 15a:	4c 8d 67 01          	lea    0x1(%rdi),%r12
 15e:	ba 05 00 00 00       	mov    $0x5,%edx
 163:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 16a <RemoteConfig::Run()+0x16a>
 16a:	4c 89 e7             	mov    %r12,%rdi
 16d:	e8 00 00 00 00       	call   172 <RemoteConfig::Run()+0x172>
 172:	85 c0                	test   %eax,%eax
 174:	74 24                	je     19a <RemoteConfig::Run()+0x19a>
 176:	83 fb 08             	cmp    $0x8,%ebx
 179:	76 44                	jbe    1bf <RemoteConfig::Run()+0x1bf>
 17b:	ba 08 00 00 00       	mov    $0x8,%edx
 180:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 187 <RemoteConfig::Run()+0x187>
 187:	4c 89 e7             	mov    %r12,%rdi
 18a:	e8 00 00 00 00       	call   18f <RemoteConfig::Run()+0x18f>
 18f:	85 c0                	test   %eax,%eax
 191:	75 2c                	jne    1bf <RemoteConfig::Run()+0x1bf>
 193:	b8 01 00 00 00       	mov    $0x1,%eax
 198:	eb 02                	jmp    19c <RemoteConfig::Run()+0x19c>
 19a:	31 c0                	xor    %eax,%eax
 19c:	48 c1 e0 05          	shl    $0x5,%rax
 1a0:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1a7 <RemoteConfig::Run()+0x1a7>
 1a7:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
 1ab:	a8 01                	test   $0x1,%al
 1ad:	74 09                	je     1b8 <RemoteConfig::Run()+0x1b8>
 1af:	48 8b 55 00          	mov    0x0(%rbp),%rdx
 1b3:	48 8b 44 02 ff       	mov    -0x1(%rdx,%rax,1),%rax
 1b8:	48 89 ef             	mov    %rbp,%rdi
 1bb:	ff d0                	call   *%rax
 1bd:	eb 26                	jmp    1e5 <RemoteConfig::Run()+0x1e5>
 1bf:	e8 00 00 00 00       	call   1c4 <RemoteConfig::Run()+0x1c4>
 1c4:	8b 75 14             	mov    0x14(%rbp),%esi
 1c7:	44 8b 45 18          	mov    0x18(%rbp),%r8d
 1cb:	41 b9 05 29 00 00    	mov    $0x2905,%r9d
 1d1:	48 89 c7             	mov    %rax,%rdi
 1d4:	b9 08 00 00 00       	mov    $0x8,%ecx
 1d9:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1e0 <RemoteConfig::Run()+0x1e0>
 1e0:	e8 00 00 00 00       	call   1e5 <RemoteConfig::Run()+0x1e5>
 1e5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
 1ea:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 1f1:	00 00 
 1f3:	74 05                	je     1fa <RemoteConfig::Run()+0x1fa>
 1f5:	e8 00 00 00 00       	call   1fa <RemoteConfig::Run()+0x1fa>
 1fa:	48 83 c4 18          	add    $0x18,%rsp
 1fe:	5b                   	pop    %rbx
 1ff:	5d                   	pop    %rbp
 200:	41 5c                	pop    %r12
 202:	41 5d                	pop    %r13
 204:	41 5e                	pop    %r14
 206:	41 5f                	pop    %r15
 208:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig12HandleUptimeEv:

0000000000000000 <RemoteConfig::HandleUptime()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	80 7f 0f 00          	cmpb   $0x0,0xf(%rdi)
   8:	74 68                	je     72 <RemoteConfig::HandleUptime()+0x72>
   a:	41 54                	push   %r12
   c:	53                   	push   %rbx
   d:	48 89 fb             	mov    %rdi,%rbx
  10:	41 53                	push   %r11
  12:	e8 00 00 00 00       	call   17 <RemoteConfig::HandleUptime()+0x17>
  17:	48 89 c7             	mov    %rax,%rdi
  1a:	e8 00 00 00 00       	call   1f <RemoteConfig::HandleUptime()+0x1f>
  1f:	83 7b 1c 07          	cmpl   $0x7,0x1c(%rbx)
  23:	89 c1                	mov    %eax,%ecx
  25:	75 46                	jne    6d <RemoteConfig::HandleUptime()+0x6d>
  27:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 2e <RemoteConfig::HandleUptime()+0x2e>
  2e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 35 <RemoteConfig::HandleUptime()+0x35>
  35:	be ff 03 00 00       	mov    $0x3ff,%esi
  3a:	31 c0                	xor    %eax,%eax
  3c:	e8 00 00 00 00       	call   41 <RemoteConfig::HandleUptime()+0x41>
  41:	41 89 c4             	mov    %eax,%r12d
  44:	e8 00 00 00 00       	call   49 <RemoteConfig::HandleUptime()+0x49>
  49:	8b 73 14             	mov    0x14(%rbx),%esi
  4c:	44 8b 43 18          	mov    0x18(%rbx),%r8d
  50:	44 89 e1             	mov    %r12d,%ecx
  53:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 5a <RemoteConfig::HandleUptime()+0x5a>
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	41 5a                	pop    %r10
  5f:	41 b9 05 29 00 00    	mov    $0x2905,%r9d
  65:	5b                   	pop    %rbx
  66:	41 5c                	pop    %r12
  68:	e9 00 00 00 00       	jmp    6d <RemoteConfig::HandleUptime()+0x6d>
  6d:	58                   	pop    %rax
  6e:	5b                   	pop    %rbx
  6f:	41 5c                	pop    %r12
  71:	c3                   	ret    
  72:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig13HandleVersionEv:

0000000000000000 <RemoteConfig::HandleVersion()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	83 7f 1c 08          	cmpl   $0x8,0x1c(%rdi)
   8:	75 5a                	jne    64 <RemoteConfig::HandleVersion()+0x64>
   a:	55                   	push   %rbp
   b:	48 89 fd             	mov    %rdi,%rbp
   e:	53                   	push   %rbx
   f:	50                   	push   %rax
  10:	e8 00 00 00 00       	call   15 <RemoteConfig::HandleVersion()+0x15>
  15:	48 89 c7             	mov    %rax,%rdi
  18:	e8 00 00 00 00       	call   1d <RemoteConfig::HandleVersion()+0x1d>
  1d:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 24 <RemoteConfig::HandleVersion()+0x24>
  24:	be ff 03 00 00       	mov    $0x3ff,%esi
  29:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 30 <RemoteConfig::HandleVersion()+0x30>
  30:	48 89 c1             	mov    %rax,%rcx
  33:	31 c0                	xor    %eax,%eax
  35:	e8 00 00 00 00       	call   3a <RemoteConfig::HandleVersion()+0x3a>
  3a:	89 c3                	mov    %eax,%ebx
  3c:	e8 00 00 00 00       	call   41 <RemoteConfig::HandleVersion()+0x41>
  41:	8b 75 14             	mov    0x14(%rbp),%esi
  44:	44 8b 45 18          	mov    0x18(%rbp),%r8d
  48:	0f b7 cb             	movzwl %bx,%ecx
  4b:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 52 <RemoteConfig::HandleVersion()+0x52>
  52:	48 89 c7             	mov    %rax,%rdi
  55:	41 5a                	pop    %r10
  57:	41 b9 05 29 00 00    	mov    $0x2905,%r9d
  5d:	5b                   	pop    %rbx
  5e:	5d                   	pop    %rbp
  5f:	e9 00 00 00 00       	jmp    64 <RemoteConfig::HandleVersion()+0x64>
  64:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig10HandleListEv:

0000000000000000 <RemoteConfig::HandleList()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 56                	push   %r14
   6:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # d <RemoteConfig::HandleList()+0xd>
   d:	41 55                	push   %r13
   f:	41 54                	push   %r12
  11:	4c 8d 60 07          	lea    0x7(%rax),%r12
  15:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c <RemoteConfig::HandleList()+0x1c>
  1c:	55                   	push   %rbp
  1d:	48 89 fd             	mov    %rdi,%rbp
  20:	53                   	push   %rbx
  21:	44 8b 6f 04          	mov    0x4(%rdi),%r13d
  25:	8b 1f                	mov    (%rdi),%ebx
  27:	44 8b 77 08          	mov    0x8(%rdi),%r14d
  2b:	4d 6b ed 0c          	imul   $0xc,%r13,%r13
  2f:	48 6b db 12          	imul   $0x12,%rbx,%rbx
  33:	49 01 c5             	add    %rax,%r13
  36:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3d <RemoteConfig::HandleList()+0x3d>
  3d:	48 01 c3             	add    %rax,%rbx
  40:	e8 00 00 00 00       	call   45 <RemoteConfig::HandleList()+0x45>
  45:	48 89 c7             	mov    %rax,%rdi
  48:	e8 00 00 00 00       	call   4d <RemoteConfig::HandleList()+0x4d>
  4d:	89 c2                	mov    %eax,%edx
  4f:	41 89 c1             	mov    %eax,%r9d
  52:	0f b6 f4             	movzbl %ah,%esi
  55:	0f b6 c8             	movzbl %al,%ecx
  58:	41 c1 e9 10          	shr    $0x10,%r9d
  5c:	c1 ea 18             	shr    $0x18,%edx
  5f:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 66 <RemoteConfig::HandleList()+0x66>
  66:	41 89 f0             	mov    %esi,%r8d
  69:	45 0f b6 c9          	movzbl %r9b,%r9d
  6d:	74 2d                	je     9c <RemoteConfig::HandleList()+0x9c>
  6f:	50                   	push   %rax
  70:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 77 <RemoteConfig::HandleList()+0x77>
  77:	be f8 03 00 00       	mov    $0x3f8,%esi
  7c:	4c 89 e7             	mov    %r12,%rdi
  7f:	50                   	push   %rax
  80:	31 c0                	xor    %eax,%eax
  82:	41 56                	push   %r14
  84:	41 55                	push   %r13
  86:	53                   	push   %rbx
  87:	52                   	push   %rdx
  88:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 8f <RemoteConfig::HandleList()+0x8f>
  8f:	e8 00 00 00 00       	call   94 <RemoteConfig::HandleList()+0x94>
  94:	48 83 c4 30          	add    $0x30,%rsp
  98:	89 c3                	mov    %eax,%ebx
  9a:	eb 22                	jmp    be <RemoteConfig::HandleList()+0xbe>
  9c:	41 56                	push   %r14
  9e:	be f8 03 00 00       	mov    $0x3f8,%esi
  a3:	4c 89 e7             	mov    %r12,%rdi
  a6:	31 c0                	xor    %eax,%eax
  a8:	41 55                	push   %r13
  aa:	53                   	push   %rbx
  ab:	52                   	push   %rdx
  ac:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # b3 <RemoteConfig::HandleList()+0xb3>
  b3:	e8 00 00 00 00       	call   b8 <RemoteConfig::HandleList()+0xb8>
  b8:	48 83 c4 20          	add    $0x20,%rsp
  bc:	89 c3                	mov    %eax,%ebx
  be:	8b 45 1c             	mov    0x1c(%rbp),%eax
  c1:	83 f8 05             	cmp    $0x5,%eax
  c4:	75 1a                	jne    e0 <RemoteConfig::HandleList()+0xe0>
  c6:	e8 00 00 00 00       	call   cb <RemoteConfig::HandleList()+0xcb>
  cb:	8b 75 14             	mov    0x14(%rbp),%esi
  ce:	44 8b 45 18          	mov    0x18(%rbp),%r8d
  d2:	0f b7 cb             	movzwl %bx,%ecx
  d5:	48 89 c7             	mov    %rax,%rdi
  d8:	41 b9 05 29 00 00    	mov    $0x2905,%r9d
  de:	eb 2a                	jmp    10a <RemoteConfig::HandleList()+0x10a>
  e0:	83 f8 06             	cmp    $0x6,%eax
  e3:	75 35                	jne    11a <RemoteConfig::HandleList()+0x11a>
  e5:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # ec <RemoteConfig::HandleList()+0xec>
  ec:	80 78 06 2a          	cmpb   $0x2a,0x6(%rax)
  f0:	75 28                	jne    11a <RemoteConfig::HandleList()+0x11a>
  f2:	e8 00 00 00 00       	call   f7 <RemoteConfig::HandleList()+0xf7>
  f7:	8b 75 14             	mov    0x14(%rbp),%esi
  fa:	0f b7 cb             	movzwl %bx,%ecx
  fd:	41 83 c8 ff          	or     $0xffffffff,%r8d
 101:	48 89 c7             	mov    %rax,%rdi
 104:	41 b9 05 29 00 00    	mov    $0x2905,%r9d
 10a:	5b                   	pop    %rbx
 10b:	4c 89 e2             	mov    %r12,%rdx
 10e:	5d                   	pop    %rbp
 10f:	41 5c                	pop    %r12
 111:	41 5d                	pop    %r13
 113:	41 5e                	pop    %r14
 115:	e9 00 00 00 00       	jmp    11a <RemoteConfig::HandleList()+0x11a>
 11a:	5b                   	pop    %rbx
 11b:	5d                   	pop    %rbp
 11c:	41 5c                	pop    %r12
 11e:	41 5d                	pop    %r13
 120:	41 5e                	pop    %r14
 122:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig16HandleDisplaySetEv:

0000000000000000 <RemoteConfig::HandleDisplaySet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	83 7f 1c 09          	cmpl   $0x9,0x1c(%rdi)
   8:	75 20                	jne    2a <RemoteConfig::HandleDisplaySet()+0x2a>
   a:	50                   	push   %rax
   b:	e8 00 00 00 00       	call   10 <RemoteConfig::HandleDisplaySet()+0x10>
  10:	31 f6                	xor    %esi,%esi
  12:	48 89 c7             	mov    %rax,%rdi
  15:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1c <RemoteConfig::HandleDisplaySet()+0x1c>
  1c:	80 78 09 30          	cmpb   $0x30,0x9(%rax)
  20:	5a                   	pop    %rdx
  21:	40 0f 94 c6          	sete   %sil
  25:	e9 00 00 00 00       	jmp    2a <RemoteConfig::HandleDisplaySet()+0x2a>
  2a:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig16HandleDisplayGetEv:

0000000000000000 <RemoteConfig::HandleDisplayGet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	83 7f 1c 08          	cmpl   $0x8,0x1c(%rdi)
   8:	75 6e                	jne    78 <RemoteConfig::HandleDisplayGet()+0x78>
   a:	41 54                	push   %r12
   c:	53                   	push   %rbx
   d:	48 89 fb             	mov    %rdi,%rbx
  10:	50                   	push   %rax
  11:	e8 00 00 00 00       	call   16 <RemoteConfig::HandleDisplayGet()+0x16>
  16:	48 89 c7             	mov    %rax,%rdi
  19:	e8 00 00 00 00       	call   1e <RemoteConfig::HandleDisplayGet()+0x1e>
  1e:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 25 <RemoteConfig::HandleDisplayGet()+0x25>
  25:	be ff 03 00 00       	mov    $0x3ff,%esi
  2a:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 31 <RemoteConfig::HandleDisplayGet()+0x31>
  31:	84 c0                	test   %al,%al
  33:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3a <RemoteConfig::HandleDisplayGet()+0x3a>
  3a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 41 <RemoteConfig::HandleDisplayGet()+0x41>
  41:	48 0f 45 c8          	cmovne %rax,%rcx
  45:	31 c0                	xor    %eax,%eax
  47:	e8 00 00 00 00       	call   4c <RemoteConfig::HandleDisplayGet()+0x4c>
  4c:	41 89 c4             	mov    %eax,%r12d
  4f:	e8 00 00 00 00       	call   54 <RemoteConfig::HandleDisplayGet()+0x54>
  54:	8b 73 14             	mov    0x14(%rbx),%esi
  57:	44 8b 43 18          	mov    0x18(%rbx),%r8d
  5b:	44 89 e1             	mov    %r12d,%ecx
  5e:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 65 <RemoteConfig::HandleDisplayGet()+0x65>
  65:	48 89 c7             	mov    %rax,%rdi
  68:	41 5a                	pop    %r10
  6a:	41 b9 05 29 00 00    	mov    $0x2905,%r9d
  70:	5b                   	pop    %rbx
  71:	41 5c                	pop    %r12
  73:	e9 00 00 00 00       	jmp    78 <RemoteConfig::HandleDisplayGet()+0x78>
  78:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig9HandleGetEPvj:

0000000000000000 <RemoteConfig::HandleGet(void*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	55                   	push   %rbp
   9:	48 89 f5             	mov    %rsi,%rbp
   c:	53                   	push   %rbx
   d:	48 89 fb             	mov    %rdi,%rbx
  10:	48 83 ec 28          	sub    $0x28,%rsp
  14:	89 54 24 0c          	mov    %edx,0xc(%rsp)
  18:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
  1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  24:	00 00 
  26:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  2b:	31 c0                	xor    %eax,%eax
  2d:	48 85 f6             	test   %rsi,%rsi
  30:	75 47                	jne    79 <RemoteConfig::HandleGet(void*, unsigned int)+0x79>
  32:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 39 <RemoteConfig::HandleGet(void*, unsigned int)+0x39>
  39:	4c 89 ea             	mov    %r13,%rdx
  3c:	c7 44 24 10 fc 03 00 	movl   $0x3fc,0x10(%rsp)
  43:	00 
  44:	48 8d 70 05          	lea    0x5(%rax),%rsi
  48:	e8 00 00 00 00       	call   4d <RemoteConfig::HandleGet(void*, unsigned int)+0x4d>
  4d:	85 c0                	test   %eax,%eax
  4f:	79 6f                	jns    c0 <RemoteConfig::HandleGet(void*, unsigned int)+0xc0>
  51:	e8 00 00 00 00       	call   56 <RemoteConfig::HandleGet(void*, unsigned int)+0x56>
  56:	8b 73 14             	mov    0x14(%rbx),%esi
  59:	44 8b 43 18          	mov    0x18(%rbx),%r8d
  5d:	41 b9 05 29 00 00    	mov    $0x2905,%r9d
  63:	48 89 c7             	mov    %rax,%rdi
  66:	b9 0b 00 00 00       	mov    $0xb,%ecx
  6b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 72 <RemoteConfig::HandleGet(void*, unsigned int)+0x72>
  72:	e8 00 00 00 00       	call   77 <RemoteConfig::HandleGet(void*, unsigned int)+0x77>
  77:	eb 40                	jmp    b9 <RemoteConfig::HandleGet(void*, unsigned int)+0xb9>
  79:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  7d:	4c 89 ea             	mov    %r13,%rdx
  80:	48 89 35 00 00 00 00 	mov    %rsi,0x0(%rip)        # 87 <RemoteConfig::HandleGet(void*, unsigned int)+0x87>
  87:	89 44 24 10          	mov    %eax,0x10(%rsp)
  8b:	e8 00 00 00 00       	call   90 <RemoteConfig::HandleGet(void*, unsigned int)+0x90>
  90:	85 c0                	test   %eax,%eax
  92:	79 2c                	jns    c0 <RemoteConfig::HandleGet(void*, unsigned int)+0xc0>
  94:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  99:	48 8d 7c 24 14       	lea    0x14(%rsp),%rdi
  9e:	c7 44 24 14 0b 00 00 	movl   $0xb,0x14(%rsp)
  a5:	00 
  a6:	e8 00 00 00 00       	call   ab <RemoteConfig::HandleGet(void*, unsigned int)+0xab>
  ab:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # b2 <RemoteConfig::HandleGet(void*, unsigned int)+0xb2>
  b2:	48 89 ef             	mov    %rbp,%rdi
  b5:	8b 08                	mov    (%rax),%ecx
  b7:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
  b9:	b8 0c 00 00 00       	mov    $0xc,%eax
  be:	eb 76                	jmp    136 <RemoteConfig::HandleGet(void*, unsigned int)+0x136>
  c0:	48 98                	cltq   
  c2:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # c9 <RemoteConfig::HandleGet(void*, unsigned int)+0xc9>
  c9:	48 6b c0 30          	imul   $0x30,%rax,%rax
  cd:	48 01 d0             	add    %rdx,%rax
  d0:	48 8b 78 08          	mov    0x8(%rax),%rdi
  d4:	48 8b 00             	mov    (%rax),%rax
  d7:	48 01 df             	add    %rbx,%rdi
  da:	a8 01                	test   $0x1,%al
  dc:	74 08                	je     e6 <RemoteConfig::HandleGet(void*, unsigned int)+0xe6>
  de:	48 8b 17             	mov    (%rdi),%rdx
  e1:	48 8b 44 02 ff       	mov    -0x1(%rdx,%rax,1),%rax
  e6:	4c 89 ee             	mov    %r13,%rsi
  e9:	ff d0                	call   *%rax
  eb:	48 85 ed             	test   %rbp,%rbp
  ee:	4c 8b 25 00 00 00 00 	mov    0x0(%rip),%r12        # f5 <RemoteConfig::HandleGet(void*, unsigned int)+0xf5>
  f5:	75 24                	jne    11b <RemoteConfig::HandleGet(void*, unsigned int)+0x11b>
  f7:	e8 00 00 00 00       	call   fc <RemoteConfig::HandleGet(void*, unsigned int)+0xfc>
  fc:	0f b7 4c 24 10       	movzwl 0x10(%rsp),%ecx
 101:	8b 73 14             	mov    0x14(%rbx),%esi
 104:	4c 89 e2             	mov    %r12,%rdx
 107:	44 8b 43 18          	mov    0x18(%rbx),%r8d
 10b:	48 89 c7             	mov    %rax,%rdi
 10e:	41 b9 05 29 00 00    	mov    $0x2905,%r9d
 114:	e8 00 00 00 00       	call   119 <RemoteConfig::HandleGet(void*, unsigned int)+0x119>
 119:	eb 17                	jmp    132 <RemoteConfig::HandleGet(void*, unsigned int)+0x132>
 11b:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
 120:	4c 89 ef             	mov    %r13,%rdi
 123:	e8 00 00 00 00       	call   128 <RemoteConfig::HandleGet(void*, unsigned int)+0x128>
 128:	48 89 ef             	mov    %rbp,%rdi
 12b:	4c 89 e6             	mov    %r12,%rsi
 12e:	8b 08                	mov    (%rax),%ecx
 130:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
 132:	8b 44 24 10          	mov    0x10(%rsp),%eax
 136:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
 13b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 142:	00 00 
 144:	74 05                	je     14b <RemoteConfig::HandleGet(void*, unsigned int)+0x14b>
 146:	e8 00 00 00 00       	call   14b <RemoteConfig::HandleGet(void*, unsigned int)+0x14b>
 14b:	48 83 c4 28          	add    $0x28,%rsp
 14f:	5b                   	pop    %rbx
 150:	5d                   	pop    %rbp
 151:	41 5c                	pop    %r12
 153:	41 5d                	pop    %r13
 155:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig19HandleGetRconfigTxtERj:

0000000000000000 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 38          	sub    $0x38,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 89 e5             	mov    %rsp,%rbp
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x26>
  26:	48 89 ef             	mov    %rbp,%rdi
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	e8 00 00 00 00       	call   31 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x31>
  31:	4c 89 e1             	mov    %r12,%rcx
  34:	ba 00 04 00 00       	mov    $0x400,%edx
  39:	48 89 ef             	mov    %rbp,%rdi
  3c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 43 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x43>
  43:	e8 00 00 00 00       	call   48 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x48>
  48:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  54:	00 00 
  56:	74 05                	je     5d <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x5d>
  58:	e8 00 00 00 00       	call   5d <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x5d>
  5d:	48 83 c4 38          	add    $0x38,%rsp
  61:	5d                   	pop    %rbp
  62:	41 5c                	pop    %r12
  64:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig19HandleGetNetworkTxtERj:

0000000000000000 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 78          	sub    $0x78,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 89 e5             	mov    %rsp,%rbp
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x26>
  26:	48 89 ef             	mov    %rbp,%rdi
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	e8 00 00 00 00       	call   31 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x31>
  31:	4c 89 e1             	mov    %r12,%rcx
  34:	ba 00 04 00 00       	mov    $0x400,%edx
  39:	48 89 ef             	mov    %rbp,%rdi
  3c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 43 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x43>
  43:	e8 00 00 00 00       	call   48 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x48>
  48:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
  4d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  54:	00 00 
  56:	74 05                	je     5d <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x5d>
  58:	e8 00 00 00 00       	call   5d <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x5d>
  5d:	48 83 c4 78          	add    $0x78,%rsp
  61:	5d                   	pop    %rbp
  62:	41 5c                	pop    %r12
  64:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleGetArtnetTxtERj:

0000000000000000 <RemoteConfig::HandleGetArtnetTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
  21:	00 
  22:	31 c0                	xor    %eax,%eax
  24:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  29:	e8 00 00 00 00       	call   2e <RemoteConfig::HandleGetArtnetTxt(unsigned int&)+0x2e>
  2e:	48 89 ef             	mov    %rbp,%rdi
  31:	48 89 c6             	mov    %rax,%rsi
  34:	e8 00 00 00 00       	call   39 <RemoteConfig::HandleGetArtnetTxt(unsigned int&)+0x39>
  39:	4c 89 e1             	mov    %r12,%rcx
  3c:	ba 00 04 00 00       	mov    $0x400,%edx
  41:	48 89 ef             	mov    %rbp,%rdi
  44:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 4b <RemoteConfig::HandleGetArtnetTxt(unsigned int&)+0x4b>
  4b:	e8 00 00 00 00       	call   50 <RemoteConfig::HandleGetArtnetTxt(unsigned int&)+0x50>
  50:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
  57:	00 
  58:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  5f:	00 00 
  61:	74 05                	je     68 <RemoteConfig::HandleGetArtnetTxt(unsigned int&)+0x68>
  63:	e8 00 00 00 00       	call   68 <RemoteConfig::HandleGetArtnetTxt(unsigned int&)+0x68>
  68:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  6f:	5d                   	pop    %rbp
  70:	41 5c                	pop    %r12
  72:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig16HandleGetE131TxtERj:

0000000000000000 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 38          	sub    $0x38,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 89 e5             	mov    %rsp,%rbp
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x26>
  26:	48 89 ef             	mov    %rbp,%rdi
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	e8 00 00 00 00       	call   31 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x31>
  31:	4c 89 e1             	mov    %r12,%rcx
  34:	ba 00 04 00 00       	mov    $0x400,%edx
  39:	48 89 ef             	mov    %rbp,%rdi
  3c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 43 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x43>
  43:	e8 00 00 00 00       	call   48 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x48>
  48:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  54:	00 00 
  56:	74 05                	je     5d <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x5d>
  58:	e8 00 00 00 00       	call   5d <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x5d>
  5d:	48 83 c4 38          	add    $0x38,%rsp
  61:	5d                   	pop    %rbp
  62:	41 5c                	pop    %r12
  64:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig15HandleGetOscTxtERj:

0000000000000000 <RemoteConfig::HandleGetOscTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 84 24 98 01 00 	mov    %rax,0x198(%rsp)
  21:	00 
  22:	31 c0                	xor    %eax,%eax
  24:	48 89 e5             	mov    %rsp,%rbp
  27:	e8 00 00 00 00       	call   2c <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x2c>
  2c:	48 89 ef             	mov    %rbp,%rdi
  2f:	48 89 c6             	mov    %rax,%rsi
  32:	e8 00 00 00 00       	call   37 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x37>
  37:	4c 89 e1             	mov    %r12,%rcx
  3a:	ba 00 04 00 00       	mov    $0x400,%edx
  3f:	48 89 ef             	mov    %rbp,%rdi
  42:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 49 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x49>
  49:	e8 00 00 00 00       	call   4e <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x4e>
  4e:	48 8b 84 24 98 01 00 	mov    0x198(%rsp),%rax
  55:	00 
  56:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  5d:	00 00 
  5f:	74 05                	je     66 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x66>
  61:	e8 00 00 00 00       	call   66 <RemoteConfig::HandleGetOscTxt(unsigned int&)+0x66>
  66:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
  6d:	5d                   	pop    %rbp
  6e:	41 5c                	pop    %r12
  70:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig19HandleGetOscClntTxtERj:

0000000000000000 <RemoteConfig::HandleGetOscClntTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 81 ec b8 03 00 00 	sub    $0x3b8,%rsp
  11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  18:	00 00 
  1a:	48 89 84 24 a8 03 00 	mov    %rax,0x3a8(%rsp)
  21:	00 
  22:	31 c0                	xor    %eax,%eax
  24:	48 89 e5             	mov    %rsp,%rbp
  27:	e8 00 00 00 00       	call   2c <RemoteConfig::HandleGetOscClntTxt(unsigned int&)+0x2c>
  2c:	48 89 ef             	mov    %rbp,%rdi
  2f:	48 89 c6             	mov    %rax,%rsi
  32:	e8 00 00 00 00       	call   37 <RemoteConfig::HandleGetOscClntTxt(unsigned int&)+0x37>
  37:	4c 89 e1             	mov    %r12,%rcx
  3a:	ba 00 04 00 00       	mov    $0x400,%edx
  3f:	48 89 ef             	mov    %rbp,%rdi
  42:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 49 <RemoteConfig::HandleGetOscClntTxt(unsigned int&)+0x49>
  49:	e8 00 00 00 00       	call   4e <RemoteConfig::HandleGetOscClntTxt(unsigned int&)+0x4e>
  4e:	48 8b 84 24 a8 03 00 	mov    0x3a8(%rsp),%rax
  55:	00 
  56:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  5d:	00 00 
  5f:	74 05                	je     66 <RemoteConfig::HandleGetOscClntTxt(unsigned int&)+0x66>
  61:	e8 00 00 00 00       	call   66 <RemoteConfig::HandleGetOscClntTxt(unsigned int&)+0x66>
  66:	48 81 c4 b8 03 00 00 	add    $0x3b8,%rsp
  6d:	5d                   	pop    %rbp
  6e:	41 5c                	pop    %r12
  70:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig21HandleGetRdmDeviceTxtERj:

0000000000000000 <RemoteConfig::HandleGetRdmDeviceTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 48          	sub    $0x48,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 89 e5             	mov    %rsp,%rbp
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::HandleGetRdmDeviceTxt(unsigned int&)+0x26>
  26:	48 89 ef             	mov    %rbp,%rdi
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	e8 00 00 00 00       	call   31 <RemoteConfig::HandleGetRdmDeviceTxt(unsigned int&)+0x31>
  31:	4c 89 e1             	mov    %r12,%rcx
  34:	ba 00 04 00 00       	mov    $0x400,%edx
  39:	48 89 ef             	mov    %rbp,%rdi
  3c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 43 <RemoteConfig::HandleGetRdmDeviceTxt(unsigned int&)+0x43>
  43:	e8 00 00 00 00       	call   48 <RemoteConfig::HandleGetRdmDeviceTxt(unsigned int&)+0x48>
  48:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  4d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  54:	00 00 
  56:	74 05                	je     5d <RemoteConfig::HandleGetRdmDeviceTxt(unsigned int&)+0x5d>
  58:	e8 00 00 00 00       	call   5d <RemoteConfig::HandleGetRdmDeviceTxt(unsigned int&)+0x5d>
  5d:	48 83 c4 48          	add    $0x48,%rsp
  61:	5d                   	pop    %rbp
  62:	41 5c                	pop    %r12
  64:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleGetParamsTxtERj:

0000000000000000 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 28          	sub    $0x28,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 89 e5             	mov    %rsp,%rbp
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x26>
  26:	48 89 ef             	mov    %rbp,%rdi
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	e8 00 00 00 00       	call   31 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x31>
  31:	4c 89 e1             	mov    %r12,%rcx
  34:	ba 00 04 00 00       	mov    $0x400,%edx
  39:	48 89 ef             	mov    %rbp,%rdi
  3c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 43 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x43>
  43:	e8 00 00 00 00       	call   48 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x48>
  48:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  54:	00 00 
  56:	74 05                	je     5d <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x5d>
  58:	e8 00 00 00 00       	call   5d <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x5d>
  5d:	48 83 c4 28          	add    $0x28,%rsp
  61:	5d                   	pop    %rbp
  62:	41 5c                	pop    %r12
  64:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig19HandleGetDevicesTxtERj:

0000000000000000 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 48          	sub    $0x48,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 89 e5             	mov    %rsp,%rbp
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x26>
  26:	48 89 ef             	mov    %rbp,%rdi
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	e8 00 00 00 00       	call   31 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x31>
  31:	48 89 ef             	mov    %rbp,%rdi
  34:	e8 00 00 00 00       	call   39 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x39>
  39:	84 c0                	test   %al,%al
  3b:	74 25                	je     62 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x62>
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	e8 00 00 00 00       	call   45 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x45>
  45:	84 c0                	test   %al,%al
  47:	74 19                	je     62 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x62>
  49:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 50 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x50>
  50:	4c 89 e1             	mov    %r12,%rcx
  53:	ba 00 04 00 00       	mov    $0x400,%edx
  58:	48 89 ef             	mov    %rbp,%rdi
  5b:	e8 00 00 00 00       	call   60 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x60>
  60:	eb 2c                	jmp    8e <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x8e>
  62:	e8 00 00 00 00       	call   67 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x67>
  67:	48 8d 6c 24 18       	lea    0x18(%rsp),%rbp
  6c:	48 89 c6             	mov    %rax,%rsi
  6f:	48 89 ef             	mov    %rbp,%rdi
  72:	e8 00 00 00 00       	call   77 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x77>
  77:	4c 89 e1             	mov    %r12,%rcx
  7a:	ba 00 04 00 00       	mov    $0x400,%edx
  7f:	48 89 ef             	mov    %rbp,%rdi
  82:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 89 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x89>
  89:	e8 00 00 00 00       	call   8e <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x8e>
  8e:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  93:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  9a:	00 00 
  9c:	74 05                	je     a3 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0xa3>
  9e:	e8 00 00 00 00       	call   a3 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0xa3>
  a3:	48 83 c4 48          	add    $0x48,%rsp
  a7:	5d                   	pop    %rbp
  a8:	41 5c                	pop    %r12
  aa:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig15HandleGetLtcTxtERj:

0000000000000000 <RemoteConfig::HandleGetLtcTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 48          	sub    $0x48,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  23:	e8 00 00 00 00       	call   28 <RemoteConfig::HandleGetLtcTxt(unsigned int&)+0x28>
  28:	48 89 ef             	mov    %rbp,%rdi
  2b:	48 89 c6             	mov    %rax,%rsi
  2e:	e8 00 00 00 00       	call   33 <RemoteConfig::HandleGetLtcTxt(unsigned int&)+0x33>
  33:	4c 89 e1             	mov    %r12,%rcx
  36:	ba 00 04 00 00       	mov    $0x400,%edx
  3b:	48 89 ef             	mov    %rbp,%rdi
  3e:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 45 <RemoteConfig::HandleGetLtcTxt(unsigned int&)+0x45>
  45:	e8 00 00 00 00       	call   4a <RemoteConfig::HandleGetLtcTxt(unsigned int&)+0x4a>
  4a:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  4f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  56:	00 00 
  58:	74 05                	je     5f <RemoteConfig::HandleGetLtcTxt(unsigned int&)+0x5f>
  5a:	e8 00 00 00 00       	call   5f <RemoteConfig::HandleGetLtcTxt(unsigned int&)+0x5f>
  5f:	48 83 c4 48          	add    $0x48,%rsp
  63:	5d                   	pop    %rbp
  64:	41 5c                	pop    %r12
  66:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig20HandleGetLdisplayTxtERj:

0000000000000000 <RemoteConfig::HandleGetLdisplayTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 48          	sub    $0x48,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 89 e5             	mov    %rsp,%rbp
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::HandleGetLdisplayTxt(unsigned int&)+0x26>
  26:	48 89 ef             	mov    %rbp,%rdi
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	e8 00 00 00 00       	call   31 <RemoteConfig::HandleGetLdisplayTxt(unsigned int&)+0x31>
  31:	4c 89 e1             	mov    %r12,%rcx
  34:	ba 00 04 00 00       	mov    $0x400,%edx
  39:	48 89 ef             	mov    %rbp,%rdi
  3c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 43 <RemoteConfig::HandleGetLdisplayTxt(unsigned int&)+0x43>
  43:	e8 00 00 00 00       	call   48 <RemoteConfig::HandleGetLdisplayTxt(unsigned int&)+0x48>
  48:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  4d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  54:	00 00 
  56:	74 05                	je     5d <RemoteConfig::HandleGetLdisplayTxt(unsigned int&)+0x5d>
  58:	e8 00 00 00 00       	call   5d <RemoteConfig::HandleGetLdisplayTxt(unsigned int&)+0x5d>
  5d:	48 83 c4 48          	add    $0x48,%rsp
  61:	5d                   	pop    %rbp
  62:	41 5c                	pop    %r12
  64:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig17HandleGetTCNetTxtERj:

0000000000000000 <RemoteConfig::HandleGetTCNetTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 28          	sub    $0x28,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 89 e5             	mov    %rsp,%rbp
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::HandleGetTCNetTxt(unsigned int&)+0x26>
  26:	48 89 ef             	mov    %rbp,%rdi
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	e8 00 00 00 00       	call   31 <RemoteConfig::HandleGetTCNetTxt(unsigned int&)+0x31>
  31:	4c 89 e1             	mov    %r12,%rcx
  34:	ba 00 04 00 00       	mov    $0x400,%edx
  39:	48 89 ef             	mov    %rbp,%rdi
  3c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 43 <RemoteConfig::HandleGetTCNetTxt(unsigned int&)+0x43>
  43:	e8 00 00 00 00       	call   48 <RemoteConfig::HandleGetTCNetTxt(unsigned int&)+0x48>
  48:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  54:	00 00 
  56:	74 05                	je     5d <RemoteConfig::HandleGetTCNetTxt(unsigned int&)+0x5d>
  58:	e8 00 00 00 00       	call   5d <RemoteConfig::HandleGetTCNetTxt(unsigned int&)+0x5d>
  5d:	48 83 c4 28          	add    $0x28,%rsp
  61:	5d                   	pop    %rbp
  62:	41 5c                	pop    %r12
  64:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig15HandleGetGpsTxtERj:

0000000000000000 <RemoteConfig::HandleGetGpsTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 28          	sub    $0x28,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 89 e5             	mov    %rsp,%rbp
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::HandleGetGpsTxt(unsigned int&)+0x26>
  26:	48 89 ef             	mov    %rbp,%rdi
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	e8 00 00 00 00       	call   31 <RemoteConfig::HandleGetGpsTxt(unsigned int&)+0x31>
  31:	4c 89 e1             	mov    %r12,%rcx
  34:	ba 00 04 00 00       	mov    $0x400,%edx
  39:	48 89 ef             	mov    %rbp,%rdi
  3c:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 43 <RemoteConfig::HandleGetGpsTxt(unsigned int&)+0x43>
  43:	e8 00 00 00 00       	call   48 <RemoteConfig::HandleGetGpsTxt(unsigned int&)+0x48>
  48:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  54:	00 00 
  56:	74 05                	je     5d <RemoteConfig::HandleGetGpsTxt(unsigned int&)+0x5d>
  58:	e8 00 00 00 00       	call   5d <RemoteConfig::HandleGetGpsTxt(unsigned int&)+0x5d>
  5d:	48 83 c4 28          	add    $0x28,%rsp
  61:	5d                   	pop    %rbp
  62:	41 5c                	pop    %r12
  64:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleGetLtcEtcTxtERj:

0000000000000000 <RemoteConfig::HandleGetLtcEtcTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 38          	sub    $0x38,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  23:	e8 00 00 00 00       	call   28 <RemoteConfig::HandleGetLtcEtcTxt(unsigned int&)+0x28>
  28:	48 89 ef             	mov    %rbp,%rdi
  2b:	48 89 c6             	mov    %rax,%rsi
  2e:	e8 00 00 00 00       	call   33 <RemoteConfig::HandleGetLtcEtcTxt(unsigned int&)+0x33>
  33:	4c 89 e1             	mov    %r12,%rcx
  36:	ba 00 04 00 00       	mov    $0x400,%edx
  3b:	48 89 ef             	mov    %rbp,%rdi
  3e:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 45 <RemoteConfig::HandleGetLtcEtcTxt(unsigned int&)+0x45>
  45:	e8 00 00 00 00       	call   4a <RemoteConfig::HandleGetLtcEtcTxt(unsigned int&)+0x4a>
  4a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  56:	00 00 
  58:	74 05                	je     5f <RemoteConfig::HandleGetLtcEtcTxt(unsigned int&)+0x5f>
  5a:	e8 00 00 00 00       	call   5f <RemoteConfig::HandleGetLtcEtcTxt(unsigned int&)+0x5f>
  5f:	48 83 c4 38          	add    $0x38,%rsp
  63:	5d                   	pop    %rbp
  64:	41 5c                	pop    %r12
  66:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig19HandleGetDisplayTxtERj:

0000000000000000 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 48          	sub    $0x48,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  23:	e8 00 00 00 00       	call   28 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>
  28:	48 89 ef             	mov    %rbp,%rdi
  2b:	48 89 c6             	mov    %rax,%rsi
  2e:	e8 00 00 00 00       	call   33 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x33>
  33:	4c 89 e1             	mov    %r12,%rcx
  36:	ba 00 04 00 00       	mov    $0x400,%edx
  3b:	48 89 ef             	mov    %rbp,%rdi
  3e:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 45 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x45>
  45:	e8 00 00 00 00       	call   4a <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x4a>
  4a:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  4f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  56:	00 00 
  58:	74 05                	je     5f <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x5f>
  5a:	e8 00 00 00 00       	call   5f <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x5f>
  5f:	48 83 c4 48          	add    $0x48,%rsp
  63:	5d                   	pop    %rbp
  64:	41 5c                	pop    %r12
  66:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig20HandleGetSparkFunTxtERj:

0000000000000000 <RemoteConfig::HandleGetSparkFunTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 38          	sub    $0x38,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  23:	e8 00 00 00 00       	call   28 <RemoteConfig::HandleGetSparkFunTxt(unsigned int&)+0x28>
  28:	48 89 ef             	mov    %rbp,%rdi
  2b:	48 89 c6             	mov    %rax,%rsi
  2e:	e8 00 00 00 00       	call   33 <RemoteConfig::HandleGetSparkFunTxt(unsigned int&)+0x33>
  33:	4c 89 e1             	mov    %r12,%rcx
  36:	ba 00 04 00 00       	mov    $0x400,%edx
  3b:	48 89 ef             	mov    %rbp,%rdi
  3e:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 45 <RemoteConfig::HandleGetSparkFunTxt(unsigned int&)+0x45>
  45:	41 b8 ff 00 00 00    	mov    $0xff,%r8d
  4b:	e8 00 00 00 00       	call   50 <RemoteConfig::HandleGetSparkFunTxt(unsigned int&)+0x50>
  50:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  55:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  5c:	00 00 
  5e:	74 05                	je     65 <RemoteConfig::HandleGetSparkFunTxt(unsigned int&)+0x65>
  60:	e8 00 00 00 00       	call   65 <RemoteConfig::HandleGetSparkFunTxt(unsigned int&)+0x65>
  65:	48 83 c4 38          	add    $0x38,%rsp
  69:	5d                   	pop    %rbp
  6a:	41 5c                	pop    %r12
  6c:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig17HandleGetMotorTxtEjRj:

0000000000000000 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	55                   	push   %rbp
   9:	89 f5                	mov    %esi,%ebp
   b:	53                   	push   %rbx
   c:	48 89 d3             	mov    %rdx,%rbx
   f:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 84 24 e8 00 00 	mov    %rax,0xe8(%rsp)
  26:	00 
  27:	31 c0                	xor    %eax,%eax
  29:	4c 8d 64 24 18       	lea    0x18(%rsp),%r12
  2e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
  35:	00 
  36:	e8 00 00 00 00       	call   3b <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x3b>
  3b:	4c 89 e7             	mov    %r12,%rdi
  3e:	48 89 c6             	mov    %rax,%rsi
  41:	e8 00 00 00 00       	call   46 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x46>
  46:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  4b:	41 89 e8             	mov    %ebp,%r8d
  4e:	4c 89 e7             	mov    %r12,%rdi
  51:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 58 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x58>
  58:	ba 00 04 00 00       	mov    $0x400,%edx
  5d:	4c 8d a4 24 a0 00 00 	lea    0xa0(%rsp),%r12
  64:	00 
  65:	e8 00 00 00 00       	call   6a <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x6a>
  6a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  71:	00 
  72:	e8 00 00 00 00       	call   77 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x77>
  77:	4c 89 e7             	mov    %r12,%rdi
  7a:	48 89 c6             	mov    %rax,%rsi
  7d:	e8 00 00 00 00       	call   82 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x82>
  82:	89 ee                	mov    %ebp,%esi
  84:	8b 54 24 08          	mov    0x8(%rsp),%edx
  88:	4c 8d 44 24 0c       	lea    0xc(%rsp),%r8
  8d:	48 03 15 00 00 00 00 	add    0x0(%rip),%rdx        # 94 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x94>
  94:	4c 89 e7             	mov    %r12,%rdi
  97:	b9 00 04 00 00       	mov    $0x400,%ecx
  9c:	2b 4c 24 08          	sub    0x8(%rsp),%ecx
  a0:	e8 00 00 00 00       	call   a5 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0xa5>
  a5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
  ac:	00 
  ad:	e8 00 00 00 00       	call   b2 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0xb2>
  b2:	48 89 c6             	mov    %rax,%rsi
  b5:	48 85 c0             	test   %rax,%rax
  b8:	74 04                	je     be <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0xbe>
  ba:	48 83 c6 08          	add    $0x8,%rsi
  be:	4c 8d 6c 24 38       	lea    0x38(%rsp),%r13
  c3:	4c 89 ef             	mov    %r13,%rdi
  c6:	e8 00 00 00 00       	call   cb <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0xcb>
  cb:	8b 44 24 08          	mov    0x8(%rsp),%eax
  cf:	b9 00 04 00 00       	mov    $0x400,%ecx
  d4:	89 ee                	mov    %ebp,%esi
  d6:	03 44 24 0c          	add    0xc(%rsp),%eax
  da:	8b 54 24 08          	mov    0x8(%rsp),%edx
  de:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
  e3:	4c 89 ef             	mov    %r13,%rdi
  e6:	29 c1                	sub    %eax,%ecx
  e8:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  ec:	48 01 c2             	add    %rax,%rdx
  ef:	48 03 15 00 00 00 00 	add    0x0(%rip),%rdx        # f6 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0xf6>
  f6:	e8 00 00 00 00       	call   fb <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0xfb>
  fb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%rsp)
 102:	00 
 103:	e8 00 00 00 00       	call   108 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x108>
 108:	48 89 c6             	mov    %rax,%rsi
 10b:	48 85 c0             	test   %rax,%rax
 10e:	74 04                	je     114 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x114>
 110:	48 83 c6 10          	add    $0x10,%rsi
 114:	4c 8d 6c 24 68       	lea    0x68(%rsp),%r13
 119:	4c 89 ef             	mov    %r13,%rdi
 11c:	e8 00 00 00 00       	call   121 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x121>
 121:	8b 44 24 08          	mov    0x8(%rsp),%eax
 125:	b9 00 04 00 00       	mov    $0x400,%ecx
 12a:	89 ee                	mov    %ebp,%esi
 12c:	03 44 24 0c          	add    0xc(%rsp),%eax
 130:	8b 54 24 08          	mov    0x8(%rsp),%edx
 134:	4c 89 ef             	mov    %r13,%rdi
 137:	4c 8d 44 24 14       	lea    0x14(%rsp),%r8
 13c:	29 c1                	sub    %eax,%ecx
 13e:	8b 44 24 0c          	mov    0xc(%rsp),%eax
 142:	2b 4c 24 10          	sub    0x10(%rsp),%ecx
 146:	48 01 c2             	add    %rax,%rdx
 149:	8b 44 24 10          	mov    0x10(%rsp),%eax
 14d:	48 01 c2             	add    %rax,%rdx
 150:	48 03 15 00 00 00 00 	add    0x0(%rip),%rdx        # 157 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x157>
 157:	e8 00 00 00 00       	call   15c <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x15c>
 15c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
 160:	03 44 24 08          	add    0x8(%rsp),%eax
 164:	4c 89 e7             	mov    %r12,%rdi
 167:	03 44 24 10          	add    0x10(%rsp),%eax
 16b:	03 44 24 14          	add    0x14(%rsp),%eax
 16f:	89 03                	mov    %eax,(%rbx)
 171:	e8 00 00 00 00       	call   176 <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x176>
 176:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
 17d:	00 
 17e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 185:	00 00 
 187:	74 05                	je     18e <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x18e>
 189:	e8 00 00 00 00       	call   18e <RemoteConfig::HandleGetMotorTxt(unsigned int, unsigned int&)+0x18e>
 18e:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
 195:	5b                   	pop    %rbx
 196:	5d                   	pop    %rbp
 197:	41 5c                	pop    %r12
 199:	41 5d                	pop    %r13
 19b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig16HandleGetShowTxtERj:

0000000000000000 <RemoteConfig::HandleGetShowTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 38          	sub    $0x38,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  23:	e8 00 00 00 00       	call   28 <RemoteConfig::HandleGetShowTxt(unsigned int&)+0x28>
  28:	48 89 ef             	mov    %rbp,%rdi
  2b:	48 89 c6             	mov    %rax,%rsi
  2e:	e8 00 00 00 00       	call   33 <RemoteConfig::HandleGetShowTxt(unsigned int&)+0x33>
  33:	4c 89 e1             	mov    %r12,%rcx
  36:	ba 00 04 00 00       	mov    $0x400,%edx
  3b:	48 89 ef             	mov    %rbp,%rdi
  3e:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 45 <RemoteConfig::HandleGetShowTxt(unsigned int&)+0x45>
  45:	e8 00 00 00 00       	call   4a <RemoteConfig::HandleGetShowTxt(unsigned int&)+0x4a>
  4a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  56:	00 00 
  58:	74 05                	je     5f <RemoteConfig::HandleGetShowTxt(unsigned int&)+0x5f>
  5a:	e8 00 00 00 00       	call   5f <RemoteConfig::HandleGetShowTxt(unsigned int&)+0x5f>
  5f:	48 83 c4 38          	add    $0x38,%rsp
  63:	5d                   	pop    %rbp
  64:	41 5c                	pop    %r12
  66:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig20HandleGetRgbPanelTxtERj:

0000000000000000 <RemoteConfig::HandleGetRgbPanelTxt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	49 89 f4             	mov    %rsi,%r12
   9:	55                   	push   %rbp
   a:	48 83 ec 28          	sub    $0x28,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  23:	e8 00 00 00 00       	call   28 <RemoteConfig::HandleGetRgbPanelTxt(unsigned int&)+0x28>
  28:	48 89 ef             	mov    %rbp,%rdi
  2b:	48 89 c6             	mov    %rax,%rsi
  2e:	e8 00 00 00 00       	call   33 <RemoteConfig::HandleGetRgbPanelTxt(unsigned int&)+0x33>
  33:	4c 89 e1             	mov    %r12,%rcx
  36:	ba 00 04 00 00       	mov    $0x400,%edx
  3b:	48 89 ef             	mov    %rbp,%rdi
  3e:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 45 <RemoteConfig::HandleGetRgbPanelTxt(unsigned int&)+0x45>
  45:	e8 00 00 00 00       	call   4a <RemoteConfig::HandleGetRgbPanelTxt(unsigned int&)+0x4a>
  4a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  56:	00 00 
  58:	74 05                	je     5f <RemoteConfig::HandleGetRgbPanelTxt(unsigned int&)+0x5f>
  5a:	e8 00 00 00 00       	call   5f <RemoteConfig::HandleGetRgbPanelTxt(unsigned int&)+0x5f>
  5f:	48 83 c4 28          	add    $0x28,%rsp
  63:	5d                   	pop    %rbp
  64:	41 5c                	pop    %r12
  66:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig9HandleSetEPvj:

0000000000000000 <RemoteConfig::HandleSet(void*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	55                   	push   %rbp
   7:	48 89 fd             	mov    %rdi,%rbp
   a:	53                   	push   %rbx
   b:	48 83 ec 20          	sub    $0x20,%rsp
   f:	89 54 24 0c          	mov    %edx,0xc(%rsp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  21:	31 c0                	xor    %eax,%eax
  23:	48 85 f6             	test   %rsi,%rsi
  26:	75 1a                	jne    42 <RemoteConfig::HandleSet(void*, unsigned int)+0x42>
  28:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2f <RemoteConfig::HandleSet(void*, unsigned int)+0x2f>
  2f:	c7 44 24 14 ff 03 00 	movl   $0x3ff,0x14(%rsp)
  36:	00 
  37:	48 8d 54 24 14       	lea    0x14(%rsp),%rdx
  3c:	48 8d 70 01          	lea    0x1(%rax),%rsi
  40:	eb 49                	jmp    8b <RemoteConfig::HandleSet(void*, unsigned int)+0x8b>
  42:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  46:	81 fb 00 04 00 00    	cmp    $0x400,%ebx
  4c:	77 72                	ja     c0 <RemoteConfig::HandleSet(void*, unsigned int)+0xc0>
  4e:	49 89 f4             	mov    %rsi,%r12
  51:	e8 00 00 00 00       	call   56 <RemoteConfig::HandleSet(void*, unsigned int)+0x56>
  56:	84 c0                	test   %al,%al
  58:	74 1d                	je     77 <RemoteConfig::HandleSet(void*, unsigned int)+0x77>
  5a:	41 80 3c 24 7b       	cmpb   $0x7b,(%r12)
  5f:	75 16                	jne    77 <RemoteConfig::HandleSet(void*, unsigned int)+0x77>
  61:	ff cb                	dec    %ebx
  63:	31 d2                	xor    %edx,%edx
  65:	4c 89 e7             	mov    %r12,%rdi
  68:	0f b7 f3             	movzwl %bx,%esi
  6b:	e8 00 00 00 00       	call   70 <RemoteConfig::HandleSet(void*, unsigned int)+0x70>
  70:	85 c0                	test   %eax,%eax
  72:	7e 4c                	jle    c0 <RemoteConfig::HandleSet(void*, unsigned int)+0xc0>
  74:	0f b7 d8             	movzwl %ax,%ebx
  77:	89 5d 1c             	mov    %ebx,0x1c(%rbp)
  7a:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
  7f:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
  84:	4c 89 25 00 00 00 00 	mov    %r12,0x0(%rip)        # 8b <RemoteConfig::HandleSet(void*, unsigned int)+0x8b>
  8b:	48 89 ef             	mov    %rbp,%rdi
  8e:	e8 00 00 00 00       	call   93 <RemoteConfig::HandleSet(void*, unsigned int)+0x93>
  93:	85 c0                	test   %eax,%eax
  95:	78 29                	js     c0 <RemoteConfig::HandleSet(void*, unsigned int)+0xc0>
  97:	48 98                	cltq   
  99:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # a0 <RemoteConfig::HandleSet(void*, unsigned int)+0xa0>
  a0:	48 6b c0 30          	imul   $0x30,%rax,%rax
  a4:	48 01 d0             	add    %rdx,%rax
  a7:	48 8b 78 18          	mov    0x18(%rax),%rdi
  ab:	48 8b 40 10          	mov    0x10(%rax),%rax
  af:	48 01 ef             	add    %rbp,%rdi
  b2:	a8 01                	test   $0x1,%al
  b4:	74 08                	je     be <RemoteConfig::HandleSet(void*, unsigned int)+0xbe>
  b6:	48 8b 17             	mov    (%rdi),%rdx
  b9:	48 8b 44 02 ff       	mov    -0x1(%rdx,%rax,1),%rax
  be:	ff d0                	call   *%rax
  c0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  c5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  cc:	00 00 
  ce:	74 05                	je     d5 <RemoteConfig::HandleSet(void*, unsigned int)+0xd5>
  d0:	e8 00 00 00 00       	call   d5 <RemoteConfig::HandleSet(void*, unsigned int)+0xd5>
  d5:	48 83 c4 20          	add    $0x20,%rsp
  d9:	5b                   	pop    %rbx
  da:	5d                   	pop    %rbp
  db:	41 5c                	pop    %r12
  dd:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig16HandleSetRconfigEv:

0000000000000000 <RemoteConfig::HandleSetRconfig()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	55                   	push   %rbp
   7:	48 89 fd             	mov    %rdi,%rbp
   a:	48 83 ec 38          	sub    $0x38,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	49 89 e4             	mov    %rsp,%r12
  21:	e8 00 00 00 00       	call   26 <RemoteConfig::HandleSetRconfig()+0x26>
  26:	4c 89 e7             	mov    %r12,%rdi
  29:	48 89 c6             	mov    %rax,%rsi
  2c:	e8 00 00 00 00       	call   31 <RemoteConfig::HandleSetRconfig()+0x31>
  31:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 38 <RemoteConfig::HandleSetRconfig()+0x38>
  38:	8b 55 1c             	mov    0x1c(%rbp),%edx
  3b:	4c 89 e7             	mov    %r12,%rdi
  3e:	e8 00 00 00 00       	call   43 <RemoteConfig::HandleSetRconfig()+0x43>
  43:	48 89 ee             	mov    %rbp,%rsi
  46:	4c 89 e7             	mov    %r12,%rdi
  49:	e8 00 00 00 00       	call   4e <RemoteConfig::HandleSetRconfig()+0x4e>
  4e:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  53:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  5a:	00 00 
  5c:	74 05                	je     63 <RemoteConfig::HandleSetRconfig()+0x63>
  5e:	e8 00 00 00 00       	call   63 <RemoteConfig::HandleSetRconfig()+0x63>
  63:	48 83 c4 38          	add    $0x38,%rsp
  67:	5d                   	pop    %rbp
  68:	41 5c                	pop    %r12
  6a:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig19HandleSetNetworkTxtEv:

0000000000000000 <RemoteConfig::HandleSetNetworkTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 78          	sub    $0x78,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 89 e5             	mov    %rsp,%rbp
  20:	e8 00 00 00 00       	call   25 <RemoteConfig::HandleSetNetworkTxt()+0x25>
  25:	48 89 ef             	mov    %rbp,%rdi
  28:	48 89 c6             	mov    %rax,%rsi
  2b:	e8 00 00 00 00       	call   30 <RemoteConfig::HandleSetNetworkTxt()+0x30>
  30:	8b 53 1c             	mov    0x1c(%rbx),%edx
  33:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3a <RemoteConfig::HandleSetNetworkTxt()+0x3a>
  3a:	48 89 ef             	mov    %rbp,%rdi
  3d:	e8 00 00 00 00       	call   42 <RemoteConfig::HandleSetNetworkTxt()+0x42>
  42:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
  47:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4e:	00 00 
  50:	74 05                	je     57 <RemoteConfig::HandleSetNetworkTxt()+0x57>
  52:	e8 00 00 00 00       	call   57 <RemoteConfig::HandleSetNetworkTxt()+0x57>
  57:	48 83 c4 78          	add    $0x78,%rsp
  5b:	5b                   	pop    %rbx
  5c:	5d                   	pop    %rbp
  5d:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetArtnetTxtEv:

0000000000000000 <RemoteConfig::HandleSetArtnetTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
  20:	00 
  21:	31 c0                	xor    %eax,%eax
  23:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  28:	e8 00 00 00 00       	call   2d <RemoteConfig::HandleSetArtnetTxt()+0x2d>
  2d:	48 89 ef             	mov    %rbp,%rdi
  30:	48 89 c6             	mov    %rax,%rsi
  33:	e8 00 00 00 00       	call   38 <RemoteConfig::HandleSetArtnetTxt()+0x38>
  38:	8b 53 1c             	mov    0x1c(%rbx),%edx
  3b:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 42 <RemoteConfig::HandleSetArtnetTxt()+0x42>
  42:	48 89 ef             	mov    %rbp,%rdi
  45:	e8 00 00 00 00       	call   4a <RemoteConfig::HandleSetArtnetTxt()+0x4a>
  4a:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
  51:	00 
  52:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  59:	00 00 
  5b:	74 05                	je     62 <RemoteConfig::HandleSetArtnetTxt()+0x62>
  5d:	e8 00 00 00 00       	call   62 <RemoteConfig::HandleSetArtnetTxt()+0x62>
  62:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
  69:	5b                   	pop    %rbx
  6a:	5d                   	pop    %rbp
  6b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig16HandleSetE131TxtEv:

0000000000000000 <RemoteConfig::HandleSetE131Txt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 38          	sub    $0x38,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 89 e5             	mov    %rsp,%rbp
  20:	e8 00 00 00 00       	call   25 <RemoteConfig::HandleSetE131Txt()+0x25>
  25:	48 89 ef             	mov    %rbp,%rdi
  28:	48 89 c6             	mov    %rax,%rsi
  2b:	e8 00 00 00 00       	call   30 <RemoteConfig::HandleSetE131Txt()+0x30>
  30:	8b 53 1c             	mov    0x1c(%rbx),%edx
  33:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3a <RemoteConfig::HandleSetE131Txt()+0x3a>
  3a:	48 89 ef             	mov    %rbp,%rdi
  3d:	e8 00 00 00 00       	call   42 <RemoteConfig::HandleSetE131Txt()+0x42>
  42:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  47:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4e:	00 00 
  50:	74 05                	je     57 <RemoteConfig::HandleSetE131Txt()+0x57>
  52:	e8 00 00 00 00       	call   57 <RemoteConfig::HandleSetE131Txt()+0x57>
  57:	48 83 c4 38          	add    $0x38,%rsp
  5b:	5b                   	pop    %rbx
  5c:	5d                   	pop    %rbp
  5d:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig15HandleSetOscTxtEv:

0000000000000000 <RemoteConfig::HandleSetOscTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 81 ec a8 01 00 00 	sub    $0x1a8,%rsp
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 84 24 98 01 00 	mov    %rax,0x198(%rsp)
  20:	00 
  21:	31 c0                	xor    %eax,%eax
  23:	48 89 e5             	mov    %rsp,%rbp
  26:	e8 00 00 00 00       	call   2b <RemoteConfig::HandleSetOscTxt()+0x2b>
  2b:	48 89 ef             	mov    %rbp,%rdi
  2e:	48 89 c6             	mov    %rax,%rsi
  31:	e8 00 00 00 00       	call   36 <RemoteConfig::HandleSetOscTxt()+0x36>
  36:	8b 53 1c             	mov    0x1c(%rbx),%edx
  39:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 40 <RemoteConfig::HandleSetOscTxt()+0x40>
  40:	48 89 ef             	mov    %rbp,%rdi
  43:	e8 00 00 00 00       	call   48 <RemoteConfig::HandleSetOscTxt()+0x48>
  48:	48 8b 84 24 98 01 00 	mov    0x198(%rsp),%rax
  4f:	00 
  50:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  57:	00 00 
  59:	74 05                	je     60 <RemoteConfig::HandleSetOscTxt()+0x60>
  5b:	e8 00 00 00 00       	call   60 <RemoteConfig::HandleSetOscTxt()+0x60>
  60:	48 81 c4 a8 01 00 00 	add    $0x1a8,%rsp
  67:	5b                   	pop    %rbx
  68:	5d                   	pop    %rbp
  69:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig21HandleSetOscClientTxtEv:

0000000000000000 <RemoteConfig::HandleSetOscClientTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 81 ec b8 03 00 00 	sub    $0x3b8,%rsp
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 84 24 a8 03 00 	mov    %rax,0x3a8(%rsp)
  20:	00 
  21:	31 c0                	xor    %eax,%eax
  23:	48 89 e5             	mov    %rsp,%rbp
  26:	e8 00 00 00 00       	call   2b <RemoteConfig::HandleSetOscClientTxt()+0x2b>
  2b:	48 89 ef             	mov    %rbp,%rdi
  2e:	48 89 c6             	mov    %rax,%rsi
  31:	e8 00 00 00 00       	call   36 <RemoteConfig::HandleSetOscClientTxt()+0x36>
  36:	8b 53 1c             	mov    0x1c(%rbx),%edx
  39:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 40 <RemoteConfig::HandleSetOscClientTxt()+0x40>
  40:	48 89 ef             	mov    %rbp,%rdi
  43:	e8 00 00 00 00       	call   48 <RemoteConfig::HandleSetOscClientTxt()+0x48>
  48:	48 8b 84 24 a8 03 00 	mov    0x3a8(%rsp),%rax
  4f:	00 
  50:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  57:	00 00 
  59:	74 05                	je     60 <RemoteConfig::HandleSetOscClientTxt()+0x60>
  5b:	e8 00 00 00 00       	call   60 <RemoteConfig::HandleSetOscClientTxt()+0x60>
  60:	48 81 c4 b8 03 00 00 	add    $0x3b8,%rsp
  67:	5b                   	pop    %rbx
  68:	5d                   	pop    %rbp
  69:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetParamsTxtEv:

0000000000000000 <RemoteConfig::HandleSetParamsTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 28          	sub    $0x28,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 89 e5             	mov    %rsp,%rbp
  20:	e8 00 00 00 00       	call   25 <RemoteConfig::HandleSetParamsTxt()+0x25>
  25:	48 89 ef             	mov    %rbp,%rdi
  28:	48 89 c6             	mov    %rax,%rsi
  2b:	e8 00 00 00 00       	call   30 <RemoteConfig::HandleSetParamsTxt()+0x30>
  30:	8b 53 1c             	mov    0x1c(%rbx),%edx
  33:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3a <RemoteConfig::HandleSetParamsTxt()+0x3a>
  3a:	48 89 ef             	mov    %rbp,%rdi
  3d:	e8 00 00 00 00       	call   42 <RemoteConfig::HandleSetParamsTxt()+0x42>
  42:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  47:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4e:	00 00 
  50:	74 05                	je     57 <RemoteConfig::HandleSetParamsTxt()+0x57>
  52:	e8 00 00 00 00       	call   57 <RemoteConfig::HandleSetParamsTxt()+0x57>
  57:	48 83 c4 28          	add    $0x28,%rsp
  5b:	5b                   	pop    %rbx
  5c:	5d                   	pop    %rbp
  5d:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig19HandleSetDevicesTxtEv:

0000000000000000 <RemoteConfig::HandleSetDevicesTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 48          	sub    $0x48,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 89 e5             	mov    %rsp,%rbp
  20:	e8 00 00 00 00       	call   25 <RemoteConfig::HandleSetDevicesTxt()+0x25>
  25:	48 89 ef             	mov    %rbp,%rdi
  28:	48 89 c6             	mov    %rax,%rsi
  2b:	e8 00 00 00 00       	call   30 <RemoteConfig::HandleSetDevicesTxt()+0x30>
  30:	8b 53 1c             	mov    0x1c(%rbx),%edx
  33:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3a <RemoteConfig::HandleSetDevicesTxt()+0x3a>
  3a:	48 89 ef             	mov    %rbp,%rdi
  3d:	e8 00 00 00 00       	call   42 <RemoteConfig::HandleSetDevicesTxt()+0x42>
  42:	48 89 ef             	mov    %rbp,%rdi
  45:	e8 00 00 00 00       	call   4a <RemoteConfig::HandleSetDevicesTxt()+0x4a>
  4a:	84 c0                	test   %al,%al
  4c:	75 27                	jne    75 <RemoteConfig::HandleSetDevicesTxt()+0x75>
  4e:	e8 00 00 00 00       	call   53 <RemoteConfig::HandleSetDevicesTxt()+0x53>
  53:	48 8d 6c 24 18       	lea    0x18(%rsp),%rbp
  58:	48 89 c6             	mov    %rax,%rsi
  5b:	48 89 ef             	mov    %rbp,%rdi
  5e:	e8 00 00 00 00       	call   63 <RemoteConfig::HandleSetDevicesTxt()+0x63>
  63:	8b 53 1c             	mov    0x1c(%rbx),%edx
  66:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 6d <RemoteConfig::HandleSetDevicesTxt()+0x6d>
  6d:	48 89 ef             	mov    %rbp,%rdi
  70:	e8 00 00 00 00       	call   75 <RemoteConfig::HandleSetDevicesTxt()+0x75>
  75:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  7a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  81:	00 00 
  83:	74 05                	je     8a <RemoteConfig::HandleSetDevicesTxt()+0x8a>
  85:	e8 00 00 00 00       	call   8a <RemoteConfig::HandleSetDevicesTxt()+0x8a>
  8a:	48 83 c4 48          	add    $0x48,%rsp
  8e:	5b                   	pop    %rbx
  8f:	5d                   	pop    %rbp
  90:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig15HandleSetLtcTxtEv:

0000000000000000 <RemoteConfig::HandleSetLtcTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 48          	sub    $0x48,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  22:	e8 00 00 00 00       	call   27 <RemoteConfig::HandleSetLtcTxt()+0x27>
  27:	48 89 ef             	mov    %rbp,%rdi
  2a:	48 89 c6             	mov    %rax,%rsi
  2d:	e8 00 00 00 00       	call   32 <RemoteConfig::HandleSetLtcTxt()+0x32>
  32:	8b 53 1c             	mov    0x1c(%rbx),%edx
  35:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3c <RemoteConfig::HandleSetLtcTxt()+0x3c>
  3c:	48 89 ef             	mov    %rbp,%rdi
  3f:	e8 00 00 00 00       	call   44 <RemoteConfig::HandleSetLtcTxt()+0x44>
  44:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  49:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  50:	00 00 
  52:	74 05                	je     59 <RemoteConfig::HandleSetLtcTxt()+0x59>
  54:	e8 00 00 00 00       	call   59 <RemoteConfig::HandleSetLtcTxt()+0x59>
  59:	48 83 c4 48          	add    $0x48,%rsp
  5d:	5b                   	pop    %rbx
  5e:	5d                   	pop    %rbp
  5f:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig20HandleSetLdisplayTxtEv:

0000000000000000 <RemoteConfig::HandleSetLdisplayTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 48          	sub    $0x48,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 89 e5             	mov    %rsp,%rbp
  20:	e8 00 00 00 00       	call   25 <RemoteConfig::HandleSetLdisplayTxt()+0x25>
  25:	48 89 ef             	mov    %rbp,%rdi
  28:	48 89 c6             	mov    %rax,%rsi
  2b:	e8 00 00 00 00       	call   30 <RemoteConfig::HandleSetLdisplayTxt()+0x30>
  30:	8b 53 1c             	mov    0x1c(%rbx),%edx
  33:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3a <RemoteConfig::HandleSetLdisplayTxt()+0x3a>
  3a:	48 89 ef             	mov    %rbp,%rdi
  3d:	e8 00 00 00 00       	call   42 <RemoteConfig::HandleSetLdisplayTxt()+0x42>
  42:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  47:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4e:	00 00 
  50:	74 05                	je     57 <RemoteConfig::HandleSetLdisplayTxt()+0x57>
  52:	e8 00 00 00 00       	call   57 <RemoteConfig::HandleSetLdisplayTxt()+0x57>
  57:	48 83 c4 48          	add    $0x48,%rsp
  5b:	5b                   	pop    %rbx
  5c:	5d                   	pop    %rbp
  5d:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig17HandleSetTCNetTxtEv:

0000000000000000 <RemoteConfig::HandleSetTCNetTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 28          	sub    $0x28,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 89 e5             	mov    %rsp,%rbp
  20:	e8 00 00 00 00       	call   25 <RemoteConfig::HandleSetTCNetTxt()+0x25>
  25:	48 89 ef             	mov    %rbp,%rdi
  28:	48 89 c6             	mov    %rax,%rsi
  2b:	e8 00 00 00 00       	call   30 <RemoteConfig::HandleSetTCNetTxt()+0x30>
  30:	8b 53 1c             	mov    0x1c(%rbx),%edx
  33:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3a <RemoteConfig::HandleSetTCNetTxt()+0x3a>
  3a:	48 89 ef             	mov    %rbp,%rdi
  3d:	e8 00 00 00 00       	call   42 <RemoteConfig::HandleSetTCNetTxt()+0x42>
  42:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  47:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4e:	00 00 
  50:	74 05                	je     57 <RemoteConfig::HandleSetTCNetTxt()+0x57>
  52:	e8 00 00 00 00       	call   57 <RemoteConfig::HandleSetTCNetTxt()+0x57>
  57:	48 83 c4 28          	add    $0x28,%rsp
  5b:	5b                   	pop    %rbx
  5c:	5d                   	pop    %rbp
  5d:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig15HandleSetGpsTxtEv:

0000000000000000 <RemoteConfig::HandleSetGpsTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 28          	sub    $0x28,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 89 e5             	mov    %rsp,%rbp
  20:	e8 00 00 00 00       	call   25 <RemoteConfig::HandleSetGpsTxt()+0x25>
  25:	48 89 ef             	mov    %rbp,%rdi
  28:	48 89 c6             	mov    %rax,%rsi
  2b:	e8 00 00 00 00       	call   30 <RemoteConfig::HandleSetGpsTxt()+0x30>
  30:	8b 53 1c             	mov    0x1c(%rbx),%edx
  33:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3a <RemoteConfig::HandleSetGpsTxt()+0x3a>
  3a:	48 89 ef             	mov    %rbp,%rdi
  3d:	e8 00 00 00 00       	call   42 <RemoteConfig::HandleSetGpsTxt()+0x42>
  42:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  47:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4e:	00 00 
  50:	74 05                	je     57 <RemoteConfig::HandleSetGpsTxt()+0x57>
  52:	e8 00 00 00 00       	call   57 <RemoteConfig::HandleSetGpsTxt()+0x57>
  57:	48 83 c4 28          	add    $0x28,%rsp
  5b:	5b                   	pop    %rbx
  5c:	5d                   	pop    %rbp
  5d:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetLtcEtcTxtEv:

0000000000000000 <RemoteConfig::HandleSetLtcEtcTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 38          	sub    $0x38,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  22:	e8 00 00 00 00       	call   27 <RemoteConfig::HandleSetLtcEtcTxt()+0x27>
  27:	48 89 ef             	mov    %rbp,%rdi
  2a:	48 89 c6             	mov    %rax,%rsi
  2d:	e8 00 00 00 00       	call   32 <RemoteConfig::HandleSetLtcEtcTxt()+0x32>
  32:	8b 53 1c             	mov    0x1c(%rbx),%edx
  35:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3c <RemoteConfig::HandleSetLtcEtcTxt()+0x3c>
  3c:	48 89 ef             	mov    %rbp,%rdi
  3f:	e8 00 00 00 00       	call   44 <RemoteConfig::HandleSetLtcEtcTxt()+0x44>
  44:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  49:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  50:	00 00 
  52:	74 05                	je     59 <RemoteConfig::HandleSetLtcEtcTxt()+0x59>
  54:	e8 00 00 00 00       	call   59 <RemoteConfig::HandleSetLtcEtcTxt()+0x59>
  59:	48 83 c4 38          	add    $0x38,%rsp
  5d:	5b                   	pop    %rbx
  5e:	5d                   	pop    %rbp
  5f:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig19HandleSetDisplayTxtEv:

0000000000000000 <RemoteConfig::HandleSetDisplayTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 48          	sub    $0x48,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  22:	e8 00 00 00 00       	call   27 <RemoteConfig::HandleSetDisplayTxt()+0x27>
  27:	48 89 ef             	mov    %rbp,%rdi
  2a:	48 89 c6             	mov    %rax,%rsi
  2d:	e8 00 00 00 00       	call   32 <RemoteConfig::HandleSetDisplayTxt()+0x32>
  32:	8b 53 1c             	mov    0x1c(%rbx),%edx
  35:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3c <RemoteConfig::HandleSetDisplayTxt()+0x3c>
  3c:	48 89 ef             	mov    %rbp,%rdi
  3f:	e8 00 00 00 00       	call   44 <RemoteConfig::HandleSetDisplayTxt()+0x44>
  44:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  49:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  50:	00 00 
  52:	74 05                	je     59 <RemoteConfig::HandleSetDisplayTxt()+0x59>
  54:	e8 00 00 00 00       	call   59 <RemoteConfig::HandleSetDisplayTxt()+0x59>
  59:	48 83 c4 48          	add    $0x48,%rsp
  5d:	5b                   	pop    %rbx
  5e:	5d                   	pop    %rbp
  5f:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig20HandleSetSparkFunTxtEv:

0000000000000000 <RemoteConfig::HandleSetSparkFunTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 38          	sub    $0x38,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  22:	e8 00 00 00 00       	call   27 <RemoteConfig::HandleSetSparkFunTxt()+0x27>
  27:	48 89 ef             	mov    %rbp,%rdi
  2a:	48 89 c6             	mov    %rax,%rsi
  2d:	e8 00 00 00 00       	call   32 <RemoteConfig::HandleSetSparkFunTxt()+0x32>
  32:	8b 53 1c             	mov    0x1c(%rbx),%edx
  35:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3c <RemoteConfig::HandleSetSparkFunTxt()+0x3c>
  3c:	48 89 ef             	mov    %rbp,%rdi
  3f:	e8 00 00 00 00       	call   44 <RemoteConfig::HandleSetSparkFunTxt()+0x44>
  44:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  49:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  50:	00 00 
  52:	74 05                	je     59 <RemoteConfig::HandleSetSparkFunTxt()+0x59>
  54:	e8 00 00 00 00       	call   59 <RemoteConfig::HandleSetSparkFunTxt()+0x59>
  59:	48 83 c4 38          	add    $0x38,%rsp
  5d:	5b                   	pop    %rbx
  5e:	5d                   	pop    %rbp
  5f:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig17HandleSetMotorTxtEj:

0000000000000000 <RemoteConfig::HandleSetMotorTxt(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	55                   	push   %rbp
   9:	89 f5                	mov    %esi,%ebp
   b:	53                   	push   %rbx
   c:	48 89 fb             	mov    %rdi,%rbx
   f:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
  26:	00 
  27:	31 c0                	xor    %eax,%eax
  29:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
  2e:	e8 00 00 00 00       	call   33 <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x33>
  33:	4c 89 e7             	mov    %r12,%rdi
  36:	48 89 c6             	mov    %rax,%rsi
  39:	e8 00 00 00 00       	call   3e <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x3e>
  3e:	8b 4b 1c             	mov    0x1c(%rbx),%ecx
  41:	4c 89 e7             	mov    %r12,%rdi
  44:	89 ee                	mov    %ebp,%esi
  46:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 4d <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x4d>
  4d:	4c 8d a4 24 90 00 00 	lea    0x90(%rsp),%r12
  54:	00 
  55:	e8 00 00 00 00       	call   5a <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x5a>
  5a:	e8 00 00 00 00       	call   5f <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x5f>
  5f:	4c 89 e7             	mov    %r12,%rdi
  62:	48 89 c6             	mov    %rax,%rsi
  65:	e8 00 00 00 00       	call   6a <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x6a>
  6a:	8b 4b 1c             	mov    0x1c(%rbx),%ecx
  6d:	89 ee                	mov    %ebp,%esi
  6f:	4c 89 e7             	mov    %r12,%rdi
  72:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 79 <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x79>
  79:	e8 00 00 00 00       	call   7e <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x7e>
  7e:	e8 00 00 00 00       	call   83 <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x83>
  83:	48 89 c6             	mov    %rax,%rsi
  86:	48 85 c0             	test   %rax,%rax
  89:	74 04                	je     8f <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x8f>
  8b:	48 83 c6 08          	add    $0x8,%rsi
  8f:	4c 8d 6c 24 28       	lea    0x28(%rsp),%r13
  94:	4c 89 ef             	mov    %r13,%rdi
  97:	e8 00 00 00 00       	call   9c <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x9c>
  9c:	8b 4b 1c             	mov    0x1c(%rbx),%ecx
  9f:	89 ee                	mov    %ebp,%esi
  a1:	4c 89 ef             	mov    %r13,%rdi
  a4:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # ab <RemoteConfig::HandleSetMotorTxt(unsigned int)+0xab>
  ab:	e8 00 00 00 00       	call   b0 <RemoteConfig::HandleSetMotorTxt(unsigned int)+0xb0>
  b0:	e8 00 00 00 00       	call   b5 <RemoteConfig::HandleSetMotorTxt(unsigned int)+0xb5>
  b5:	48 89 c6             	mov    %rax,%rsi
  b8:	48 85 c0             	test   %rax,%rax
  bb:	74 04                	je     c1 <RemoteConfig::HandleSetMotorTxt(unsigned int)+0xc1>
  bd:	48 83 c6 10          	add    $0x10,%rsi
  c1:	4c 8d 6c 24 58       	lea    0x58(%rsp),%r13
  c6:	4c 89 ef             	mov    %r13,%rdi
  c9:	e8 00 00 00 00       	call   ce <RemoteConfig::HandleSetMotorTxt(unsigned int)+0xce>
  ce:	8b 4b 1c             	mov    0x1c(%rbx),%ecx
  d1:	4c 89 ef             	mov    %r13,%rdi
  d4:	89 ee                	mov    %ebp,%esi
  d6:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # dd <RemoteConfig::HandleSetMotorTxt(unsigned int)+0xdd>
  dd:	e8 00 00 00 00       	call   e2 <RemoteConfig::HandleSetMotorTxt(unsigned int)+0xe2>
  e2:	4c 89 e7             	mov    %r12,%rdi
  e5:	e8 00 00 00 00       	call   ea <RemoteConfig::HandleSetMotorTxt(unsigned int)+0xea>
  ea:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
  f1:	00 
  f2:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  f9:	00 00 
  fb:	74 05                	je     102 <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x102>
  fd:	e8 00 00 00 00       	call   102 <RemoteConfig::HandleSetMotorTxt(unsigned int)+0x102>
 102:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
 109:	5b                   	pop    %rbx
 10a:	5d                   	pop    %rbp
 10b:	41 5c                	pop    %r12
 10d:	41 5d                	pop    %r13
 10f:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig16HandleSetShowTxtEv:

0000000000000000 <RemoteConfig::HandleSetShowTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 38          	sub    $0x38,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  22:	e8 00 00 00 00       	call   27 <RemoteConfig::HandleSetShowTxt()+0x27>
  27:	48 89 ef             	mov    %rbp,%rdi
  2a:	48 89 c6             	mov    %rax,%rsi
  2d:	e8 00 00 00 00       	call   32 <RemoteConfig::HandleSetShowTxt()+0x32>
  32:	8b 53 1c             	mov    0x1c(%rbx),%edx
  35:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3c <RemoteConfig::HandleSetShowTxt()+0x3c>
  3c:	48 89 ef             	mov    %rbp,%rdi
  3f:	e8 00 00 00 00       	call   44 <RemoteConfig::HandleSetShowTxt()+0x44>
  44:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  49:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  50:	00 00 
  52:	74 05                	je     59 <RemoteConfig::HandleSetShowTxt()+0x59>
  54:	e8 00 00 00 00       	call   59 <RemoteConfig::HandleSetShowTxt()+0x59>
  59:	48 83 c4 38          	add    $0x38,%rsp
  5d:	5b                   	pop    %rbx
  5e:	5d                   	pop    %rbp
  5f:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig21HandleSetRdmDeviceTxtEv:

0000000000000000 <RemoteConfig::HandleSetRdmDeviceTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 48          	sub    $0x48,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 89 e5             	mov    %rsp,%rbp
  20:	e8 00 00 00 00       	call   25 <RemoteConfig::HandleSetRdmDeviceTxt()+0x25>
  25:	48 89 ef             	mov    %rbp,%rdi
  28:	48 89 c6             	mov    %rax,%rsi
  2b:	e8 00 00 00 00       	call   30 <RemoteConfig::HandleSetRdmDeviceTxt()+0x30>
  30:	8b 53 1c             	mov    0x1c(%rbx),%edx
  33:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3a <RemoteConfig::HandleSetRdmDeviceTxt()+0x3a>
  3a:	48 89 ef             	mov    %rbp,%rdi
  3d:	e8 00 00 00 00       	call   42 <RemoteConfig::HandleSetRdmDeviceTxt()+0x42>
  42:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  47:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4e:	00 00 
  50:	74 05                	je     57 <RemoteConfig::HandleSetRdmDeviceTxt()+0x57>
  52:	e8 00 00 00 00       	call   57 <RemoteConfig::HandleSetRdmDeviceTxt()+0x57>
  57:	48 83 c4 48          	add    $0x48,%rsp
  5b:	5b                   	pop    %rbx
  5c:	5d                   	pop    %rbp
  5d:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig20HandleSetRgbPanelTxtEv:

0000000000000000 <RemoteConfig::HandleSetRgbPanelTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	48 89 fb             	mov    %rdi,%rbx
   9:	48 83 ec 28          	sub    $0x28,%rsp
   d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  14:	00 00 
  16:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1b:	31 c0                	xor    %eax,%eax
  1d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  22:	e8 00 00 00 00       	call   27 <RemoteConfig::HandleSetRgbPanelTxt()+0x27>
  27:	48 89 ef             	mov    %rbp,%rdi
  2a:	48 89 c6             	mov    %rax,%rsi
  2d:	e8 00 00 00 00       	call   32 <RemoteConfig::HandleSetRgbPanelTxt()+0x32>
  32:	8b 53 1c             	mov    0x1c(%rbx),%edx
  35:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3c <RemoteConfig::HandleSetRgbPanelTxt()+0x3c>
  3c:	48 89 ef             	mov    %rbp,%rdi
  3f:	e8 00 00 00 00       	call   44 <RemoteConfig::HandleSetRgbPanelTxt()+0x44>
  44:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  49:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  50:	00 00 
  52:	74 05                	je     59 <RemoteConfig::HandleSetRgbPanelTxt()+0x59>
  54:	e8 00 00 00 00       	call   59 <RemoteConfig::HandleSetRgbPanelTxt()+0x59>
  59:	48 83 c4 28          	add    $0x28,%rsp
  5d:	5b                   	pop    %rbx
  5e:	5d                   	pop    %rbp
  5f:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig8TftpExitEv:

0000000000000000 <RemoteConfig::TftpExit()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # b <RemoteConfig::TftpExit()+0xb>
   b:	c7 47 1c 06 00 00 00 	movl   $0x6,0x1c(%rdi)
  12:	c6 40 06 30          	movb   $0x30,0x6(%rax)
  16:	e9 00 00 00 00       	jmp    1b <.LC14+0x2>

Disassembly of section .text._ZN12RemoteConfig13HandleTftpSetEv:

0000000000000000 <RemoteConfig::HandleTftpSet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	83 7f 1c 06          	cmpl   $0x6,0x1c(%rdi)
   8:	75 2d                	jne    37 <RemoteConfig::HandleTftpSet()+0x37>
   a:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 11 <RemoteConfig::HandleTftpSet()+0x11>
  11:	55                   	push   %rbp
  12:	48 89 fd             	mov    %rdi,%rbp
  15:	80 78 06 30          	cmpb   $0x30,0x6(%rax)
  19:	0f 95 47 28          	setne  0x28(%rdi)
  1d:	74 0f                	je     2e <RemoteConfig::HandleTftpSet()+0x2e>
  1f:	e8 00 00 00 00       	call   24 <RemoteConfig::HandleTftpSet()+0x24>
  24:	31 f6                	xor    %esi,%esi
  26:	48 89 c7             	mov    %rax,%rdi
  29:	e8 00 00 00 00       	call   2e <RemoteConfig::HandleTftpSet()+0x2e>
  2e:	48 89 ef             	mov    %rbp,%rdi
  31:	5d                   	pop    %rbp
  32:	e9 00 00 00 00       	jmp    37 <RemoteConfig::HandleTftpSet()+0x37>
  37:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig13HandleTftpGetEv:

0000000000000000 <RemoteConfig::HandleTftpGet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	53                   	push   %rbx
   7:	48 89 fb             	mov    %rdi,%rbx
   a:	41 53                	push   %r11
   c:	e8 00 00 00 00       	call   11 <RemoteConfig::HandleTftpGet()+0x11>
  11:	83 7b 1c 05          	cmpl   $0x5,0x1c(%rbx)
  15:	75 5c                	jne    73 <RemoteConfig::HandleTftpGet()+0x73>
  17:	80 7b 28 00          	cmpb   $0x0,0x28(%rbx)
  1b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 22 <RemoteConfig::HandleTftpGet()+0x22>
  22:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 29 <RemoteConfig::HandleTftpGet()+0x29>
  29:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 30 <RemoteConfig::HandleTftpGet()+0x30>
  30:	48 0f 44 c8          	cmove  %rax,%rcx
  34:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3b <RemoteConfig::HandleTftpGet()+0x3b>
  3b:	be ff 03 00 00       	mov    $0x3ff,%esi
  40:	31 c0                	xor    %eax,%eax
  42:	e8 00 00 00 00       	call   47 <RemoteConfig::HandleTftpGet()+0x47>
  47:	41 89 c4             	mov    %eax,%r12d
  4a:	e8 00 00 00 00       	call   4f <RemoteConfig::HandleTftpGet()+0x4f>
  4f:	8b 73 14             	mov    0x14(%rbx),%esi
  52:	44 8b 43 18          	mov    0x18(%rbx),%r8d
  56:	44 89 e1             	mov    %r12d,%ecx
  59:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 60 <RemoteConfig::HandleTftpGet()+0x60>
  60:	48 89 c7             	mov    %rax,%rdi
  63:	41 5a                	pop    %r10
  65:	41 b9 05 29 00 00    	mov    $0x2905,%r9d
  6b:	5b                   	pop    %rbx
  6c:	41 5c                	pop    %r12
  6e:	e9 00 00 00 00       	jmp    73 <RemoteConfig::HandleTftpGet()+0x73>
  73:	58                   	pop    %rax
  74:	5b                   	pop    %rbx
  75:	41 5c                	pop    %r12
  77:	c3                   	ret    

Disassembly of section .text._ZSt3minIjERKT_S2_S2_:

0000000000000000 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8b 17                	mov    (%rdi),%edx
   6:	48 89 f8             	mov    %rdi,%rax
   9:	39 16                	cmp    %edx,(%rsi)
   b:	73 03                	jae    10 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x10>
   d:	48 89 f0             	mov    %rsi,%rax
  10:	c3                   	ret    

remoteconfigfactory.o:     file format elf64-x86-64


Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig13HandleFactoryEv:

0000000000000000 <RemoteConfig::HandleFactory()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  17:	eb 19                	jmp    32 <RemoteConfig::HandleFactory()+0x32>
  19:	e8 00 00 00 00       	call   1e <RemoteConfig::HandleFactory()+0x1e>
  1e:	48 89 c2             	mov    %rax,%rdx
  21:	8b 45 fc             	mov    -0x4(%rbp),%eax
  24:	89 c6                	mov    %eax,%esi
  26:	48 89 d7             	mov    %rdx,%rdi
  29:	e8 00 00 00 00       	call   2e <RemoteConfig::HandleFactory()+0x2e>
  2e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  32:	83 7d fc 1b          	cmpl   $0x1b,-0x4(%rbp)
  36:	76 e1                	jbe    19 <RemoteConfig::HandleFactory()+0x19>
  38:	90                   	nop
  39:	90                   	nop
  3a:	c9                   	leave  
  3b:	c3                   	ret    

remoteconfigjson.o:     file format elf64-x86-64


Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZNK7Display7isSleepEv:

0000000000000000 <Display::isSleep() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 10          	movzbl 0x10(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN7Display3GetEv:

0000000000000000 <Display::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Display::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN15FirmwareVersion10GetVersionEv:

0000000000000000 <FirmwareVersion::GetVersion()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 13 <FirmwareVersion::GetVersion()+0x13>
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN15FirmwareVersion3GetEv:

0000000000000000 <FirmwareVersion::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <FirmwareVersion::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZNK7Network5GetIpEv:

0000000000000000 <Network::GetIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 10             	mov    0x10(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Network::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZNK12RemoteConfig10GetOutputsEv:

0000000000000000 <RemoteConfig::GetOutputs() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 13 <RemoteConfig::GetOutputs() const+0x13>
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK12RemoteConfig14GetDisplayNameEv:

0000000000000000 <RemoteConfig::GetDisplayName() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 13 <RemoteConfig::GetDisplayName() const+0x13>
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig3GetEv:

0000000000000000 <RemoteConfig::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <RemoteConfig::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN12remoteconfig13json_get_listEPct:

0000000000000000 <remoteconfig::json_get_list(char*, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 57                	push   %r15
   a:	41 56                	push   %r14
   c:	41 55                	push   %r13
   e:	41 54                	push   %r12
  10:	53                   	push   %rbx
  11:	48 83 ec 38          	sub    $0x38,%rsp
  15:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  19:	89 f0                	mov    %esi,%eax
  1b:	66 89 45 b4          	mov    %ax,-0x4c(%rbp)
  1f:	e8 00 00 00 00       	call   24 <remoteconfig::json_get_list(char*, unsigned short)+0x24>
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <remoteconfig::json_get_list(char*, unsigned short)+0x2c>
  2c:	44 0f b6 f8          	movzbl %al,%r15d
  30:	e8 00 00 00 00       	call   35 <remoteconfig::json_get_list(char*, unsigned short)+0x35>
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <remoteconfig::json_get_list(char*, unsigned short)+0x3d>
  3d:	49 89 c5             	mov    %rax,%r13
  40:	e8 00 00 00 00       	call   45 <remoteconfig::json_get_list(char*, unsigned short)+0x45>
  45:	48 89 c7             	mov    %rax,%rdi
  48:	e8 00 00 00 00       	call   4d <remoteconfig::json_get_list(char*, unsigned short)+0x4d>
  4d:	49 89 c4             	mov    %rax,%r12
  50:	e8 00 00 00 00       	call   55 <remoteconfig::json_get_list(char*, unsigned short)+0x55>
  55:	48 89 c7             	mov    %rax,%rdi
  58:	e8 00 00 00 00       	call   5d <remoteconfig::json_get_list(char*, unsigned short)+0x5d>
  5d:	48 89 c3             	mov    %rax,%rbx
  60:	e8 00 00 00 00       	call   65 <remoteconfig::json_get_list(char*, unsigned short)+0x65>
  65:	48 89 c7             	mov    %rax,%rdi
  68:	e8 00 00 00 00       	call   6d <remoteconfig::json_get_list(char*, unsigned short)+0x6d>
  6d:	c1 e8 18             	shr    $0x18,%eax
  70:	44 0f b6 f0          	movzbl %al,%r14d
  74:	e8 00 00 00 00       	call   79 <remoteconfig::json_get_list(char*, unsigned short)+0x79>
  79:	48 89 c7             	mov    %rax,%rdi
  7c:	e8 00 00 00 00       	call   81 <remoteconfig::json_get_list(char*, unsigned short)+0x81>
  81:	c1 e8 10             	shr    $0x10,%eax
  84:	0f b6 c0             	movzbl %al,%eax
  87:	89 45 b0             	mov    %eax,-0x50(%rbp)
  8a:	e8 00 00 00 00       	call   8f <remoteconfig::json_get_list(char*, unsigned short)+0x8f>
  8f:	48 89 c7             	mov    %rax,%rdi
  92:	e8 00 00 00 00       	call   97 <remoteconfig::json_get_list(char*, unsigned short)+0x97>
  97:	c1 e8 08             	shr    $0x8,%eax
  9a:	0f b6 c8             	movzbl %al,%ecx
  9d:	89 4d ac             	mov    %ecx,-0x54(%rbp)
  a0:	e8 00 00 00 00       	call   a5 <remoteconfig::json_get_list(char*, unsigned short)+0xa5>
  a5:	48 89 c7             	mov    %rax,%rdi
  a8:	e8 00 00 00 00       	call   ad <remoteconfig::json_get_list(char*, unsigned short)+0xad>
  ad:	0f b6 d0             	movzbl %al,%edx
  b0:	0f b7 75 b4          	movzwl -0x4c(%rbp),%esi
  b4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  b8:	48 83 ec 08          	sub    $0x8,%rsp
  bc:	41 57                	push   %r15
  be:	41 55                	push   %r13
  c0:	41 54                	push   %r12
  c2:	53                   	push   %rbx
  c3:	41 56                	push   %r14
  c5:	44 8b 4d b0          	mov    -0x50(%rbp),%r9d
  c9:	44 8b 45 ac          	mov    -0x54(%rbp),%r8d
  cd:	89 d1                	mov    %edx,%ecx
  cf:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # d6 <remoteconfig::json_get_list(char*, unsigned short)+0xd6>
  d6:	48 89 c7             	mov    %rax,%rdi
  d9:	b8 00 00 00 00       	mov    $0x0,%eax
  de:	e8 00 00 00 00       	call   e3 <remoteconfig::json_get_list(char*, unsigned short)+0xe3>
  e3:	48 83 c4 30          	add    $0x30,%rsp
  e7:	66 89 45 ce          	mov    %ax,-0x32(%rbp)
  eb:	0f b7 45 ce          	movzwl -0x32(%rbp),%eax
  ef:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
  f3:	5b                   	pop    %rbx
  f4:	41 5c                	pop    %r12
  f6:	41 5d                	pop    %r13
  f8:	41 5e                	pop    %r14
  fa:	41 5f                	pop    %r15
  fc:	5d                   	pop    %rbp
  fd:	c3                   	ret    

Disassembly of section .text._ZN12remoteconfig16json_get_versionEPct:

0000000000000000 <remoteconfig::json_get_version(char*, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 54                	push   %r12
   a:	53                   	push   %rbx
   b:	48 83 ec 30          	sub    $0x30,%rsp
   f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  13:	89 f0                	mov    %esi,%eax
  15:	66 89 45 c4          	mov    %ax,-0x3c(%rbp)
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  26:	31 c0                	xor    %eax,%eax
  28:	e8 00 00 00 00       	call   2d <remoteconfig::json_get_version(char*, unsigned short)+0x2d>
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <remoteconfig::json_get_version(char*, unsigned short)+0x35>
  35:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  3d:	4c 8d 60 0e          	lea    0xe(%rax),%r12
  41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  45:	48 8d 58 03          	lea    0x3(%rax),%rbx
  49:	e8 00 00 00 00       	call   4e <remoteconfig::json_get_version(char*, unsigned short)+0x4e>
  4e:	48 89 c2             	mov    %rax,%rdx
  51:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
  55:	48 89 c6             	mov    %rax,%rsi
  58:	48 89 d7             	mov    %rdx,%rdi
  5b:	e8 00 00 00 00       	call   60 <remoteconfig::json_get_version(char*, unsigned short)+0x60>
  60:	48 89 c2             	mov    %rax,%rdx
  63:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  67:	0f b7 75 c4          	movzwl -0x3c(%rbp),%esi
  6b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  6f:	41 54                	push   %r12
  71:	6a 08                	push   $0x8
  73:	53                   	push   %rbx
  74:	6a 0b                	push   $0xb
  76:	49 89 d1             	mov    %rdx,%r9
  79:	49 89 c8             	mov    %rcx,%r8
  7c:	b9 03 00 00 00       	mov    $0x3,%ecx
  81:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 88 <remoteconfig::json_get_version(char*, unsigned short)+0x88>
  88:	48 89 c7             	mov    %rax,%rdi
  8b:	b8 00 00 00 00       	mov    $0x0,%eax
  90:	e8 00 00 00 00       	call   95 <remoteconfig::json_get_version(char*, unsigned short)+0x95>
  95:	48 83 c4 20          	add    $0x20,%rsp
  99:	66 89 45 de          	mov    %ax,-0x22(%rbp)
  9d:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
  a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  a5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  ac:	00 00 
  ae:	74 05                	je     b5 <remoteconfig::json_get_version(char*, unsigned short)+0xb5>
  b0:	e8 00 00 00 00       	call   b5 <remoteconfig::json_get_version(char*, unsigned short)+0xb5>
  b5:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
  b9:	5b                   	pop    %rbx
  ba:	41 5c                	pop    %r12
  bc:	5d                   	pop    %rbp
  bd:	c3                   	ret    

Disassembly of section .text._ZN12remoteconfig15json_get_uptimeEPct:

0000000000000000 <remoteconfig::json_get_uptime(char*, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	e8 00 00 00 00       	call   1b <remoteconfig::json_get_uptime(char*, unsigned short)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <remoteconfig::json_get_uptime(char*, unsigned short)+0x23>
  23:	89 45 fc             	mov    %eax,-0x4(%rbp)
  26:	0f b7 75 e4          	movzwl -0x1c(%rbp),%esi
  2a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  31:	89 d1                	mov    %edx,%ecx
  33:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3a <remoteconfig::json_get_uptime(char*, unsigned short)+0x3a>
  3a:	48 89 c7             	mov    %rax,%rdi
  3d:	b8 00 00 00 00       	mov    $0x0,%eax
  42:	e8 00 00 00 00       	call   47 <remoteconfig::json_get_uptime(char*, unsigned short)+0x47>
  47:	66 89 45 fa          	mov    %ax,-0x6(%rbp)
  4b:	0f b7 45 fa          	movzwl -0x6(%rbp),%eax
  4f:	c9                   	leave  
  50:	c3                   	ret    

Disassembly of section .text._ZN12remoteconfig16json_get_displayEPct:

0000000000000000 <remoteconfig::json_get_display(char*, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	e8 00 00 00 00       	call   1b <remoteconfig::json_get_display(char*, unsigned short)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <remoteconfig::json_get_display(char*, unsigned short)+0x23>
  23:	83 f0 01             	xor    $0x1,%eax
  26:	88 45 fd             	mov    %al,-0x3(%rbp)
  29:	0f b6 55 fd          	movzbl -0x3(%rbp),%edx
  2d:	0f b7 75 e4          	movzwl -0x1c(%rbp),%esi
  31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  35:	89 d1                	mov    %edx,%ecx
  37:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3e <remoteconfig::json_get_display(char*, unsigned short)+0x3e>
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	b8 00 00 00 00       	mov    $0x0,%eax
  46:	e8 00 00 00 00       	call   4b <remoteconfig::json_get_display(char*, unsigned short)+0x4b>
  4b:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
  4f:	0f b7 45 fe          	movzwl -0x2(%rbp),%eax
  53:	c9                   	leave  
  54:	c3                   	ret    

Disassembly of section .text._ZN12remoteconfig18json_get_directoryEPct:

0000000000000000 <remoteconfig::json_get_directory(char*, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
  16:	0f b7 4d e4          	movzwl -0x1c(%rbp),%ecx
  1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 25 <remoteconfig::json_get_directory(char*, unsigned short)+0x25>
  25:	48 89 ce             	mov    %rcx,%rsi
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	b8 00 00 00 00       	mov    $0x0,%eax
  30:	e8 00 00 00 00       	call   35 <remoteconfig::json_get_directory(char*, unsigned short)+0x35>
  35:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
  39:	0f b7 45 fe          	movzwl -0x2(%rbp),%eax
  3d:	c9                   	leave  
  3e:	c3                   	ret    

remoteconfigparams.o:     file format elf64-x86-64


Disassembly of section .text._ZN12RemoteConfig15SetDisableWriteEb:

0000000000000000 <RemoteConfig::SetDisableWrite(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	40 88 77 0d          	mov    %sil,0xd(%rdi)
   8:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig15SetEnableRebootEb:

0000000000000000 <RemoteConfig::SetEnableReboot(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	40 88 77 0e          	mov    %sil,0xe(%rdi)
   8:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig15SetEnableUptimeEb:

0000000000000000 <RemoteConfig::SetEnableUptime(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	40 88 77 0f          	mov    %sil,0xf(%rdi)
   8:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig16SetEnableFactoryEb:

0000000000000000 <RemoteConfig::SetEnableFactory(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	40 88 77 10          	mov    %sil,0x10(%rdi)
   8:	c3                   	ret    

Disassembly of section .text._ZNK18RemoteConfigParams9isMaskSetEj:

0000000000000000 <RemoteConfigParams::isMaskSet(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8b 47 08             	mov    0x8(%rdi),%eax
   7:	21 f0                	and    %esi,%eax
   9:	39 f0                	cmp    %esi,%eax
   b:	0f 94 c0             	sete   %al
   e:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddEPKcb:

0000000000000000 <PropertiesBuilder::Add(char const*, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	0f b6 d2             	movzbl %dl,%edx
   7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   d:	89 d1                	mov    %edx,%ecx
   f:	e9 00 00 00 00       	jmp    14 <.LC2+0x2>

Disassembly of section .text._ZN17PropertiesBuilder7GetSizeEv:

0000000000000000 <PropertiesBuilder::GetSize()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	80 7f 0c 00          	cmpb   $0x0,0xc(%rdi)
   8:	74 1b                	je     25 <PropertiesBuilder::GetSize()+0x25>
   a:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
   e:	48 8b 17             	mov    (%rdi),%rdx
  11:	c6 44 02 ff 7d       	movb   $0x7d,-0x1(%rdx,%rax,1)
  16:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
  1a:	48 8b 17             	mov    (%rdi),%rdx
  1d:	c6 04 02 7d          	movb   $0x7d,(%rdx,%rax,1)
  21:	66 ff 47 0a          	incw   0xa(%rdi)
  25:	66 8b 47 0a          	mov    0xa(%rdi),%ax
  29:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIPcEEiS1_jPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	49 89 fa             	mov    %rdi,%r10
   7:	48 89 f7             	mov    %rsi,%rdi
   a:	89 d6                	mov    %edx,%esi
   c:	41 8a 42 0c          	mov    0xc(%r10),%al
  10:	45 84 c9             	test   %r9b,%r9b
  13:	75 06                	jne    1b <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x1b>
  15:	84 c0                	test   %al,%al
  17:	75 0d                	jne    26 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x26>
  19:	eb 14                	jmp    2f <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x2f>
  1b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 22 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x22>
  22:	84 c0                	test   %al,%al
  24:	74 10                	je     36 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x36>
  26:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2d <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x2d>
  2d:	eb 07                	jmp    36 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x36>
  2f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 36 <int PropertiesBuilder::add_part<char*>(char*, unsigned int, char const*, char*, bool, unsigned int)+0x36>
  36:	31 c0                	xor    %eax,%eax
  38:	e9 00 00 00 00       	jmp    3d <.LC2+0x2b>

Disassembly of section .text._ZN18RemoteConfigParamsC2EP23RemoteConfigParamsStore:

0000000000000000 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 8d 57 08          	lea    0x8(%rdi),%rdx
   8:	48 89 37             	mov    %rsi,(%rdi)
   b:	b9 08 00 00 00       	mov    $0x8,%ecx
  10:	31 c0                	xor    %eax,%eax
  12:	48 89 d7             	mov    %rdx,%rdi
  15:	f3 ab                	rep stos %eax,%es:(%rdi)
  17:	c3                   	ret    

Disassembly of section .text._ZN18RemoteConfigParams4LoadEv:

0000000000000000 <RemoteConfigParams::Load()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	48 89 fa             	mov    %rdi,%rdx
   9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 10 <RemoteConfigParams::Load()+0x10>
  10:	55                   	push   %rbp
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	48 83 ec 20          	sub    $0x20,%rsp
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  27:	31 c0                	xor    %eax,%eax
  29:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  30:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  35:	48 89 ef             	mov    %rbp,%rdi
  38:	e8 00 00 00 00       	call   3d <RemoteConfigParams::Load()+0x3d>
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 47 <RemoteConfigParams::Load()+0x47>
  47:	e8 00 00 00 00       	call   4c <RemoteConfigParams::Load()+0x4c>
  4c:	48 8b 3b             	mov    (%rbx),%rdi
  4f:	84 c0                	test   %al,%al
  51:	41 89 c4             	mov    %eax,%r12d
  54:	74 11                	je     67 <RemoteConfigParams::Load()+0x67>
  56:	48 85 ff             	test   %rdi,%rdi
  59:	74 1e                	je     79 <RemoteConfigParams::Load()+0x79>
  5b:	48 8b 07             	mov    (%rdi),%rax
  5e:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  62:	ff 50 10             	call   *0x10(%rax)
  65:	eb 12                	jmp    79 <RemoteConfigParams::Load()+0x79>
  67:	48 85 ff             	test   %rdi,%rdi
  6a:	74 0d                	je     79 <RemoteConfigParams::Load()+0x79>
  6c:	48 8b 07             	mov    (%rdi),%rax
  6f:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  73:	41 b4 01             	mov    $0x1,%r12b
  76:	ff 50 18             	call   *0x18(%rax)
  79:	48 89 ef             	mov    %rbp,%rdi
  7c:	e8 00 00 00 00       	call   81 <RemoteConfigParams::Load()+0x81>
  81:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  86:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8d:	00 00 
  8f:	74 05                	je     96 <RemoteConfigParams::Load()+0x96>
  91:	e8 00 00 00 00       	call   96 <RemoteConfigParams::Load()+0x96>
  96:	48 83 c4 20          	add    $0x20,%rsp
  9a:	44 89 e0             	mov    %r12d,%eax
  9d:	5b                   	pop    %rbx
  9e:	5d                   	pop    %rbp
  9f:	41 5c                	pop    %r12
  a1:	c3                   	ret    

Disassembly of section .text._ZN18RemoteConfigParams4LoadEPKcj:

0000000000000000 <RemoteConfigParams::Load(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 89 d5             	mov    %edx,%r13d
   9:	48 89 fa             	mov    %rdi,%rdx
   c:	41 54                	push   %r12
   e:	49 89 f4             	mov    %rsi,%r12
  11:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 18 <RemoteConfigParams::Load(char const*, unsigned int)+0x18>
  18:	55                   	push   %rbp
  19:	53                   	push   %rbx
  1a:	48 89 fb             	mov    %rdi,%rbx
  1d:	48 83 ec 28          	sub    $0x28,%rsp
  21:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  28:	00 00 
  2a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  2f:	31 c0                	xor    %eax,%eax
  31:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  38:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	e8 00 00 00 00       	call   45 <RemoteConfigParams::Load(char const*, unsigned int)+0x45>
  45:	44 89 ea             	mov    %r13d,%edx
  48:	4c 89 e6             	mov    %r12,%rsi
  4b:	48 89 ef             	mov    %rbp,%rdi
  4e:	e8 00 00 00 00       	call   53 <RemoteConfigParams::Load(char const*, unsigned int)+0x53>
  53:	48 8b 3b             	mov    (%rbx),%rdi
  56:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  5a:	48 8b 07             	mov    (%rdi),%rax
  5d:	ff 50 10             	call   *0x10(%rax)
  60:	48 89 ef             	mov    %rbp,%rdi
  63:	e8 00 00 00 00       	call   68 <RemoteConfigParams::Load(char const*, unsigned int)+0x68>
  68:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  6d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  74:	00 00 
  76:	74 05                	je     7d <RemoteConfigParams::Load(char const*, unsigned int)+0x7d>
  78:	e8 00 00 00 00       	call   7d <RemoteConfigParams::Load(char const*, unsigned int)+0x7d>
  7d:	48 83 c4 28          	add    $0x28,%rsp
  81:	5b                   	pop    %rbx
  82:	5d                   	pop    %rbp
  83:	41 5c                	pop    %r12
  85:	41 5d                	pop    %r13
  87:	c3                   	ret    

Disassembly of section .text._ZN18RemoteConfigParams7SetBoolEhj:

0000000000000000 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8b 47 08             	mov    0x8(%rdi),%eax
   7:	40 84 f6             	test   %sil,%sil
   a:	74 04                	je     10 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x10>
   c:	09 d0                	or     %edx,%eax
   e:	eb 04                	jmp    14 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x14>
  10:	f7 d2                	not    %edx
  12:	21 d0                	and    %edx,%eax
  14:	89 47 08             	mov    %eax,0x8(%rdi)
  17:	c3                   	ret    

Disassembly of section .text._ZN18RemoteConfigParams16callbackFunctionEPKc:

0000000000000000 <RemoteConfigParams::callbackFunction(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	49 89 f4             	mov    %rsi,%r12
   b:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 12 <RemoteConfigParams::callbackFunction(char const*)+0x12>
  12:	55                   	push   %rbp
  13:	48 89 fd             	mov    %rdi,%rbp
  16:	4c 89 e7             	mov    %r12,%rdi
  19:	48 83 ec 10          	sub    $0x10,%rsp
  1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  24:	00 00 
  26:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  2b:	31 c0                	xor    %eax,%eax
  2d:	4c 8d 6c 24 03       	lea    0x3(%rsp),%r13
  32:	4c 89 ea             	mov    %r13,%rdx
  35:	e8 00 00 00 00       	call   3a <RemoteConfigParams::callbackFunction(char const*)+0x3a>
  3a:	85 c0                	test   %eax,%eax
  3c:	75 23                	jne    61 <RemoteConfigParams::callbackFunction(char const*)+0x61>
  3e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  43:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4a:	00 00 
  4c:	0f 85 36 01 00 00    	jne    188 <RemoteConfigParams::callbackFunction(char const*)+0x188>
  52:	0f b6 74 24 03       	movzbl 0x3(%rsp),%esi
  57:	ba 01 00 00 00       	mov    $0x1,%edx
  5c:	e9 d5 00 00 00       	jmp    136 <RemoteConfigParams::callbackFunction(char const*)+0x136>
  61:	4c 89 ea             	mov    %r13,%rdx
  64:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 6b <RemoteConfigParams::callbackFunction(char const*)+0x6b>
  6b:	4c 89 e7             	mov    %r12,%rdi
  6e:	e8 00 00 00 00       	call   73 <RemoteConfigParams::callbackFunction(char const*)+0x73>
  73:	85 c0                	test   %eax,%eax
  75:	75 23                	jne    9a <RemoteConfigParams::callbackFunction(char const*)+0x9a>
  77:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  7c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  83:	00 00 
  85:	0f 85 fd 00 00 00    	jne    188 <RemoteConfigParams::callbackFunction(char const*)+0x188>
  8b:	0f b6 74 24 03       	movzbl 0x3(%rsp),%esi
  90:	ba 02 00 00 00       	mov    $0x2,%edx
  95:	e9 9c 00 00 00       	jmp    136 <RemoteConfigParams::callbackFunction(char const*)+0x136>
  9a:	4c 89 ea             	mov    %r13,%rdx
  9d:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # a4 <RemoteConfigParams::callbackFunction(char const*)+0xa4>
  a4:	4c 89 e7             	mov    %r12,%rdi
  a7:	e8 00 00 00 00       	call   ac <RemoteConfigParams::callbackFunction(char const*)+0xac>
  ac:	85 c0                	test   %eax,%eax
  ae:	75 20                	jne    d0 <RemoteConfigParams::callbackFunction(char const*)+0xd0>
  b0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  b5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  bc:	00 00 
  be:	0f 85 c4 00 00 00    	jne    188 <RemoteConfigParams::callbackFunction(char const*)+0x188>
  c4:	0f b6 74 24 03       	movzbl 0x3(%rsp),%esi
  c9:	ba 04 00 00 00       	mov    $0x4,%edx
  ce:	eb 66                	jmp    136 <RemoteConfigParams::callbackFunction(char const*)+0x136>
  d0:	4c 89 ea             	mov    %r13,%rdx
  d3:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # da <RemoteConfigParams::callbackFunction(char const*)+0xda>
  da:	4c 89 e7             	mov    %r12,%rdi
  dd:	e8 00 00 00 00       	call   e2 <RemoteConfigParams::callbackFunction(char const*)+0xe2>
  e2:	85 c0                	test   %eax,%eax
  e4:	75 20                	jne    106 <RemoteConfigParams::callbackFunction(char const*)+0x106>
  e6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  eb:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  f2:	00 00 
  f4:	0f 85 8e 00 00 00    	jne    188 <RemoteConfigParams::callbackFunction(char const*)+0x188>
  fa:	0f b6 74 24 03       	movzbl 0x3(%rsp),%esi
  ff:	ba 08 00 00 00       	mov    $0x8,%edx
 104:	eb 30                	jmp    136 <RemoteConfigParams::callbackFunction(char const*)+0x136>
 106:	4c 89 ea             	mov    %r13,%rdx
 109:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 110 <RemoteConfigParams::callbackFunction(char const*)+0x110>
 110:	4c 89 e7             	mov    %r12,%rdi
 113:	e8 00 00 00 00       	call   118 <RemoteConfigParams::callbackFunction(char const*)+0x118>
 118:	85 c0                	test   %eax,%eax
 11a:	75 2b                	jne    147 <RemoteConfigParams::callbackFunction(char const*)+0x147>
 11c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
 121:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 128:	00 00 
 12a:	75 5c                	jne    188 <RemoteConfigParams::callbackFunction(char const*)+0x188>
 12c:	0f b6 74 24 03       	movzbl 0x3(%rsp),%esi
 131:	ba 20 00 00 00       	mov    $0x20,%edx
 136:	48 83 c4 10          	add    $0x10,%rsp
 13a:	48 89 ef             	mov    %rbp,%rdi
 13d:	5d                   	pop    %rbp
 13e:	41 5c                	pop    %r12
 140:	41 5d                	pop    %r13
 142:	e9 00 00 00 00       	jmp    147 <RemoteConfigParams::callbackFunction(char const*)+0x147>
 147:	48 8d 4c 24 04       	lea    0x4(%rsp),%rcx
 14c:	48 8d 55 10          	lea    0x10(%rbp),%rdx
 150:	4c 89 e7             	mov    %r12,%rdi
 153:	c7 44 24 04 17 00 00 	movl   $0x17,0x4(%rsp)
 15a:	00 
 15b:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 162 <RemoteConfigParams::callbackFunction(char const*)+0x162>
 162:	e8 00 00 00 00       	call   167 <RemoteConfigParams::callbackFunction(char const*)+0x167>
 167:	85 c0                	test   %eax,%eax
 169:	75 0d                	jne    178 <RemoteConfigParams::callbackFunction(char const*)+0x178>
 16b:	8b 44 24 04          	mov    0x4(%rsp),%eax
 16f:	c6 44 05 10 00       	movb   $0x0,0x10(%rbp,%rax,1)
 174:	83 4d 08 10          	orl    $0x10,0x8(%rbp)
 178:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
 17d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 184:	00 00 
 186:	74 05                	je     18d <RemoteConfigParams::callbackFunction(char const*)+0x18d>
 188:	e8 00 00 00 00       	call   18d <RemoteConfigParams::callbackFunction(char const*)+0x18d>
 18d:	48 83 c4 10          	add    $0x10,%rsp
 191:	5d                   	pop    %rbp
 192:	41 5c                	pop    %r12
 194:	41 5d                	pop    %r13
 196:	c3                   	ret    

Disassembly of section .text._ZN18RemoteConfigParams7BuilderEPK19TRemoteConfigParamsPcjRj:

0000000000000000 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 56                	push   %r14
   6:	41 89 ce             	mov    %ecx,%r14d
   9:	41 55                	push   %r13
   b:	49 89 d5             	mov    %rdx,%r13
   e:	41 54                	push   %r12
  10:	4d 89 c4             	mov    %r8,%r12
  13:	4c 8d 47 08          	lea    0x8(%rdi),%r8
  17:	55                   	push   %rbp
  18:	53                   	push   %rbx
  19:	48 89 fb             	mov    %rdi,%rbx
  1c:	48 83 ec 20          	sub    $0x20,%rsp
  20:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  27:	00 00 
  29:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  2e:	31 c0                	xor    %eax,%eax
  30:	48 85 f6             	test   %rsi,%rsi
  33:	74 12                	je     47 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x47>
  35:	0f 10 06             	movups (%rsi),%xmm0
  38:	0f 11 47 08          	movups %xmm0,0x8(%rdi)
  3c:	0f 10 4e 10          	movups 0x10(%rsi),%xmm1
  40:	41 0f 11 48 10       	movups %xmm1,0x10(%r8)
  45:	eb 0c                	jmp    53 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x53>
  47:	48 8b 3f             	mov    (%rdi),%rdi
  4a:	4c 89 c6             	mov    %r8,%rsi
  4d:	48 8b 07             	mov    (%rdi),%rax
  50:	ff 50 18             	call   *0x18(%rax)
  53:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  58:	44 89 f1             	mov    %r14d,%ecx
  5b:	4c 89 ea             	mov    %r13,%rdx
  5e:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 65 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x65>
  65:	48 89 ef             	mov    %rbp,%rdi
  68:	e8 00 00 00 00       	call   6d <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x6d>
  6d:	be 01 00 00 00       	mov    $0x1,%esi
  72:	48 89 df             	mov    %rbx,%rdi
  75:	e8 00 00 00 00       	call   7a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x7a>
  7a:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 81 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x81>
  81:	48 89 ef             	mov    %rbp,%rdi
  84:	0f b6 d0             	movzbl %al,%edx
  87:	e8 00 00 00 00       	call   8c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x8c>
  8c:	be 02 00 00 00       	mov    $0x2,%esi
  91:	48 89 df             	mov    %rbx,%rdi
  94:	e8 00 00 00 00       	call   99 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x99>
  99:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # a0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
  a0:	48 89 ef             	mov    %rbp,%rdi
  a3:	0f b6 d0             	movzbl %al,%edx
  a6:	e8 00 00 00 00       	call   ab <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xab>
  ab:	be 04 00 00 00       	mov    $0x4,%esi
  b0:	48 89 df             	mov    %rbx,%rdi
  b3:	e8 00 00 00 00       	call   b8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xb8>
  b8:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # bf <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbf>
  bf:	48 89 ef             	mov    %rbp,%rdi
  c2:	0f b6 d0             	movzbl %al,%edx
  c5:	e8 00 00 00 00       	call   ca <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xca>
  ca:	be 08 00 00 00       	mov    $0x8,%esi
  cf:	48 89 df             	mov    %rbx,%rdi
  d2:	e8 00 00 00 00       	call   d7 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xd7>
  d7:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # de <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xde>
  de:	48 89 ef             	mov    %rbp,%rdi
  e1:	0f b6 d0             	movzbl %al,%edx
  e4:	e8 00 00 00 00       	call   e9 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe9>
  e9:	be 20 00 00 00       	mov    $0x20,%esi
  ee:	48 89 df             	mov    %rbx,%rdi
  f1:	e8 00 00 00 00       	call   f6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf6>
  f6:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # fd <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfd>
  fd:	48 89 ef             	mov    %rbp,%rdi
 100:	0f b6 d0             	movzbl %al,%edx
 103:	e8 00 00 00 00       	call   108 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>
 108:	be 10 00 00 00       	mov    $0x10,%esi
 10d:	48 89 df             	mov    %rbx,%rdi
 110:	e8 00 00 00 00       	call   115 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x115>
 115:	48 8d 53 10          	lea    0x10(%rbx),%rdx
 119:	41 b8 01 00 00 00    	mov    $0x1,%r8d
 11f:	48 89 ef             	mov    %rbp,%rdi
 122:	0f b6 c8             	movzbl %al,%ecx
 125:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 12c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x12c>
 12c:	e8 00 00 00 00       	call   131 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x131>
 131:	48 89 ef             	mov    %rbp,%rdi
 134:	e8 00 00 00 00       	call   139 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x139>
 139:	0f b7 c0             	movzwl %ax,%eax
 13c:	41 89 04 24          	mov    %eax,(%r12)
 140:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
 145:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 14c:	00 00 
 14e:	74 05                	je     155 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x155>
 150:	e8 00 00 00 00       	call   155 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x155>
 155:	48 83 c4 20          	add    $0x20,%rsp
 159:	5b                   	pop    %rbx
 15a:	5d                   	pop    %rbp
 15b:	41 5c                	pop    %r12
 15d:	41 5d                	pop    %r13
 15f:	41 5e                	pop    %r14
 161:	c3                   	ret    

Disassembly of section .text._ZN18RemoteConfigParams4SaveEPcjRj:

0000000000000000 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   8:	49 89 c8             	mov    %rcx,%r8
   b:	75 07                	jne    14 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x14>
   d:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
  13:	c3                   	ret    
  14:	89 d1                	mov    %edx,%ecx
  16:	48 89 f2             	mov    %rsi,%rdx
  19:	31 f6                	xor    %esi,%esi
  1b:	e9 00 00 00 00       	jmp    20 <.LC2+0xe>

Disassembly of section .text._ZN18RemoteConfigParams3SetEP12RemoteConfig:

0000000000000000 <RemoteConfigParams::Set(RemoteConfig*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 f5             	mov    %rsi,%rbp
   8:	be 01 00 00 00       	mov    $0x1,%esi
   d:	53                   	push   %rbx
   e:	48 89 fb             	mov    %rdi,%rbx
  11:	51                   	push   %rcx
  12:	e8 00 00 00 00       	call   17 <RemoteConfigParams::Set(RemoteConfig*)+0x17>
  17:	48 89 ef             	mov    %rbp,%rdi
  1a:	0f b6 f0             	movzbl %al,%esi
  1d:	e8 00 00 00 00       	call   22 <RemoteConfigParams::Set(RemoteConfig*)+0x22>
  22:	be 02 00 00 00       	mov    $0x2,%esi
  27:	48 89 df             	mov    %rbx,%rdi
  2a:	e8 00 00 00 00       	call   2f <RemoteConfigParams::Set(RemoteConfig*)+0x2f>
  2f:	48 89 ef             	mov    %rbp,%rdi
  32:	0f b6 f0             	movzbl %al,%esi
  35:	e8 00 00 00 00       	call   3a <RemoteConfigParams::Set(RemoteConfig*)+0x3a>
  3a:	be 04 00 00 00       	mov    $0x4,%esi
  3f:	48 89 df             	mov    %rbx,%rdi
  42:	e8 00 00 00 00       	call   47 <RemoteConfigParams::Set(RemoteConfig*)+0x47>
  47:	48 89 ef             	mov    %rbp,%rdi
  4a:	0f b6 f0             	movzbl %al,%esi
  4d:	e8 00 00 00 00       	call   52 <RemoteConfigParams::Set(RemoteConfig*)+0x52>
  52:	be 08 00 00 00       	mov    $0x8,%esi
  57:	48 89 df             	mov    %rbx,%rdi
  5a:	e8 00 00 00 00       	call   5f <RemoteConfigParams::Set(RemoteConfig*)+0x5f>
  5f:	48 89 ef             	mov    %rbp,%rdi
  62:	0f b6 f0             	movzbl %al,%esi
  65:	e8 00 00 00 00       	call   6a <RemoteConfigParams::Set(RemoteConfig*)+0x6a>
  6a:	be 20 00 00 00       	mov    $0x20,%esi
  6f:	48 89 df             	mov    %rbx,%rdi
  72:	e8 00 00 00 00       	call   77 <RemoteConfigParams::Set(RemoteConfig*)+0x77>
  77:	48 89 ef             	mov    %rbp,%rdi
  7a:	0f b6 f0             	movzbl %al,%esi
  7d:	e8 00 00 00 00       	call   82 <RemoteConfigParams::Set(RemoteConfig*)+0x82>
  82:	be 10 00 00 00       	mov    $0x10,%esi
  87:	48 89 df             	mov    %rbx,%rdi
  8a:	e8 00 00 00 00       	call   8f <RemoteConfigParams::Set(RemoteConfig*)+0x8f>
  8f:	84 c0                	test   %al,%al
  91:	74 0f                	je     a2 <RemoteConfigParams::Set(RemoteConfig*)+0xa2>
  93:	5a                   	pop    %rdx
  94:	48 8d 73 10          	lea    0x10(%rbx),%rsi
  98:	48 89 ef             	mov    %rbp,%rdi
  9b:	5b                   	pop    %rbx
  9c:	5d                   	pop    %rbp
  9d:	e9 00 00 00 00       	jmp    a2 <RemoteConfigParams::Set(RemoteConfig*)+0xa2>
  a2:	58                   	pop    %rax
  a3:	5b                   	pop    %rbx
  a4:	5d                   	pop    %rbp
  a5:	c3                   	ret    

Disassembly of section .text._ZN18RemoteConfigParams22staticCallbackFunctionEPvPKc:

0000000000000000 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	e9 00 00 00 00       	jmp    9 <.LC4>

Disassembly of section .text._ZN17PropertiesBuilder3AddIbEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	41 52                	push   %r10
   8:	49 89 f2             	mov    %rsi,%r10
   b:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	66 39 ee             	cmp    %bp,%si
  16:	72 04                	jb     1c <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x1c>
  18:	31 c0                	xor    %eax,%eax
  1a:	eb 33                	jmp    4f <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x4f>
  1c:	89 d0                	mov    %edx,%eax
  1e:	48 89 fb             	mov    %rdi,%rbx
  21:	0f b7 d6             	movzwl %si,%edx
  24:	48 03 37             	add    (%rdi),%rsi
  27:	57                   	push   %rdi
  28:	29 d5                	sub    %edx,%ebp
  2a:	44 0f b6 c9          	movzbl %cl,%r9d
  2e:	48 89 df             	mov    %rbx,%rdi
  31:	41 50                	push   %r8
  33:	4c 89 d1             	mov    %r10,%rcx
  36:	44 0f b6 c0          	movzbl %al,%r8d
  3a:	89 ea                	mov    %ebp,%edx
  3c:	e8 00 00 00 00       	call   41 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x41>
  41:	41 58                	pop    %r8
  43:	41 59                	pop    %r9
  45:	39 c5                	cmp    %eax,%ebp
  47:	7c cf                	jl     18 <bool PropertiesBuilder::Add<bool>(char const*, bool, bool, unsigned int)+0x18>
  49:	66 01 43 0a          	add    %ax,0xa(%rbx)
  4d:	b0 01                	mov    $0x1,%al
  4f:	5a                   	pop    %rdx
  50:	5b                   	pop    %rbx
  51:	5d                   	pop    %rbp
  52:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIPcEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	41 52                	push   %r10
   8:	49 89 f2             	mov    %rsi,%r10
   b:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	66 39 ee             	cmp    %bp,%si
  16:	72 04                	jb     1c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int)+0x1c>
  18:	31 c0                	xor    %eax,%eax
  1a:	eb 33                	jmp    4f <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int)+0x4f>
  1c:	48 89 d0             	mov    %rdx,%rax
  1f:	48 89 fb             	mov    %rdi,%rbx
  22:	0f b7 d6             	movzwl %si,%edx
  25:	48 03 37             	add    (%rdi),%rsi
  28:	57                   	push   %rdi
  29:	29 d5                	sub    %edx,%ebp
  2b:	44 0f b6 c9          	movzbl %cl,%r9d
  2f:	48 89 df             	mov    %rbx,%rdi
  32:	41 50                	push   %r8
  34:	4c 89 d1             	mov    %r10,%rcx
  37:	49 89 c0             	mov    %rax,%r8
  3a:	89 ea                	mov    %ebp,%edx
  3c:	e8 00 00 00 00       	call   41 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int)+0x41>
  41:	41 58                	pop    %r8
  43:	41 59                	pop    %r9
  45:	39 c5                	cmp    %eax,%ebp
  47:	7c cf                	jl     18 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int)+0x18>
  49:	66 01 43 0a          	add    %ax,0xa(%rbx)
  4d:	b0 01                	mov    $0x1,%al
  4f:	5a                   	pop    %rdx
  50:	5b                   	pop    %rbx
  51:	5d                   	pop    %rbp
  52:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partIbEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	49 89 fa             	mov    %rdi,%r10
   7:	45 0f b6 c0          	movzbl %r8b,%r8d
   b:	48 89 f7             	mov    %rsi,%rdi
   e:	89 d6                	mov    %edx,%esi
  10:	41 8a 42 0c          	mov    0xc(%r10),%al
  14:	45 84 c9             	test   %r9b,%r9b
  17:	75 06                	jne    1f <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x1f>
  19:	84 c0                	test   %al,%al
  1b:	75 0d                	jne    2a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x2a>
  1d:	eb 14                	jmp    33 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x33>
  1f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x26>
  26:	84 c0                	test   %al,%al
  28:	74 10                	je     3a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x3a>
  2a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 31 <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x31>
  31:	eb 07                	jmp    3a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x3a>
  33:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3a <int PropertiesBuilder::add_part<bool>(char*, unsigned int, char const*, bool, bool, unsigned int)+0x3a>
  3a:	31 c0                	xor    %eax,%eax
  3c:	e9 00 00 00 00       	jmp    41 <.LC2+0x2f>

remoteconfigparamsdump.o:     file format elf64-x86-64


Disassembly of section .text._ZN18RemoteConfigParams4DumpEv:

0000000000000000 <RemoteConfigParams::Dump()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	c3                   	ret    

remoteconfigreboot.o:     file format elf64-x86-64


Disassembly of section .text._ZN11ConfigStore3GetEv:

0000000000000000 <ConfigStore::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <ConfigStore::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN7Network8ShutdownEv:

0000000000000000 <Network::Shutdown()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Network::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZNK10DisplaySet10GetColumnsEv:

0000000000000000 <DisplaySet::GetColumns() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 08             	mov    0x8(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK10DisplaySet7GetRowsEv:

0000000000000000 <DisplaySet::GetRows() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 0c             	mov    0xc(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text.i2c_set_baudrate:

0000000000000000 <i2c_set_baudrate>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	90                   	nop
   8:	5d                   	pop    %rbp
   9:	c3                   	ret    

Disassembly of section .text.i2c_set_address:

0000000000000000 <i2c_set_address>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 f8                	mov    %edi,%eax
   6:	88 45 fc             	mov    %al,-0x4(%rbp)
   9:	90                   	nop
   a:	5d                   	pop    %rbp
   b:	c3                   	ret    

Disassembly of section .text.i2c_write:

0000000000000000 <i2c_write>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C13WriteRegisterEht:

0000000000000000 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  24:	00 00 
  26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2a:	31 c0                	xor    %eax,%eax
  2c:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  30:	88 45 f5             	mov    %al,-0xb(%rbp)
  33:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  37:	66 c1 e8 08          	shr    $0x8,%ax
  3b:	88 45 f6             	mov    %al,-0xa(%rbp)
  3e:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  42:	88 45 f7             	mov    %al,-0x9(%rbp)
  45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  49:	48 89 c7             	mov    %rax,%rdi
  4c:	e8 00 00 00 00       	call   51 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x51>
  51:	48 8d 45 f5          	lea    -0xb(%rbp),%rax
  55:	be 03 00 00 00       	mov    $0x3,%esi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	call   62 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x62>
  62:	90                   	nop
  63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  67:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  6e:	00 00 
  70:	74 05                	je     77 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x77>
  72:	e8 00 00 00 00       	call   77 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x77>
  77:	c9                   	leave  
  78:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5SetupEv:

0000000000000000 <HAL_I2C::Setup()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 08          	sub    $0x8,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	0f b6 00             	movzbl (%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	89 c7                	mov    %eax,%edi
  1c:	e8 00 00 00 00       	call   21 <HAL_I2C::Setup()+0x21>
  21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  25:	8b 40 04             	mov    0x4(%rax),%eax
  28:	89 c7                	mov    %eax,%edi
  2a:	e8 00 00 00 00       	call   2f <HAL_I2C::Setup()+0x2f>
  2f:	90                   	nop
  30:	c9                   	leave  
  31:	c3                   	ret    

Disassembly of section .text._ZN7Display3ClsEv:

0000000000000000 <Display::Cls()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 40 18          	mov    0x18(%rax),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	74 21                	je     3e <Display::Cls()+0x3e>
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 8b 40 18          	mov    0x18(%rax),%rax
  25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  29:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  2d:	48 8b 12             	mov    (%rdx),%rdx
  30:	48 83 c2 18          	add    $0x18,%rdx
  34:	48 8b 12             	mov    (%rdx),%rdx
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	ff d2                	call   *%rdx
  3c:	eb 01                	jmp    3f <Display::Cls()+0x3f>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN7Display7PutCharEi:

0000000000000000 <Display::PutChar(int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 8b 40 18          	mov    0x18(%rax),%rax
  1b:	48 85 c0             	test   %rax,%rax
  1e:	74 26                	je     46 <Display::PutChar(int)+0x46>
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	48 8b 40 18          	mov    0x18(%rax),%rax
  28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2c:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  30:	48 8b 12             	mov    (%rdx),%rdx
  33:	48 83 c2 28          	add    $0x28,%rdx
  37:	48 8b 0a             	mov    (%rdx),%rcx
  3a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  3d:	89 d6                	mov    %edx,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	ff d1                	call   *%rcx
  44:	eb 01                	jmp    47 <Display::PutChar(int)+0x47>
  46:	90                   	nop
  47:	c9                   	leave  
  48:	c3                   	ret    

Disassembly of section .text._ZN7Display5WriteEjPKc:

0000000000000000 <Display::Write(unsigned int, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1b:	48 8b 40 18          	mov    0x18(%rax),%rax
  1f:	48 85 c0             	test   %rax,%rax
  22:	75 07                	jne    2b <Display::Write(unsigned int, char const*)+0x2b>
  24:	b8 00 00 00 00       	mov    $0x0,%eax
  29:	eb 7f                	jmp    aa <Display::Write(unsigned int, char const*)+0xaa>
  2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  33:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3e:	48 8b 40 18          	mov    0x18(%rax),%rax
  42:	48 89 c7             	mov    %rax,%rdi
  45:	e8 00 00 00 00       	call   4a <Display::Write(unsigned int, char const*)+0x4a>
  4a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4d:	eb 05                	jmp    54 <Display::Write(unsigned int, char const*)+0x54>
  4f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  58:	0f b6 00             	movzbl (%rax),%eax
  5b:	84 c0                	test   %al,%al
  5d:	74 15                	je     74 <Display::Write(unsigned int, char const*)+0x74>
  5f:	8b 45 f0             	mov    -0x10(%rbp),%eax
  62:	8d 50 01             	lea    0x1(%rax),%edx
  65:	89 55 f0             	mov    %edx,-0x10(%rbp)
  68:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  6b:	76 07                	jbe    74 <Display::Write(unsigned int, char const*)+0x74>
  6d:	b8 01 00 00 00       	mov    $0x1,%eax
  72:	eb 05                	jmp    79 <Display::Write(unsigned int, char const*)+0x79>
  74:	b8 00 00 00 00       	mov    $0x0,%eax
  79:	84 c0                	test   %al,%al
  7b:	75 d2                	jne    4f <Display::Write(unsigned int, char const*)+0x4f>
  7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  81:	48 8b 40 18          	mov    0x18(%rax),%rax
  85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  89:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  8d:	48 8b 12             	mov    (%rdx),%rdx
  90:	48 83 c2 38          	add    $0x38,%rdx
  94:	4c 8b 02             	mov    (%rdx),%r8
  97:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  9a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  9e:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  a1:	48 89 c7             	mov    %rax,%rdi
  a4:	41 ff d0             	call   *%r8
  a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
  aa:	c9                   	leave  
  ab:	c3                   	ret    

Disassembly of section .text._ZN7Display10TextStatusEPKc:

0000000000000000 <Display::TextStatus(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  18:	48 8b 40 18          	mov    0x18(%rax),%rax
  1c:	48 85 c0             	test   %rax,%rax
  1f:	0f 84 94 00 00 00    	je     b9 <Display::TextStatus(char const*)+0xb9>
  25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  29:	48 8b 40 18          	mov    0x18(%rax),%rax
  2d:	48 89 c7             	mov    %rax,%rdi
  30:	e8 00 00 00 00       	call   35 <Display::TextStatus(char const*)+0x35>
  35:	89 45 f8             	mov    %eax,-0x8(%rbp)
  38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3c:	48 8b 40 18          	mov    0x18(%rax),%rax
  40:	48 89 c7             	mov    %rax,%rdi
  43:	e8 00 00 00 00       	call   48 <Display::TextStatus(char const*)+0x48>
  48:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4e:	8d 50 ff             	lea    -0x1(%rax),%edx
  51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  55:	be 00 00 00 00       	mov    $0x0,%esi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	call   62 <Display::TextStatus(char const*)+0x62>
  62:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  69:	eb 15                	jmp    80 <Display::TextStatus(char const*)+0x80>
  6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6f:	be 20 00 00 00       	mov    $0x20,%esi
  74:	48 89 c7             	mov    %rax,%rdi
  77:	e8 00 00 00 00       	call   7c <Display::TextStatus(char const*)+0x7c>
  7c:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  80:	8b 45 f8             	mov    -0x8(%rbp),%eax
  83:	83 e8 01             	sub    $0x1,%eax
  86:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  89:	72 e0                	jb     6b <Display::TextStatus(char const*)+0x6b>
  8b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  8e:	8d 50 ff             	lea    -0x1(%rax),%edx
  91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  95:	be 00 00 00 00       	mov    $0x0,%esi
  9a:	48 89 c7             	mov    %rax,%rdi
  9d:	e8 00 00 00 00       	call   a2 <Display::TextStatus(char const*)+0xa2>
  a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  a6:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ad:	89 ce                	mov    %ecx,%esi
  af:	48 89 c7             	mov    %rax,%rdi
  b2:	e8 00 00 00 00       	call   b7 <Display::TextStatus(char const*)+0xb7>
  b7:	eb 01                	jmp    ba <Display::TextStatus(char const*)+0xba>
  b9:	90                   	nop
  ba:	c9                   	leave  
  bb:	c3                   	ret    

Disassembly of section .text._ZN7Display10TextStatusEPKc22Display7SegmentMessagej:

0000000000000000 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 d6             	mov    %rdx,%rsi
  25:	48 89 c7             	mov    %rax,%rdi
  28:	e8 00 00 00 00       	call   2d <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x2d>
  2d:	8b 55 ec             	mov    -0x14(%rbp),%edx
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	89 d6                	mov    %edx,%esi
  36:	48 89 c7             	mov    %rax,%rdi
  39:	e8 00 00 00 00       	call   3e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3e>
  3e:	83 7d e8 ff          	cmpl   $0xffffffff,-0x18(%rbp)
  42:	74 13                	je     57 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x57>
  44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  48:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4b:	48 89 d6             	mov    %rdx,%rsi
  4e:	89 c7                	mov    %eax,%edi
  50:	e8 00 00 00 00       	call   55 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x55>
  55:	eb 01                	jmp    58 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x58>
  57:	90                   	nop
  58:	c9                   	leave  
  59:	c3                   	ret    

Disassembly of section .text._ZN7Display12SetCursorPosEjj:

0000000000000000 <Display::SetCursorPos(unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	48 8b 40 18          	mov    0x18(%rax),%rax
  1e:	48 85 c0             	test   %rax,%rax
  21:	74 2a                	je     4d <Display::SetCursorPos(unsigned int, unsigned int)+0x4d>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 8b 40 18          	mov    0x18(%rax),%rax
  2b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2f:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  33:	48 8b 12             	mov    (%rdx),%rdx
  36:	48 83 c2 40          	add    $0x40,%rdx
  3a:	4c 8b 02             	mov    (%rdx),%r8
  3d:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  43:	89 ce                	mov    %ecx,%esi
  45:	48 89 c7             	mov    %rax,%rdi
  48:	41 ff d0             	call   *%r8
  4b:	eb 01                	jmp    4e <Display::SetCursorPos(unsigned int, unsigned int)+0x4e>
  4d:	90                   	nop
  4e:	c9                   	leave  
  4f:	c3                   	ret    

Disassembly of section .text._ZN7Display6StatusE22Display7SegmentMessage:

0000000000000000 <Display::Status(Display7SegmentMessage)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  1b:	84 c0                	test   %al,%al
  1d:	74 1f                	je     3e <Display::Status(Display7SegmentMessage)+0x3e>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	48 8d 48 08          	lea    0x8(%rax),%rcx
  27:	8b 45 f4             	mov    -0xc(%rbp),%eax
  2a:	f7 d0                	not    %eax
  2c:	0f b7 c0             	movzwl %ax,%eax
  2f:	89 c2                	mov    %eax,%edx
  31:	be 12 00 00 00       	mov    $0x12,%esi
  36:	48 89 cf             	mov    %rcx,%rdi
  39:	e8 00 00 00 00       	call   3e <Display::Status(Display7SegmentMessage)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN7Display8SetSleepEb:

0000000000000000 <Display::SetSleep(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8b 40 18          	mov    0x18(%rax),%rax
  1d:	48 85 c0             	test   %rax,%rax
  20:	74 51                	je     73 <Display::SetSleep(bool)+0x73>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  2a:	88 50 10             	mov    %dl,0x10(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 8b 40 18          	mov    0x18(%rax),%rax
  35:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  39:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  3d:	48 8b 12             	mov    (%rdx),%rdx
  40:	48 83 c2 50          	add    $0x50,%rdx
  44:	48 8b 0a             	mov    (%rdx),%rcx
  47:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  4b:	89 d6                	mov    %edx,%esi
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	ff d1                	call   *%rcx
  52:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  56:	83 f0 01             	xor    $0x1,%eax
  59:	84 c0                	test   %al,%al
  5b:	74 17                	je     74 <Display::SetSleep(bool)+0x74>
  5d:	e8 00 00 00 00       	call   62 <Display::SetSleep(bool)+0x62>
  62:	48 89 c7             	mov    %rax,%rdi
  65:	e8 00 00 00 00       	call   6a <Display::SetSleep(bool)+0x6a>
  6a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  6e:	89 42 04             	mov    %eax,0x4(%rdx)
  71:	eb 01                	jmp    74 <Display::SetSleep(bool)+0x74>
  73:	90                   	nop
  74:	c9                   	leave  
  75:	c3                   	ret    

Disassembly of section .text._ZN7Display3GetEv:

0000000000000000 <Display::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Display::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig12HandleRebootEv:

0000000000000000 <RemoteConfig::HandleReboot()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
  18:	83 f0 01             	xor    $0x1,%eax
  1b:	84 c0                	test   %al,%al
  1d:	75 74                	jne    93 <RemoteConfig::HandleReboot()+0x93>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	c6 40 11 01          	movb   $0x1,0x11(%rax)
  27:	e8 00 00 00 00       	call   2c <RemoteConfig::HandleReboot()+0x2c>
  2c:	be 00 00 00 00       	mov    $0x0,%esi
  31:	48 89 c7             	mov    %rax,%rdi
  34:	e8 00 00 00 00       	call   39 <RemoteConfig::HandleReboot()+0x39>
  39:	90                   	nop
  3a:	e8 00 00 00 00       	call   3f <RemoteConfig::HandleReboot()+0x3f>
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <RemoteConfig::HandleReboot()+0x47>
  47:	84 c0                	test   %al,%al
  49:	75 ef                	jne    3a <RemoteConfig::HandleReboot()+0x3a>
  4b:	e8 00 00 00 00       	call   50 <RemoteConfig::HandleReboot()+0x50>
  50:	48 89 c7             	mov    %rax,%rdi
  53:	e8 00 00 00 00       	call   58 <RemoteConfig::HandleReboot()+0x58>
  58:	e8 00 00 00 00       	call   5d <RemoteConfig::HandleReboot()+0x5d>
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	e8 00 00 00 00       	call   65 <RemoteConfig::HandleReboot()+0x65>
  65:	e8 00 00 00 00       	call   6a <RemoteConfig::HandleReboot()+0x6a>
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  72:	ba 40 40 00 00       	mov    $0x4040,%edx
  77:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7e <RemoteConfig::HandleReboot()+0x7e>
  7e:	48 89 c6             	mov    %rax,%rsi
  81:	e8 00 00 00 00       	call   86 <RemoteConfig::HandleReboot()+0x86>
  86:	e8 00 00 00 00       	call   8b <RemoteConfig::HandleReboot()+0x8b>
  8b:	48 89 c7             	mov    %rax,%rdi
  8e:	e8 00 00 00 00       	call   93 <RemoteConfig::HandleReboot()+0x93>
  93:	90                   	nop
  94:	c9                   	leave  
  95:	c3                   	ret    

remoteconfigstatic.o:     file format elf64-x86-64


Disassembly of section .text._ZN12RemoteConfig18HandleGetMotor0TxtERj:

0000000000000000 <RemoteConfig::HandleGetMotor0Txt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	be 00 00 00 00       	mov    $0x0,%esi
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <RemoteConfig::HandleGetMotor0Txt(unsigned int&)+0x29>
  29:	90                   	nop
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleGetMotor1TxtERj:

0000000000000000 <RemoteConfig::HandleGetMotor1Txt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	be 01 00 00 00       	mov    $0x1,%esi
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <RemoteConfig::HandleGetMotor1Txt(unsigned int&)+0x29>
  29:	90                   	nop
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleGetMotor2TxtERj:

0000000000000000 <RemoteConfig::HandleGetMotor2Txt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	be 02 00 00 00       	mov    $0x2,%esi
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <RemoteConfig::HandleGetMotor2Txt(unsigned int&)+0x29>
  29:	90                   	nop
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleGetMotor3TxtERj:

0000000000000000 <RemoteConfig::HandleGetMotor3Txt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	be 03 00 00 00       	mov    $0x3,%esi
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <RemoteConfig::HandleGetMotor3Txt(unsigned int&)+0x29>
  29:	90                   	nop
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleGetMotor4TxtERj:

0000000000000000 <RemoteConfig::HandleGetMotor4Txt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	be 04 00 00 00       	mov    $0x4,%esi
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <RemoteConfig::HandleGetMotor4Txt(unsigned int&)+0x29>
  29:	90                   	nop
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleGetMotor5TxtERj:

0000000000000000 <RemoteConfig::HandleGetMotor5Txt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	be 05 00 00 00       	mov    $0x5,%esi
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <RemoteConfig::HandleGetMotor5Txt(unsigned int&)+0x29>
  29:	90                   	nop
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleGetMotor6TxtERj:

0000000000000000 <RemoteConfig::HandleGetMotor6Txt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	be 06 00 00 00       	mov    $0x6,%esi
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <RemoteConfig::HandleGetMotor6Txt(unsigned int&)+0x29>
  29:	90                   	nop
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleGetMotor7TxtERj:

0000000000000000 <RemoteConfig::HandleGetMotor7Txt(unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	be 07 00 00 00       	mov    $0x7,%esi
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <RemoteConfig::HandleGetMotor7Txt(unsigned int&)+0x29>
  29:	90                   	nop
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetMotor0TxtEv:

0000000000000000 <RemoteConfig::HandleSetMotor0Txt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	be 00 00 00 00       	mov    $0x0,%esi
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <RemoteConfig::HandleSetMotor0Txt()+0x21>
  21:	90                   	nop
  22:	c9                   	leave  
  23:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetMotor1TxtEv:

0000000000000000 <RemoteConfig::HandleSetMotor1Txt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	be 01 00 00 00       	mov    $0x1,%esi
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <RemoteConfig::HandleSetMotor1Txt()+0x21>
  21:	90                   	nop
  22:	c9                   	leave  
  23:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetMotor2TxtEv:

0000000000000000 <RemoteConfig::HandleSetMotor2Txt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	be 02 00 00 00       	mov    $0x2,%esi
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <RemoteConfig::HandleSetMotor2Txt()+0x21>
  21:	90                   	nop
  22:	c9                   	leave  
  23:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetMotor3TxtEv:

0000000000000000 <RemoteConfig::HandleSetMotor3Txt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	be 03 00 00 00       	mov    $0x3,%esi
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <RemoteConfig::HandleSetMotor3Txt()+0x21>
  21:	90                   	nop
  22:	c9                   	leave  
  23:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetMotor4TxtEv:

0000000000000000 <RemoteConfig::HandleSetMotor4Txt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	be 04 00 00 00       	mov    $0x4,%esi
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <RemoteConfig::HandleSetMotor4Txt()+0x21>
  21:	90                   	nop
  22:	c9                   	leave  
  23:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetMotor5TxtEv:

0000000000000000 <RemoteConfig::HandleSetMotor5Txt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	be 05 00 00 00       	mov    $0x5,%esi
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <RemoteConfig::HandleSetMotor5Txt()+0x21>
  21:	90                   	nop
  22:	c9                   	leave  
  23:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetMotor6TxtEv:

0000000000000000 <RemoteConfig::HandleSetMotor6Txt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	be 06 00 00 00       	mov    $0x6,%esi
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <RemoteConfig::HandleSetMotor6Txt()+0x21>
  21:	90                   	nop
  22:	c9                   	leave  
  23:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig18HandleSetMotor7TxtEv:

0000000000000000 <RemoteConfig::HandleSetMotor7Txt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	be 07 00 00 00       	mov    $0x7,%esi
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <RemoteConfig::HandleSetMotor7Txt()+0x21>
  21:	90                   	nop
  22:	c9                   	leave  
  23:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig8GetIndexEPKvRj:

0000000000000000 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  18:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1f:	00 00 
  21:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  25:	31 c0                	xor    %eax,%eax
  27:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  2e:	e9 80 00 00 00       	jmp    b3 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xb3>
  33:	8b 45 ec             	mov    -0x14(%rbp),%eax
  36:	48 63 d0             	movslq %eax,%rdx
  39:	48 89 d0             	mov    %rdx,%rax
  3c:	48 01 c0             	add    %rax,%rax
  3f:	48 01 d0             	add    %rdx,%rax
  42:	48 c1 e0 04          	shl    $0x4,%rax
  46:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 4d <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4d>
  4d:	48 01 d0             	add    %rdx,%rax
  50:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  58:	0f b6 40 28          	movzbl 0x28(%rax),%eax
  5c:	0f b6 c0             	movzbl %al,%eax
  5f:	89 45 e8             	mov    %eax,-0x18(%rbp)
  62:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  66:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  6a:	48 89 d6             	mov    %rdx,%rsi
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	call   75 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x75>
  75:	8b 00                	mov    (%rax),%eax
  77:	89 c2                	mov    %eax,%edx
  79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  7d:	48 8b 48 20          	mov    0x20(%rax),%rcx
  81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  85:	48 89 ce             	mov    %rcx,%rsi
  88:	48 89 c7             	mov    %rax,%rdi
  8b:	e8 00 00 00 00       	call   90 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x90>
  90:	85 c0                	test   %eax,%eax
  92:	0f 94 c0             	sete   %al
  95:	84 c0                	test   %al,%al
  97:	74 16                	je     af <RemoteConfig::GetIndex(void const*, unsigned int&)+0xaf>
  99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  9d:	0f b6 40 28          	movzbl 0x28(%rax),%eax
  a1:	0f b6 d0             	movzbl %al,%edx
  a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  a8:	89 10                	mov    %edx,(%rax)
  aa:	8b 45 ec             	mov    -0x14(%rbp),%eax
  ad:	eb 13                	jmp    c2 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc2>
  af:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  b3:	83 7d ec 19          	cmpl   $0x19,-0x14(%rbp)
  b7:	0f 8e 76 ff ff ff    	jle    33 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x33>
  bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  c6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  cd:	00 00 
  cf:	74 05                	je     d6 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xd6>
  d1:	e8 00 00 00 00       	call   d6 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xd6>
  d6:	c9                   	leave  
  d7:	c3                   	ret    

Disassembly of section .text._ZSt3minIjERKT_S2_S2_:

0000000000000000 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  14:	8b 10                	mov    (%rax),%edx
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	8b 00                	mov    (%rax),%eax
  1c:	39 c2                	cmp    %eax,%edx
  1e:	73 06                	jae    26 <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x26>
  20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  24:	eb 04                	jmp    2a <unsigned int const& std::min<unsigned int>(unsigned int const&, unsigned int const&)+0x2a>
  26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2a:	5d                   	pop    %rbp
  2b:	c3                   	ret    

remoteconfig.o:     file format elf64-x86-64


Disassembly of section .text._ZN12RemoteConfig21PlatformHandleTftpSetEv:

0000000000000000 <RemoteConfig::PlatformHandleTftpSet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig21PlatformHandleTftpGetEv:

0000000000000000 <RemoteConfig::PlatformHandleTftpGet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

tftpfileserver.o:     file format elf64-x86-64


Disassembly of section .text._ZN14TFTPFileServerD2Ev:

0000000000000000 <TFTPFileServer::~TFTPFileServer()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <TFTPFileServer::~TFTPFileServer()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <TFTPFileServer::~TFTPFileServer()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN14TFTPFileServerD0Ev:

0000000000000000 <TFTPFileServer::~TFTPFileServer()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <TFTPFileServer::~TFTPFileServer()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <TFTPFileServer::~TFTPFileServer()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN14TFTPFileServerC2EPhj:

0000000000000000 <TFTPFileServer::TFTPFileServer(unsigned char*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <TFTPFileServer::TFTPFileServer(unsigned char*, unsigned int)+0x23>
  23:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2a <TFTPFileServer::TFTPFileServer(unsigned char*, unsigned int)+0x2a>
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 89 10             	mov    %rdx,(%rax)
  31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  35:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  39:	48 89 90 48 02 00 00 	mov    %rdx,0x248(%rax)
  40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  44:	8b 55 ec             	mov    -0x14(%rbp),%edx
  47:	89 90 50 02 00 00    	mov    %edx,0x250(%rax)
  4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  51:	c7 80 54 02 00 00 00 	movl   $0x0,0x254(%rax)
  58:	00 00 00 
  5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5f:	c6 80 58 02 00 00 00 	movb   $0x0,0x258(%rax)
  66:	90                   	nop
  67:	c9                   	leave  
  68:	c3                   	ret    

Disassembly of section .text._ZN14TFTPFileServer4ExitEv:

0000000000000000 <TFTPFileServer::Exit()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN14TFTPFileServer8FileOpenEPKc8TFTPMode:

0000000000000000 <TFTPFileServer::FileOpen(char const*, TFTPMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	89 55 ec             	mov    %edx,-0x14(%rbp)
  13:	b8 00 00 00 00       	mov    $0x0,%eax
  18:	5d                   	pop    %rbp
  19:	c3                   	ret    

Disassembly of section .text._ZN14TFTPFileServer10FileCreateEPKc8TFTPMode:

0000000000000000 <TFTPFileServer::FileCreate(char const*, TFTPMode)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	89 55 ec             	mov    %edx,-0x14(%rbp)
  13:	b8 00 00 00 00       	mov    $0x0,%eax
  18:	5d                   	pop    %rbp
  19:	c3                   	ret    

Disassembly of section .text._ZN14TFTPFileServer9FileCloseEv:

0000000000000000 <TFTPFileServer::FileClose()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	b8 00 00 00 00       	mov    $0x0,%eax
  11:	5d                   	pop    %rbp
  12:	c3                   	ret    

Disassembly of section .text._ZN14TFTPFileServer8FileReadEPvmj:

0000000000000000 <TFTPFileServer::FileRead(void*, unsigned long, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  14:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  17:	b8 00 00 00 00       	mov    $0x0,%eax
  1c:	5d                   	pop    %rbp
  1d:	c3                   	ret    

Disassembly of section .text._ZN14TFTPFileServer9FileWriteEPKvmj:

0000000000000000 <TFTPFileServer::FileWrite(void const*, unsigned long, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  14:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  17:	b8 00 00 00 00       	mov    $0x0,%eax
  1c:	5d                   	pop    %rbp
  1d:	c3                   	ret    

get_file_content.o:     file format elf64-x86-64


Disassembly of section .text._Z16get_file_contentPKcPc:

0000000000000000 <get_file_content(char const*, char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  1b:	e9 8a 00 00 00       	jmp    aa <get_file_content(char const*, char*)+0xaa>
  20:	8b 45 e8             	mov    -0x18(%rbp),%eax
  23:	48 c1 e0 04          	shl    $0x4,%rax
  27:	48 89 c2             	mov    %rax,%rdx
  2a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 31 <get_file_content(char const*, char*)+0x31>
  31:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
  35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  39:	48 89 d6             	mov    %rdx,%rsi
  3c:	48 89 c7             	mov    %rax,%rdi
  3f:	e8 00 00 00 00       	call   44 <get_file_content(char const*, char*)+0x44>
  44:	85 c0                	test   %eax,%eax
  46:	75 5e                	jne    a6 <get_file_content(char const*, char*)+0xa6>
  48:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4b:	48 c1 e0 04          	shl    $0x4,%rax
  4f:	48 89 c2             	mov    %rax,%rdx
  52:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 59 <get_file_content(char const*, char*)+0x59>
  59:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  5d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  61:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  65:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  69:	90                   	nop
  6a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  6e:	48 8d 42 01          	lea    0x1(%rdx),%rax
  72:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7a:	48 8d 48 01          	lea    0x1(%rax),%rcx
  7e:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  82:	0f b6 12             	movzbl (%rdx),%edx
  85:	88 10                	mov    %dl,(%rax)
  87:	0f b6 00             	movzbl (%rax),%eax
  8a:	84 c0                	test   %al,%al
  8c:	0f 95 c0             	setne  %al
  8f:	84 c0                	test   %al,%al
  91:	75 d7                	jne    6a <get_file_content(char const*, char*)+0x6a>
  93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  97:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
  9b:	83 e8 01             	sub    $0x1,%eax
  9e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  a1:	8b 45 ec             	mov    -0x14(%rbp),%eax
  a4:	eb 13                	jmp    b9 <get_file_content(char const*, char*)+0xb9>
  a6:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
  aa:	83 7d e8 02          	cmpl   $0x2,-0x18(%rbp)
  ae:	0f 86 6c ff ff ff    	jbe    20 <get_file_content(char const*, char*)+0x20>
  b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  b9:	c9                   	leave  
  ba:	c3                   	ret    

httd.o:     file format elf64-x86-64


Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Network::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZNK12RemoteConfig14IsEnableRebootEv:

0000000000000000 <RemoteConfig::IsEnableReboot() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 0e          	movzbl 0xe(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZNK12RemoteConfig14IsEnableUptimeEv:

0000000000000000 <RemoteConfig::IsEnableUptime() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	0f b6 40 0f          	movzbl 0xf(%rax),%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._ZN12RemoteConfig3GetEv:

0000000000000000 <RemoteConfig::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <RemoteConfig::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN16PropertiesConfig10EnableJSONEb:

0000000000000000 <PropertiesConfig::EnableJSON(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 f8                	mov    %edi,%eax
   a:	88 45 fc             	mov    %al,-0x4(%rbp)
   d:	80 7d fc 00          	cmpb   $0x0,-0x4(%rbp)
  11:	74 12                	je     25 <PropertiesConfig::EnableJSON(bool)+0x25>
  13:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 1a <PropertiesConfig::EnableJSON(bool)+0x1a>
  1a:	83 c8 01             	or     $0x1,%eax
  1d:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 23 <PropertiesConfig::EnableJSON(bool)+0x23>
  23:	eb 10                	jmp    35 <PropertiesConfig::EnableJSON(bool)+0x35>
  25:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 2c <PropertiesConfig::EnableJSON(bool)+0x2c>
  2c:	83 e0 fe             	and    $0xfffffffe,%eax
  2f:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 35 <PropertiesConfig::EnableJSON(bool)+0x35>
  35:	90                   	nop
  36:	5d                   	pop    %rbp
  37:	c3                   	ret    

Disassembly of section .text._ZN16PropertiesConfig6IsJSONEv:

0000000000000000 <PropertiesConfig::IsJSON()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	bf 01 00 00 00       	mov    $0x1,%edi
   d:	e8 00 00 00 00       	call   12 <PropertiesConfig::IsJSON()+0x12>
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN16PropertiesConfig9isMaskSetEh:

0000000000000000 <PropertiesConfig::isMaskSet(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 f8                	mov    %edi,%eax
   a:	88 45 fc             	mov    %al,-0x4(%rbp)
   d:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 14 <PropertiesConfig::isMaskSet(unsigned char)+0x14>
  14:	22 45 fc             	and    -0x4(%rbp),%al
  17:	38 45 fc             	cmp    %al,-0x4(%rbp)
  1a:	0f 94 c0             	sete   %al
  1d:	5d                   	pop    %rbp
  1e:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN7Display8SetSleepEb:

0000000000000000 <Display::SetSleep(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8b 40 18          	mov    0x18(%rax),%rax
  1d:	48 85 c0             	test   %rax,%rax
  20:	74 51                	je     73 <Display::SetSleep(bool)+0x73>
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  2a:	88 50 10             	mov    %dl,0x10(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 8b 40 18          	mov    0x18(%rax),%rax
  35:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  39:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  3d:	48 8b 12             	mov    (%rdx),%rdx
  40:	48 83 c2 50          	add    $0x50,%rdx
  44:	48 8b 0a             	mov    (%rdx),%rcx
  47:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  4b:	89 d6                	mov    %edx,%esi
  4d:	48 89 c7             	mov    %rax,%rdi
  50:	ff d1                	call   *%rcx
  52:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  56:	83 f0 01             	xor    $0x1,%eax
  59:	84 c0                	test   %al,%al
  5b:	74 17                	je     74 <Display::SetSleep(bool)+0x74>
  5d:	e8 00 00 00 00       	call   62 <Display::SetSleep(bool)+0x62>
  62:	48 89 c7             	mov    %rax,%rdi
  65:	e8 00 00 00 00       	call   6a <Display::SetSleep(bool)+0x6a>
  6a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  6e:	89 42 04             	mov    %eax,0x4(%rdx)
  71:	eb 01                	jmp    74 <Display::SetSleep(bool)+0x74>
  73:	90                   	nop
  74:	c9                   	leave  
  75:	c3                   	ret    

Disassembly of section .text._ZN7Display3GetEv:

0000000000000000 <Display::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Display::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN10HttpDaemonC2Ev:

0000000000000000 <HttpDaemon::HttpDaemon()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1b <HttpDaemon::HttpDaemon()+0x1b>
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  29:	00 
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  35:	00 
  36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3a:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  41:	00 
  42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  46:	c7 40 20 ff ff ff ff 	movl   $0xffffffff,0x20(%rax)
  4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  51:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
  58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5c:	c7 40 28 08 02 00 00 	movl   $0x208,0x28(%rax)
  63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  67:	c7 40 2c 02 00 00 00 	movl   $0x2,0x2c(%rax)
  6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  72:	c6 40 30 00          	movb   $0x0,0x30(%rax)
  76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7a:	c6 40 31 00          	movb   $0x0,0x31(%rax)
  7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  82:	66 c7 40 32 00 00    	movw   $0x0,0x32(%rax)
  88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8c:	66 c7 40 34 00 00    	movw   $0x0,0x34(%rax)
  92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  96:	66 c7 40 36 00 00    	movw   $0x0,0x36(%rax)
  9c:	e8 00 00 00 00       	call   a1 <HttpDaemon::HttpDaemon()+0xa1>
  a1:	be 50 00 00 00       	mov    $0x50,%esi
  a6:	48 89 c7             	mov    %rax,%rdi
  a9:	e8 00 00 00 00       	call   ae <HttpDaemon::HttpDaemon()+0xae>
  ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  b2:	89 42 20             	mov    %eax,0x20(%rdx)
  b5:	90                   	nop
  b6:	c9                   	leave  
  b7:	c3                   	ret    

Disassembly of section .text._ZN10HttpDaemon3RunEv:

0000000000000000 <HttpDaemon::Run()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 54                	push   %r12
   a:	53                   	push   %rbx
   b:	48 83 ec 30          	sub    $0x30,%rsp
   f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	e8 00 00 00 00       	call   27 <HttpDaemon::Run()+0x27>
  27:	48 89 c7             	mov    %rax,%rdi
  2a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  2e:	48 8d 70 18          	lea    0x18(%rax),%rsi
  32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  36:	8b 40 20             	mov    0x20(%rax),%eax
  39:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  3d:	48 89 d1             	mov    %rdx,%rcx
  40:	48 89 f2             	mov    %rsi,%rdx
  43:	89 c6                	mov    %eax,%esi
  45:	e8 00 00 00 00       	call   4a <HttpDaemon::Run()+0x4a>
  4a:	0f b7 d0             	movzwl %ax,%edx
  4d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  51:	89 50 24             	mov    %edx,0x24(%rax)
  54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  58:	8b 40 24             	mov    0x24(%rax),%eax
  5b:	85 c0                	test   %eax,%eax
  5d:	0f 9e c0             	setle  %al
  60:	0f b6 c0             	movzbl %al,%eax
  63:	48 85 c0             	test   %rax,%rax
  66:	0f 85 f3 02 00 00    	jne    35f <HttpDaemon::Run()+0x35f>
  6c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 73 <HttpDaemon::Run()+0x73>
  73:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  77:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  7b:	8b 40 28             	mov    0x28(%rax),%eax
  7e:	3d 08 02 00 00       	cmp    $0x208,%eax
  83:	0f 85 89 00 00 00    	jne    112 <HttpDaemon::Run()+0x112>
  89:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  8d:	48 89 c7             	mov    %rax,%rdi
  90:	e8 00 00 00 00       	call   95 <HttpDaemon::Run()+0x95>
  95:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  99:	89 42 28             	mov    %eax,0x28(%rdx)
  9c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  a0:	8b 40 28             	mov    0x28(%rax),%eax
  a3:	3d c8 00 00 00       	cmp    $0xc8,%eax
  a8:	0f 85 96 00 00 00    	jne    144 <HttpDaemon::Run()+0x144>
  ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  b2:	8b 40 2c             	mov    0x2c(%rax),%eax
  b5:	85 c0                	test   %eax,%eax
  b7:	75 15                	jne    ce <HttpDaemon::Run()+0xce>
  b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  bd:	48 89 c7             	mov    %rax,%rdi
  c0:	e8 00 00 00 00       	call   c5 <HttpDaemon::Run()+0xc5>
  c5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  c9:	89 42 28             	mov    %eax,0x28(%rdx)
  cc:	eb 76                	jmp    144 <HttpDaemon::Run()+0x144>
  ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  d2:	8b 40 2c             	mov    0x2c(%rax),%eax
  d5:	83 f8 01             	cmp    $0x1,%eax
  d8:	75 6a                	jne    144 <HttpDaemon::Run()+0x144>
  da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  de:	be 00 00 00 00       	mov    $0x0,%esi
  e3:	48 89 c7             	mov    %rax,%rdi
  e6:	e8 00 00 00 00       	call   eb <HttpDaemon::Run()+0xeb>
  eb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  ef:	89 42 28             	mov    %eax,0x28(%rdx)
  f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  f6:	8b 40 28             	mov    0x28(%rax),%eax
  f9:	3d c8 00 00 00       	cmp    $0xc8,%eax
  fe:	75 44                	jne    144 <HttpDaemon::Run()+0x144>
 100:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 104:	0f b7 40 34          	movzwl 0x34(%rax),%eax
 108:	66 85 c0             	test   %ax,%ax
 10b:	75 37                	jne    144 <HttpDaemon::Run()+0x144>
 10d:	e9 4e 02 00 00       	jmp    360 <HttpDaemon::Run()+0x360>
 112:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 116:	8b 40 28             	mov    0x28(%rax),%eax
 119:	3d c8 00 00 00       	cmp    $0xc8,%eax
 11e:	75 24                	jne    144 <HttpDaemon::Run()+0x144>
 120:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 124:	8b 40 2c             	mov    0x2c(%rax),%eax
 127:	83 f8 01             	cmp    $0x1,%eax
 12a:	75 18                	jne    144 <HttpDaemon::Run()+0x144>
 12c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 130:	be 01 00 00 00       	mov    $0x1,%esi
 135:	48 89 c7             	mov    %rax,%rdi
 138:	e8 00 00 00 00       	call   13d <HttpDaemon::Run()+0x13d>
 13d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 141:	89 42 28             	mov    %eax,0x28(%rdx)
 144:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 148:	8b 40 28             	mov    0x28(%rax),%eax
 14b:	3d c8 00 00 00       	cmp    $0xc8,%eax
 150:	0f 84 2a 01 00 00    	je     280 <HttpDaemon::Run()+0x280>
 156:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 15a:	8b 40 28             	mov    0x28(%rax),%eax
 15d:	3d f9 01 00 00       	cmp    $0x1f9,%eax
 162:	0f 84 ad 00 00 00    	je     215 <HttpDaemon::Run()+0x215>
 168:	3d f9 01 00 00       	cmp    $0x1f9,%eax
 16d:	0f 8f af 00 00 00    	jg     222 <HttpDaemon::Run()+0x222>
 173:	3d f5 01 00 00       	cmp    $0x1f5,%eax
 178:	0f 84 8a 00 00 00    	je     208 <HttpDaemon::Run()+0x208>
 17e:	3d f5 01 00 00       	cmp    $0x1f5,%eax
 183:	0f 8f 99 00 00 00    	jg     222 <HttpDaemon::Run()+0x222>
 189:	3d f4 01 00 00       	cmp    $0x1f4,%eax
 18e:	74 6b                	je     1fb <HttpDaemon::Run()+0x1fb>
 190:	3d f4 01 00 00       	cmp    $0x1f4,%eax
 195:	0f 8f 87 00 00 00    	jg     222 <HttpDaemon::Run()+0x222>
 19b:	3d 9e 01 00 00       	cmp    $0x19e,%eax
 1a0:	74 4c                	je     1ee <HttpDaemon::Run()+0x1ee>
 1a2:	3d 9e 01 00 00       	cmp    $0x19e,%eax
 1a7:	7f 79                	jg     222 <HttpDaemon::Run()+0x222>
 1a9:	3d 9d 01 00 00       	cmp    $0x19d,%eax
 1ae:	74 31                	je     1e1 <HttpDaemon::Run()+0x1e1>
 1b0:	3d 9d 01 00 00       	cmp    $0x19d,%eax
 1b5:	7f 6b                	jg     222 <HttpDaemon::Run()+0x222>
 1b7:	3d 90 01 00 00       	cmp    $0x190,%eax
 1bc:	74 09                	je     1c7 <HttpDaemon::Run()+0x1c7>
 1be:	3d 94 01 00 00       	cmp    $0x194,%eax
 1c3:	74 0f                	je     1d4 <HttpDaemon::Run()+0x1d4>
 1c5:	eb 5b                	jmp    222 <HttpDaemon::Run()+0x222>
 1c7:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1ce <HttpDaemon::Run()+0x1ce>
 1ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 1d2:	eb 5a                	jmp    22e <HttpDaemon::Run()+0x22e>
 1d4:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1db <HttpDaemon::Run()+0x1db>
 1db:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 1df:	eb 4d                	jmp    22e <HttpDaemon::Run()+0x22e>
 1e1:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1e8 <HttpDaemon::Run()+0x1e8>
 1e8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 1ec:	eb 40                	jmp    22e <HttpDaemon::Run()+0x22e>
 1ee:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1f5 <HttpDaemon::Run()+0x1f5>
 1f5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 1f9:	eb 33                	jmp    22e <HttpDaemon::Run()+0x22e>
 1fb:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 202 <HttpDaemon::Run()+0x202>
 202:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 206:	eb 26                	jmp    22e <HttpDaemon::Run()+0x22e>
 208:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 20f <HttpDaemon::Run()+0x20f>
 20f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 213:	eb 19                	jmp    22e <HttpDaemon::Run()+0x22e>
 215:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 21c <HttpDaemon::Run()+0x21c>
 21c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 220:	eb 0c                	jmp    22e <HttpDaemon::Run()+0x22e>
 222:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 229 <HttpDaemon::Run()+0x229>
 229:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 22d:	90                   	nop
 22e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 232:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 239 <HttpDaemon::Run()+0x239>
 239:	48 89 10             	mov    %rdx,(%rax)
 23c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 240:	8b 40 28             	mov    0x28(%rax),%eax
 243:	89 c1                	mov    %eax,%ecx
 245:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 249:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 24d:	49 89 d1             	mov    %rdx,%r9
 250:	49 89 c0             	mov    %rax,%r8
 253:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 25a <HttpDaemon::Run()+0x25a>
 25a:	48 89 c2             	mov    %rax,%rdx
 25d:	be 9f 05 00 00       	mov    $0x59f,%esi
 262:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 269 <HttpDaemon::Run()+0x269>
 269:	48 89 c7             	mov    %rax,%rdi
 26c:	b8 00 00 00 00       	mov    $0x0,%eax
 271:	e8 00 00 00 00       	call   276 <HttpDaemon::Run()+0x276>
 276:	89 c2                	mov    %eax,%edx
 278:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 27c:	66 89 50 32          	mov    %dx,0x32(%rax)
 280:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 284:	0f b7 40 32          	movzwl 0x32(%rax),%eax
 288:	44 0f b7 e0          	movzwl %ax,%r12d
 28c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 290:	48 8b 18             	mov    (%rax),%rbx
 293:	e8 00 00 00 00       	call   298 <HttpDaemon::Run()+0x298>
 298:	48 89 c2             	mov    %rax,%rdx
 29b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
 29f:	48 89 c6             	mov    %rax,%rsi
 2a2:	48 89 d7             	mov    %rdx,%rdi
 2a5:	e8 00 00 00 00       	call   2aa <HttpDaemon::Run()+0x2aa>
 2aa:	48 89 c2             	mov    %rax,%rdx
 2ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2b1:	8b 40 28             	mov    0x28(%rax),%eax
 2b4:	89 c6                	mov    %eax,%esi
 2b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2ba:	48 8b 40 18          	mov    0x18(%rax),%rax
 2be:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 2c2:	41 54                	push   %r12
 2c4:	53                   	push   %rbx
 2c5:	49 89 d1             	mov    %rdx,%r9
 2c8:	49 89 c8             	mov    %rcx,%r8
 2cb:	89 f1                	mov    %esi,%ecx
 2cd:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2d4 <HttpDaemon::Run()+0x2d4>
 2d4:	be 9f 05 00 00       	mov    $0x59f,%esi
 2d9:	48 89 c7             	mov    %rax,%rdi
 2dc:	b8 00 00 00 00       	mov    $0x0,%eax
 2e1:	e8 00 00 00 00       	call   2e6 <HttpDaemon::Run()+0x2e6>
 2e6:	48 83 c4 10          	add    $0x10,%rsp
 2ea:	89 45 dc             	mov    %eax,-0x24(%rbp)
 2ed:	e8 00 00 00 00       	call   2f2 <HttpDaemon::Run()+0x2f2>
 2f2:	48 89 c7             	mov    %rax,%rdi
 2f5:	8b 75 d8             	mov    -0x28(%rbp),%esi
 2f8:	8b 45 dc             	mov    -0x24(%rbp),%eax
 2fb:	0f b7 c8             	movzwl %ax,%ecx
 2fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 302:	48 8b 50 18          	mov    0x18(%rax),%rdx
 306:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 30a:	8b 40 20             	mov    0x20(%rax),%eax
 30d:	41 89 f0             	mov    %esi,%r8d
 310:	89 c6                	mov    %eax,%esi
 312:	e8 00 00 00 00       	call   317 <HttpDaemon::Run()+0x317>
 317:	e8 00 00 00 00       	call   31c <HttpDaemon::Run()+0x31c>
 31c:	48 89 c7             	mov    %rax,%rdi
 31f:	8b 4d d8             	mov    -0x28(%rbp),%ecx
 322:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 326:	0f b7 40 32          	movzwl 0x32(%rax),%eax
 32a:	0f b7 d0             	movzwl %ax,%edx
 32d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 331:	8b 40 20             	mov    0x20(%rax),%eax
 334:	41 89 c8             	mov    %ecx,%r8d
 337:	89 d1                	mov    %edx,%ecx
 339:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 340 <HttpDaemon::Run()+0x340>
 340:	89 c6                	mov    %eax,%esi
 342:	e8 00 00 00 00       	call   347 <HttpDaemon::Run()+0x347>
 347:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 34b:	c7 40 28 08 02 00 00 	movl   $0x208,0x28(%rax)
 352:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 356:	c7 40 2c 02 00 00 00 	movl   $0x2,0x2c(%rax)
 35d:	eb 01                	jmp    360 <HttpDaemon::Run()+0x360>
 35f:	90                   	nop
 360:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 364:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 36b:	00 00 
 36d:	74 05                	je     374 <HttpDaemon::Run()+0x374>
 36f:	e8 00 00 00 00       	call   374 <HttpDaemon::Run()+0x374>
 374:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
 378:	5b                   	pop    %rbx
 379:	41 5c                	pop    %r12
 37b:	5d                   	pop    %rbp
 37c:	c3                   	ret    

Disassembly of section .text._ZN10HttpDaemon12ParseRequestEv:

0000000000000000 <HttpDaemon::ParseRequest()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  14:	48 8b 40 18          	mov    0x18(%rax),%rax
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  23:	c7 45 f4 08 02 00 00 	movl   $0x208,-0xc(%rbp)
  2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2e:	c6 40 30 00          	movb   $0x0,0x30(%rax)
  32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  36:	66 c7 40 36 00 00    	movw   $0x0,0x36(%rax)
  3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40:	66 c7 40 34 00 00    	movw   $0x0,0x34(%rax)
  46:	66 c7 45 ee 00 00    	movw   $0x0,-0x12(%rbp)
  4c:	e9 0a 01 00 00       	jmp    15b <HttpDaemon::ParseRequest()+0x15b>
  51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  55:	48 8b 50 18          	mov    0x18(%rax),%rdx
  59:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
  5d:	48 01 d0             	add    %rdx,%rax
  60:	0f b6 00             	movzbl (%rax),%eax
  63:	3c 0a                	cmp    $0xa,%al
  65:	0f 85 e5 00 00 00    	jne    150 <HttpDaemon::ParseRequest()+0x150>
  6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  6f:	48 8b 50 18          	mov    0x18(%rax),%rdx
  73:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
  77:	48 83 e8 01          	sub    $0x1,%rax
  7b:	48 01 d0             	add    %rdx,%rax
  7e:	c6 00 00             	movb   $0x0,(%rax)
  81:	8b 45 f0             	mov    -0x10(%rbp),%eax
  84:	8d 50 01             	lea    0x1(%rax),%edx
  87:	89 55 f0             	mov    %edx,-0x10(%rbp)
  8a:	85 c0                	test   %eax,%eax
  8c:	0f 94 c0             	sete   %al
  8f:	84 c0                	test   %al,%al
  91:	74 18                	je     ab <HttpDaemon::ParseRequest()+0xab>
  93:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9b:	48 89 d6             	mov    %rdx,%rsi
  9e:	48 89 c7             	mov    %rax,%rdi
  a1:	e8 00 00 00 00       	call   a6 <HttpDaemon::ParseRequest()+0xa6>
  a6:	89 45 f4             	mov    %eax,-0xc(%rbp)
  a9:	eb 7f                	jmp    12a <HttpDaemon::ParseRequest()+0x12a>
  ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  af:	0f b6 00             	movzbl (%rax),%eax
  b2:	84 c0                	test   %al,%al
  b4:	75 5e                	jne    114 <HttpDaemon::ParseRequest()+0x114>
  b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ba:	8b 40 24             	mov    0x24(%rax),%eax
  bd:	66 2b 45 ee          	sub    -0x12(%rbp),%ax
  c1:	8d 50 ff             	lea    -0x1(%rax),%edx
  c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c8:	66 89 50 34          	mov    %dx,0x34(%rax)
  cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  d0:	0f b7 40 34          	movzwl 0x34(%rax),%eax
  d4:	66 85 c0             	test   %ax,%ax
  d7:	74 34                	je     10d <HttpDaemon::ParseRequest()+0x10d>
  d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  dd:	48 8b 50 18          	mov    0x18(%rax),%rdx
  e1:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
  e5:	48 83 c0 01          	add    $0x1,%rax
  e9:	48 01 c2             	add    %rax,%rdx
  ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  f0:	48 89 50 10          	mov    %rdx,0x10(%rax)
  f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  f8:	48 8b 50 10          	mov    0x10(%rax),%rdx
  fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 100:	0f b7 40 34          	movzwl 0x34(%rax),%eax
 104:	0f b7 c0             	movzwl %ax,%eax
 107:	48 01 d0             	add    %rdx,%rax
 10a:	c6 00 00             	movb   $0x0,(%rax)
 10d:	b8 c8 00 00 00       	mov    $0xc8,%eax
 112:	eb 5d                	jmp    171 <HttpDaemon::ParseRequest()+0x171>
 114:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 118:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 11c:	48 89 d6             	mov    %rdx,%rsi
 11f:	48 89 c7             	mov    %rax,%rdi
 122:	e8 00 00 00 00       	call   127 <HttpDaemon::ParseRequest()+0x127>
 127:	89 45 f4             	mov    %eax,-0xc(%rbp)
 12a:	81 7d f4 c8 00 00 00 	cmpl   $0xc8,-0xc(%rbp)
 131:	74 05                	je     138 <HttpDaemon::ParseRequest()+0x138>
 133:	8b 45 f4             	mov    -0xc(%rbp),%eax
 136:	eb 39                	jmp    171 <HttpDaemon::ParseRequest()+0x171>
 138:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 13c:	48 8b 50 18          	mov    0x18(%rax),%rdx
 140:	66 83 45 ee 01       	addw   $0x1,-0x12(%rbp)
 145:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
 149:	48 01 d0             	add    %rdx,%rax
 14c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 150:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
 154:	83 c0 01             	add    $0x1,%eax
 157:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
 15b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 15f:	8b 40 24             	mov    0x24(%rax),%eax
 162:	66 39 45 ee          	cmp    %ax,-0x12(%rbp)
 166:	0f 82 e5 fe ff ff    	jb     51 <HttpDaemon::ParseRequest()+0x51>
 16c:	b8 c8 00 00 00       	mov    $0xc8,%eax
 171:	c9                   	leave  
 172:	c3                   	ret    

Disassembly of section .text._ZN10HttpDaemon11ParseMethodEPc:

0000000000000000 <HttpDaemon::ParseMethod(char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  18:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f <HttpDaemon::ParseMethod(char*)+0x1f>
  1f:	48 89 d6             	mov    %rdx,%rsi
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <HttpDaemon::ParseMethod(char*)+0x2a>
  2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  33:	0f 94 c0             	sete   %al
  36:	84 c0                	test   %al,%al
  38:	74 0a                	je     44 <HttpDaemon::ParseMethod(char*)+0x44>
  3a:	b8 f5 01 00 00       	mov    $0x1f5,%eax
  3f:	e9 33 01 00 00       	jmp    177 <HttpDaemon::ParseMethod(char*)+0x177>
  44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  48:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 4f <HttpDaemon::ParseMethod(char*)+0x4f>
  4f:	48 89 d6             	mov    %rdx,%rsi
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	call   5a <HttpDaemon::ParseMethod(char*)+0x5a>
  5a:	85 c0                	test   %eax,%eax
  5c:	75 0d                	jne    6b <HttpDaemon::ParseMethod(char*)+0x6b>
  5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  62:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%rax)
  69:	eb 31                	jmp    9c <HttpDaemon::ParseMethod(char*)+0x9c>
  6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 76 <HttpDaemon::ParseMethod(char*)+0x76>
  76:	48 89 d6             	mov    %rdx,%rsi
  79:	48 89 c7             	mov    %rax,%rdi
  7c:	e8 00 00 00 00       	call   81 <HttpDaemon::ParseMethod(char*)+0x81>
  81:	85 c0                	test   %eax,%eax
  83:	75 0d                	jne    92 <HttpDaemon::ParseMethod(char*)+0x92>
  85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  89:	c7 40 2c 01 00 00 00 	movl   $0x1,0x2c(%rax)
  90:	eb 0a                	jmp    9c <HttpDaemon::ParseMethod(char*)+0x9c>
  92:	b8 f5 01 00 00       	mov    $0x1f5,%eax
  97:	e9 db 00 00 00       	jmp    177 <HttpDaemon::ParseMethod(char*)+0x177>
  9c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a3 <HttpDaemon::ParseMethod(char*)+0xa3>
  a3:	48 89 c6             	mov    %rax,%rsi
  a6:	bf 00 00 00 00       	mov    $0x0,%edi
  ab:	e8 00 00 00 00       	call   b0 <HttpDaemon::ParseMethod(char*)+0xb0>
  b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  b4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  b9:	0f 94 c0             	sete   %al
  bc:	84 c0                	test   %al,%al
  be:	74 0a                	je     ca <HttpDaemon::ParseMethod(char*)+0xca>
  c0:	b8 90 01 00 00       	mov    $0x190,%eax
  c5:	e9 ad 00 00 00       	jmp    177 <HttpDaemon::ParseMethod(char*)+0x177>
  ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  d2:	48 89 50 08          	mov    %rdx,0x8(%rax)
  d6:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # dd <HttpDaemon::ParseMethod(char*)+0xdd>
  dd:	48 89 c6             	mov    %rax,%rsi
  e0:	bf 00 00 00 00       	mov    $0x0,%edi
  e5:	e8 00 00 00 00       	call   ea <HttpDaemon::ParseMethod(char*)+0xea>
  ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  ee:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  f3:	74 1a                	je     10f <HttpDaemon::ParseMethod(char*)+0x10f>
  f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  f9:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 100 <HttpDaemon::ParseMethod(char*)+0x100>
 100:	48 89 d6             	mov    %rdx,%rsi
 103:	48 89 c7             	mov    %rax,%rdi
 106:	e8 00 00 00 00       	call   10b <HttpDaemon::ParseMethod(char*)+0x10b>
 10b:	85 c0                	test   %eax,%eax
 10d:	74 07                	je     116 <HttpDaemon::ParseMethod(char*)+0x116>
 10f:	b8 01 00 00 00       	mov    $0x1,%eax
 114:	eb 05                	jmp    11b <HttpDaemon::ParseMethod(char*)+0x11b>
 116:	b8 00 00 00 00       	mov    $0x0,%eax
 11b:	84 c0                	test   %al,%al
 11d:	74 07                	je     126 <HttpDaemon::ParseMethod(char*)+0x126>
 11f:	b8 90 01 00 00       	mov    $0x190,%eax
 124:	eb 51                	jmp    177 <HttpDaemon::ParseMethod(char*)+0x177>
 126:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 12d <HttpDaemon::ParseMethod(char*)+0x12d>
 12d:	48 89 c6             	mov    %rax,%rsi
 130:	bf 00 00 00 00       	mov    $0x0,%edi
 135:	e8 00 00 00 00       	call   13a <HttpDaemon::ParseMethod(char*)+0x13a>
 13a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 13e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
 143:	0f 94 c0             	sete   %al
 146:	84 c0                	test   %al,%al
 148:	74 07                	je     151 <HttpDaemon::ParseMethod(char*)+0x151>
 14a:	b8 90 01 00 00       	mov    $0x190,%eax
 14f:	eb 26                	jmp    177 <HttpDaemon::ParseMethod(char*)+0x177>
 151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 155:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 15c <HttpDaemon::ParseMethod(char*)+0x15c>
 15c:	48 89 d6             	mov    %rdx,%rsi
 15f:	48 89 c7             	mov    %rax,%rdi
 162:	e8 00 00 00 00       	call   167 <HttpDaemon::ParseMethod(char*)+0x167>
 167:	85 c0                	test   %eax,%eax
 169:	74 07                	je     172 <HttpDaemon::ParseMethod(char*)+0x172>
 16b:	b8 f9 01 00 00       	mov    $0x1f9,%eax
 170:	eb 05                	jmp    177 <HttpDaemon::ParseMethod(char*)+0x177>
 172:	b8 c8 00 00 00       	mov    $0xc8,%eax
 177:	c9                   	leave  
 178:	c3                   	ret    

Disassembly of section .text._ZN10HttpDaemon16ParseHeaderFieldEPc:

0000000000000000 <HttpDaemon::ParseHeaderField(char*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  18:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1f <HttpDaemon::ParseHeaderField(char*)+0x1f>
  1f:	48 89 d6             	mov    %rdx,%rsi
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <HttpDaemon::ParseHeaderField(char*)+0x2a>
  2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  33:	0f 94 c0             	sete   %al
  36:	84 c0                	test   %al,%al
  38:	74 0a                	je     44 <HttpDaemon::ParseHeaderField(char*)+0x44>
  3a:	b8 90 01 00 00       	mov    $0x190,%eax
  3f:	e9 2c 01 00 00       	jmp    170 <HttpDaemon::ParseHeaderField(char*)+0x170>
  44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  48:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 4f <HttpDaemon::ParseHeaderField(char*)+0x4f>
  4f:	48 89 d6             	mov    %rdx,%rsi
  52:	48 89 c7             	mov    %rax,%rdi
  55:	e8 00 00 00 00       	call   5a <HttpDaemon::ParseHeaderField(char*)+0x5a>
  5a:	85 c0                	test   %eax,%eax
  5c:	75 59                	jne    b7 <HttpDaemon::ParseHeaderField(char*)+0xb7>
  5e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 65 <HttpDaemon::ParseHeaderField(char*)+0x65>
  65:	48 89 c6             	mov    %rax,%rsi
  68:	bf 00 00 00 00       	mov    $0x0,%edi
  6d:	e8 00 00 00 00       	call   72 <HttpDaemon::ParseHeaderField(char*)+0x72>
  72:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  76:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  7b:	0f 94 c0             	sete   %al
  7e:	84 c0                	test   %al,%al
  80:	74 0a                	je     8c <HttpDaemon::ParseHeaderField(char*)+0x8c>
  82:	b8 90 01 00 00       	mov    $0x190,%eax
  87:	e9 e4 00 00 00       	jmp    170 <HttpDaemon::ParseHeaderField(char*)+0x170>
  8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  90:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 97 <HttpDaemon::ParseHeaderField(char*)+0x97>
  97:	48 89 d6             	mov    %rdx,%rsi
  9a:	48 89 c7             	mov    %rax,%rdi
  9d:	e8 00 00 00 00       	call   a2 <HttpDaemon::ParseHeaderField(char*)+0xa2>
  a2:	85 c0                	test   %eax,%eax
  a4:	0f 85 c1 00 00 00    	jne    16b <HttpDaemon::ParseHeaderField(char*)+0x16b>
  aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ae:	c6 40 30 01          	movb   $0x1,0x30(%rax)
  b2:	e9 b4 00 00 00       	jmp    16b <HttpDaemon::ParseHeaderField(char*)+0x16b>
  b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bb:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # c2 <HttpDaemon::ParseHeaderField(char*)+0xc2>
  c2:	48 89 d6             	mov    %rdx,%rsi
  c5:	48 89 c7             	mov    %rax,%rdi
  c8:	e8 00 00 00 00       	call   cd <HttpDaemon::ParseHeaderField(char*)+0xcd>
  cd:	85 c0                	test   %eax,%eax
  cf:	0f 85 96 00 00 00    	jne    16b <HttpDaemon::ParseHeaderField(char*)+0x16b>
  d5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # dc <HttpDaemon::ParseHeaderField(char*)+0xdc>
  dc:	48 89 c6             	mov    %rax,%rsi
  df:	bf 00 00 00 00       	mov    $0x0,%edi
  e4:	e8 00 00 00 00       	call   e9 <HttpDaemon::ParseHeaderField(char*)+0xe9>
  e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  ed:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  f2:	0f 94 c0             	sete   %al
  f5:	84 c0                	test   %al,%al
  f7:	74 07                	je     100 <HttpDaemon::ParseHeaderField(char*)+0x100>
  f9:	b8 90 01 00 00       	mov    $0x190,%eax
  fe:	eb 70                	jmp    170 <HttpDaemon::ParseHeaderField(char*)+0x170>
 100:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 107:	eb 4a                	jmp    153 <HttpDaemon::ParseHeaderField(char*)+0x153>
 109:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 10d:	48 8d 50 01          	lea    0x1(%rax),%rdx
 111:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
 115:	0f b6 00             	movzbl (%rax),%eax
 118:	0f be c0             	movsbl %al,%eax
 11b:	83 e8 30             	sub    $0x30,%eax
 11e:	89 45 f4             	mov    %eax,-0xc(%rbp)
 121:	83 7d f4 09          	cmpl   $0x9,-0xc(%rbp)
 125:	76 07                	jbe    12e <HttpDaemon::ParseHeaderField(char*)+0x12e>
 127:	b8 90 01 00 00       	mov    $0x190,%eax
 12c:	eb 42                	jmp    170 <HttpDaemon::ParseHeaderField(char*)+0x170>
 12e:	8b 55 f0             	mov    -0x10(%rbp),%edx
 131:	89 d0                	mov    %edx,%eax
 133:	c1 e0 02             	shl    $0x2,%eax
 136:	01 d0                	add    %edx,%eax
 138:	01 c0                	add    %eax,%eax
 13a:	89 45 f0             	mov    %eax,-0x10(%rbp)
 13d:	8b 45 f4             	mov    -0xc(%rbp),%eax
 140:	01 45 f0             	add    %eax,-0x10(%rbp)
 143:	81 7d f0 a0 05 00 00 	cmpl   $0x5a0,-0x10(%rbp)
 14a:	76 07                	jbe    153 <HttpDaemon::ParseHeaderField(char*)+0x153>
 14c:	b8 9d 01 00 00       	mov    $0x19d,%eax
 151:	eb 1d                	jmp    170 <HttpDaemon::ParseHeaderField(char*)+0x170>
 153:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 157:	0f b6 00             	movzbl (%rax),%eax
 15a:	84 c0                	test   %al,%al
 15c:	75 ab                	jne    109 <HttpDaemon::ParseHeaderField(char*)+0x109>
 15e:	8b 45 f0             	mov    -0x10(%rbp),%eax
 161:	89 c2                	mov    %eax,%edx
 163:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 167:	66 89 50 36          	mov    %dx,0x36(%rax)
 16b:	b8 c8 00 00 00       	mov    $0xc8,%eax
 170:	c9                   	leave  
 171:	c3                   	ret    

Disassembly of section .text._ZN10HttpDaemon9HandleGetEv:

0000000000000000 <HttpDaemon::HandleGet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1b:	48 8b 40 08          	mov    0x8(%rax),%rax
  1f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26 <HttpDaemon::HandleGet()+0x26>
  26:	48 89 d6             	mov    %rdx,%rsi
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	call   31 <HttpDaemon::HandleGet()+0x31>
  31:	85 c0                	test   %eax,%eax
  33:	74 1e                	je     53 <HttpDaemon::HandleGet()+0x53>
  35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  39:	48 8b 40 08          	mov    0x8(%rax),%rax
  3d:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 44 <HttpDaemon::HandleGet()+0x44>
  44:	48 89 d6             	mov    %rdx,%rsi
  47:	48 89 c7             	mov    %rax,%rdi
  4a:	e8 00 00 00 00       	call   4f <HttpDaemon::HandleGet()+0x4f>
  4f:	85 c0                	test   %eax,%eax
  51:	75 2f                	jne    82 <HttpDaemon::HandleGet()+0x82>
  53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  57:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5e <HttpDaemon::HandleGet()+0x5e>
  5e:	48 89 10             	mov    %rdx,(%rax)
  61:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 68 <HttpDaemon::HandleGet()+0x68>
  68:	48 89 c6             	mov    %rax,%rsi
  6b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 72 <HttpDaemon::HandleGet()+0x72>
  72:	48 89 c7             	mov    %rax,%rdi
  75:	e8 00 00 00 00       	call   7a <HttpDaemon::HandleGet()+0x7a>
  7a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  7d:	e9 1f 02 00 00       	jmp    2a1 <HttpDaemon::HandleGet()+0x2a1>
  82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  86:	48 8b 40 08          	mov    0x8(%rax),%rax
  8a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 91 <HttpDaemon::HandleGet()+0x91>
  91:	48 89 d6             	mov    %rdx,%rsi
  94:	48 89 c7             	mov    %rax,%rdi
  97:	e8 00 00 00 00       	call   9c <HttpDaemon::HandleGet()+0x9c>
  9c:	85 c0                	test   %eax,%eax
  9e:	75 2f                	jne    cf <HttpDaemon::HandleGet()+0xcf>
  a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a4:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # ab <HttpDaemon::HandleGet()+0xab>
  ab:	48 89 10             	mov    %rdx,(%rax)
  ae:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b5 <HttpDaemon::HandleGet()+0xb5>
  b5:	48 89 c6             	mov    %rax,%rsi
  b8:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # bf <HttpDaemon::HandleGet()+0xbf>
  bf:	48 89 c7             	mov    %rax,%rdi
  c2:	e8 00 00 00 00       	call   c7 <HttpDaemon::HandleGet()+0xc7>
  c7:	89 45 f4             	mov    %eax,-0xc(%rbp)
  ca:	e9 d2 01 00 00       	jmp    2a1 <HttpDaemon::HandleGet()+0x2a1>
  cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d3:	48 8b 40 08          	mov    0x8(%rax),%rax
  d7:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # de <HttpDaemon::HandleGet()+0xde>
  de:	48 89 d6             	mov    %rdx,%rsi
  e1:	48 89 c7             	mov    %rax,%rdi
  e4:	e8 00 00 00 00       	call   e9 <HttpDaemon::HandleGet()+0xe9>
  e9:	85 c0                	test   %eax,%eax
  eb:	75 2f                	jne    11c <HttpDaemon::HandleGet()+0x11c>
  ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f1:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # f8 <HttpDaemon::HandleGet()+0xf8>
  f8:	48 89 10             	mov    %rdx,(%rax)
  fb:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 102 <HttpDaemon::HandleGet()+0x102>
 102:	48 89 c6             	mov    %rax,%rsi
 105:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 10c <HttpDaemon::HandleGet()+0x10c>
 10c:	48 89 c7             	mov    %rax,%rdi
 10f:	e8 00 00 00 00       	call   114 <HttpDaemon::HandleGet()+0x114>
 114:	89 45 f4             	mov    %eax,-0xc(%rbp)
 117:	e9 85 01 00 00       	jmp    2a1 <HttpDaemon::HandleGet()+0x2a1>
 11c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 120:	48 8b 40 08          	mov    0x8(%rax),%rax
 124:	ba 06 00 00 00       	mov    $0x6,%edx
 129:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 130 <HttpDaemon::HandleGet()+0x130>
 130:	48 89 ce             	mov    %rcx,%rsi
 133:	48 89 c7             	mov    %rax,%rdi
 136:	e8 00 00 00 00       	call   13b <HttpDaemon::HandleGet()+0x13b>
 13b:	85 c0                	test   %eax,%eax
 13d:	0f 85 5e 01 00 00    	jne    2a1 <HttpDaemon::HandleGet()+0x2a1>
 143:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 147:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 14e <HttpDaemon::HandleGet()+0x14e>
 14e:	48 89 10             	mov    %rdx,(%rax)
 151:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 155:	48 8b 40 08          	mov    0x8(%rax),%rax
 159:	48 83 c0 06          	add    $0x6,%rax
 15d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 161:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 165:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 16c <HttpDaemon::HandleGet()+0x16c>
 16c:	48 89 d6             	mov    %rdx,%rsi
 16f:	48 89 c7             	mov    %rax,%rdi
 172:	e8 00 00 00 00       	call   177 <HttpDaemon::HandleGet()+0x177>
 177:	85 c0                	test   %eax,%eax
 179:	75 1f                	jne    19a <HttpDaemon::HandleGet()+0x19a>
 17b:	be a0 05 00 00       	mov    $0x5a0,%esi
 180:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 187 <HttpDaemon::HandleGet()+0x187>
 187:	48 89 c7             	mov    %rax,%rdi
 18a:	e8 00 00 00 00       	call   18f <HttpDaemon::HandleGet()+0x18f>
 18f:	0f b7 c0             	movzwl %ax,%eax
 192:	89 45 f4             	mov    %eax,-0xc(%rbp)
 195:	e9 07 01 00 00       	jmp    2a1 <HttpDaemon::HandleGet()+0x2a1>
 19a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 19e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1a5 <HttpDaemon::HandleGet()+0x1a5>
 1a5:	48 89 d6             	mov    %rdx,%rsi
 1a8:	48 89 c7             	mov    %rax,%rdi
 1ab:	e8 00 00 00 00       	call   1b0 <HttpDaemon::HandleGet()+0x1b0>
 1b0:	85 c0                	test   %eax,%eax
 1b2:	75 1f                	jne    1d3 <HttpDaemon::HandleGet()+0x1d3>
 1b4:	be a0 05 00 00       	mov    $0x5a0,%esi
 1b9:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1c0 <HttpDaemon::HandleGet()+0x1c0>
 1c0:	48 89 c7             	mov    %rax,%rdi
 1c3:	e8 00 00 00 00       	call   1c8 <HttpDaemon::HandleGet()+0x1c8>
 1c8:	0f b7 c0             	movzwl %ax,%eax
 1cb:	89 45 f4             	mov    %eax,-0xc(%rbp)
 1ce:	e9 ce 00 00 00       	jmp    2a1 <HttpDaemon::HandleGet()+0x2a1>
 1d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1d7:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1de <HttpDaemon::HandleGet()+0x1de>
 1de:	48 89 d6             	mov    %rdx,%rsi
 1e1:	48 89 c7             	mov    %rax,%rdi
 1e4:	e8 00 00 00 00       	call   1e9 <HttpDaemon::HandleGet()+0x1e9>
 1e9:	85 c0                	test   %eax,%eax
 1eb:	75 3a                	jne    227 <HttpDaemon::HandleGet()+0x227>
 1ed:	e8 00 00 00 00       	call   1f2 <HttpDaemon::HandleGet()+0x1f2>
 1f2:	48 89 c7             	mov    %rax,%rdi
 1f5:	e8 00 00 00 00       	call   1fa <HttpDaemon::HandleGet()+0x1fa>
 1fa:	83 f0 01             	xor    $0x1,%eax
 1fd:	84 c0                	test   %al,%al
 1ff:	74 0a                	je     20b <HttpDaemon::HandleGet()+0x20b>
 201:	b8 90 01 00 00       	mov    $0x190,%eax
 206:	e9 b5 00 00 00       	jmp    2c0 <HttpDaemon::HandleGet()+0x2c0>
 20b:	be a0 05 00 00       	mov    $0x5a0,%esi
 210:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 217 <HttpDaemon::HandleGet()+0x217>
 217:	48 89 c7             	mov    %rax,%rdi
 21a:	e8 00 00 00 00       	call   21f <HttpDaemon::HandleGet()+0x21f>
 21f:	0f b7 c0             	movzwl %ax,%eax
 222:	89 45 f4             	mov    %eax,-0xc(%rbp)
 225:	eb 7a                	jmp    2a1 <HttpDaemon::HandleGet()+0x2a1>
 227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 22b:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 232 <HttpDaemon::HandleGet()+0x232>
 232:	48 89 d6             	mov    %rdx,%rsi
 235:	48 89 c7             	mov    %rax,%rdi
 238:	e8 00 00 00 00       	call   23d <HttpDaemon::HandleGet()+0x23d>
 23d:	85 c0                	test   %eax,%eax
 23f:	75 1c                	jne    25d <HttpDaemon::HandleGet()+0x25d>
 241:	be a0 05 00 00       	mov    $0x5a0,%esi
 246:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 24d <HttpDaemon::HandleGet()+0x24d>
 24d:	48 89 c7             	mov    %rax,%rdi
 250:	e8 00 00 00 00       	call   255 <HttpDaemon::HandleGet()+0x255>
 255:	0f b7 c0             	movzwl %ax,%eax
 258:	89 45 f4             	mov    %eax,-0xc(%rbp)
 25b:	eb 44                	jmp    2a1 <HttpDaemon::HandleGet()+0x2a1>
 25d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 261:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 268 <HttpDaemon::HandleGet()+0x268>
 268:	48 89 d6             	mov    %rdx,%rsi
 26b:	48 89 c7             	mov    %rax,%rdi
 26e:	e8 00 00 00 00       	call   273 <HttpDaemon::HandleGet()+0x273>
 273:	85 c0                	test   %eax,%eax
 275:	75 1c                	jne    293 <HttpDaemon::HandleGet()+0x293>
 277:	be a0 05 00 00       	mov    $0x5a0,%esi
 27c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 283 <HttpDaemon::HandleGet()+0x283>
 283:	48 89 c7             	mov    %rax,%rdi
 286:	e8 00 00 00 00       	call   28b <HttpDaemon::HandleGet()+0x28b>
 28b:	0f b7 c0             	movzwl %ax,%eax
 28e:	89 45 f4             	mov    %eax,-0xc(%rbp)
 291:	eb 0e                	jmp    2a1 <HttpDaemon::HandleGet()+0x2a1>
 293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 297:	48 89 c7             	mov    %rax,%rdi
 29a:	e8 00 00 00 00       	call   29f <HttpDaemon::HandleGet()+0x29f>
 29f:	eb 1f                	jmp    2c0 <HttpDaemon::HandleGet()+0x2c0>
 2a1:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
 2a5:	7f 07                	jg     2ae <HttpDaemon::HandleGet()+0x2ae>
 2a7:	b8 94 01 00 00       	mov    $0x194,%eax
 2ac:	eb 12                	jmp    2c0 <HttpDaemon::HandleGet()+0x2c0>
 2ae:	8b 45 f4             	mov    -0xc(%rbp),%eax
 2b1:	89 c2                	mov    %eax,%edx
 2b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 2b7:	66 89 50 32          	mov    %dx,0x32(%rax)
 2bb:	b8 c8 00 00 00       	mov    $0xc8,%eax
 2c0:	c9                   	leave  
 2c1:	c3                   	ret    

Disassembly of section .text._ZN10HttpDaemon12HandleGetTxtEv:

0000000000000000 <HttpDaemon::HandleGetTxt()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  14:	48 8b 40 08          	mov    0x8(%rax),%rax
  18:	48 83 c0 06          	add    $0x6,%rax
  1c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <HttpDaemon::HandleGetTxt()+0x2c>
  2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  30:	48 83 7d f8 04       	cmpq   $0x4,-0x8(%rbp)
  35:	77 0a                	ja     41 <HttpDaemon::HandleGetTxt()+0x41>
  37:	b8 90 01 00 00       	mov    $0x190,%eax
  3c:	e9 a0 00 00 00       	jmp    e1 <HttpDaemon::HandleGetTxt()+0xe1>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	48 8d 50 fc          	lea    -0x4(%rax),%rdx
  49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4d:	48 01 d0             	add    %rdx,%rax
  50:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 57 <HttpDaemon::HandleGetTxt()+0x57>
  57:	48 89 d6             	mov    %rdx,%rsi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	call   62 <HttpDaemon::HandleGetTxt()+0x62>
  62:	85 c0                	test   %eax,%eax
  64:	74 07                	je     6d <HttpDaemon::HandleGetTxt()+0x6d>
  66:	b8 90 01 00 00       	mov    $0x190,%eax
  6b:	eb 74                	jmp    e1 <HttpDaemon::HandleGetTxt()+0xe1>
  6d:	e8 00 00 00 00       	call   72 <HttpDaemon::HandleGetTxt()+0x72>
  72:	88 45 eb             	mov    %al,-0x15(%rbp)
  75:	bf 01 00 00 00       	mov    $0x1,%edi
  7a:	e8 00 00 00 00       	call   7f <HttpDaemon::HandleGetTxt()+0x7f>
  7f:	e8 00 00 00 00       	call   84 <HttpDaemon::HandleGetTxt()+0x84>
  84:	48 89 c1             	mov    %rax,%rcx
  87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  8b:	ba 9b 05 00 00       	mov    $0x59b,%edx
  90:	48 89 c6             	mov    %rax,%rsi
  93:	48 89 cf             	mov    %rcx,%rdi
  96:	e8 00 00 00 00       	call   9b <HttpDaemon::HandleGetTxt()+0x9b>
  9b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  9e:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax
  a2:	89 c7                	mov    %eax,%edi
  a4:	e8 00 00 00 00       	call   a9 <HttpDaemon::HandleGetTxt()+0xa9>
  a9:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  ad:	75 07                	jne    b6 <HttpDaemon::HandleGetTxt()+0xb6>
  af:	b8 90 01 00 00       	mov    $0x190,%eax
  b4:	eb 2b                	jmp    e1 <HttpDaemon::HandleGetTxt()+0xe1>
  b6:	8b 45 ec             	mov    -0x14(%rbp),%eax
  b9:	89 c2                	mov    %eax,%edx
  bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  bf:	66 89 50 32          	mov    %dx,0x32(%rax)
  c3:	8b 55 ec             	mov    -0x14(%rbp),%edx
  c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  ca:	48 89 c6             	mov    %rax,%rsi
  cd:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # d4 <HttpDaemon::HandleGetTxt()+0xd4>
  d4:	48 89 c7             	mov    %rax,%rdi
  d7:	e8 00 00 00 00       	call   dc <HttpDaemon::HandleGetTxt()+0xdc>
  dc:	b8 c8 00 00 00       	mov    $0xc8,%eax
  e1:	c9                   	leave  
  e2:	c3                   	ret    

Disassembly of section .text._ZN10HttpDaemon10HandlePostEb:

0000000000000000 <HttpDaemon::HandlePost(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 e4             	mov    %al,-0x1c(%rbp)
  15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1c:	00 00 
  1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  22:	31 c0                	xor    %eax,%eax
  24:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  28:	83 f0 01             	xor    $0x1,%eax
  2b:	84 c0                	test   %al,%al
  2d:	74 76                	je     a5 <HttpDaemon::HandlePost(bool)+0xa5>
  2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  33:	0f b6 40 30          	movzbl 0x30(%rax),%eax
  37:	83 f0 01             	xor    $0x1,%eax
  3a:	84 c0                	test   %al,%al
  3c:	74 0a                	je     48 <HttpDaemon::HandlePost(bool)+0x48>
  3e:	b8 90 01 00 00       	mov    $0x190,%eax
  43:	e9 a2 02 00 00       	jmp    2ea <HttpDaemon::HandlePost(bool)+0x2ea>
  48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4c:	48 8b 40 08          	mov    0x8(%rax),%rax
  50:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 57 <HttpDaemon::HandlePost(bool)+0x57>
  57:	48 89 d6             	mov    %rdx,%rsi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	call   62 <HttpDaemon::HandlePost(bool)+0x62>
  62:	85 c0                	test   %eax,%eax
  64:	0f 94 c2             	sete   %dl
  67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6b:	88 50 31             	mov    %dl,0x31(%rax)
  6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  72:	0f b6 40 31          	movzbl 0x31(%rax),%eax
  76:	83 f0 01             	xor    $0x1,%eax
  79:	84 c0                	test   %al,%al
  7b:	74 28                	je     a5 <HttpDaemon::HandlePost(bool)+0xa5>
  7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  81:	48 8b 40 08          	mov    0x8(%rax),%rax
  85:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 8c <HttpDaemon::HandlePost(bool)+0x8c>
  8c:	48 89 d6             	mov    %rdx,%rsi
  8f:	48 89 c7             	mov    %rax,%rdi
  92:	e8 00 00 00 00       	call   97 <HttpDaemon::HandlePost(bool)+0x97>
  97:	85 c0                	test   %eax,%eax
  99:	74 0a                	je     a5 <HttpDaemon::HandlePost(bool)+0xa5>
  9b:	b8 94 01 00 00       	mov    $0x194,%eax
  a0:	e9 45 02 00 00       	jmp    2ea <HttpDaemon::HandlePost(bool)+0x2ea>
  a5:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  a9:	83 f0 01             	xor    $0x1,%eax
  ac:	84 c0                	test   %al,%al
  ae:	74 2a                	je     da <HttpDaemon::HandlePost(bool)+0xda>
  b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b4:	8b 50 24             	mov    0x24(%rax),%edx
  b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  bb:	0f b7 40 36          	movzwl 0x36(%rax),%eax
  bf:	0f b7 c0             	movzwl %ax,%eax
  c2:	39 c2                	cmp    %eax,%edx
  c4:	7c 0d                	jl     d3 <HttpDaemon::HandlePost(bool)+0xd3>
  c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ca:	0f b7 40 34          	movzwl 0x34(%rax),%eax
  ce:	66 85 c0             	test   %ax,%ax
  d1:	75 07                	jne    da <HttpDaemon::HandlePost(bool)+0xda>
  d3:	b8 01 00 00 00       	mov    $0x1,%eax
  d8:	eb 05                	jmp    df <HttpDaemon::HandlePost(bool)+0xdf>
  da:	b8 00 00 00 00       	mov    $0x0,%eax
  df:	88 45 f6             	mov    %al,-0xa(%rbp)
  e2:	80 7d f6 00          	cmpb   $0x0,-0xa(%rbp)
  e6:	74 0a                	je     f2 <HttpDaemon::HandlePost(bool)+0xf2>
  e8:	b8 c8 00 00 00       	mov    $0xc8,%eax
  ed:	e9 f8 01 00 00       	jmp    2ea <HttpDaemon::HandlePost(bool)+0x2ea>
  f2:	80 7d e4 00          	cmpb   $0x0,-0x1c(%rbp)
  f6:	74 21                	je     119 <HttpDaemon::HandlePost(bool)+0x119>
  f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  fc:	48 8b 50 18          	mov    0x18(%rax),%rdx
 100:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 104:	48 89 50 10          	mov    %rdx,0x10(%rax)
 108:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 10c:	8b 40 24             	mov    0x24(%rax),%eax
 10f:	89 c2                	mov    %eax,%edx
 111:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 115:	66 89 50 34          	mov    %dx,0x34(%rax)
 119:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 11d:	0f b6 40 31          	movzbl 0x31(%rax),%eax
 121:	84 c0                	test   %al,%al
 123:	0f 84 3e 01 00 00    	je     267 <HttpDaemon::HandlePost(bool)+0x267>
 129:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 12d:	0f b7 40 34          	movzwl 0x34(%rax),%eax
 131:	0f b7 c8             	movzwl %ax,%ecx
 134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 138:	48 8b 40 10          	mov    0x10(%rax),%rax
 13c:	ba 01 00 00 00       	mov    $0x1,%edx
 141:	89 ce                	mov    %ecx,%esi
 143:	48 89 c7             	mov    %rax,%rdi
 146:	e8 00 00 00 00       	call   14b <HttpDaemon::HandlePost(bool)+0x14b>
 14b:	85 c0                	test   %eax,%eax
 14d:	0f 9e c0             	setle  %al
 150:	84 c0                	test   %al,%al
 152:	74 0a                	je     15e <HttpDaemon::HandlePost(bool)+0x15e>
 154:	b8 90 01 00 00       	mov    $0x190,%eax
 159:	e9 8c 01 00 00       	jmp    2ea <HttpDaemon::HandlePost(bool)+0x2ea>
 15e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 162:	48 8b 40 10          	mov    0x10(%rax),%rax
 166:	48 8d 55 f5          	lea    -0xb(%rbp),%rdx
 16a:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 171 <HttpDaemon::HandlePost(bool)+0x171>
 171:	48 89 ce             	mov    %rcx,%rsi
 174:	48 89 c7             	mov    %rax,%rdi
 177:	e8 00 00 00 00       	call   17c <HttpDaemon::HandlePost(bool)+0x17c>
 17c:	85 c0                	test   %eax,%eax
 17e:	0f 94 c0             	sete   %al
 181:	84 c0                	test   %al,%al
 183:	74 37                	je     1bc <HttpDaemon::HandlePost(bool)+0x1bc>
 185:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
 189:	84 c0                	test   %al,%al
 18b:	0f 84 19 01 00 00    	je     2aa <HttpDaemon::HandlePost(bool)+0x2aa>
 191:	e8 00 00 00 00       	call   196 <HttpDaemon::HandlePost(bool)+0x196>
 196:	48 89 c7             	mov    %rax,%rdi
 199:	e8 00 00 00 00       	call   19e <HttpDaemon::HandlePost(bool)+0x19e>
 19e:	83 f0 01             	xor    $0x1,%eax
 1a1:	84 c0                	test   %al,%al
 1a3:	74 0a                	je     1af <HttpDaemon::HandlePost(bool)+0x1af>
 1a5:	b8 90 01 00 00       	mov    $0x190,%eax
 1aa:	e9 3b 01 00 00       	jmp    2ea <HttpDaemon::HandlePost(bool)+0x2ea>
 1af:	e8 00 00 00 00       	call   1b4 <HttpDaemon::HandlePost(bool)+0x1b4>
 1b4:	48 89 c7             	mov    %rax,%rdi
 1b7:	e8 00 00 00 00       	call   1bc <HttpDaemon::HandlePost(bool)+0x1bc>
 1bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1c0:	48 8b 40 10          	mov    0x10(%rax),%rax
 1c4:	48 8d 55 f5          	lea    -0xb(%rbp),%rdx
 1c8:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 1cf <HttpDaemon::HandlePost(bool)+0x1cf>
 1cf:	48 89 ce             	mov    %rcx,%rsi
 1d2:	48 89 c7             	mov    %rax,%rdi
 1d5:	e8 00 00 00 00       	call   1da <HttpDaemon::HandlePost(bool)+0x1da>
 1da:	85 c0                	test   %eax,%eax
 1dc:	0f 94 c0             	sete   %al
 1df:	84 c0                	test   %al,%al
 1e1:	74 23                	je     206 <HttpDaemon::HandlePost(bool)+0x206>
 1e3:	e8 00 00 00 00       	call   1e8 <HttpDaemon::HandlePost(bool)+0x1e8>
 1e8:	48 89 c2             	mov    %rax,%rdx
 1eb:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
 1ef:	84 c0                	test   %al,%al
 1f1:	0f 94 c0             	sete   %al
 1f4:	0f b6 c0             	movzbl %al,%eax
 1f7:	89 c6                	mov    %eax,%esi
 1f9:	48 89 d7             	mov    %rdx,%rdi
 1fc:	e8 00 00 00 00       	call   201 <HttpDaemon::HandlePost(bool)+0x201>
 201:	e9 a4 00 00 00       	jmp    2aa <HttpDaemon::HandlePost(bool)+0x2aa>
 206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 20a:	48 8b 40 10          	mov    0x10(%rax),%rax
 20e:	48 8d 55 f5          	lea    -0xb(%rbp),%rdx
 212:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 219 <HttpDaemon::HandlePost(bool)+0x219>
 219:	48 89 ce             	mov    %rcx,%rsi
 21c:	48 89 c7             	mov    %rax,%rdi
 21f:	e8 00 00 00 00       	call   224 <HttpDaemon::HandlePost(bool)+0x224>
 224:	85 c0                	test   %eax,%eax
 226:	0f 94 c0             	sete   %al
 229:	84 c0                	test   %al,%al
 22b:	74 30                	je     25d <HttpDaemon::HandlePost(bool)+0x25d>
 22d:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
 231:	84 c0                	test   %al,%al
 233:	74 14                	je     249 <HttpDaemon::HandlePost(bool)+0x249>
 235:	e8 00 00 00 00       	call   23a <HttpDaemon::HandlePost(bool)+0x23a>
 23a:	be 04 00 00 00       	mov    $0x4,%esi
 23f:	48 89 c7             	mov    %rax,%rdi
 242:	e8 00 00 00 00       	call   247 <HttpDaemon::HandlePost(bool)+0x247>
 247:	eb 61                	jmp    2aa <HttpDaemon::HandlePost(bool)+0x2aa>
 249:	e8 00 00 00 00       	call   24e <HttpDaemon::HandlePost(bool)+0x24e>
 24e:	be 02 00 00 00       	mov    $0x2,%esi
 253:	48 89 c7             	mov    %rax,%rdi
 256:	e8 00 00 00 00       	call   25b <HttpDaemon::HandlePost(bool)+0x25b>
 25b:	eb 4d                	jmp    2aa <HttpDaemon::HandlePost(bool)+0x2aa>
 25d:	b8 90 01 00 00       	mov    $0x190,%eax
 262:	e9 83 00 00 00       	jmp    2ea <HttpDaemon::HandlePost(bool)+0x2ea>
 267:	e8 00 00 00 00       	call   26c <HttpDaemon::HandlePost(bool)+0x26c>
 26c:	88 45 f7             	mov    %al,-0x9(%rbp)
 26f:	bf 01 00 00 00       	mov    $0x1,%edi
 274:	e8 00 00 00 00       	call   279 <HttpDaemon::HandlePost(bool)+0x279>
 279:	e8 00 00 00 00       	call   27e <HttpDaemon::HandlePost(bool)+0x27e>
 27e:	48 89 c1             	mov    %rax,%rcx
 281:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 285:	0f b7 40 34          	movzwl 0x34(%rax),%eax
 289:	0f b7 d0             	movzwl %ax,%edx
 28c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 290:	48 8b 40 10          	mov    0x10(%rax),%rax
 294:	48 89 c6             	mov    %rax,%rsi
 297:	48 89 cf             	mov    %rcx,%rdi
 29a:	e8 00 00 00 00       	call   29f <HttpDaemon::HandlePost(bool)+0x29f>
 29f:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 2a3:	89 c7                	mov    %eax,%edi
 2a5:	e8 00 00 00 00       	call   2aa <HttpDaemon::HandlePost(bool)+0x2aa>
 2aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 2ae:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2b5 <HttpDaemon::HandlePost(bool)+0x2b5>
 2b5:	48 89 10             	mov    %rdx,(%rax)
 2b8:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2bf <HttpDaemon::HandlePost(bool)+0x2bf>
 2bf:	48 89 c2             	mov    %rax,%rdx
 2c2:	be 9f 05 00 00       	mov    $0x59f,%esi
 2c7:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2ce <HttpDaemon::HandlePost(bool)+0x2ce>
 2ce:	48 89 c7             	mov    %rax,%rdi
 2d1:	b8 00 00 00 00       	mov    $0x0,%eax
 2d6:	e8 00 00 00 00       	call   2db <HttpDaemon::HandlePost(bool)+0x2db>
 2db:	89 c2                	mov    %eax,%edx
 2dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 2e1:	66 89 50 32          	mov    %dx,0x32(%rax)
 2e5:	b8 c8 00 00 00       	mov    $0xc8,%eax
 2ea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 2ee:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 2f5:	00 00 
 2f7:	74 05                	je     2fe <HttpDaemon::HandlePost(bool)+0x2fe>
 2f9:	e8 00 00 00 00       	call   2fe <HttpDaemon::HandlePost(bool)+0x2fe>
 2fe:	c9                   	leave  
 2ff:	c3                   	ret    
