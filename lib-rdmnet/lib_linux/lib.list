In archive lib_linux/librdmnet.a:

llrpdevice.o:     file format elf64-x86-64


Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Network::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN10LLRPDevice20HandleRequestMessageEv:

0000000000000000 <LLRPDevice::HandleRequestMessage()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 26 <LLRPDevice::HandleRequestMessage()+0x26>
  26:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2e:	48 83 c0 17          	add    $0x17,%rax
  32:	48 8b 50 08          	mov    0x8(%rax),%rdx
  36:	48 8b 00             	mov    (%rax),%rax
  39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  3d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  45:	c6 40 12 43          	movb   $0x43,0x12(%rax)
  49:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4d:	48 8b 00             	mov    (%rax),%rax
  50:	48 83 c0 18          	add    $0x18,%rax
  54:	48 8b 10             	mov    (%rax),%rdx
  57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5b:	48 8d 48 17          	lea    0x17(%rax),%rcx
  5f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  63:	48 89 ce             	mov    %rcx,%rsi
  66:	48 89 c7             	mov    %rax,%rdi
  69:	ff d2                	call   *%rdx
  6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  6f:	c6 40 29 2c          	movb   $0x2c,0x29(%rax)
  73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  77:	c7 40 2a 00 00 00 02 	movl   $0x2000000,0x2a(%rax)
  7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  82:	48 8d 48 2e          	lea    0x2e(%rax),%rcx
  86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  8a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  8e:	48 89 01             	mov    %rax,(%rcx)
  91:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  99:	c6 40 44 11          	movb   $0x11,0x44(%rax)
  9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a1:	c6 40 45 01          	movb   $0x1,0x45(%rax)
  a5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  a9:	48 8b 00             	mov    (%rax),%rax
  ac:	48 83 c0 10          	add    $0x10,%rax
  b0:	48 8b 10             	mov    (%rax),%rdx
  b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b7:	48 8d 48 46          	lea    0x46(%rax),%rcx
  bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  bf:	48 89 ce             	mov    %rcx,%rsi
  c2:	48 89 c7             	mov    %rax,%rdi
  c5:	ff d2                	call   *%rdx
  c7:	e8 00 00 00 00       	call   cc <LLRPDevice::HandleRequestMessage()+0xcc>
  cc:	48 89 c2             	mov    %rax,%rdx
  cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  d3:	48 83 c0 4c          	add    $0x4c,%rax
  d7:	48 89 c6             	mov    %rax,%rsi
  da:	48 89 d7             	mov    %rdx,%rdi
  dd:	e8 00 00 00 00       	call   e2 <LLRPDevice::HandleRequestMessage()+0xe2>
  e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  e6:	c6 40 52 ff          	movb   $0xff,0x52(%rax)
  ea:	e8 00 00 00 00       	call   ef <LLRPDevice::HandleRequestMessage()+0xef>
  ef:	48 89 c7             	mov    %rax,%rdi
  f2:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # f8 <LLRPDevice::HandleRequestMessage()+0xf8>
  f8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  fc:	41 b9 c1 15 00 00    	mov    $0x15c1,%r9d
 102:	41 b8 ef ff fa 86    	mov    $0x86faffef,%r8d
 108:	b9 53 00 00 00       	mov    $0x53,%ecx
 10d:	89 c6                	mov    %eax,%esi
 10f:	e8 00 00 00 00       	call   114 <LLRPDevice::HandleRequestMessage()+0x114>
 114:	90                   	nop
 115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 119:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 120:	00 00 
 122:	74 05                	je     129 <LLRPDevice::HandleRequestMessage()+0x129>
 124:	e8 00 00 00 00       	call   129 <LLRPDevice::HandleRequestMessage()+0x129>
 129:	c9                   	leave  
 12a:	c3                   	ret    

Disassembly of section .text._ZN10LLRPDevice16HandleRdmCommandEv:

0000000000000000 <LLRPDevice::HandleRdmCommand()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 60          	sub    $0x60,%rsp
   c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 26 <LLRPDevice::HandleRdmCommand()+0x26>
  26:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  2a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  2e:	48 83 c0 46          	add    $0x46,%rax
  32:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  36:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  3a:	48 89 c7             	mov    %rax,%rdi
  3d:	e8 00 00 00 00       	call   42 <LLRPDevice::HandleRdmCommand()+0x42>
  42:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  46:	48 8b 00             	mov    (%rax),%rax
  49:	48 83 c0 20          	add    $0x20,%rax
  4d:	48 8b 10             	mov    (%rax),%rdx
  50:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  54:	48 8d 48 46          	lea    0x46(%rax),%rcx
  58:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  5c:	48 89 ce             	mov    %rcx,%rsi
  5f:	48 89 c7             	mov    %rax,%rdi
  62:	ff d2                	call   *%rdx
  64:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  68:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  6d:	0f 84 05 01 00 00    	je     178 <LLRPDevice::HandleRdmCommand()+0x178>
  73:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  77:	0f b6 00             	movzbl (%rax),%eax
  7a:	3c cc                	cmp    $0xcc,%al
  7c:	0f 85 f6 00 00 00    	jne    178 <LLRPDevice::HandleRdmCommand()+0x178>
  82:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  86:	48 83 c0 17          	add    $0x17,%rax
  8a:	48 8b 50 08          	mov    0x8(%rax),%rdx
  8e:	48 8b 00             	mov    (%rax),%rax
  91:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  95:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  99:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  9d:	48 83 c0 02          	add    $0x2,%rax
  a1:	0f b6 00             	movzbl (%rax),%eax
  a4:	83 c0 01             	add    $0x1,%eax
  a7:	88 45 bf             	mov    %al,-0x41(%rbp)
  aa:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
  ae:	8d 50 36             	lea    0x36(%rax),%edx
  b1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  b5:	88 50 12             	mov    %dl,0x12(%rax)
  b8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  bc:	48 8b 00             	mov    (%rax),%rax
  bf:	48 83 c0 18          	add    $0x18,%rax
  c3:	48 8b 10             	mov    (%rax),%rdx
  c6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  ca:	48 8d 48 17          	lea    0x17(%rax),%rcx
  ce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  d2:	48 89 ce             	mov    %rcx,%rsi
  d5:	48 89 c7             	mov    %rax,%rdi
  d8:	ff d2                	call   *%rdx
  da:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
  de:	8d 50 1f             	lea    0x1f(%rax),%edx
  e1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  e5:	88 50 29             	mov    %dl,0x29(%rax)
  e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  ec:	48 8d 48 2e          	lea    0x2e(%rax),%rcx
  f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  f8:	48 89 01             	mov    %rax,(%rcx)
  fb:	48 89 51 08          	mov    %rdx,0x8(%rcx)
  ff:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
 103:	8d 50 04             	lea    0x4(%rax),%edx
 106:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 10a:	88 50 44             	mov    %dl,0x44(%rax)
 10d:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
 111:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 115:	48 8d 72 01          	lea    0x1(%rdx),%rsi
 119:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
 11d:	48 8d 4a 46          	lea    0x46(%rdx),%rcx
 121:	48 89 c2             	mov    %rax,%rdx
 124:	48 89 cf             	mov    %rcx,%rdi
 127:	e8 00 00 00 00       	call   12c <LLRPDevice::HandleRdmCommand()+0x12c>
 12c:	0f b6 45 bf          	movzbl -0x41(%rbp),%eax
 130:	83 c0 36             	add    $0x36,%eax
 133:	0f b6 c0             	movzbl %al,%eax
 136:	48 83 c0 10          	add    $0x10,%rax
 13a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 13e:	e8 00 00 00 00       	call   143 <LLRPDevice::HandleRdmCommand()+0x143>
 143:	48 89 c7             	mov    %rax,%rdi
 146:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 14a:	0f b7 c8             	movzwl %ax,%ecx
 14d:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 153 <LLRPDevice::HandleRdmCommand()+0x153>
 153:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
 157:	41 b9 c1 15 00 00    	mov    $0x15c1,%r9d
 15d:	41 b8 ef ff fa 86    	mov    $0x86faffef,%r8d
 163:	89 c6                	mov    %eax,%esi
 165:	e8 00 00 00 00       	call   16a <LLRPDevice::HandleRdmCommand()+0x16a>
 16a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 16e:	48 89 c7             	mov    %rax,%rdi
 171:	e8 00 00 00 00       	call   176 <LLRPDevice::HandleRdmCommand()+0x176>
 176:	eb 01                	jmp    179 <LLRPDevice::HandleRdmCommand()+0x179>
 178:	90                   	nop
 179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 17d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 184:	00 00 
 186:	74 05                	je     18d <LLRPDevice::HandleRdmCommand()+0x18d>
 188:	e8 00 00 00 00       	call   18d <LLRPDevice::HandleRdmCommand()+0x18d>
 18d:	c9                   	leave  
 18e:	c3                   	ret    

Disassembly of section .text._ZN10LLRPDevice3RunEv:

0000000000000000 <LLRPDevice::Run()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	e8 00 00 00 00       	call   24 <LLRPDevice::Run()+0x24>
  24:	48 89 c7             	mov    %rax,%rdi
  27:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 2d <LLRPDevice::Run()+0x2d>
  2d:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
  31:	49 89 d0             	mov    %rdx,%r8
  34:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3b <LLRPDevice::Run()+0x3b>
  3b:	48 89 d1             	mov    %rdx,%rcx
  3e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 45 <LLRPDevice::Run()+0x45>
  45:	89 c6                	mov    %eax,%esi
  47:	e8 00 00 00 00       	call   4c <LLRPDevice::Run()+0x4c>
  4c:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
  50:	66 83 7d ee 41       	cmpw   $0x41,-0x12(%rbp)
  55:	0f 96 c0             	setbe  %al
  58:	0f b6 c0             	movzbl %al,%eax
  5b:	48 85 c0             	test   %rax,%rax
  5e:	75 7c                	jne    dc <LLRPDevice::Run()+0xdc>
  60:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 67 <LLRPDevice::Run()+0x67>
  67:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  6f:	8b 40 2a             	mov    0x2a(%rax),%eax
  72:	0f c8                	bswap  %eax
  74:	83 f8 03             	cmp    $0x3,%eax
  77:	74 3a                	je     b3 <LLRPDevice::Run()+0xb3>
  79:	83 f8 03             	cmp    $0x3,%eax
  7c:	77 61                	ja     df <LLRPDevice::Run()+0xdf>
  7e:	83 f8 01             	cmp    $0x1,%eax
  81:	74 07                	je     8a <LLRPDevice::Run()+0x8a>
  83:	83 f8 02             	cmp    $0x2,%eax
  86:	74 5a                	je     e2 <LLRPDevice::Run()+0xe2>
  88:	eb 55                	jmp    df <LLRPDevice::Run()+0xdf>
  8a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 91 <LLRPDevice::Run()+0x91>
  91:	48 89 c7             	mov    %rax,%rdi
  94:	e8 00 00 00 00       	call   99 <LLRPDevice::Run()+0x99>
  99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9d:	48 89 c7             	mov    %rax,%rdi
  a0:	e8 00 00 00 00       	call   a5 <LLRPDevice::Run()+0xa5>
  a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a9:	48 89 c7             	mov    %rax,%rdi
  ac:	e8 00 00 00 00       	call   b1 <LLRPDevice::Run()+0xb1>
  b1:	eb 30                	jmp    e3 <LLRPDevice::Run()+0xe3>
  b3:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # ba <LLRPDevice::Run()+0xba>
  ba:	48 89 c7             	mov    %rax,%rdi
  bd:	e8 00 00 00 00       	call   c2 <LLRPDevice::Run()+0xc2>
  c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  c6:	48 89 c7             	mov    %rax,%rdi
  c9:	e8 00 00 00 00       	call   ce <LLRPDevice::Run()+0xce>
  ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  d2:	48 89 c7             	mov    %rax,%rdi
  d5:	e8 00 00 00 00       	call   da <LLRPDevice::Run()+0xda>
  da:	eb 07                	jmp    e3 <LLRPDevice::Run()+0xe3>
  dc:	90                   	nop
  dd:	eb 04                	jmp    e3 <LLRPDevice::Run()+0xe3>
  df:	90                   	nop
  e0:	eb 01                	jmp    e3 <LLRPDevice::Run()+0xe3>
  e2:	90                   	nop
  e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  ee:	00 00 
  f0:	74 05                	je     f7 <LLRPDevice::Run()+0xf7>
  f2:	e8 00 00 00 00       	call   f7 <LLRPDevice::Run()+0xf7>
  f7:	c9                   	leave  
  f8:	c3                   	ret    

Disassembly of section .text._ZN10LLRPDevice5PrintEv:

0000000000000000 <LLRPDevice::Print()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 17 <LLRPDevice::Print()+0x17>
  17:	48 89 c7             	mov    %rax,%rdi
  1a:	e8 00 00 00 00       	call   1f <LLRPDevice::Print()+0x1f>
  1f:	be c1 15 00 00       	mov    $0x15c1,%esi
  24:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2b <LLRPDevice::Print()+0x2b>
  2b:	48 89 c7             	mov    %rax,%rdi
  2e:	b8 00 00 00 00       	mov    $0x0,%eax
  33:	e8 00 00 00 00       	call   38 <LLRPDevice::Print()+0x38>
  38:	41 b8 85 00 00 00    	mov    $0x85,%r8d
  3e:	b9 fa 00 00 00       	mov    $0xfa,%ecx
  43:	ba ff 00 00 00       	mov    $0xff,%edx
  48:	be ef 00 00 00       	mov    $0xef,%esi
  4d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 54 <LLRPDevice::Print()+0x54>
  54:	48 89 c7             	mov    %rax,%rdi
  57:	b8 00 00 00 00       	mov    $0x0,%eax
  5c:	e8 00 00 00 00       	call   61 <LLRPDevice::Print()+0x61>
  61:	41 b8 86 00 00 00    	mov    $0x86,%r8d
  67:	b9 fa 00 00 00       	mov    $0xfa,%ecx
  6c:	ba ff 00 00 00       	mov    $0xff,%edx
  71:	be ef 00 00 00       	mov    $0xef,%esi
  76:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7d <LLRPDevice::Print()+0x7d>
  7d:	48 89 c7             	mov    %rax,%rdi
  80:	b8 00 00 00 00       	mov    $0x0,%eax
  85:	e8 00 00 00 00       	call   8a <LLRPDevice::Print()+0x8a>
  8a:	90                   	nop
  8b:	c9                   	leave  
  8c:	c3                   	ret    

llrpdevicedump.o:     file format elf64-x86-64


Disassembly of section .text._ZN10LLRPDevice10DumpCommonEv:

0000000000000000 <LLRPDevice::DumpCommon()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN10LLRPDevice8DumpLLRPEv:

0000000000000000 <LLRPDevice::DumpLLRP()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 17 <LLRPDevice::DumpLLRP()+0x17>
  17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 22 <LLRPDevice::DumpLLRP()+0x22>
  22:	48 89 c7             	mov    %rax,%rdi
  25:	b8 00 00 00 00       	mov    $0x0,%eax
  2a:	e8 00 00 00 00       	call   2f <LLRPDevice::DumpLLRP()+0x2f>
  2f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  36:	eb 29                	jmp    61 <LLRPDevice::DumpLLRP()+0x61>
  38:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  3c:	8b 45 f0             	mov    -0x10(%rbp),%eax
  3f:	0f b6 44 02 17       	movzbl 0x17(%rdx,%rax,1),%eax
  44:	0f b6 c0             	movzbl %al,%eax
  47:	89 c6                	mov    %eax,%esi
  49:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 50 <LLRPDevice::DumpLLRP()+0x50>
  50:	48 89 c7             	mov    %rax,%rdi
  53:	b8 00 00 00 00       	mov    $0x0,%eax
  58:	e8 00 00 00 00       	call   5d <LLRPDevice::DumpLLRP()+0x5d>
  5d:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
  61:	83 7d f0 0f          	cmpl   $0xf,-0x10(%rbp)
  65:	76 d1                	jbe    38 <LLRPDevice::DumpLLRP()+0x38>
  67:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6e <LLRPDevice::DumpLLRP()+0x6e>
  6e:	48 89 c7             	mov    %rax,%rdi
  71:	b8 00 00 00 00       	mov    $0x0,%eax
  76:	e8 00 00 00 00       	call   7b <LLRPDevice::DumpLLRP()+0x7b>
  7b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  82:	eb 29                	jmp    ad <LLRPDevice::DumpLLRP()+0xad>
  84:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  88:	8b 45 f4             	mov    -0xc(%rbp),%eax
  8b:	0f b6 44 02 2e       	movzbl 0x2e(%rdx,%rax,1),%eax
  90:	0f b6 c0             	movzbl %al,%eax
  93:	89 c6                	mov    %eax,%esi
  95:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9c <LLRPDevice::DumpLLRP()+0x9c>
  9c:	48 89 c7             	mov    %rax,%rdi
  9f:	b8 00 00 00 00       	mov    $0x0,%eax
  a4:	e8 00 00 00 00       	call   a9 <LLRPDevice::DumpLLRP()+0xa9>
  a9:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  ad:	83 7d f4 0f          	cmpl   $0xf,-0xc(%rbp)
  b1:	76 d1                	jbe    84 <LLRPDevice::DumpLLRP()+0x84>
  b3:	bf 0a 00 00 00       	mov    $0xa,%edi
  b8:	e8 00 00 00 00       	call   bd <LLRPDevice::DumpLLRP()+0xbd>
  bd:	90                   	nop
  be:	c9                   	leave  
  bf:	c3                   	ret    

rdmnetconst.o:     file format elf64-x86-64


rdmnetdevice.o:     file format elf64-x86-64


Disassembly of section .text._ZN12RDMNetDevice5PrintEv:

0000000000000000 <RDMNetDevice::Print()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 40          	sub    $0x40,%rsp
   c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	c6 45 f4 00          	movb   $0x0,-0xc(%rbp)
  23:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  27:	48 89 c6             	mov    %rax,%rsi
  2a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 31 <RDMNetDevice::Print()+0x31>
  31:	48 89 c7             	mov    %rax,%rdi
  34:	e8 00 00 00 00       	call   39 <RDMNetDevice::Print()+0x39>
  39:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 40 <RDMNetDevice::Print()+0x40>
  40:	48 89 c7             	mov    %rax,%rdi
  43:	e8 00 00 00 00       	call   48 <RDMNetDevice::Print()+0x48>
  48:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  4c:	48 89 c6             	mov    %rax,%rsi
  4f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 56 <RDMNetDevice::Print()+0x56>
  56:	48 89 c7             	mov    %rax,%rdi
  59:	b8 00 00 00 00       	mov    $0x0,%eax
  5e:	e8 00 00 00 00       	call   63 <RDMNetDevice::Print()+0x63>
  63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  67:	48 05 f0 00 00 00    	add    $0xf0,%rax
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	call   75 <RDMNetDevice::Print()+0x75>
  75:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  79:	48 89 c7             	mov    %rax,%rdi
  7c:	e8 00 00 00 00       	call   81 <RDMNetDevice::Print()+0x81>
  81:	90                   	nop
  82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  86:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8d:	00 00 
  8f:	74 05                	je     96 <RDMNetDevice::Print()+0x96>
  91:	e8 00 00 00 00       	call   96 <RDMNetDevice::Print()+0x96>
  96:	c9                   	leave  
  97:	c3                   	ret    
