In archive lib_linux/libdebug.a:

debug_dump.o:     file format elf64-x86-64


Disassembly of section .text.debug_dump:

0000000000000000 <debug_dump>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
  16:	66 c7 45 e6 00 00    	movw   $0x0,-0x1a(%rbp)
  1c:	66 c7 45 e8 00 00    	movw   $0x0,-0x18(%rbp)
  22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  26:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  2a:	0f b7 55 d4          	movzwl -0x2c(%rbp),%edx
  2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  32:	48 89 c6             	mov    %rax,%rsi
  35:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3c <debug_dump+0x3c>
  3c:	48 89 c7             	mov    %rax,%rdi
  3f:	b8 00 00 00 00       	mov    $0x0,%eax
  44:	e8 00 00 00 00       	call   49 <debug_dump+0x49>
  49:	66 c7 45 e8 00 00    	movw   $0x0,-0x18(%rbp)
  4f:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
  53:	89 c6                	mov    %eax,%esi
  55:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5c <debug_dump+0x5c>
  5c:	48 89 c7             	mov    %rax,%rdi
  5f:	b8 00 00 00 00       	mov    $0x0,%eax
  64:	e8 00 00 00 00       	call   69 <debug_dump+0x69>
  69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  71:	eb 51                	jmp    c4 <debug_dump+0xc4>
  73:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
  77:	83 e0 07             	and    $0x7,%eax
  7a:	66 85 c0             	test   %ax,%ax
  7d:	75 0a                	jne    89 <debug_dump+0x89>
  7f:	bf 20 00 00 00       	mov    $0x20,%edi
  84:	e8 00 00 00 00       	call   89 <debug_dump+0x89>
  89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  8d:	0f b6 00             	movzbl (%rax),%eax
  90:	0f b6 c0             	movzbl %al,%eax
  93:	89 c6                	mov    %eax,%esi
  95:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9c <debug_dump+0x9c>
  9c:	48 89 c7             	mov    %rax,%rdi
  9f:	b8 00 00 00 00       	mov    $0x0,%eax
  a4:	e8 00 00 00 00       	call   a9 <debug_dump+0xa9>
  a9:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
  ad:	83 c0 01             	add    $0x1,%eax
  b0:	66 89 45 e8          	mov    %ax,-0x18(%rbp)
  b4:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
  b8:	83 c0 01             	add    $0x1,%eax
  bb:	66 89 45 e6          	mov    %ax,-0x1a(%rbp)
  bf:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  c4:	66 83 7d e8 0f       	cmpw   $0xf,-0x18(%rbp)
  c9:	77 0a                	ja     d5 <debug_dump+0xd5>
  cb:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
  cf:	66 3b 45 d4          	cmp    -0x2c(%rbp),%ax
  d3:	72 9e                	jb     73 <debug_dump+0x73>
  d5:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
  d9:	66 89 45 ea          	mov    %ax,-0x16(%rbp)
  dd:	eb 35                	jmp    114 <debug_dump+0x114>
  df:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
  e3:	83 e0 07             	and    $0x7,%eax
  e6:	66 85 c0             	test   %ax,%ax
  e9:	75 0a                	jne    f5 <debug_dump+0xf5>
  eb:	bf 20 00 00 00       	mov    $0x20,%edi
  f0:	e8 00 00 00 00       	call   f5 <debug_dump+0xf5>
  f5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # fc <debug_dump+0xfc>
  fc:	48 89 c7             	mov    %rax,%rdi
  ff:	b8 00 00 00 00       	mov    $0x0,%eax
 104:	e8 00 00 00 00       	call   109 <debug_dump+0x109>
 109:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
 10d:	83 c0 01             	add    $0x1,%eax
 110:	66 89 45 e8          	mov    %ax,-0x18(%rbp)
 114:	66 83 7d e8 0f       	cmpw   $0xf,-0x18(%rbp)
 119:	76 c4                	jbe    df <debug_dump+0xdf>
 11b:	66 c7 45 e8 00 00    	movw   $0x0,-0x18(%rbp)
 121:	eb 6b                	jmp    18e <debug_dump+0x18e>
 123:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
 127:	83 e0 07             	and    $0x7,%eax
 12a:	66 85 c0             	test   %ax,%ax
 12d:	75 0a                	jne    139 <debug_dump+0x139>
 12f:	bf 20 00 00 00       	mov    $0x20,%edi
 134:	e8 00 00 00 00       	call   139 <debug_dump+0x139>
 139:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 13d:	0f b6 00             	movzbl (%rax),%eax
 140:	0f b6 c0             	movzbl %al,%eax
 143:	89 45 ec             	mov    %eax,-0x14(%rbp)
 146:	e8 00 00 00 00       	call   14b <debug_dump+0x14b>
 14b:	48 8b 10             	mov    (%rax),%rdx
 14e:	8b 45 ec             	mov    -0x14(%rbp),%eax
 151:	48 98                	cltq   
 153:	48 01 c0             	add    %rax,%rax
 156:	48 01 d0             	add    %rdx,%rax
 159:	0f b7 00             	movzwl (%rax),%eax
 15c:	0f b7 c0             	movzwl %ax,%eax
 15f:	25 00 40 00 00       	and    $0x4000,%eax
 164:	85 c0                	test   %eax,%eax
 166:	74 0c                	je     174 <debug_dump+0x174>
 168:	8b 45 ec             	mov    -0x14(%rbp),%eax
 16b:	89 c7                	mov    %eax,%edi
 16d:	e8 00 00 00 00       	call   172 <debug_dump+0x172>
 172:	eb 0a                	jmp    17e <debug_dump+0x17e>
 174:	bf 2e 00 00 00       	mov    $0x2e,%edi
 179:	e8 00 00 00 00       	call   17e <debug_dump+0x17e>
 17e:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
 182:	83 c0 01             	add    $0x1,%eax
 185:	66 89 45 e8          	mov    %ax,-0x18(%rbp)
 189:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 18e:	0f b7 45 e8          	movzwl -0x18(%rbp),%eax
 192:	66 3b 45 ea          	cmp    -0x16(%rbp),%ax
 196:	72 8b                	jb     123 <debug_dump+0x123>
 198:	bf 0a 00 00 00       	mov    $0xa,%edi
 19d:	e8 00 00 00 00       	call   1a2 <debug_dump+0x1a2>
 1a2:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax
 1a6:	66 3b 45 d4          	cmp    -0x2c(%rbp),%ax
 1aa:	0f 82 99 fe ff ff    	jb     49 <debug_dump+0x49>
 1b0:	90                   	nop
 1b1:	90                   	nop
 1b2:	c9                   	leave  
 1b3:	c3                   	ret    

debug_exception.o:     file format elf64-x86-64


debug_print_bits.o:     file format elf64-x86-64


Disassembly of section .text.debug_print_bits:

0000000000000000 <debug_print_bits>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	c7 45 f8 00 00 00 80 	movl   $0x80000000,-0x8(%rbp)
  16:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  1d:	eb 36                	jmp    55 <debug_print_bits+0x55>
  1f:	8b 45 f8             	mov    -0x8(%rbp),%eax
  22:	23 45 ec             	and    -0x14(%rbp),%eax
  25:	39 45 f8             	cmp    %eax,-0x8(%rbp)
  28:	75 24                	jne    4e <debug_print_bits+0x4e>
  2a:	b8 1f 00 00 00       	mov    $0x1f,%eax
  2f:	2b 45 f4             	sub    -0xc(%rbp),%eax
  32:	89 45 fc             	mov    %eax,-0x4(%rbp)
  35:	8b 45 fc             	mov    -0x4(%rbp),%eax
  38:	89 c6                	mov    %eax,%esi
  3a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 41 <debug_print_bits+0x41>
  41:	48 89 c7             	mov    %rax,%rdi
  44:	b8 00 00 00 00       	mov    $0x0,%eax
  49:	e8 00 00 00 00       	call   4e <debug_print_bits+0x4e>
  4e:	d1 6d f8             	shrl   -0x8(%rbp)
  51:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  55:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
  59:	76 c4                	jbe    1f <debug_print_bits+0x1f>
  5b:	bf 0a 00 00 00       	mov    $0xa,%edi
  60:	e8 00 00 00 00       	call   65 <debug_print_bits+0x65>
  65:	90                   	nop
  66:	c9                   	leave  
  67:	c3                   	ret    
