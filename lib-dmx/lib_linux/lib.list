In archive lib_linux/libdmx.a:

dmxparamsconst.o:     file format elf64-x86-64


dmxparams.o:     file format elf64-x86-64


Disassembly of section .text._ZN9dmxparamsL15rounddown_slotsEt:

0000000000000000 <dmxparams::rounddown_slots(unsigned short)>:
   0:	66 d1 ef             	shr    %di
   3:	8d 47 ff             	lea    -0x1(%rdi),%eax
   6:	c3                   	ret    

Disassembly of section .text._ZN9dmxparamsL13roundup_slotsEh:

0000000000000000 <dmxparams::roundup_slots(unsigned char)>:
   0:	40 0f b6 c7          	movzbl %dil,%eax
   4:	8d 44 00 02          	lea    0x2(%rax,%rax,1),%eax
   8:	c3                   	ret    

Disassembly of section .text._ZNK9DmxParams9isMaskSetEj:

0000000000000000 <DmxParams::isMaskSet(unsigned int) const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	8b 47 08             	mov    0x8(%rdi),%eax
   7:	21 f0                	and    %esi,%eax
   9:	39 f0                	cmp    %esi,%eax
   b:	0f 94 c0             	sete   %al
   e:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder7GetSizeEv:

0000000000000000 <PropertiesBuilder::GetSize()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	80 7f 0c 00          	cmpb   $0x0,0xc(%rdi)
   8:	74 1b                	je     25 <PropertiesBuilder::GetSize()+0x25>
   a:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
   e:	48 8b 17             	mov    (%rdi),%rdx
  11:	c6 44 02 ff 7d       	movb   $0x7d,-0x1(%rdx,%rax,1)
  16:	0f b7 47 0a          	movzwl 0xa(%rdi),%eax
  1a:	48 8b 17             	mov    (%rdi),%rdx
  1d:	c6 04 02 7d          	movb   $0x7d,(%rdx,%rax,1)
  21:	66 ff 47 0a          	incw   0xa(%rdi)
  25:	66 8b 47 0a          	mov    0xa(%rdi),%ax
  29:	c3                   	ret    

Disassembly of section .text._ZN9DmxParamsC2EP14DmxParamsStore:

0000000000000000 <DmxParams::DmxParams(DmxParamsStore*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	b8 0b c0 00 00       	mov    $0xc00b,%eax
   9:	48 89 37             	mov    %rsi,(%rdi)
   c:	48 89 fa             	mov    %rdi,%rdx
   f:	48 c1 e0 24          	shl    $0x24,%rax
  13:	c6 47 10 28          	movb   $0x28,0x10(%rdi)
  17:	48 89 47 08          	mov    %rax,0x8(%rdi)
  1b:	bf 00 02 00 00       	mov    $0x200,%edi
  20:	e8 00 00 00 00       	call   25 <DmxParams::DmxParams(DmxParamsStore*)+0x25>
  25:	88 42 11             	mov    %al,0x11(%rdx)
  28:	c3                   	ret    

Disassembly of section .text._ZN9DmxParams4LoadEv:

0000000000000000 <DmxParams::Load()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	48 89 fa             	mov    %rdi,%rdx
   9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 10 <DmxParams::Load()+0x10>
  10:	55                   	push   %rbp
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	48 83 ec 20          	sub    $0x20,%rsp
  19:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  20:	00 00 
  22:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  27:	31 c0                	xor    %eax,%eax
  29:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  30:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  35:	48 89 ef             	mov    %rbp,%rdi
  38:	e8 00 00 00 00       	call   3d <DmxParams::Load()+0x3d>
  3d:	48 89 ef             	mov    %rbp,%rdi
  40:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 47 <DmxParams::Load()+0x47>
  47:	e8 00 00 00 00       	call   4c <DmxParams::Load()+0x4c>
  4c:	48 8b 3b             	mov    (%rbx),%rdi
  4f:	84 c0                	test   %al,%al
  51:	41 89 c4             	mov    %eax,%r12d
  54:	74 11                	je     67 <DmxParams::Load()+0x67>
  56:	48 85 ff             	test   %rdi,%rdi
  59:	74 1e                	je     79 <DmxParams::Load()+0x79>
  5b:	48 8b 07             	mov    (%rdi),%rax
  5e:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  62:	ff 50 10             	call   *0x10(%rax)
  65:	eb 12                	jmp    79 <DmxParams::Load()+0x79>
  67:	48 85 ff             	test   %rdi,%rdi
  6a:	74 0d                	je     79 <DmxParams::Load()+0x79>
  6c:	48 8b 07             	mov    (%rdi),%rax
  6f:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  73:	41 b4 01             	mov    $0x1,%r12b
  76:	ff 50 18             	call   *0x18(%rax)
  79:	48 89 ef             	mov    %rbp,%rdi
  7c:	e8 00 00 00 00       	call   81 <DmxParams::Load()+0x81>
  81:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  86:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8d:	00 00 
  8f:	74 05                	je     96 <DmxParams::Load()+0x96>
  91:	e8 00 00 00 00       	call   96 <DmxParams::Load()+0x96>
  96:	48 83 c4 20          	add    $0x20,%rsp
  9a:	44 89 e0             	mov    %r12d,%eax
  9d:	5b                   	pop    %rbx
  9e:	5d                   	pop    %rbp
  9f:	41 5c                	pop    %r12
  a1:	c3                   	ret    

Disassembly of section .text._ZN9DmxParams4LoadEPKcj:

0000000000000000 <DmxParams::Load(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 55                	push   %r13
   6:	41 54                	push   %r12
   8:	55                   	push   %rbp
   9:	53                   	push   %rbx
   a:	48 83 ec 28          	sub    $0x28,%rsp
   e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  15:	00 00 
  17:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  1c:	31 c0                	xor    %eax,%eax
  1e:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  22:	74 4a                	je     6e <DmxParams::Load(char const*, unsigned int)+0x6e>
  24:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%rdi)
  2b:	48 89 fb             	mov    %rdi,%rbx
  2e:	49 89 f4             	mov    %rsi,%r12
  31:	41 89 d5             	mov    %edx,%r13d
  34:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  39:	48 89 fa             	mov    %rdi,%rdx
  3c:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 43 <DmxParams::Load(char const*, unsigned int)+0x43>
  43:	48 89 ef             	mov    %rbp,%rdi
  46:	e8 00 00 00 00       	call   4b <DmxParams::Load(char const*, unsigned int)+0x4b>
  4b:	44 89 ea             	mov    %r13d,%edx
  4e:	4c 89 e6             	mov    %r12,%rsi
  51:	48 89 ef             	mov    %rbp,%rdi
  54:	e8 00 00 00 00       	call   59 <DmxParams::Load(char const*, unsigned int)+0x59>
  59:	48 8b 3b             	mov    (%rbx),%rdi
  5c:	48 8d 73 08          	lea    0x8(%rbx),%rsi
  60:	48 8b 07             	mov    (%rdi),%rax
  63:	ff 50 10             	call   *0x10(%rax)
  66:	48 89 ef             	mov    %rbp,%rdi
  69:	e8 00 00 00 00       	call   6e <DmxParams::Load(char const*, unsigned int)+0x6e>
  6e:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  73:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  7a:	00 00 
  7c:	74 05                	je     83 <DmxParams::Load(char const*, unsigned int)+0x83>
  7e:	e8 00 00 00 00       	call   83 <DmxParams::Load(char const*, unsigned int)+0x83>
  83:	48 83 c4 28          	add    $0x28,%rsp
  87:	5b                   	pop    %rbx
  88:	5d                   	pop    %rbp
  89:	41 5c                	pop    %r12
  8b:	41 5d                	pop    %r13
  8d:	c3                   	ret    

Disassembly of section .text._ZN9DmxParams16callbackFunctionEPKc:

0000000000000000 <DmxParams::callbackFunction(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 54                	push   %r12
   6:	55                   	push   %rbp
   7:	48 89 f5             	mov    %rsi,%rbp
   a:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 11 <DmxParams::callbackFunction(char const*)+0x11>
  11:	53                   	push   %rbx
  12:	48 89 fb             	mov    %rdi,%rbx
  15:	48 89 ef             	mov    %rbp,%rdi
  18:	48 83 ec 10          	sub    $0x10,%rsp
  1c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  23:	00 00 
  25:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  2a:	31 c0                	xor    %eax,%eax
  2c:	4c 8d 64 24 06       	lea    0x6(%rsp),%r12
  31:	4c 89 e2             	mov    %r12,%rdx
  34:	e8 00 00 00 00       	call   39 <DmxParams::callbackFunction(char const*)+0x39>
  39:	85 c0                	test   %eax,%eax
  3b:	75 29                	jne    66 <DmxParams::callbackFunction(char const*)+0x66>
  3d:	66 8b 54 24 06       	mov    0x6(%rsp),%dx
  42:	8b 43 08             	mov    0x8(%rbx),%eax
  45:	66 83 fa 5b          	cmp    $0x5b,%dx
  49:	76 10                	jbe    5b <DmxParams::callbackFunction(char const*)+0x5b>
  4b:	66 81 fa b0 00       	cmp    $0xb0,%dx
  50:	74 09                	je     5b <DmxParams::callbackFunction(char const*)+0x5b>
  52:	66 89 53 0c          	mov    %dx,0xc(%rbx)
  56:	83 c8 01             	or     $0x1,%eax
  59:	eb 76                	jmp    d1 <DmxParams::callbackFunction(char const*)+0xd1>
  5b:	66 c7 43 0c b0 00    	movw   $0xb0,0xc(%rbx)
  61:	83 e0 fe             	and    $0xfffffffe,%eax
  64:	eb 6b                	jmp    d1 <DmxParams::callbackFunction(char const*)+0xd1>
  66:	4c 89 e2             	mov    %r12,%rdx
  69:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 70 <DmxParams::callbackFunction(char const*)+0x70>
  70:	48 89 ef             	mov    %rbp,%rdi
  73:	e8 00 00 00 00       	call   78 <DmxParams::callbackFunction(char const*)+0x78>
  78:	85 c0                	test   %eax,%eax
  7a:	75 22                	jne    9e <DmxParams::callbackFunction(char const*)+0x9e>
  7c:	66 8b 54 24 06       	mov    0x6(%rsp),%dx
  81:	8b 43 08             	mov    0x8(%rbx),%eax
  84:	66 83 fa 0c          	cmp    $0xc,%dx
  88:	76 09                	jbe    93 <DmxParams::callbackFunction(char const*)+0x93>
  8a:	66 89 53 0e          	mov    %dx,0xe(%rbx)
  8e:	83 c8 02             	or     $0x2,%eax
  91:	eb 3e                	jmp    d1 <DmxParams::callbackFunction(char const*)+0xd1>
  93:	66 c7 43 0e 0c 00    	movw   $0xc,0xe(%rbx)
  99:	83 e0 fd             	and    $0xfffffffd,%eax
  9c:	eb 33                	jmp    d1 <DmxParams::callbackFunction(char const*)+0xd1>
  9e:	48 8d 54 24 05       	lea    0x5(%rsp),%rdx
  a3:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # aa <DmxParams::callbackFunction(char const*)+0xaa>
  aa:	48 89 ef             	mov    %rbp,%rdi
  ad:	e8 00 00 00 00       	call   b2 <DmxParams::callbackFunction(char const*)+0xb2>
  b2:	85 c0                	test   %eax,%eax
  b4:	75 20                	jne    d6 <DmxParams::callbackFunction(char const*)+0xd6>
  b6:	8a 54 24 05          	mov    0x5(%rsp),%dl
  ba:	8b 43 08             	mov    0x8(%rbx),%eax
  bd:	80 fa 28             	cmp    $0x28,%dl
  c0:	74 08                	je     ca <DmxParams::callbackFunction(char const*)+0xca>
  c2:	88 53 10             	mov    %dl,0x10(%rbx)
  c5:	83 c8 04             	or     $0x4,%eax
  c8:	eb 07                	jmp    d1 <DmxParams::callbackFunction(char const*)+0xd1>
  ca:	c6 43 10 28          	movb   $0x28,0x10(%rbx)
  ce:	83 e0 fb             	and    $0xfffffffb,%eax
  d1:	89 43 08             	mov    %eax,0x8(%rbx)
  d4:	eb 47                	jmp    11d <DmxParams::callbackFunction(char const*)+0x11d>
  d6:	4c 89 e2             	mov    %r12,%rdx
  d9:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # e0 <DmxParams::callbackFunction(char const*)+0xe0>
  e0:	48 89 ef             	mov    %rbp,%rdi
  e3:	e8 00 00 00 00       	call   e8 <DmxParams::callbackFunction(char const*)+0xe8>
  e8:	85 c0                	test   %eax,%eax
  ea:	75 31                	jne    11d <DmxParams::callbackFunction(char const*)+0x11d>
  ec:	0f b7 7c 24 06       	movzwl 0x6(%rsp),%edi
  f1:	8b 53 08             	mov    0x8(%rbx),%edx
  f4:	8d 47 fe             	lea    -0x2(%rdi),%eax
  f7:	66 3d fd 01          	cmp    $0x1fd,%ax
  fb:	77 0d                	ja     10a <DmxParams::callbackFunction(char const*)+0x10a>
  fd:	e8 00 00 00 00       	call   102 <DmxParams::callbackFunction(char const*)+0x102>
 102:	83 ca 08             	or     $0x8,%edx
 105:	88 43 11             	mov    %al,0x11(%rbx)
 108:	eb 10                	jmp    11a <DmxParams::callbackFunction(char const*)+0x11a>
 10a:	bf 00 02 00 00       	mov    $0x200,%edi
 10f:	83 e2 f7             	and    $0xfffffff7,%edx
 112:	e8 00 00 00 00       	call   117 <DmxParams::callbackFunction(char const*)+0x117>
 117:	88 43 11             	mov    %al,0x11(%rbx)
 11a:	89 53 08             	mov    %edx,0x8(%rbx)
 11d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
 122:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 129:	00 00 
 12b:	74 05                	je     132 <DmxParams::callbackFunction(char const*)+0x132>
 12d:	e8 00 00 00 00       	call   132 <DmxParams::callbackFunction(char const*)+0x132>
 132:	48 83 c4 10          	add    $0x10,%rsp
 136:	5b                   	pop    %rbx
 137:	5d                   	pop    %rbp
 138:	41 5c                	pop    %r12
 13a:	c3                   	ret    

Disassembly of section .text._ZN9DmxParams7BuilderEPK10TDmxParamsPcjRj:

0000000000000000 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	41 56                	push   %r14
   6:	41 89 ce             	mov    %ecx,%r14d
   9:	41 55                	push   %r13
   b:	49 89 d5             	mov    %rdx,%r13
   e:	41 54                	push   %r12
  10:	4d 89 c4             	mov    %r8,%r12
  13:	4c 8d 47 08          	lea    0x8(%rdi),%r8
  17:	55                   	push   %rbp
  18:	53                   	push   %rbx
  19:	48 89 fb             	mov    %rdi,%rbx
  1c:	48 83 ec 20          	sub    $0x20,%rsp
  20:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  27:	00 00 
  29:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  2e:	31 c0                	xor    %eax,%eax
  30:	48 85 f6             	test   %rsi,%rsi
  33:	74 12                	je     47 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x47>
  35:	48 8b 06             	mov    (%rsi),%rax
  38:	48 89 47 08          	mov    %rax,0x8(%rdi)
  3c:	66 8b 46 08          	mov    0x8(%rsi),%ax
  40:	66 41 89 40 08       	mov    %ax,0x8(%r8)
  45:	eb 0c                	jmp    53 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x53>
  47:	48 8b 3f             	mov    (%rdi),%rdi
  4a:	4c 89 c6             	mov    %r8,%rsi
  4d:	48 8b 07             	mov    (%rdi),%rax
  50:	ff 50 18             	call   *0x18(%rax)
  53:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
  58:	44 89 f1             	mov    %r14d,%ecx
  5b:	4c 89 ea             	mov    %r13,%rdx
  5e:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 65 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x65>
  65:	48 89 ef             	mov    %rbp,%rdi
  68:	e8 00 00 00 00       	call   6d <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6d>
  6d:	be 01 00 00 00       	mov    $0x1,%esi
  72:	48 89 df             	mov    %rbx,%rdi
  75:	e8 00 00 00 00       	call   7a <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
  7a:	0f b7 53 0c          	movzwl 0xc(%rbx),%edx
  7e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  84:	48 89 ef             	mov    %rbp,%rdi
  87:	0f b6 c8             	movzbl %al,%ecx
  8a:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 91 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x91>
  91:	e8 00 00 00 00       	call   96 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x96>
  96:	be 02 00 00 00       	mov    $0x2,%esi
  9b:	48 89 df             	mov    %rbx,%rdi
  9e:	e8 00 00 00 00       	call   a3 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xa3>
  a3:	0f b7 53 0e          	movzwl 0xe(%rbx),%edx
  a7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  ad:	48 89 ef             	mov    %rbp,%rdi
  b0:	0f b6 c8             	movzbl %al,%ecx
  b3:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # ba <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xba>
  ba:	e8 00 00 00 00       	call   bf <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xbf>
  bf:	be 04 00 00 00       	mov    $0x4,%esi
  c4:	48 89 df             	mov    %rbx,%rdi
  c7:	e8 00 00 00 00       	call   cc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xcc>
  cc:	0f b6 53 10          	movzbl 0x10(%rbx),%edx
  d0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  d6:	48 89 ef             	mov    %rbp,%rdi
  d9:	0f b6 c8             	movzbl %al,%ecx
  dc:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # e3 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe3>
  e3:	e8 00 00 00 00       	call   e8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>
  e8:	be 08 00 00 00       	mov    $0x8,%esi
  ed:	48 89 df             	mov    %rbx,%rdi
  f0:	e8 00 00 00 00       	call   f5 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf5>
  f5:	0f b6 7b 11          	movzbl 0x11(%rbx),%edi
  f9:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  ff:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 106 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x106>
 106:	0f b6 c8             	movzbl %al,%ecx
 109:	e8 00 00 00 00       	call   10e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x10e>
 10e:	48 89 ef             	mov    %rbp,%rdi
 111:	0f b7 d0             	movzwl %ax,%edx
 114:	e8 00 00 00 00       	call   119 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x119>
 119:	48 89 ef             	mov    %rbp,%rdi
 11c:	e8 00 00 00 00       	call   121 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x121>
 121:	0f b7 c0             	movzwl %ax,%eax
 124:	41 89 04 24          	mov    %eax,(%r12)
 128:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
 12d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 134:	00 00 
 136:	74 05                	je     13d <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x13d>
 138:	e8 00 00 00 00       	call   13d <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x13d>
 13d:	48 83 c4 20          	add    $0x20,%rsp
 141:	5b                   	pop    %rbx
 142:	5d                   	pop    %rbp
 143:	41 5c                	pop    %r12
 145:	41 5d                	pop    %r13
 147:	41 5e                	pop    %r14
 149:	c3                   	ret    

Disassembly of section .text._ZN9DmxParams4SaveEPcjRj:

0000000000000000 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   8:	49 89 c8             	mov    %rcx,%r8
   b:	75 07                	jne    14 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x14>
   d:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
  13:	c3                   	ret    
  14:	89 d1                	mov    %edx,%ecx
  16:	48 89 f2             	mov    %rsi,%rdx
  19:	31 f6                	xor    %esi,%esi
  1b:	e9 00 00 00 00       	jmp    20 <.LC2+0x10>

Disassembly of section .text._ZN9DmxParams3SetEP3Dmx:

0000000000000000 <DmxParams::Set(Dmx*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 f5             	mov    %rsi,%rbp
   8:	be 01 00 00 00       	mov    $0x1,%esi
   d:	53                   	push   %rbx
   e:	48 89 fb             	mov    %rdi,%rbx
  11:	51                   	push   %rcx
  12:	e8 00 00 00 00       	call   17 <DmxParams::Set(Dmx*)+0x17>
  17:	84 c0                	test   %al,%al
  19:	74 0c                	je     27 <DmxParams::Set(Dmx*)+0x27>
  1b:	0f b7 73 0c          	movzwl 0xc(%rbx),%esi
  1f:	48 89 ef             	mov    %rbp,%rdi
  22:	e8 00 00 00 00       	call   27 <DmxParams::Set(Dmx*)+0x27>
  27:	be 02 00 00 00       	mov    $0x2,%esi
  2c:	48 89 df             	mov    %rbx,%rdi
  2f:	e8 00 00 00 00       	call   34 <DmxParams::Set(Dmx*)+0x34>
  34:	84 c0                	test   %al,%al
  36:	74 0c                	je     44 <DmxParams::Set(Dmx*)+0x44>
  38:	0f b7 73 0e          	movzwl 0xe(%rbx),%esi
  3c:	48 89 ef             	mov    %rbp,%rdi
  3f:	e8 00 00 00 00       	call   44 <DmxParams::Set(Dmx*)+0x44>
  44:	be 04 00 00 00       	mov    $0x4,%esi
  49:	48 89 df             	mov    %rbx,%rdi
  4c:	e8 00 00 00 00       	call   51 <DmxParams::Set(Dmx*)+0x51>
  51:	84 c0                	test   %al,%al
  53:	74 1d                	je     72 <DmxParams::Set(Dmx*)+0x72>
  55:	0f b6 4b 10          	movzbl 0x10(%rbx),%ecx
  59:	31 f6                	xor    %esi,%esi
  5b:	84 c9                	test   %cl,%cl
  5d:	74 0b                	je     6a <DmxParams::Set(Dmx*)+0x6a>
  5f:	b8 40 42 0f 00       	mov    $0xf4240,%eax
  64:	31 d2                	xor    %edx,%edx
  66:	f7 f1                	div    %ecx
  68:	89 c6                	mov    %eax,%esi
  6a:	48 89 ef             	mov    %rbp,%rdi
  6d:	e8 00 00 00 00       	call   72 <DmxParams::Set(Dmx*)+0x72>
  72:	be 08 00 00 00       	mov    $0x8,%esi
  77:	48 89 df             	mov    %rbx,%rdi
  7a:	e8 00 00 00 00       	call   7f <DmxParams::Set(Dmx*)+0x7f>
  7f:	84 c0                	test   %al,%al
  81:	74 17                	je     9a <DmxParams::Set(Dmx*)+0x9a>
  83:	0f b6 7b 11          	movzbl 0x11(%rbx),%edi
  87:	e8 00 00 00 00       	call   8c <DmxParams::Set(Dmx*)+0x8c>
  8c:	5a                   	pop    %rdx
  8d:	48 89 ef             	mov    %rbp,%rdi
  90:	5b                   	pop    %rbx
  91:	0f b7 f0             	movzwl %ax,%esi
  94:	5d                   	pop    %rbp
  95:	e9 00 00 00 00       	jmp    9a <DmxParams::Set(Dmx*)+0x9a>
  9a:	58                   	pop    %rax
  9b:	5b                   	pop    %rbx
  9c:	5d                   	pop    %rbp
  9d:	c3                   	ret    

Disassembly of section .text._ZN9DmxParams4DumpEv:

0000000000000000 <DmxParams::Dump()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	c3                   	ret    

Disassembly of section .text._ZN9DmxParams22staticCallbackFunctionEPvPKc:

0000000000000000 <DmxParams::staticCallbackFunction(void*, char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	e9 00 00 00 00       	jmp    9 <.LC1>

Disassembly of section .text._ZN17PropertiesBuilder3AddItEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	41 52                	push   %r10
   8:	49 89 f2             	mov    %rsi,%r10
   b:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	66 39 ee             	cmp    %bp,%si
  16:	72 04                	jb     1c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x1c>
  18:	31 c0                	xor    %eax,%eax
  1a:	eb 33                	jmp    4f <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x4f>
  1c:	89 d0                	mov    %edx,%eax
  1e:	48 89 fb             	mov    %rdi,%rbx
  21:	0f b7 d6             	movzwl %si,%edx
  24:	48 03 37             	add    (%rdi),%rsi
  27:	57                   	push   %rdi
  28:	29 d5                	sub    %edx,%ebp
  2a:	44 0f b6 c9          	movzbl %cl,%r9d
  2e:	48 89 df             	mov    %rbx,%rdi
  31:	41 50                	push   %r8
  33:	4c 89 d1             	mov    %r10,%rcx
  36:	44 0f b7 c0          	movzwl %ax,%r8d
  3a:	89 ea                	mov    %ebp,%edx
  3c:	e8 00 00 00 00       	call   41 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x41>
  41:	41 58                	pop    %r8
  43:	41 59                	pop    %r9
  45:	39 c5                	cmp    %eax,%ebp
  47:	7c cf                	jl     18 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int)+0x18>
  49:	66 01 43 0a          	add    %ax,0xa(%rbx)
  4d:	b0 01                	mov    $0x1,%al
  4f:	5a                   	pop    %rdx
  50:	5b                   	pop    %rbx
  51:	5d                   	pop    %rbp
  52:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder3AddIhEEbPKcT_bj:

0000000000000000 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	53                   	push   %rbx
   6:	41 52                	push   %r10
   8:	49 89 f2             	mov    %rsi,%r10
   b:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   f:	0f b7 77 0a          	movzwl 0xa(%rdi),%esi
  13:	66 39 ee             	cmp    %bp,%si
  16:	72 04                	jb     1c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0x1c>
  18:	31 c0                	xor    %eax,%eax
  1a:	eb 33                	jmp    4f <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0x4f>
  1c:	89 d0                	mov    %edx,%eax
  1e:	48 89 fb             	mov    %rdi,%rbx
  21:	0f b7 d6             	movzwl %si,%edx
  24:	48 03 37             	add    (%rdi),%rsi
  27:	57                   	push   %rdi
  28:	29 d5                	sub    %edx,%ebp
  2a:	44 0f b6 c9          	movzbl %cl,%r9d
  2e:	48 89 df             	mov    %rbx,%rdi
  31:	41 50                	push   %r8
  33:	4c 89 d1             	mov    %r10,%rcx
  36:	44 0f b6 c0          	movzbl %al,%r8d
  3a:	89 ea                	mov    %ebp,%edx
  3c:	e8 00 00 00 00       	call   41 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0x41>
  41:	41 58                	pop    %r8
  43:	41 59                	pop    %r9
  45:	39 c5                	cmp    %eax,%ebp
  47:	7c cf                	jl     18 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int)+0x18>
  49:	66 01 43 0a          	add    %ax,0xa(%rbx)
  4d:	b0 01                	mov    $0x1,%al
  4f:	5a                   	pop    %rdx
  50:	5b                   	pop    %rbx
  51:	5d                   	pop    %rbp
  52:	c3                   	ret    

Disassembly of section .text._ZN17PropertiesBuilder8add_partItEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	49 89 fa             	mov    %rdi,%r10
   7:	45 0f b7 c0          	movzwl %r8w,%r8d
   b:	48 89 f7             	mov    %rsi,%rdi
   e:	89 d6                	mov    %edx,%esi
  10:	41 8a 42 0c          	mov    0xc(%r10),%al
  14:	45 84 c9             	test   %r9b,%r9b
  17:	75 06                	jne    1f <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x1f>
  19:	84 c0                	test   %al,%al
  1b:	75 0d                	jne    2a <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x2a>
  1d:	eb 14                	jmp    33 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x33>
  1f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x26>
  26:	84 c0                	test   %al,%al
  28:	74 10                	je     3a <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x3a>
  2a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 31 <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x31>
  31:	eb 07                	jmp    3a <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x3a>
  33:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3a <int PropertiesBuilder::add_part<unsigned short>(char*, unsigned int, char const*, unsigned short, bool, unsigned int)+0x3a>
  3a:	31 c0                	xor    %eax,%eax
  3c:	e9 00 00 00 00       	jmp    41 <.LC2+0x31>

Disassembly of section .text._ZN17PropertiesBuilder8add_partIhEEiPcjPKcT_bj:

0000000000000000 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	49 89 fa             	mov    %rdi,%r10
   7:	45 0f b6 c0          	movzbl %r8b,%r8d
   b:	48 89 f7             	mov    %rsi,%rdi
   e:	89 d6                	mov    %edx,%esi
  10:	41 8a 42 0c          	mov    0xc(%r10),%al
  14:	45 84 c9             	test   %r9b,%r9b
  17:	75 06                	jne    1f <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x1f>
  19:	84 c0                	test   %al,%al
  1b:	75 0d                	jne    2a <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x2a>
  1d:	eb 14                	jmp    33 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x33>
  1f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x26>
  26:	84 c0                	test   %al,%al
  28:	74 10                	je     3a <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x3a>
  2a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 31 <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x31>
  31:	eb 07                	jmp    3a <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x3a>
  33:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3a <int PropertiesBuilder::add_part<unsigned char>(char*, unsigned int, char const*, unsigned char, bool, unsigned int)+0x3a>
  3a:	31 c0                	xor    %eax,%eax
  3c:	e9 00 00 00 00       	jmp    41 <.LC2+0x31>

rdm.o:     file format elf64-x86-64


Disassembly of section .text._ZN3Dmx3GetEv:

0000000000000000 <Dmx::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Dmx::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text.udelay:

0000000000000000 <udelay>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   b:	90                   	nop
   c:	5d                   	pop    %rbp
   d:	c3                   	ret    

Disassembly of section .text._ZN3Rdm7ReceiveEj:

0000000000000000 <Rdm::Receive(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	89 7d fc             	mov    %edi,-0x4(%rbp)
   f:	e8 00 00 00 00       	call   14 <Rdm::Receive(unsigned int)+0x14>
  14:	48 89 c2             	mov    %rax,%rdx
  17:	8b 45 fc             	mov    -0x4(%rbp),%eax
  1a:	89 c6                	mov    %eax,%esi
  1c:	48 89 d7             	mov    %rdx,%rdi
  1f:	e8 00 00 00 00       	call   24 <Rdm::Receive(unsigned int)+0x24>
  24:	c9                   	leave  
  25:	c3                   	ret    

Disassembly of section .text._ZN3Rdm14ReceiveTimeOutEjt:

0000000000000000 <Rdm::ReceiveTimeOut(unsigned int, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	89 7d fc             	mov    %edi,-0x4(%rbp)
   f:	89 f0                	mov    %esi,%eax
  11:	66 89 45 f8          	mov    %ax,-0x8(%rbp)
  15:	e8 00 00 00 00       	call   1a <Rdm::ReceiveTimeOut(unsigned int, unsigned short)+0x1a>
  1a:	48 89 c1             	mov    %rax,%rcx
  1d:	0f b7 55 f8          	movzwl -0x8(%rbp),%edx
  21:	8b 45 fc             	mov    -0x4(%rbp),%eax
  24:	89 c6                	mov    %eax,%esi
  26:	48 89 cf             	mov    %rcx,%rdi
  29:	e8 00 00 00 00       	call   2e <Rdm::ReceiveTimeOut(unsigned int, unsigned short)+0x2e>
  2e:	c9                   	leave  
  2f:	c3                   	ret    

Disassembly of section .text._ZN3Rdm7SendRawEjPKhj:

0000000000000000 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	89 7d fc             	mov    %edi,-0x4(%rbp)
   f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  13:	89 55 f8             	mov    %edx,-0x8(%rbp)
  16:	e8 00 00 00 00       	call   1b <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  21:	b9 00 00 00 00       	mov    $0x0,%ecx
  26:	ba 00 00 00 00       	mov    $0x0,%edx
  2b:	89 c6                	mov    %eax,%esi
  2d:	e8 00 00 00 00       	call   32 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x32>
  32:	e8 00 00 00 00       	call   37 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x37>
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  3d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41:	8b 45 fc             	mov    -0x4(%rbp),%eax
  44:	89 c6                	mov    %eax,%esi
  46:	e8 00 00 00 00       	call   4b <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x4b>
  4b:	bf 04 00 00 00       	mov    $0x4,%edi
  50:	e8 00 00 00 00       	call   55 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x55>
  55:	e8 00 00 00 00       	call   5a <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x5a>
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  60:	b9 01 00 00 00       	mov    $0x1,%ecx
  65:	ba 01 00 00 00       	mov    $0x1,%edx
  6a:	89 c6                	mov    %eax,%esi
  6c:	e8 00 00 00 00       	call   71 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x71>
  71:	90                   	nop
  72:	c9                   	leave  
  73:	c3                   	ret    

dmx.o:     file format elf64-x86-64


Disassembly of section .text._ZNK7Network5GetIpEv:

0000000000000000 <Network::GetIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 40 10             	mov    0x10(%rax),%eax
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZNK7Network14GetBroadcastIpEv:

0000000000000000 <Network::GetBroadcastIp() const>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  10:	8b 50 10             	mov    0x10(%rax),%edx
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	8b 40 18             	mov    0x18(%rax),%eax
  1a:	f7 d0                	not    %eax
  1c:	09 d0                	or     %edx,%eax
  1e:	5d                   	pop    %rbp
  1f:	c3                   	ret    

Disassembly of section .text._ZN7Network3GetEv:

0000000000000000 <Network::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Network::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZL6microsv:

0000000000000000 <micros()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  1f:	be 00 00 00 00       	mov    $0x0,%esi
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <micros()+0x2c>
  2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  30:	69 d0 40 42 0f 00    	imul   $0xf4240,%eax,%edx
  36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3a:	01 d0                	add    %edx,%eax
  3c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  47:	00 00 
  49:	74 05                	je     50 <micros()+0x50>
  4b:	e8 00 00 00 00       	call   50 <micros()+0x50>
  50:	c9                   	leave  
  51:	c3                   	ret    

Disassembly of section .text._ZN3DmxC2Ev:

0000000000000000 <Dmx::Dmx()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	c7 00 5c 00 00 00    	movl   $0x5c,(%rax)
  1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1e:	c7 40 04 0c 00 00 00 	movl   $0xc,0x4(%rax)
  25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  29:	c7 40 08 a8 61 00 00 	movl   $0x61a8,0x8(%rax)
  30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  34:	c7 40 0c a8 61 00 00 	movl   $0x61a8,0xc(%rax)
  3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3f:	66 c7 40 10 00 02    	movw   $0x200,0x10(%rax)
  45:	be 04 00 00 00       	mov    $0x4,%esi
  4a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 51 <Dmx::Dmx()+0x51>
  51:	48 89 c7             	mov    %rax,%rdi
  54:	b8 00 00 00 00       	mov    $0x0,%eax
  59:	e8 00 00 00 00       	call   5e <Dmx::Dmx()+0x5e>
  5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  62:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 69 <Dmx::Dmx()+0x69>
  69:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  70:	eb 79                	jmp    eb <Dmx::Dmx()+0xeb>
  72:	e8 00 00 00 00       	call   77 <Dmx::Dmx()+0x77>
  77:	48 89 c2             	mov    %rax,%rdx
  7a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  7d:	66 2d b0 3c          	sub    $0x3cb0,%ax
  81:	0f b7 c0             	movzwl %ax,%eax
  84:	89 c6                	mov    %eax,%esi
  86:	48 89 d7             	mov    %rdx,%rdi
  89:	e8 00 00 00 00       	call   8e <Dmx::Dmx()+0x8e>
  8e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  91:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
  98:	00 
  99:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # a0 <Dmx::Dmx()+0xa0>
  a0:	89 04 11             	mov    %eax,(%rcx,%rdx,1)
  a3:	e8 00 00 00 00       	call   a8 <Dmx::Dmx()+0xa8>
  a8:	48 89 c2             	mov    %rax,%rdx
  ab:	8b 45 fc             	mov    -0x4(%rbp),%eax
  ae:	66 2d c8 38          	sub    $0x38c8,%ax
  b2:	0f b7 c0             	movzwl %ax,%eax
  b5:	89 c6                	mov    %eax,%esi
  b7:	48 89 d7             	mov    %rdx,%rdi
  ba:	e8 00 00 00 00       	call   bf <Dmx::Dmx()+0xbf>
  bf:	8b 55 fc             	mov    -0x4(%rbp),%edx
  c2:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
  c9:	00 
  ca:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # d1 <Dmx::Dmx()+0xd1>
  d1:	89 04 11             	mov    %eax,(%rcx,%rdx,1)
  d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d8:	8b 55 fc             	mov    -0x4(%rbp),%edx
  db:	48 83 c2 04          	add    $0x4,%rdx
  df:	c7 44 90 04 02 00 00 	movl   $0x2,0x4(%rax,%rdx,4)
  e6:	00 
  e7:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  eb:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
  ef:	76 81                	jbe    72 <Dmx::Dmx()+0x72>
  f1:	90                   	nop
  f2:	90                   	nop
  f3:	c9                   	leave  
  f4:	c3                   	ret    

Disassembly of section .text._ZN3Dmx16SetPortDirectionEjN3dmx13PortDirectionEb:

0000000000000000 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	89 c8                	mov    %ecx,%eax
  18:	88 45 ec             	mov    %al,-0x14(%rbp)
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	8b 55 f4             	mov    -0xc(%rbp),%edx
  22:	48 83 c2 04          	add    $0x4,%rdx
  26:	8b 44 90 04          	mov    0x4(%rax,%rdx,4),%eax
  2a:	39 45 f0             	cmp    %eax,-0x10(%rbp)
  2d:	74 44                	je     73 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x73>
  2f:	8b 55 f4             	mov    -0xc(%rbp),%edx
  32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  36:	be 00 00 00 00       	mov    $0x0,%esi
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	e8 00 00 00 00       	call   43 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x43>
  43:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  47:	75 15                	jne    5e <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x5e>
  49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4d:	8b 55 f4             	mov    -0xc(%rbp),%edx
  50:	48 83 c2 04          	add    $0x4,%rdx
  54:	c7 44 90 04 00 00 00 	movl   $0x0,0x4(%rax,%rdx,4)
  5b:	00 
  5c:	eb 34                	jmp    92 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x92>
  5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  62:	8b 55 f4             	mov    -0xc(%rbp),%edx
  65:	48 83 c2 04          	add    $0x4,%rdx
  69:	c7 44 90 04 01 00 00 	movl   $0x1,0x4(%rax,%rdx,4)
  70:	00 
  71:	eb 1f                	jmp    92 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x92>
  73:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  77:	83 f0 01             	xor    $0x1,%eax
  7a:	84 c0                	test   %al,%al
  7c:	74 14                	je     92 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x92>
  7e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  85:	be 00 00 00 00       	mov    $0x0,%esi
  8a:	48 89 c7             	mov    %rax,%rdi
  8d:	e8 00 00 00 00       	call   92 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x92>
  92:	80 7d ec 00          	cmpb   $0x0,-0x14(%rbp)
  96:	74 14                	je     ac <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0xac>
  98:	8b 55 f4             	mov    -0xc(%rbp),%edx
  9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  9f:	be 00 00 00 00       	mov    $0x0,%esi
  a4:	48 89 c7             	mov    %rax,%rdi
  a7:	e8 00 00 00 00       	call   ac <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0xac>
  ac:	90                   	nop
  ad:	c9                   	leave  
  ae:	c3                   	ret    

Disassembly of section .text._ZN3Dmx9ClearDataEj:

0000000000000000 <Dmx::ClearData(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	90                   	nop
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN3Dmx9StartDataEjj:

0000000000000000 <Dmx::StartData(unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	89 55 f0             	mov    %edx,-0x10(%rbp)
  12:	90                   	nop
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN3Dmx8StopDataEjj:

0000000000000000 <Dmx::StopData(unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	89 55 f0             	mov    %edx,-0x10(%rbp)
  12:	90                   	nop
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN3Dmx15SetDmxBreakTimeEj:

0000000000000000 <Dmx::SetDmxBreakTime(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	90                   	nop
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN3Dmx13SetDmxMabTimeEj:

0000000000000000 <Dmx::SetDmxMabTime(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	90                   	nop
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN3Dmx16SetDmxPeriodTimeEj:

0000000000000000 <Dmx::SetDmxPeriodTime(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	90                   	nop
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN3Dmx11SetDmxSlotsEt:

0000000000000000 <Dmx::SetDmxSlots(unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	66 89 45 f4          	mov    %ax,-0xc(%rbp)
  12:	90                   	nop
  13:	5d                   	pop    %rbp
  14:	c3                   	ret    

Disassembly of section .text._ZN3Dmx24SetPortSendDataWithoutSCEjPKhj:

0000000000000000 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 54                	push   %r12
   a:	53                   	push   %rbx
   b:	48 83 ec 20          	sub    $0x20,%rsp
   f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  13:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  16:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  1a:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  1d:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 24 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x24>
  24:	8b 55 e0             	mov    -0x20(%rbp),%edx
  27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  2b:	48 89 c6             	mov    %rax,%rsi
  2e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 35 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x35>
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x3d>
  3d:	e8 00 00 00 00       	call   42 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
  42:	48 89 c3             	mov    %rax,%rbx
  45:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  48:	66 2d b0 3c          	sub    $0x3cb0,%ax
  4c:	44 0f b7 e0          	movzwl %ax,%r12d
  50:	e8 00 00 00 00       	call   55 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x55>
  55:	48 89 c7             	mov    %rax,%rdi
  58:	e8 00 00 00 00       	call   5d <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x5d>
  5d:	89 c1                	mov    %eax,%ecx
  5f:	8b 45 e0             	mov    -0x20(%rbp),%eax
  62:	0f b7 d0             	movzwl %ax,%edx
  65:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  68:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
  6f:	00 
  70:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 77 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x77>
  77:	8b 04 06             	mov    (%rsi,%rax,1),%eax
  7a:	45 89 e1             	mov    %r12d,%r9d
  7d:	41 89 c8             	mov    %ecx,%r8d
  80:	89 d1                	mov    %edx,%ecx
  82:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 89 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x89>
  89:	89 c6                	mov    %eax,%esi
  8b:	48 89 df             	mov    %rbx,%rdi
  8e:	e8 00 00 00 00       	call   93 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x93>
  93:	90                   	nop
  94:	48 83 c4 20          	add    $0x20,%rsp
  98:	5b                   	pop    %rbx
  99:	41 5c                	pop    %r12
  9b:	5d                   	pop    %rbp
  9c:	c3                   	ret    

Disassembly of section .text._ZN3Dmx8BlackoutEv:

0000000000000000 <Dmx::Blackout()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN3Dmx6FullOnEv:

0000000000000000 <Dmx::FullOn()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text._ZN3Dmx15GetDmxAvailableEj:

0000000000000000 <Dmx::GetDmxAvailable(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  29:	e8 00 00 00 00       	call   2e <Dmx::GetDmxAvailable(unsigned int)+0x2e>
  2e:	48 89 c7             	mov    %rax,%rdi
  31:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  34:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  3b:	00 
  3c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 43 <Dmx::GetDmxAvailable(unsigned int)+0x43>
  43:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  46:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
  4a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  4e:	49 89 c9             	mov    %rcx,%r9
  51:	49 89 d0             	mov    %rdx,%r8
  54:	b9 04 00 00 00       	mov    $0x4,%ecx
  59:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 60 <Dmx::GetDmxAvailable(unsigned int)+0x60>
  60:	89 c6                	mov    %eax,%esi
  62:	e8 00 00 00 00       	call   67 <Dmx::GetDmxAvailable(unsigned int)+0x67>
  67:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
  6b:	66 83 7d ee 00       	cmpw   $0x0,-0x12(%rbp)
  70:	74 2f                	je     a1 <Dmx::GetDmxAvailable(unsigned int)+0xa1>
  72:	e8 00 00 00 00       	call   77 <Dmx::GetDmxAvailable(unsigned int)+0x77>
  77:	48 89 c7             	mov    %rax,%rdi
  7a:	e8 00 00 00 00       	call   7f <Dmx::GetDmxAvailable(unsigned int)+0x7f>
  7f:	8b 55 f0             	mov    -0x10(%rbp),%edx
  82:	39 d0                	cmp    %edx,%eax
  84:	74 1b                	je     a1 <Dmx::GetDmxAvailable(unsigned int)+0xa1>
  86:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
  8a:	0f b7 c0             	movzwl %ax,%eax
  8d:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  90:	81 c2 50 c3 00 00    	add    $0xc350,%edx
  96:	39 d0                	cmp    %edx,%eax
  98:	75 07                	jne    a1 <Dmx::GetDmxAvailable(unsigned int)+0xa1>
  9a:	b8 01 00 00 00       	mov    $0x1,%eax
  9f:	eb 05                	jmp    a6 <Dmx::GetDmxAvailable(unsigned int)+0xa6>
  a1:	b8 00 00 00 00       	mov    $0x0,%eax
  a6:	84 c0                	test   %al,%al
  a8:	74 04                	je     ae <Dmx::GetDmxAvailable(unsigned int)+0xae>
  aa:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  ae:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  b2:	75 07                	jne    bb <Dmx::GetDmxAvailable(unsigned int)+0xbb>
  b4:	b8 00 00 00 00       	mov    $0x0,%eax
  b9:	eb 11                	jmp    cc <Dmx::GetDmxAvailable(unsigned int)+0xcc>
  bb:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
  bf:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # c5 <Dmx::GetDmxAvailable(unsigned int)+0xc5>
  c5:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # cc <Dmx::GetDmxAvailable(unsigned int)+0xcc>
  cc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  d0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  d7:	00 00 
  d9:	74 05                	je     e0 <Dmx::GetDmxAvailable(unsigned int)+0xe0>
  db:	e8 00 00 00 00       	call   e0 <Dmx::GetDmxAvailable(unsigned int)+0xe0>
  e0:	c9                   	leave  
  e1:	c3                   	ret    

Disassembly of section .text._ZN3Dmx17GetDmxCurrentDataEj:

0000000000000000 <Dmx::GetDmxCurrentData(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 16 <Dmx::GetDmxCurrentData(unsigned int)+0x16>
  16:	5d                   	pop    %rbp
  17:	c3                   	ret    

Disassembly of section .text._ZN3Dmx19GetUpdatesPerSecondEj:

0000000000000000 <Dmx::GetUpdatesPerSecond(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 75 f4             	mov    %esi,-0xc(%rbp)
   f:	b8 00 00 00 00       	mov    $0x0,%eax
  14:	5d                   	pop    %rbp
  15:	c3                   	ret    

Disassembly of section .text._Z19GetDmxReceivedCountj:

0000000000000000 <GetDmxReceivedCount(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   b:	b8 00 00 00 00       	mov    $0x0,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN3Dmx10RdmSendRawEjPKhj:

0000000000000000 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	41 54                	push   %r12
   a:	53                   	push   %rbx
   b:	48 83 ec 20          	sub    $0x20,%rsp
   f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  13:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  16:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  1a:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  1d:	e8 00 00 00 00       	call   22 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x22>
  22:	48 89 c3             	mov    %rax,%rbx
  25:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  28:	66 2d c8 38          	sub    $0x38c8,%ax
  2c:	44 0f b7 e0          	movzwl %ax,%r12d
  30:	e8 00 00 00 00       	call   35 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x35>
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x3d>
  3d:	89 c6                	mov    %eax,%esi
  3f:	8b 45 e0             	mov    -0x20(%rbp),%eax
  42:	0f b7 c8             	movzwl %ax,%ecx
  45:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  48:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4f:	00 
  50:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 57 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x57>
  57:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  5a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  5e:	45 89 e1             	mov    %r12d,%r9d
  61:	41 89 f0             	mov    %esi,%r8d
  64:	89 c6                	mov    %eax,%esi
  66:	48 89 df             	mov    %rbx,%rdi
  69:	e8 00 00 00 00       	call   6e <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x6e>
  6e:	90                   	nop
  6f:	48 83 c4 20          	add    $0x20,%rsp
  73:	5b                   	pop    %rbx
  74:	41 5c                	pop    %r12
  76:	5d                   	pop    %rbp
  77:	c3                   	ret    

Disassembly of section .text._ZN3Dmx10RdmReceiveEj:

0000000000000000 <Dmx::RdmReceive(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1a:	00 00 
  1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  20:	31 c0                	xor    %eax,%eax
  22:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  29:	e8 00 00 00 00       	call   2e <Dmx::RdmReceive(unsigned int)+0x2e>
  2e:	48 89 c7             	mov    %rax,%rdi
  31:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  34:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  3b:	00 
  3c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 43 <Dmx::RdmReceive(unsigned int)+0x43>
  43:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  46:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
  4a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  4e:	49 89 c9             	mov    %rcx,%r9
  51:	49 89 d0             	mov    %rdx,%r8
  54:	b9 dc 05 00 00       	mov    $0x5dc,%ecx
  59:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 60 <Dmx::RdmReceive(unsigned int)+0x60>
  60:	89 c6                	mov    %eax,%esi
  62:	e8 00 00 00 00       	call   67 <Dmx::RdmReceive(unsigned int)+0x67>
  67:	66 89 45 ee          	mov    %ax,-0x12(%rbp)
  6b:	66 83 7d ee 00       	cmpw   $0x0,-0x12(%rbp)
  70:	74 2f                	je     a1 <Dmx::RdmReceive(unsigned int)+0xa1>
  72:	e8 00 00 00 00       	call   77 <Dmx::RdmReceive(unsigned int)+0x77>
  77:	48 89 c7             	mov    %rax,%rdi
  7a:	e8 00 00 00 00       	call   7f <Dmx::RdmReceive(unsigned int)+0x7f>
  7f:	8b 55 f0             	mov    -0x10(%rbp),%edx
  82:	39 d0                	cmp    %edx,%eax
  84:	74 1b                	je     a1 <Dmx::RdmReceive(unsigned int)+0xa1>
  86:	0f b7 45 ec          	movzwl -0x14(%rbp),%eax
  8a:	0f b7 c0             	movzwl %ax,%eax
  8d:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  90:	81 c2 38 c7 00 00    	add    $0xc738,%edx
  96:	39 d0                	cmp    %edx,%eax
  98:	75 07                	jne    a1 <Dmx::RdmReceive(unsigned int)+0xa1>
  9a:	b8 01 00 00 00       	mov    $0x1,%eax
  9f:	eb 05                	jmp    a6 <Dmx::RdmReceive(unsigned int)+0xa6>
  a1:	b8 00 00 00 00       	mov    $0x0,%eax
  a6:	84 c0                	test   %al,%al
  a8:	74 04                	je     ae <Dmx::RdmReceive(unsigned int)+0xae>
  aa:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  ae:	66 83 7d ee 00       	cmpw   $0x0,-0x12(%rbp)
  b3:	0f 85 70 ff ff ff    	jne    29 <Dmx::RdmReceive(unsigned int)+0x29>
  b9:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  bd:	75 07                	jne    c6 <Dmx::RdmReceive(unsigned int)+0xc6>
  bf:	b8 00 00 00 00       	mov    $0x0,%eax
  c4:	eb 07                	jmp    cd <Dmx::RdmReceive(unsigned int)+0xcd>
  c6:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # cd <Dmx::RdmReceive(unsigned int)+0xcd>
  cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  d1:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  d8:	00 00 
  da:	74 05                	je     e1 <Dmx::RdmReceive(unsigned int)+0xe1>
  dc:	e8 00 00 00 00       	call   e1 <Dmx::RdmReceive(unsigned int)+0xe1>
  e1:	c9                   	leave  
  e2:	c3                   	ret    

Disassembly of section .text._ZN3Dmx17RdmReceiveTimeOutEjt:

0000000000000000 <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 d0                	mov    %edx,%eax
  15:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  19:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  20:	00 
  21:	e8 00 00 00 00       	call   26 <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)+0x26>
  26:	89 45 f4             	mov    %eax,-0xc(%rbp)
  29:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  30:	89 d6                	mov    %edx,%esi
  32:	48 89 c7             	mov    %rax,%rdi
  35:	e8 00 00 00 00       	call   3a <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)+0x3a>
  3a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  3e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  43:	0f 95 c0             	setne  %al
  46:	84 c0                	test   %al,%al
  48:	74 06                	je     50 <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)+0x50>
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	eb 1f                	jmp    6f <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)+0x6f>
  50:	e8 00 00 00 00       	call   55 <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)+0x55>
  55:	2b 45 f4             	sub    -0xc(%rbp),%eax
  58:	0f b7 55 e0          	movzwl -0x20(%rbp),%edx
  5c:	81 c2 50 c3 00 00    	add    $0xc350,%edx
  62:	39 d0                	cmp    %edx,%eax
  64:	0f 92 c0             	setb   %al
  67:	84 c0                	test   %al,%al
  69:	75 be                	jne    29 <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)+0x29>
  6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6f:	c9                   	leave  
  70:	c3                   	ret    

rdm.o:     file format elf64-x86-64


Disassembly of section .text._ZN3Dmx3GetEv:

0000000000000000 <Dmx::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Dmx::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN3Rdm4SendEjP11TRdmMessagej:

0000000000000000 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 7d ec             	mov    %edi,-0x14(%rbp)
   f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  13:	89 55 e8             	mov    %edx,-0x18(%rbp)
  16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  1a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1e:	66 c7 45 f2 00 00    	movw   $0x0,-0xe(%rbp)
  24:	8b 45 ec             	mov    -0x14(%rbp),%eax
  27:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2e <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0x2e>
  2e:	0f b6 14 10          	movzbl (%rax,%rdx,1),%edx
  32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  36:	88 50 0f             	mov    %dl,0xf(%rax)
  39:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40:	eb 18                	jmp    5a <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0x5a>
  42:	8b 55 f4             	mov    -0xc(%rbp),%edx
  45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  49:	48 01 d0             	add    %rdx,%rax
  4c:	0f b6 00             	movzbl (%rax),%eax
  4f:	0f b6 c0             	movzbl %al,%eax
  52:	66 01 45 f2          	add    %ax,-0xe(%rbp)
  56:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  5e:	0f b6 40 02          	movzbl 0x2(%rax),%eax
  62:	0f b6 c0             	movzbl %al,%eax
  65:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  68:	72 d8                	jb     42 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0x42>
  6a:	0f b7 45 f2          	movzwl -0xe(%rbp),%eax
  6e:	66 c1 e8 08          	shr    $0x8,%ax
  72:	89 c1                	mov    %eax,%ecx
  74:	8b 45 f4             	mov    -0xc(%rbp),%eax
  77:	8d 50 01             	lea    0x1(%rax),%edx
  7a:	89 55 f4             	mov    %edx,-0xc(%rbp)
  7d:	89 c2                	mov    %eax,%edx
  7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  83:	48 01 d0             	add    %rdx,%rax
  86:	89 ca                	mov    %ecx,%edx
  88:	88 10                	mov    %dl,(%rax)
  8a:	8b 55 f4             	mov    -0xc(%rbp),%edx
  8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  91:	48 01 d0             	add    %rdx,%rax
  94:	0f b7 55 f2          	movzwl -0xe(%rbp),%edx
  98:	88 10                	mov    %dl,(%rax)
  9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  9e:	0f b6 40 02          	movzbl 0x2(%rax),%eax
  a2:	0f b6 c0             	movzbl %al,%eax
  a5:	8d 50 02             	lea    0x2(%rax),%edx
  a8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  ac:	8b 45 ec             	mov    -0x14(%rbp),%eax
  af:	48 89 ce             	mov    %rcx,%rsi
  b2:	89 c7                	mov    %eax,%edi
  b4:	e8 00 00 00 00       	call   b9 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0xb9>
  b9:	8b 45 ec             	mov    -0x14(%rbp),%eax
  bc:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # c3 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0xc3>
  c3:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
  c7:	8d 48 01             	lea    0x1(%rax),%ecx
  ca:	8b 45 ec             	mov    -0x14(%rbp),%eax
  cd:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # d4 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0xd4>
  d4:	88 0c 10             	mov    %cl,(%rax,%rdx,1)
  d7:	90                   	nop
  d8:	c9                   	leave  
  d9:	c3                   	ret    

Disassembly of section .text._ZN3Rdm21SendRawRespondMessageEjPKhj:

0000000000000000 <Rdm::SendRawRespondMessage(unsigned int, unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	89 7d fc             	mov    %edi,-0x4(%rbp)
   f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  13:	89 55 f8             	mov    %edx,-0x8(%rbp)
  16:	8b 55 f8             	mov    -0x8(%rbp),%edx
  19:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  1d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  20:	48 89 ce             	mov    %rcx,%rsi
  23:	89 c7                	mov    %eax,%edi
  25:	e8 00 00 00 00       	call   2a <Rdm::SendRawRespondMessage(unsigned int, unsigned char const*, unsigned int)+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN3Rdm27SendDiscoveryRespondMessageEjPKhj:

0000000000000000 <Rdm::SendDiscoveryRespondMessage(unsigned int, unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	89 7d fc             	mov    %edi,-0x4(%rbp)
   f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  13:	89 55 f8             	mov    %edx,-0x8(%rbp)
  16:	e8 00 00 00 00       	call   1b <Rdm::SendDiscoveryRespondMessage(unsigned int, unsigned char const*, unsigned int)+0x1b>
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  21:	b9 00 00 00 00       	mov    $0x0,%ecx
  26:	ba 00 00 00 00       	mov    $0x0,%edx
  2b:	89 c6                	mov    %eax,%esi
  2d:	e8 00 00 00 00       	call   32 <Rdm::SendDiscoveryRespondMessage(unsigned int, unsigned char const*, unsigned int)+0x32>
  32:	8b 55 f8             	mov    -0x8(%rbp),%edx
  35:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  39:	8b 45 fc             	mov    -0x4(%rbp),%eax
  3c:	48 89 ce             	mov    %rcx,%rsi
  3f:	89 c7                	mov    %eax,%edi
  41:	e8 00 00 00 00       	call   46 <Rdm::SendDiscoveryRespondMessage(unsigned int, unsigned char const*, unsigned int)+0x46>
  46:	bf 04 00 00 00       	mov    $0x4,%edi
  4b:	e8 00 00 00 00       	call   50 <Rdm::SendDiscoveryRespondMessage(unsigned int, unsigned char const*, unsigned int)+0x50>
  50:	e8 00 00 00 00       	call   55 <Rdm::SendDiscoveryRespondMessage(unsigned int, unsigned char const*, unsigned int)+0x55>
  55:	48 89 c7             	mov    %rax,%rdi
  58:	8b 45 fc             	mov    -0x4(%rbp),%eax
  5b:	b9 01 00 00 00       	mov    $0x1,%ecx
  60:	ba 01 00 00 00       	mov    $0x1,%edx
  65:	89 c6                	mov    %eax,%esi
  67:	e8 00 00 00 00       	call   6c <Rdm::SendDiscoveryRespondMessage(unsigned int, unsigned char const*, unsigned int)+0x6c>
  6c:	90                   	nop
  6d:	c9                   	leave  
  6e:	c3                   	ret    

dmxconfigudp.o:     file format elf64-x86-64


Disassembly of section .text._ZN12dmxconfigudpL4atoiEPKcj:

0000000000000000 <dmxconfigudp::atoi(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   c:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  17:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  1e:	eb 29                	jmp    49 <dmxconfigudp::atoi(char const*, unsigned int)+0x49>
  20:	8b 55 f4             	mov    -0xc(%rbp),%edx
  23:	89 d0                	mov    %edx,%eax
  25:	c1 e0 02             	shl    $0x2,%eax
  28:	01 d0                	add    %edx,%eax
  2a:	01 c0                	add    %eax,%eax
  2c:	89 c2                	mov    %eax,%edx
  2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  32:	0f b6 00             	movzbl (%rax),%eax
  35:	0f be c0             	movsbl %al,%eax
  38:	01 d0                	add    %edx,%eax
  3a:	83 e8 30             	sub    $0x30,%eax
  3d:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  45:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  49:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4d:	74 16                	je     65 <dmxconfigudp::atoi(char const*, unsigned int)+0x65>
  4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  53:	0f b6 00             	movzbl (%rax),%eax
  56:	3c 2f                	cmp    $0x2f,%al
  58:	7e 0b                	jle    65 <dmxconfigudp::atoi(char const*, unsigned int)+0x65>
  5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5e:	0f b6 00             	movzbl (%rax),%eax
  61:	3c 39                	cmp    $0x39,%al
  63:	7e bb                	jle    20 <dmxconfigudp::atoi(char const*, unsigned int)+0x20>
  65:	8b 45 f4             	mov    -0xc(%rbp),%eax
  68:	5d                   	pop    %rbp
  69:	c3                   	ret    
