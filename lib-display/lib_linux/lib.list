In archive lib_linux/libdisplay.a:

display_timeout.o:     file format elf64-x86-64


Disassembly of section .text._ZN7display7timeout9gpio_initEv:

0000000000000000 <display::timeout::gpio_init()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	90                   	nop
   9:	5d                   	pop    %rbp
   a:	c3                   	ret    

Disassembly of section .text._ZN7display7timeout10gpio_renewEv:

0000000000000000 <display::timeout::gpio_renew()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	b8 00 00 00 00       	mov    $0x0,%eax
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

display.o:     file format elf64-x86-64


Disassembly of section .text.i2c_set_baudrate:

0000000000000000 <i2c_set_baudrate>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	90                   	nop
   8:	5d                   	pop    %rbp
   9:	c3                   	ret    

Disassembly of section .text.i2c_set_address:

0000000000000000 <i2c_set_address>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 f8                	mov    %edi,%eax
   6:	88 45 fc             	mov    %al,-0x4(%rbp)
   9:	90                   	nop
   a:	5d                   	pop    %rbp
   b:	c3                   	ret    

Disassembly of section .text.i2c_write:

0000000000000000 <i2c_write>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text.i2c_read:

0000000000000000 <i2c_read>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2CC2Ehj:

0000000000000000 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	89 55 f0             	mov    %edx,-0x10(%rbp)
  11:	88 45 f4             	mov    %al,-0xc(%rbp)
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  1c:	88 10                	mov    %dl,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	8b 55 f0             	mov    -0x10(%rbp),%edx
  25:	89 50 04             	mov    %edx,0x4(%rax)
  28:	90                   	nop
  29:	5d                   	pop    %rbp
  2a:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C11IsConnectedEv:

0000000000000000 <HAL_I2C::IsConnected()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 50 04             	mov    0x4(%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	0f b6 00             	movzbl (%rax),%eax
  1e:	0f b6 c0             	movzbl %al,%eax
  21:	89 d6                	mov    %edx,%esi
  23:	89 c7                	mov    %eax,%edi
  25:	e8 00 00 00 00       	call   2a <HAL_I2C::IsConnected()+0x2a>
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C11IsConnectedEhj:

0000000000000000 <HAL_I2C::IsConnected(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	89 f8                	mov    %edi,%eax
   e:	89 75 f8             	mov    %esi,-0x8(%rbp)
  11:	88 45 fc             	mov    %al,-0x4(%rbp)
  14:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
  18:	8b 55 f8             	mov    -0x8(%rbp),%edx
  1b:	89 d6                	mov    %edx,%esi
  1d:	89 c7                	mov    %eax,%edi
  1f:	e8 00 00 00 00       	call   24 <HAL_I2C::IsConnected(unsigned char, unsigned int)+0x24>
  24:	c9                   	leave  
  25:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C13WriteRegisterEht:

0000000000000000 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
  1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  24:	00 00 
  26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2a:	31 c0                	xor    %eax,%eax
  2c:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  30:	88 45 f5             	mov    %al,-0xb(%rbp)
  33:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  37:	66 c1 e8 08          	shr    $0x8,%ax
  3b:	88 45 f6             	mov    %al,-0xa(%rbp)
  3e:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
  42:	88 45 f7             	mov    %al,-0x9(%rbp)
  45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  49:	48 89 c7             	mov    %rax,%rdi
  4c:	e8 00 00 00 00       	call   51 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x51>
  51:	48 8d 45 f5          	lea    -0xb(%rbp),%rax
  55:	be 03 00 00 00       	mov    $0x3,%esi
  5a:	48 89 c7             	mov    %rax,%rdi
  5d:	e8 00 00 00 00       	call   62 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x62>
  62:	90                   	nop
  63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  67:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  6e:	00 00 
  70:	74 05                	je     77 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x77>
  72:	e8 00 00 00 00       	call   77 <HAL_I2C::WriteRegister(unsigned char, unsigned short)+0x77>
  77:	c9                   	leave  
  78:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5SetupEv:

0000000000000000 <HAL_I2C::Setup()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 08          	sub    $0x8,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	0f b6 00             	movzbl (%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	89 c7                	mov    %eax,%edi
  1c:	e8 00 00 00 00       	call   21 <HAL_I2C::Setup()+0x21>
  21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  25:	8b 40 04             	mov    0x4(%rax),%eax
  28:	89 c7                	mov    %eax,%edi
  2a:	e8 00 00 00 00       	call   2f <HAL_I2C::Setup()+0x2f>
  2f:	90                   	nop
  30:	c9                   	leave  
  31:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C12IsConnected_Ehj:

0000000000000000 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 f8                	mov    %edi,%eax
   e:	89 75 e8             	mov    %esi,-0x18(%rbp)
  11:	88 45 ec             	mov    %al,-0x14(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  27:	89 c7                	mov    %eax,%edi
  29:	e8 00 00 00 00       	call   2e <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x2e>
  2e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  31:	89 c7                	mov    %eax,%edi
  33:	e8 00 00 00 00       	call   38 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x38>
  38:	80 7d ec 2f          	cmpb   $0x2f,-0x14(%rbp)
  3c:	76 06                	jbe    44 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x44>
  3e:	80 7d ec 37          	cmpb   $0x37,-0x14(%rbp)
  42:	76 0c                	jbe    50 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x50>
  44:	80 7d ec 4f          	cmpb   $0x4f,-0x14(%rbp)
  48:	76 1e                	jbe    68 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x68>
  4a:	80 7d ec 5f          	cmpb   $0x5f,-0x14(%rbp)
  4e:	77 18                	ja     68 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x68>
  50:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
  54:	be 01 00 00 00       	mov    $0x1,%esi
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x61>
  61:	84 c0                	test   %al,%al
  63:	0f 94 c0             	sete   %al
  66:	eb 14                	jmp    7c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x7c>
  68:	be 00 00 00 00       	mov    $0x0,%esi
  6d:	bf 00 00 00 00       	mov    $0x0,%edi
  72:	e8 00 00 00 00       	call   77 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
  77:	84 c0                	test   %al,%al
  79:	0f 94 c0             	sete   %al
  7c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  80:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  87:	00 00 
  89:	74 05                	je     90 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
  8b:	e8 00 00 00 00       	call   90 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
  90:	c9                   	leave  
  91:	c3                   	ret    

Disassembly of section .text._ZN8Hardware3GetEv:

0000000000000000 <Hardware::Get()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # f <Hardware::Get()+0xf>
   f:	5d                   	pop    %rbp
  10:	c3                   	ret    

Disassembly of section .text._ZN7Display9PrintInfoEv:

0000000000000000 <Display::PrintInfo()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 8b 40 18          	mov    0x18(%rax),%rax
  18:	48 85 c0             	test   %rax,%rax
  1b:	75 11                	jne    2e <Display::PrintInfo()+0x2e>
  1d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 24 <Display::PrintInfo()+0x24>
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <Display::PrintInfo()+0x2c>
  2c:	eb 1f                	jmp    4d <Display::PrintInfo()+0x4d>
  2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  32:	48 8b 40 18          	mov    0x18(%rax),%rax
  36:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  3a:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  3e:	48 8b 12             	mov    (%rdx),%rdx
  41:	48 83 c2 68          	add    $0x68,%rdx
  45:	48 8b 12             	mov    (%rdx),%rdx
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	ff d2                	call   *%rdx
  4d:	c9                   	leave  
  4e:	c3                   	ret    

Disassembly of section .text._ZN7Display6PrintfEjPKcz:

0000000000000000 <Display::Printf(unsigned int, char const*, ...)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
   f:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  16:	89 b5 f4 fe ff ff    	mov    %esi,-0x10c(%rbp)
  1c:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
  23:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  2a:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  31:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  38:	84 c0                	test   %al,%al
  3a:	74 20                	je     5c <Display::Printf(unsigned int, char const*, ...)+0x5c>
  3c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  40:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  44:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  48:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  4c:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  50:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  54:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  58:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  5c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  63:	00 00 
  65:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  6c:	31 c0                	xor    %eax,%eax
  6e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  75:	48 8b 40 18          	mov    0x18(%rax),%rax
  79:	48 85 c0             	test   %rax,%rax
  7c:	75 0a                	jne    88 <Display::Printf(unsigned int, char const*, ...)+0x88>
  7e:	b8 00 00 00 00       	mov    $0x0,%eax
  83:	e9 94 00 00 00       	jmp    11c <Display::Printf(unsigned int, char const*, ...)+0x11c>
  88:	c7 85 08 ff ff ff 18 	movl   $0x18,-0xf8(%rbp)
  8f:	00 00 00 
  92:	c7 85 0c ff ff ff 30 	movl   $0x30,-0xf4(%rbp)
  99:	00 00 00 
  9c:	48 8d 45 10          	lea    0x10(%rbp),%rax
  a0:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  a7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  ae:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  b5:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
  bc:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
  c3:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  ca:	be 20 00 00 00       	mov    $0x20,%esi
  cf:	48 89 c7             	mov    %rax,%rdi
  d2:	e8 00 00 00 00       	call   d7 <Display::Printf(unsigned int, char const*, ...)+0xd7>
  d7:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
  dd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
  e4:	48 8b 40 18          	mov    0x18(%rax),%rax
  e8:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
  ef:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  f3:	48 8b 12             	mov    (%rdx),%rdx
  f6:	48 83 c2 38          	add    $0x38,%rdx
  fa:	4c 8b 02             	mov    (%rdx),%r8
  fd:	8b 8d 04 ff ff ff    	mov    -0xfc(%rbp),%ecx
 103:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
 10a:	8b b5 f4 fe ff ff    	mov    -0x10c(%rbp),%esi
 110:	48 89 c7             	mov    %rax,%rdi
 113:	41 ff d0             	call   *%r8
 116:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
 11c:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
 123:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
 12a:	00 00 
 12c:	74 05                	je     133 <Display::Printf(unsigned int, char const*, ...)+0x133>
 12e:	e8 00 00 00 00       	call   133 <Display::Printf(unsigned int, char const*, ...)+0x133>
 133:	c9                   	leave  
 134:	c3                   	ret    

Disassembly of section .text._ZN7Display6StatusE22Display7SegmentMessage:

0000000000000000 <Display::Status(Display7SegmentMessage)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  1b:	84 c0                	test   %al,%al
  1d:	74 1f                	je     3e <Display::Status(Display7SegmentMessage)+0x3e>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	48 8d 48 08          	lea    0x8(%rax),%rcx
  27:	8b 45 f4             	mov    -0xc(%rbp),%eax
  2a:	f7 d0                	not    %eax
  2c:	0f b7 c0             	movzwl %ax,%eax
  2f:	89 c2                	mov    %eax,%edx
  31:	be 12 00 00 00       	mov    $0x12,%esi
  36:	48 89 cf             	mov    %rcx,%rdi
  39:	e8 00 00 00 00       	call   3e <Display::Status(Display7SegmentMessage)+0x3e>
  3e:	90                   	nop
  3f:	c9                   	leave  
  40:	c3                   	ret    

Disassembly of section .text._ZN7Display14Detect7SegmentEv:

0000000000000000 <Display::Detect7Segment()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 83 c0 08          	add    $0x8,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <Display::Detect7Segment()+0x20>
  20:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  24:	88 42 11             	mov    %al,0x11(%rdx)
  27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2b:	0f b6 40 11          	movzbl 0x11(%rax),%eax
  2f:	84 c0                	test   %al,%al
  31:	74 2b                	je     5e <Display::Detect7Segment()+0x5e>
  33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  37:	48 83 c0 08          	add    $0x8,%rax
  3b:	ba 00 00 00 00       	mov    $0x0,%edx
  40:	be 00 00 00 00       	mov    $0x0,%esi
  45:	48 89 c7             	mov    %rax,%rdi
  48:	e8 00 00 00 00       	call   4d <Display::Detect7Segment()+0x4d>
  4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  51:	be 00 3f 00 00       	mov    $0x3f00,%esi
  56:	48 89 c7             	mov    %rax,%rdi
  59:	e8 00 00 00 00       	call   5e <Display::Detect7Segment()+0x5e>
  5e:	90                   	nop
  5f:	c9                   	leave  
  60:	c3                   	ret    

Disassembly of section .text._ZN7DisplayC2Ev:

0000000000000000 <Display::Display()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	c7 00 04 00 00 00    	movl   $0x4,(%rax)
  1a:	e8 00 00 00 00       	call   1f <Display::Display()+0x1f>
  1f:	48 89 c7             	mov    %rax,%rdi
  22:	e8 00 00 00 00       	call   27 <Display::Display()+0x27>
  27:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2b:	89 42 04             	mov    %eax,0x4(%rdx)
  2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  32:	48 83 c0 08          	add    $0x8,%rax
  36:	ba 80 1a 06 00       	mov    $0x61a80,%edx
  3b:	be 21 00 00 00       	mov    $0x21,%esi
  40:	48 89 c7             	mov    %rax,%rdi
  43:	e8 00 00 00 00       	call   48 <Display::Display()+0x48>
  48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4c:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  54:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5c:	c7 40 14 e0 93 04 00 	movl   $0x493e0,0x14(%rax)
  63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  67:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  6e:	00 
  6f:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 76 <Display::Display()+0x76>
  76:	48 85 c0             	test   %rax,%rax
  79:	74 28                	je     a3 <Display::Display()+0xa3>
  7b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 82 <Display::Display()+0x82>
  82:	48 89 c1             	mov    %rax,%rcx
  85:	ba 31 00 00 00       	mov    $0x31,%edx
  8a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 91 <Display::Display()+0x91>
  91:	48 89 c6             	mov    %rax,%rsi
  94:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9b <Display::Display()+0x9b>
  9b:	48 89 c7             	mov    %rax,%rdi
  9e:	e8 00 00 00 00       	call   a3 <Display::Display()+0xa3>
  a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a7:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # ae <Display::Display()+0xae>
  ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b2:	be 03 00 00 00       	mov    $0x3,%esi
  b7:	48 89 c7             	mov    %rax,%rdi
  ba:	e8 00 00 00 00       	call   bf <Display::Display()+0xbf>
  bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c3:	48 8b 40 18          	mov    0x18(%rax),%rax
  c7:	48 85 c0             	test   %rax,%rax
  ca:	75 11                	jne    dd <Display::Display()+0xdd>
  cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d0:	be 02 00 00 00       	mov    $0x2,%esi
  d5:	48 89 c7             	mov    %rax,%rdi
  d8:	e8 00 00 00 00       	call   dd <Display::Display()+0xdd>
  dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e1:	48 89 c7             	mov    %rax,%rdi
  e4:	e8 00 00 00 00       	call   e9 <Display::Display()+0xe9>
  e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ed:	48 8b 40 18          	mov    0x18(%rax),%rax
  f1:	48 85 c0             	test   %rax,%rax
  f4:	74 05                	je     fb <Display::Display()+0xfb>
  f6:	e8 00 00 00 00       	call   fb <Display::Display()+0xfb>
  fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ff:	48 89 c7             	mov    %rax,%rdi
 102:	e8 00 00 00 00       	call   107 <Display::Display()+0x107>
 107:	90                   	nop
 108:	c9                   	leave  
 109:	c3                   	ret    

Disassembly of section .text._ZN7DisplayC2Ej:

0000000000000000 <Display::Display(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	c7 00 04 00 00 00    	movl   $0x4,(%rax)
  1d:	e8 00 00 00 00       	call   22 <Display::Display(unsigned int)+0x22>
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <Display::Display(unsigned int)+0x2a>
  2a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2e:	89 42 04             	mov    %eax,0x4(%rdx)
  31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  35:	48 83 c0 08          	add    $0x8,%rax
  39:	ba 80 1a 06 00       	mov    $0x61a80,%edx
  3e:	be 21 00 00 00       	mov    $0x21,%esi
  43:	48 89 c7             	mov    %rax,%rdi
  46:	e8 00 00 00 00       	call   4b <Display::Display(unsigned int)+0x4b>
  4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4f:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  57:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5f:	c7 40 14 e0 93 04 00 	movl   $0x493e0,0x14(%rax)
  66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6a:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  71:	00 
  72:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 79 <Display::Display(unsigned int)+0x79>
  79:	48 85 c0             	test   %rax,%rax
  7c:	74 28                	je     a6 <Display::Display(unsigned int)+0xa6>
  7e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 85 <Display::Display(unsigned int)+0x85>
  85:	48 89 c1             	mov    %rax,%rcx
  88:	ba 46 00 00 00       	mov    $0x46,%edx
  8d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 94 <Display::Display(unsigned int)+0x94>
  94:	48 89 c6             	mov    %rax,%rsi
  97:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9e <Display::Display(unsigned int)+0x9e>
  9e:	48 89 c7             	mov    %rax,%rdi
  a1:	e8 00 00 00 00       	call   a6 <Display::Display(unsigned int)+0xa6>
  a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  aa:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # b1 <Display::Display(unsigned int)+0xb1>
  b1:	8b 55 f4             	mov    -0xc(%rbp),%edx
  b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b8:	89 d6                	mov    %edx,%esi
  ba:	48 89 c7             	mov    %rax,%rdi
  bd:	e8 00 00 00 00       	call   c2 <Display::Display(unsigned int)+0xc2>
  c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c6:	48 89 c7             	mov    %rax,%rdi
  c9:	e8 00 00 00 00       	call   ce <Display::Display(unsigned int)+0xce>
  ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d2:	48 8b 40 18          	mov    0x18(%rax),%rax
  d6:	48 85 c0             	test   %rax,%rax
  d9:	74 05                	je     e0 <Display::Display(unsigned int)+0xe0>
  db:	e8 00 00 00 00       	call   e0 <Display::Display(unsigned int)+0xe0>
  e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e4:	48 89 c7             	mov    %rax,%rdi
  e7:	e8 00 00 00 00       	call   ec <Display::Display(unsigned int)+0xec>
  ec:	90                   	nop
  ed:	c9                   	leave  
  ee:	c3                   	ret    

Disassembly of section .text._ZN7DisplayC2EN7display4TypeE:

0000000000000000 <Display::Display(display::Type)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	8b 55 f4             	mov    -0xc(%rbp),%edx
  1a:	89 10                	mov    %edx,(%rax)
  1c:	e8 00 00 00 00       	call   21 <Display::Display(display::Type)+0x21>
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <Display::Display(display::Type)+0x29>
  29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  2d:	89 42 04             	mov    %eax,0x4(%rdx)
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	48 83 c0 08          	add    $0x8,%rax
  38:	ba 80 1a 06 00       	mov    $0x61a80,%edx
  3d:	be 21 00 00 00       	mov    $0x21,%esi
  42:	48 89 c7             	mov    %rax,%rdi
  45:	e8 00 00 00 00       	call   4a <Display::Display(display::Type)+0x4a>
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	c6 40 10 00          	movb   $0x0,0x10(%rax)
  52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  56:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5e:	c7 40 14 e0 93 04 00 	movl   $0x493e0,0x14(%rax)
  65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  69:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  70:	00 
  71:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 78 <Display::Display(display::Type)+0x78>
  78:	48 85 c0             	test   %rax,%rax
  7b:	74 28                	je     a5 <Display::Display(display::Type)+0xa5>
  7d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 84 <Display::Display(display::Type)+0x84>
  84:	48 89 c1             	mov    %rax,%rcx
  87:	ba 55 00 00 00       	mov    $0x55,%edx
  8c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 93 <Display::Display(display::Type)+0x93>
  93:	48 89 c6             	mov    %rax,%rsi
  96:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9d <Display::Display(display::Type)+0x9d>
  9d:	48 89 c7             	mov    %rax,%rdi
  a0:	e8 00 00 00 00       	call   a5 <Display::Display(display::Type)+0xa5>
  a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a9:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # b0 <Display::Display(display::Type)+0xb0>
  b0:	8b 55 f4             	mov    -0xc(%rbp),%edx
  b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b7:	89 d6                	mov    %edx,%esi
  b9:	48 89 c7             	mov    %rax,%rdi
  bc:	e8 00 00 00 00       	call   c1 <Display::Display(display::Type)+0xc1>
  c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c5:	48 89 c7             	mov    %rax,%rdi
  c8:	e8 00 00 00 00       	call   cd <Display::Display(display::Type)+0xcd>
  cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d1:	48 8b 40 18          	mov    0x18(%rax),%rax
  d5:	48 85 c0             	test   %rax,%rax
  d8:	74 05                	je     df <Display::Display(display::Type)+0xdf>
  da:	e8 00 00 00 00       	call   df <Display::Display(display::Type)+0xdf>
  df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e3:	48 89 c7             	mov    %rax,%rdi
  e6:	e8 00 00 00 00       	call   eb <Display::Display(display::Type)+0xeb>
  eb:	90                   	nop
  ec:	c9                   	leave  
  ed:	c3                   	ret    

Disassembly of section .text._ZN7Display6DetectEN7display4TypeE:

0000000000000000 <Display::Detect(display::Type)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  14:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
  18:	0f 87 9b 01 00 00    	ja     1b9 <Display::Detect(display::Type)+0x1b9>
  1e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  21:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  28:	00 
  29:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30 <Display::Detect(display::Type)+0x30>
  30:	8b 04 02             	mov    (%rdx,%rax,1),%eax
  33:	48 98                	cltq   
  35:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 3c <Display::Detect(display::Type)+0x3c>
  3c:	48 01 d0             	add    %rdx,%rax
  3f:	3e ff e0             	notrack jmp *%rax
  42:	bf 20 00 00 00       	mov    $0x20,%edi
  47:	e8 00 00 00 00       	call   4c <Display::Detect(display::Type)+0x4c>
  4c:	48 89 c3             	mov    %rax,%rbx
  4f:	ba 02 00 00 00       	mov    $0x2,%edx
  54:	be 10 00 00 00       	mov    $0x10,%esi
  59:	48 89 df             	mov    %rbx,%rdi
  5c:	e8 00 00 00 00       	call   61 <Display::Detect(display::Type)+0x61>
  61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  65:	48 89 58 18          	mov    %rbx,0x18(%rax)
  69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6d:	48 8b 40 18          	mov    0x18(%rax),%rax
  71:	48 85 c0             	test   %rax,%rax
  74:	0f 85 42 01 00 00    	jne    1bc <Display::Detect(display::Type)+0x1bc>
  7a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 81 <Display::Detect(display::Type)+0x81>
  81:	48 89 c1             	mov    %rax,%rcx
  84:	ba 68 00 00 00       	mov    $0x68,%edx
  89:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 90 <Display::Detect(display::Type)+0x90>
  90:	48 89 c6             	mov    %rax,%rsi
  93:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9a <Display::Detect(display::Type)+0x9a>
  9a:	48 89 c7             	mov    %rax,%rdi
  9d:	e8 00 00 00 00       	call   a2 <Display::Detect(display::Type)+0xa2>
  a2:	bf 20 00 00 00       	mov    $0x20,%edi
  a7:	e8 00 00 00 00       	call   ac <Display::Detect(display::Type)+0xac>
  ac:	48 89 c3             	mov    %rax,%rbx
  af:	ba 04 00 00 00       	mov    $0x4,%edx
  b4:	be 14 00 00 00       	mov    $0x14,%esi
  b9:	48 89 df             	mov    %rbx,%rdi
  bc:	e8 00 00 00 00       	call   c1 <Display::Detect(display::Type)+0xc1>
  c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c5:	48 89 58 18          	mov    %rbx,0x18(%rax)
  c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  cd:	48 8b 40 18          	mov    0x18(%rax),%rax
  d1:	48 85 c0             	test   %rax,%rax
  d4:	0f 85 e5 00 00 00    	jne    1bf <Display::Detect(display::Type)+0x1bf>
  da:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # e1 <Display::Detect(display::Type)+0xe1>
  e1:	48 89 c1             	mov    %rax,%rcx
  e4:	ba 6c 00 00 00       	mov    $0x6c,%edx
  e9:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # f0 <Display::Detect(display::Type)+0xf0>
  f0:	48 89 c6             	mov    %rax,%rsi
  f3:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # fa <Display::Detect(display::Type)+0xfa>
  fa:	48 89 c7             	mov    %rax,%rdi
  fd:	e8 00 00 00 00       	call   102 <Display::Detect(display::Type)+0x102>
 102:	bf 20 00 00 00       	mov    $0x20,%edi
 107:	e8 00 00 00 00       	call   10c <Display::Detect(display::Type)+0x10c>
 10c:	48 89 c3             	mov    %rax,%rbx
 10f:	48 89 df             	mov    %rbx,%rdi
 112:	e8 00 00 00 00       	call   117 <Display::Detect(display::Type)+0x117>
 117:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 11b:	48 89 58 18          	mov    %rbx,0x18(%rax)
 11f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 123:	48 8b 40 18          	mov    0x18(%rax),%rax
 127:	48 85 c0             	test   %rax,%rax
 12a:	0f 85 92 00 00 00    	jne    1c2 <Display::Detect(display::Type)+0x1c2>
 130:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 137 <Display::Detect(display::Type)+0x137>
 137:	48 89 c1             	mov    %rax,%rcx
 13a:	ba 72 00 00 00       	mov    $0x72,%edx
 13f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 146 <Display::Detect(display::Type)+0x146>
 146:	48 89 c6             	mov    %rax,%rsi
 149:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 150 <Display::Detect(display::Type)+0x150>
 150:	48 89 c7             	mov    %rax,%rdi
 153:	e8 00 00 00 00       	call   158 <Display::Detect(display::Type)+0x158>
 158:	bf 40 00 00 00       	mov    $0x40,%edi
 15d:	e8 00 00 00 00       	call   162 <Display::Detect(display::Type)+0x162>
 162:	48 89 c3             	mov    %rax,%rbx
 165:	be 00 00 00 00       	mov    $0x0,%esi
 16a:	48 89 df             	mov    %rbx,%rdi
 16d:	e8 00 00 00 00       	call   172 <Display::Detect(display::Type)+0x172>
 172:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 176:	48 89 58 18          	mov    %rbx,0x18(%rax)
 17a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 17e:	48 8b 40 18          	mov    0x18(%rax),%rax
 182:	48 85 c0             	test   %rax,%rax
 185:	75 3e                	jne    1c5 <Display::Detect(display::Type)+0x1c5>
 187:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 18e <Display::Detect(display::Type)+0x18e>
 18e:	48 89 c1             	mov    %rax,%rcx
 191:	ba 77 00 00 00       	mov    $0x77,%edx
 196:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 19d <Display::Detect(display::Type)+0x19d>
 19d:	48 89 c6             	mov    %rax,%rsi
 1a0:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 1a7 <Display::Detect(display::Type)+0x1a7>
 1a7:	48 89 c7             	mov    %rax,%rdi
 1aa:	e8 00 00 00 00       	call   1af <Display::Detect(display::Type)+0x1af>
 1af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1b3:	c7 00 04 00 00 00    	movl   $0x4,(%rax)
 1b9:	90                   	nop
 1ba:	eb 0a                	jmp    1c6 <Display::Detect(display::Type)+0x1c6>
 1bc:	90                   	nop
 1bd:	eb 07                	jmp    1c6 <Display::Detect(display::Type)+0x1c6>
 1bf:	90                   	nop
 1c0:	eb 04                	jmp    1c6 <Display::Detect(display::Type)+0x1c6>
 1c2:	90                   	nop
 1c3:	eb 01                	jmp    1c6 <Display::Detect(display::Type)+0x1c6>
 1c5:	90                   	nop
 1c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1ca:	48 8b 40 18          	mov    0x18(%rax),%rax
 1ce:	48 85 c0             	test   %rax,%rax
 1d1:	74 79                	je     24c <Display::Detect(display::Type)+0x24c>
 1d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1d7:	48 8b 40 18          	mov    0x18(%rax),%rax
 1db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 1df:	48 8b 52 18          	mov    0x18(%rdx),%rdx
 1e3:	48 8b 12             	mov    (%rdx),%rdx
 1e6:	48 83 c2 10          	add    $0x10,%rdx
 1ea:	48 8b 12             	mov    (%rdx),%rdx
 1ed:	48 89 c7             	mov    %rax,%rdi
 1f0:	ff d2                	call   *%rdx
 1f2:	83 f0 01             	xor    $0x1,%eax
 1f5:	84 c0                	test   %al,%al
 1f7:	74 34                	je     22d <Display::Detect(display::Type)+0x22d>
 1f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1fd:	48 8b 40 18          	mov    0x18(%rax),%rax
 201:	48 85 c0             	test   %rax,%rax
 204:	74 0f                	je     215 <Display::Detect(display::Type)+0x215>
 206:	48 8b 10             	mov    (%rax),%rdx
 209:	48 83 c2 08          	add    $0x8,%rdx
 20d:	48 8b 12             	mov    (%rdx),%rdx
 210:	48 89 c7             	mov    %rax,%rdi
 213:	ff d2                	call   *%rdx
 215:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 219:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
 220:	00 
 221:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 225:	c7 00 04 00 00 00    	movl   $0x4,(%rax)
 22b:	eb 1f                	jmp    24c <Display::Detect(display::Type)+0x24c>
 22d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 231:	48 8b 40 18          	mov    0x18(%rax),%rax
 235:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 239:	48 8b 52 18          	mov    0x18(%rdx),%rdx
 23d:	48 8b 12             	mov    (%rdx),%rdx
 240:	48 83 c2 18          	add    $0x18,%rdx
 244:	48 8b 12             	mov    (%rdx),%rdx
 247:	48 89 c7             	mov    %rax,%rdi
 24a:	ff d2                	call   *%rdx
 24c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 250:	48 8b 40 18          	mov    0x18(%rax),%rax
 254:	48 85 c0             	test   %rax,%rax
 257:	75 0b                	jne    264 <Display::Detect(display::Type)+0x264>
 259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 25d:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
 264:	90                   	nop
 265:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 269:	c9                   	leave  
 26a:	c3                   	ret    

Disassembly of section .text._ZN7Display6DetectEj:

0000000000000000 <Display::Detect(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	53                   	push   %rbx
   9:	48 83 ec 18          	sub    $0x18,%rsp
   d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  11:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  14:	be a0 86 01 00       	mov    $0x186a0,%esi
  19:	bf 3c 00 00 00       	mov    $0x3c,%edi
  1e:	e8 00 00 00 00       	call   23 <Display::Detect(unsigned int)+0x23>
  23:	84 c0                	test   %al,%al
  25:	0f 84 a9 01 00 00    	je     1d4 <Display::Detect(unsigned int)+0x1d4>
  2b:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
  2f:	0f 87 f5 00 00 00    	ja     12a <Display::Detect(unsigned int)+0x12a>
  35:	bf 20 00 00 00       	mov    $0x20,%edi
  3a:	e8 00 00 00 00       	call   3f <Display::Detect(unsigned int)+0x3f>
  3f:	48 89 c3             	mov    %rax,%rbx
  42:	48 89 df             	mov    %rbx,%rdi
  45:	e8 00 00 00 00       	call   4a <Display::Detect(unsigned int)+0x4a>
  4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4e:	48 89 58 18          	mov    %rbx,0x18(%rax)
  52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  56:	48 8b 40 18          	mov    0x18(%rax),%rax
  5a:	48 85 c0             	test   %rax,%rax
  5d:	75 28                	jne    87 <Display::Detect(unsigned int)+0x87>
  5f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 66 <Display::Detect(unsigned int)+0x66>
  66:	48 89 c1             	mov    %rax,%rcx
  69:	ba 94 00 00 00       	mov    $0x94,%edx
  6e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 75 <Display::Detect(unsigned int)+0x75>
  75:	48 89 c6             	mov    %rax,%rsi
  78:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 7f <Display::Detect(unsigned int)+0x7f>
  7f:	48 89 c7             	mov    %rax,%rdi
  82:	e8 00 00 00 00       	call   87 <Display::Detect(unsigned int)+0x87>
  87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  8b:	48 8b 40 18          	mov    0x18(%rax),%rax
  8f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  93:	48 8b 52 18          	mov    0x18(%rdx),%rdx
  97:	48 8b 12             	mov    (%rdx),%rdx
  9a:	48 83 c2 10          	add    $0x10,%rdx
  9e:	48 8b 12             	mov    (%rdx),%rdx
  a1:	48 89 c7             	mov    %rax,%rdi
  a4:	ff d2                	call   *%rdx
  a6:	84 c0                	test   %al,%al
  a8:	74 29                	je     d3 <Display::Detect(unsigned int)+0xd3>
  aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  ae:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
  b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b8:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # bf <Display::Detect(unsigned int)+0xbf>
  bf:	be 01 00 00 00       	mov    $0x1,%esi
  c4:	48 89 c7             	mov    %rax,%rdi
  c7:	b8 00 00 00 00       	mov    $0x0,%eax
  cc:	e8 00 00 00 00       	call   d1 <Display::Detect(unsigned int)+0xd1>
  d1:	eb 22                	jmp    f5 <Display::Detect(unsigned int)+0xf5>
  d3:	bf 40 00 00 00       	mov    $0x40,%edi
  d8:	e8 00 00 00 00       	call   dd <Display::Detect(unsigned int)+0xdd>
  dd:	48 89 c3             	mov    %rax,%rbx
  e0:	be 01 00 00 00       	mov    $0x1,%esi
  e5:	48 89 df             	mov    %rbx,%rdi
  e8:	e8 00 00 00 00       	call   ed <Display::Detect(unsigned int)+0xed>
  ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f1:	48 89 58 18          	mov    %rbx,0x18(%rax)
  f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f9:	48 8b 40 18          	mov    0x18(%rax),%rax
  fd:	48 85 c0             	test   %rax,%rax
 100:	75 7f                	jne    181 <Display::Detect(unsigned int)+0x181>
 102:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 109 <Display::Detect(unsigned int)+0x109>
 109:	48 89 c1             	mov    %rax,%rcx
 10c:	ba 9c 00 00 00       	mov    $0x9c,%edx
 111:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 118 <Display::Detect(unsigned int)+0x118>
 118:	48 89 c6             	mov    %rax,%rsi
 11b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 122 <Display::Detect(unsigned int)+0x122>
 122:	48 89 c7             	mov    %rax,%rdi
 125:	e8 00 00 00 00       	call   12a <Display::Detect(unsigned int)+0x12a>
 12a:	bf 40 00 00 00       	mov    $0x40,%edi
 12f:	e8 00 00 00 00       	call   134 <Display::Detect(unsigned int)+0x134>
 134:	48 89 c3             	mov    %rax,%rbx
 137:	be 00 00 00 00       	mov    $0x0,%esi
 13c:	48 89 df             	mov    %rbx,%rdi
 13f:	e8 00 00 00 00       	call   144 <Display::Detect(unsigned int)+0x144>
 144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 148:	48 89 58 18          	mov    %rbx,0x18(%rax)
 14c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 150:	48 8b 40 18          	mov    0x18(%rax),%rax
 154:	48 85 c0             	test   %rax,%rax
 157:	75 28                	jne    181 <Display::Detect(unsigned int)+0x181>
 159:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 160 <Display::Detect(unsigned int)+0x160>
 160:	48 89 c1             	mov    %rax,%rcx
 163:	ba 9f 00 00 00       	mov    $0x9f,%edx
 168:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 16f <Display::Detect(unsigned int)+0x16f>
 16f:	48 89 c6             	mov    %rax,%rsi
 172:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 179 <Display::Detect(unsigned int)+0x179>
 179:	48 89 c7             	mov    %rax,%rdi
 17c:	e8 00 00 00 00       	call   181 <Display::Detect(unsigned int)+0x181>
 181:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 185:	48 8b 40 18          	mov    0x18(%rax),%rax
 189:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 18d:	48 8b 52 18          	mov    0x18(%rdx),%rdx
 191:	48 8b 12             	mov    (%rdx),%rdx
 194:	48 83 c2 10          	add    $0x10,%rdx
 198:	48 8b 12             	mov    (%rdx),%rdx
 19b:	48 89 c7             	mov    %rax,%rdi
 19e:	ff d2                	call   *%rdx
 1a0:	84 c0                	test   %al,%al
 1a2:	0f 84 b9 01 00 00    	je     361 <Display::Detect(unsigned int)+0x361>
 1a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1ac:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
 1b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1b6:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 1bd <Display::Detect(unsigned int)+0x1bd>
 1bd:	be 01 00 00 00       	mov    $0x1,%esi
 1c2:	48 89 c7             	mov    %rax,%rdi
 1c5:	b8 00 00 00 00       	mov    $0x0,%eax
 1ca:	e8 00 00 00 00       	call   1cf <Display::Detect(unsigned int)+0x1cf>
 1cf:	e9 8d 01 00 00       	jmp    361 <Display::Detect(unsigned int)+0x361>
 1d4:	be a0 86 01 00       	mov    $0x186a0,%esi
 1d9:	bf 27 00 00 00       	mov    $0x27,%edi
 1de:	e8 00 00 00 00       	call   1e3 <Display::Detect(unsigned int)+0x1e3>
 1e3:	84 c0                	test   %al,%al
 1e5:	0f 84 b4 00 00 00    	je     29f <Display::Detect(unsigned int)+0x29f>
 1eb:	bf 20 00 00 00       	mov    $0x20,%edi
 1f0:	e8 00 00 00 00       	call   1f5 <Display::Detect(unsigned int)+0x1f5>
 1f5:	48 89 c3             	mov    %rax,%rbx
 1f8:	b9 04 00 00 00       	mov    $0x4,%ecx
 1fd:	ba 14 00 00 00       	mov    $0x14,%edx
 202:	be 27 00 00 00       	mov    $0x27,%esi
 207:	48 89 df             	mov    %rbx,%rdi
 20a:	e8 00 00 00 00       	call   20f <Display::Detect(unsigned int)+0x20f>
 20f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 213:	48 89 58 18          	mov    %rbx,0x18(%rax)
 217:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 21b:	48 8b 40 18          	mov    0x18(%rax),%rax
 21f:	48 85 c0             	test   %rax,%rax
 222:	75 28                	jne    24c <Display::Detect(unsigned int)+0x24c>
 224:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 22b <Display::Detect(unsigned int)+0x22b>
 22b:	48 89 c1             	mov    %rax,%rcx
 22e:	ba aa 00 00 00       	mov    $0xaa,%edx
 233:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 23a <Display::Detect(unsigned int)+0x23a>
 23a:	48 89 c6             	mov    %rax,%rsi
 23d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 244 <Display::Detect(unsigned int)+0x244>
 244:	48 89 c7             	mov    %rax,%rdi
 247:	e8 00 00 00 00       	call   24c <Display::Detect(unsigned int)+0x24c>
 24c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 250:	48 8b 40 18          	mov    0x18(%rax),%rax
 254:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 258:	48 8b 52 18          	mov    0x18(%rdx),%rdx
 25c:	48 8b 12             	mov    (%rdx),%rdx
 25f:	48 83 c2 10          	add    $0x10,%rdx
 263:	48 8b 12             	mov    (%rdx),%rdx
 266:	48 89 c7             	mov    %rax,%rdi
 269:	ff d2                	call   *%rdx
 26b:	84 c0                	test   %al,%al
 26d:	0f 84 ee 00 00 00    	je     361 <Display::Detect(unsigned int)+0x361>
 273:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 277:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 27d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 281:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 288 <Display::Detect(unsigned int)+0x288>
 288:	be 01 00 00 00       	mov    $0x1,%esi
 28d:	48 89 c7             	mov    %rax,%rdi
 290:	b8 00 00 00 00       	mov    $0x0,%eax
 295:	e8 00 00 00 00       	call   29a <Display::Detect(unsigned int)+0x29a>
 29a:	e9 c2 00 00 00       	jmp    361 <Display::Detect(unsigned int)+0x361>
 29f:	be a0 86 01 00       	mov    $0x186a0,%esi
 2a4:	bf 26 00 00 00       	mov    $0x26,%edi
 2a9:	e8 00 00 00 00       	call   2ae <Display::Detect(unsigned int)+0x2ae>
 2ae:	84 c0                	test   %al,%al
 2b0:	0f 84 ab 00 00 00    	je     361 <Display::Detect(unsigned int)+0x361>
 2b6:	bf 20 00 00 00       	mov    $0x20,%edi
 2bb:	e8 00 00 00 00       	call   2c0 <Display::Detect(unsigned int)+0x2c0>
 2c0:	48 89 c3             	mov    %rax,%rbx
 2c3:	b9 02 00 00 00       	mov    $0x2,%ecx
 2c8:	ba 10 00 00 00       	mov    $0x10,%edx
 2cd:	be 26 00 00 00       	mov    $0x26,%esi
 2d2:	48 89 df             	mov    %rbx,%rdi
 2d5:	e8 00 00 00 00       	call   2da <Display::Detect(unsigned int)+0x2da>
 2da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 2de:	48 89 58 18          	mov    %rbx,0x18(%rax)
 2e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 2e6:	48 8b 40 18          	mov    0x18(%rax),%rax
 2ea:	48 85 c0             	test   %rax,%rax
 2ed:	75 28                	jne    317 <Display::Detect(unsigned int)+0x317>
 2ef:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 2f6 <Display::Detect(unsigned int)+0x2f6>
 2f6:	48 89 c1             	mov    %rax,%rcx
 2f9:	ba b2 00 00 00       	mov    $0xb2,%edx
 2fe:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 305 <Display::Detect(unsigned int)+0x305>
 305:	48 89 c6             	mov    %rax,%rsi
 308:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 30f <Display::Detect(unsigned int)+0x30f>
 30f:	48 89 c7             	mov    %rax,%rdi
 312:	e8 00 00 00 00       	call   317 <Display::Detect(unsigned int)+0x317>
 317:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 31b:	48 8b 40 18          	mov    0x18(%rax),%rax
 31f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 323:	48 8b 52 18          	mov    0x18(%rdx),%rdx
 327:	48 8b 12             	mov    (%rdx),%rdx
 32a:	48 83 c2 10          	add    $0x10,%rdx
 32e:	48 8b 12             	mov    (%rdx),%rdx
 331:	48 89 c7             	mov    %rax,%rdi
 334:	ff d2                	call   *%rdx
 336:	84 c0                	test   %al,%al
 338:	74 27                	je     361 <Display::Detect(unsigned int)+0x361>
 33a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 344:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 348:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 34f <Display::Detect(unsigned int)+0x34f>
 34f:	be 01 00 00 00       	mov    $0x1,%esi
 354:	48 89 c7             	mov    %rax,%rdi
 357:	b8 00 00 00 00       	mov    $0x0,%eax
 35c:	e8 00 00 00 00       	call   361 <Display::Detect(unsigned int)+0x361>
 361:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 365:	48 8b 40 18          	mov    0x18(%rax),%rax
 369:	48 85 c0             	test   %rax,%rax
 36c:	75 0b                	jne    379 <Display::Detect(unsigned int)+0x379>
 36e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 372:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
 379:	90                   	nop
 37a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
 37e:	c9                   	leave  
 37f:	c3                   	ret    

hd44780.o:     file format elf64-x86-64


Disassembly of section .text._ZN10DisplaySetD2Ev:

0000000000000000 <DisplaySet::~DisplaySet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DisplaySet::~DisplaySet()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySetD0Ev:

0000000000000000 <DisplaySet::~DisplaySet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <DisplaySet::~DisplaySet()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <DisplaySet::~DisplaySet()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet8SetSleepEb:

0000000000000000 <DisplaySet::SetSleep(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet11SetContrastEh:

0000000000000000 <DisplaySet::SetContrast(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet17SetFlipVerticallyEb:

0000000000000000 <DisplaySet::SetFlipVertically(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet9PrintInfoEv:

0000000000000000 <DisplaySet::PrintInfo()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text.udelay:

0000000000000000 <udelay>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   b:	90                   	nop
   c:	5d                   	pop    %rbp
   d:	c3                   	ret    

Disassembly of section .text.i2c_set_baudrate:

0000000000000000 <i2c_set_baudrate>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	90                   	nop
   8:	5d                   	pop    %rbp
   9:	c3                   	ret    

Disassembly of section .text.i2c_set_address:

0000000000000000 <i2c_set_address>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 f8                	mov    %edi,%eax
   6:	88 45 fc             	mov    %al,-0x4(%rbp)
   9:	90                   	nop
   a:	5d                   	pop    %rbp
   b:	c3                   	ret    

Disassembly of section .text.i2c_write:

0000000000000000 <i2c_write>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text.i2c_read:

0000000000000000 <i2c_read>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2CC2Ehj:

0000000000000000 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	89 55 f0             	mov    %edx,-0x10(%rbp)
  11:	88 45 f4             	mov    %al,-0xc(%rbp)
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  1c:	88 10                	mov    %dl,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	8b 55 f0             	mov    -0x10(%rbp),%edx
  25:	89 50 04             	mov    %edx,0x4(%rax)
  28:	90                   	nop
  29:	5d                   	pop    %rbp
  2a:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C11IsConnectedEv:

0000000000000000 <HAL_I2C::IsConnected()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 50 04             	mov    0x4(%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	0f b6 00             	movzbl (%rax),%eax
  1e:	0f b6 c0             	movzbl %al,%eax
  21:	89 d6                	mov    %edx,%esi
  23:	89 c7                	mov    %eax,%edi
  25:	e8 00 00 00 00       	call   2a <HAL_I2C::IsConnected()+0x2a>
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5WriteEc:

0000000000000000 <HAL_I2C::Write(char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <HAL_I2C::Write(char)+0x21>
  21:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  25:	be 01 00 00 00       	mov    $0x1,%esi
  2a:	48 89 c7             	mov    %rax,%rdi
  2d:	e8 00 00 00 00       	call   32 <HAL_I2C::Write(char)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5SetupEv:

0000000000000000 <HAL_I2C::Setup()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 08          	sub    $0x8,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	0f b6 00             	movzbl (%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	89 c7                	mov    %eax,%edi
  1c:	e8 00 00 00 00       	call   21 <HAL_I2C::Setup()+0x21>
  21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  25:	8b 40 04             	mov    0x4(%rax),%eax
  28:	89 c7                	mov    %eax,%edi
  2a:	e8 00 00 00 00       	call   2f <HAL_I2C::Setup()+0x2f>
  2f:	90                   	nop
  30:	c9                   	leave  
  31:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C12IsConnected_Ehj:

0000000000000000 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 f8                	mov    %edi,%eax
   e:	89 75 e8             	mov    %esi,-0x18(%rbp)
  11:	88 45 ec             	mov    %al,-0x14(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  27:	89 c7                	mov    %eax,%edi
  29:	e8 00 00 00 00       	call   2e <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x2e>
  2e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  31:	89 c7                	mov    %eax,%edi
  33:	e8 00 00 00 00       	call   38 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x38>
  38:	80 7d ec 2f          	cmpb   $0x2f,-0x14(%rbp)
  3c:	76 06                	jbe    44 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x44>
  3e:	80 7d ec 37          	cmpb   $0x37,-0x14(%rbp)
  42:	76 0c                	jbe    50 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x50>
  44:	80 7d ec 4f          	cmpb   $0x4f,-0x14(%rbp)
  48:	76 1e                	jbe    68 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x68>
  4a:	80 7d ec 5f          	cmpb   $0x5f,-0x14(%rbp)
  4e:	77 18                	ja     68 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x68>
  50:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
  54:	be 01 00 00 00       	mov    $0x1,%esi
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x61>
  61:	84 c0                	test   %al,%al
  63:	0f 94 c0             	sete   %al
  66:	eb 14                	jmp    7c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x7c>
  68:	be 00 00 00 00       	mov    $0x0,%esi
  6d:	bf 00 00 00 00       	mov    $0x0,%edi
  72:	e8 00 00 00 00       	call   77 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
  77:	84 c0                	test   %al,%al
  79:	0f 94 c0             	sete   %al
  7c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  80:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  87:	00 00 
  89:	74 05                	je     90 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
  8b:	e8 00 00 00 00       	call   90 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
  90:	c9                   	leave  
  91:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySetC2Ev:

0000000000000000 <DisplaySet::DisplaySet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DisplaySet::DisplaySet()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1e:	c6 40 10 7f          	movb   $0x7f,0x10(%rax)
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  2a:	90                   	nop
  2b:	5d                   	pop    %rbp
  2c:	c3                   	ret    

Disassembly of section .text._ZN7Hd44780C2Ev:

0000000000000000 <Hd44780::Hd44780()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <Hd44780::Hd44780()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <Hd44780::Hd44780()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 83 c0 14          	add    $0x14,%rax
  32:	ba 80 1a 06 00       	mov    $0x61a80,%edx
  37:	be 27 00 00 00       	mov    $0x27,%esi
  3c:	48 89 c7             	mov    %rax,%rdi
  3f:	e8 00 00 00 00       	call   44 <Hd44780::Hd44780()+0x44>
  44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  48:	c7 40 08 10 00 00 00 	movl   $0x10,0x8(%rax)
  4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  53:	c7 40 0c 02 00 00 00 	movl   $0x2,0xc(%rax)
  5a:	90                   	nop
  5b:	c9                   	leave  
  5c:	c3                   	ret    

Disassembly of section .text._ZN7Hd44780C2Ehh:

0000000000000000 <Hd44780::Hd44780(unsigned char, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 f4             	mov    %dl,-0xc(%rbp)
  19:	88 45 f0             	mov    %al,-0x10(%rbp)
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <Hd44780::Hd44780(unsigned char, unsigned char)+0x28>
  28:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2f <Hd44780::Hd44780(unsigned char, unsigned char)+0x2f>
  2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  33:	48 89 10             	mov    %rdx,(%rax)
  36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3a:	48 83 c0 14          	add    $0x14,%rax
  3e:	ba 80 1a 06 00       	mov    $0x61a80,%edx
  43:	be 27 00 00 00       	mov    $0x27,%esi
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	e8 00 00 00 00       	call   50 <Hd44780::Hd44780(unsigned char, unsigned char)+0x50>
  50:	80 7d f4 13          	cmpb   $0x13,-0xc(%rbp)
  54:	77 13                	ja     69 <Hd44780::Hd44780(unsigned char, unsigned char)+0x69>
  56:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  5a:	ba 10 00 00 00       	mov    $0x10,%edx
  5f:	38 d0                	cmp    %dl,%al
  61:	0f 42 c2             	cmovb  %edx,%eax
  64:	0f b6 c0             	movzbl %al,%eax
  67:	eb 05                	jmp    6e <Hd44780::Hd44780(unsigned char, unsigned char)+0x6e>
  69:	b8 14 00 00 00       	mov    $0x14,%eax
  6e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  72:	89 42 08             	mov    %eax,0x8(%rdx)
  75:	80 7d f0 03          	cmpb   $0x3,-0x10(%rbp)
  79:	77 13                	ja     8e <Hd44780::Hd44780(unsigned char, unsigned char)+0x8e>
  7b:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
  7f:	ba 02 00 00 00       	mov    $0x2,%edx
  84:	38 d0                	cmp    %dl,%al
  86:	0f 42 c2             	cmovb  %edx,%eax
  89:	0f b6 c0             	movzbl %al,%eax
  8c:	eb 05                	jmp    93 <Hd44780::Hd44780(unsigned char, unsigned char)+0x93>
  8e:	b8 04 00 00 00       	mov    $0x4,%eax
  93:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  97:	89 42 0c             	mov    %eax,0xc(%rdx)
  9a:	90                   	nop
  9b:	c9                   	leave  
  9c:	c3                   	ret    

Disassembly of section .text._ZN7Hd44780C2Ehhh:

0000000000000000 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 c8                	mov    %ecx,%eax
  12:	89 f1                	mov    %esi,%ecx
  14:	88 4d f4             	mov    %cl,-0xc(%rbp)
  17:	88 55 f0             	mov    %dl,-0x10(%rbp)
  1a:	88 45 ec             	mov    %al,-0x14(%rbp)
  1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  21:	48 89 c7             	mov    %rax,%rdi
  24:	e8 00 00 00 00       	call   29 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x29>
  29:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 30 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x30>
  30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  34:	48 89 10             	mov    %rdx,(%rax)
  37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3b:	48 8d 48 14          	lea    0x14(%rax),%rcx
  3f:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  43:	84 c0                	test   %al,%al
  45:	74 0c                	je     53 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x53>
  47:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  4b:	0f b6 00             	movzbl (%rax),%eax
  4e:	0f b6 c0             	movzbl %al,%eax
  51:	eb 05                	jmp    58 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x58>
  53:	b8 27 00 00 00       	mov    $0x27,%eax
  58:	ba 80 1a 06 00       	mov    $0x61a80,%edx
  5d:	89 c6                	mov    %eax,%esi
  5f:	48 89 cf             	mov    %rcx,%rdi
  62:	e8 00 00 00 00       	call   67 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x67>
  67:	80 7d f0 13          	cmpb   $0x13,-0x10(%rbp)
  6b:	77 13                	ja     80 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x80>
  6d:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
  71:	ba 10 00 00 00       	mov    $0x10,%edx
  76:	38 d0                	cmp    %dl,%al
  78:	0f 42 c2             	cmovb  %edx,%eax
  7b:	0f b6 c0             	movzbl %al,%eax
  7e:	eb 05                	jmp    85 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x85>
  80:	b8 14 00 00 00       	mov    $0x14,%eax
  85:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  89:	89 42 08             	mov    %eax,0x8(%rdx)
  8c:	80 7d ec 03          	cmpb   $0x3,-0x14(%rbp)
  90:	77 13                	ja     a5 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0xa5>
  92:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  96:	ba 02 00 00 00       	mov    $0x2,%edx
  9b:	38 d0                	cmp    %dl,%al
  9d:	0f 42 c2             	cmovb  %edx,%eax
  a0:	0f b6 c0             	movzbl %al,%eax
  a3:	eb 05                	jmp    aa <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0xaa>
  a5:	b8 04 00 00 00       	mov    $0x4,%eax
  aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  ae:	89 42 0c             	mov    %eax,0xc(%rdx)
  b1:	90                   	nop
  b2:	c9                   	leave  
  b3:	c3                   	ret    

Disassembly of section .text._ZN7Hd447805StartEv:

0000000000000000 <Hd44780::Start()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 83 c0 14          	add    $0x14,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <Hd44780::Start()+0x20>
  20:	83 f0 01             	xor    $0x1,%eax
  23:	84 c0                	test   %al,%al
  25:	74 07                	je     2e <Hd44780::Start()+0x2e>
  27:	b8 00 00 00 00       	mov    $0x0,%eax
  2c:	eb 75                	jmp    a3 <Hd44780::Start()+0xa3>
  2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  32:	be 33 00 00 00       	mov    $0x33,%esi
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	e8 00 00 00 00       	call   3f <Hd44780::Start()+0x3f>
  3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  43:	be 32 00 00 00       	mov    $0x32,%esi
  48:	48 89 c7             	mov    %rax,%rdi
  4b:	e8 00 00 00 00       	call   50 <Hd44780::Start()+0x50>
  50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  54:	be 28 00 00 00       	mov    $0x28,%esi
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <Hd44780::Start()+0x61>
  61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  65:	be 0c 00 00 00       	mov    $0xc,%esi
  6a:	48 89 c7             	mov    %rax,%rdi
  6d:	e8 00 00 00 00       	call   72 <Hd44780::Start()+0x72>
  72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  76:	be 01 00 00 00       	mov    $0x1,%esi
  7b:	48 89 c7             	mov    %rax,%rdi
  7e:	e8 00 00 00 00       	call   83 <Hd44780::Start()+0x83>
  83:	bf cb 05 00 00       	mov    $0x5cb,%edi
  88:	e8 00 00 00 00       	call   8d <Hd44780::Start()+0x8d>
  8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  91:	be 06 00 00 00       	mov    $0x6,%esi
  96:	48 89 c7             	mov    %rax,%rdi
  99:	e8 00 00 00 00       	call   9e <Hd44780::Start()+0x9e>
  9e:	b8 01 00 00 00       	mov    $0x1,%eax
  a3:	c9                   	leave  
  a4:	c3                   	ret    

Disassembly of section .text._ZN7Hd447803ClsEv:

0000000000000000 <Hd44780::Cls()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	be 01 00 00 00       	mov    $0x1,%esi
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <Hd44780::Cls()+0x21>
  21:	bf cb 05 00 00       	mov    $0x5cb,%edi
  26:	e8 00 00 00 00       	call   2b <Hd44780::Cls()+0x2b>
  2b:	90                   	nop
  2c:	c9                   	leave  
  2d:	c3                   	ret    

Disassembly of section .text._ZN7Hd447807PutCharEi:

0000000000000000 <Hd44780::PutChar(int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	8b 45 f4             	mov    -0xc(%rbp),%eax
  16:	0f b6 d0             	movzbl %al,%edx
  19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1d:	89 d6                	mov    %edx,%esi
  1f:	48 89 c7             	mov    %rax,%rdi
  22:	e8 00 00 00 00       	call   27 <Hd44780::PutChar(int)+0x27>
  27:	90                   	nop
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN7Hd447809PutStringEPKc:

0000000000000000 <Hd44780::PutString(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  23:	eb 21                	jmp    46 <Hd44780::PutString(char const*)+0x46>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	0f b6 00             	movzbl (%rax),%eax
  2c:	0f be d0             	movsbl %al,%edx
  2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  33:	89 d6                	mov    %edx,%esi
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <Hd44780::PutString(char const*)+0x3d>
  3d:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4a:	0f b6 00             	movzbl (%rax),%eax
  4d:	84 c0                	test   %al,%al
  4f:	75 d4                	jne    25 <Hd44780::PutString(char const*)+0x25>
  51:	90                   	nop
  52:	90                   	nop
  53:	c9                   	leave  
  54:	c3                   	ret    

Disassembly of section .text._ZN7Hd447804TextEPKcj:

0000000000000000 <Hd44780::Text(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 55 dc             	mov    %edx,-0x24(%rbp)
  17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1b:	8b 40 08             	mov    0x8(%rax),%eax
  1e:	39 45 dc             	cmp    %eax,-0x24(%rbp)
  21:	76 0a                	jbe    2d <Hd44780::Text(char const*, unsigned int)+0x2d>
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	8b 40 08             	mov    0x8(%rax),%eax
  2a:	89 45 dc             	mov    %eax,-0x24(%rbp)
  2d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  34:	eb 22                	jmp    58 <Hd44780::Text(char const*, unsigned int)+0x58>
  36:	8b 55 fc             	mov    -0x4(%rbp),%edx
  39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  3d:	48 01 d0             	add    %rdx,%rax
  40:	0f b6 00             	movzbl (%rax),%eax
  43:	0f b6 d0             	movzbl %al,%edx
  46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4a:	89 d6                	mov    %edx,%esi
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	call   54 <Hd44780::Text(char const*, unsigned int)+0x54>
  54:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  58:	8b 45 fc             	mov    -0x4(%rbp),%eax
  5b:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  5e:	72 d6                	jb     36 <Hd44780::Text(char const*, unsigned int)+0x36>
  60:	90                   	nop
  61:	90                   	nop
  62:	c9                   	leave  
  63:	c3                   	ret    

Disassembly of section .text._ZN7Hd447808TextLineEjPKcj:

0000000000000000 <Hd44780::TextLine(unsigned int, char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1e:	8b 40 0c             	mov    0xc(%rax),%eax
  21:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  24:	77 32                	ja     58 <Hd44780::TextLine(unsigned int, char const*, unsigned int)+0x58>
  26:	8b 45 f4             	mov    -0xc(%rbp),%eax
  29:	83 e8 01             	sub    $0x1,%eax
  2c:	0f b6 d0             	movzbl %al,%edx
  2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  33:	be 00 00 00 00       	mov    $0x0,%esi
  38:	48 89 c7             	mov    %rax,%rdi
  3b:	e8 00 00 00 00       	call   40 <Hd44780::TextLine(unsigned int, char const*, unsigned int)+0x40>
  40:	8b 55 f0             	mov    -0x10(%rbp),%edx
  43:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4b:	48 89 ce             	mov    %rcx,%rsi
  4e:	48 89 c7             	mov    %rax,%rdi
  51:	e8 00 00 00 00       	call   56 <Hd44780::TextLine(unsigned int, char const*, unsigned int)+0x56>
  56:	eb 01                	jmp    59 <Hd44780::TextLine(unsigned int, char const*, unsigned int)+0x59>
  58:	90                   	nop
  59:	c9                   	leave  
  5a:	c3                   	ret    

Disassembly of section .text._ZN7Hd447809ClearLineEj:

0000000000000000 <Hd44780::ClearLine(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  17:	8b 40 0c             	mov    0xc(%rax),%eax
  1a:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  1d:	77 60                	ja     7f <Hd44780::ClearLine(unsigned int)+0x7f>
  1f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  22:	83 e8 01             	sub    $0x1,%eax
  25:	0f b6 d0             	movzbl %al,%edx
  28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2c:	be 00 00 00 00       	mov    $0x0,%esi
  31:	48 89 c7             	mov    %rax,%rdi
  34:	e8 00 00 00 00       	call   39 <Hd44780::ClearLine(unsigned int)+0x39>
  39:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40:	eb 15                	jmp    57 <Hd44780::ClearLine(unsigned int)+0x57>
  42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  46:	be 20 00 00 00       	mov    $0x20,%esi
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	call   53 <Hd44780::ClearLine(unsigned int)+0x53>
  53:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5b:	8b 40 08             	mov    0x8(%rax),%eax
  5e:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  61:	72 df                	jb     42 <Hd44780::ClearLine(unsigned int)+0x42>
  63:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  66:	83 e8 01             	sub    $0x1,%eax
  69:	0f b6 d0             	movzbl %al,%edx
  6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  70:	be 00 00 00 00       	mov    $0x0,%esi
  75:	48 89 c7             	mov    %rax,%rdi
  78:	e8 00 00 00 00       	call   7d <Hd44780::ClearLine(unsigned int)+0x7d>
  7d:	eb 01                	jmp    80 <Hd44780::ClearLine(unsigned int)+0x80>
  7f:	90                   	nop
  80:	c9                   	leave  
  81:	c3                   	ret    

Disassembly of section .text._ZN7Hd447809PrintInfoEv:

0000000000000000 <Hd44780::PrintInfo()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 50 08             	mov    0x8(%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	8b 40 0c             	mov    0xc(%rax),%eax
  1e:	89 c6                	mov    %eax,%esi
  20:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 27 <Hd44780::PrintInfo()+0x27>
  27:	48 89 c7             	mov    %rax,%rdi
  2a:	b8 00 00 00 00       	mov    $0x0,%eax
  2f:	e8 00 00 00 00       	call   34 <Hd44780::PrintInfo()+0x34>
  34:	90                   	nop
  35:	c9                   	leave  
  36:	c3                   	ret    

Disassembly of section .text._ZN7Hd4478012SetCursorPosEjj:

0000000000000000 <Hd44780::SetCursorPos(unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	89 55 e0             	mov    %edx,-0x20(%rbp)
  16:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1d:	00 00 
  1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  23:	31 c0                	xor    %eax,%eax
  25:	83 7d e0 03          	cmpl   $0x3,-0x20(%rbp)
  29:	76 28                	jbe    53 <Hd44780::SetCursorPos(unsigned int, unsigned int)+0x53>
  2b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 32 <Hd44780::SetCursorPos(unsigned int, unsigned int)+0x32>
  32:	48 89 c1             	mov    %rax,%rcx
  35:	ba af 00 00 00       	mov    $0xaf,%edx
  3a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 41 <Hd44780::SetCursorPos(unsigned int, unsigned int)+0x41>
  41:	48 89 c6             	mov    %rax,%rsi
  44:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4b <Hd44780::SetCursorPos(unsigned int, unsigned int)+0x4b>
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	call   53 <Hd44780::SetCursorPos(unsigned int, unsigned int)+0x53>
  53:	c7 45 f4 00 40 14 54 	movl   $0x54144000,-0xc(%rbp)
  5a:	8b 45 e0             	mov    -0x20(%rbp),%eax
  5d:	83 e0 03             	and    $0x3,%eax
  60:	89 c0                	mov    %eax,%eax
  62:	0f b6 44 05 f4       	movzbl -0xc(%rbp,%rax,1),%eax
  67:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  6a:	01 d0                	add    %edx,%eax
  6c:	83 c8 80             	or     $0xffffff80,%eax
  6f:	0f b6 d0             	movzbl %al,%edx
  72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  76:	89 d6                	mov    %edx,%esi
  78:	48 89 c7             	mov    %rax,%rdi
  7b:	e8 00 00 00 00       	call   80 <Hd44780::SetCursorPos(unsigned int, unsigned int)+0x80>
  80:	90                   	nop
  81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  85:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  8c:	00 00 
  8e:	74 05                	je     95 <Hd44780::SetCursorPos(unsigned int, unsigned int)+0x95>
  90:	e8 00 00 00 00       	call   95 <Hd44780::SetCursorPos(unsigned int, unsigned int)+0x95>
  95:	c9                   	leave  
  96:	c3                   	ret    

Disassembly of section .text._ZN7Hd4478010Write4bitsEh:

0000000000000000 <Hd44780::Write4bits(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8d 50 14          	lea    0x14(%rax),%rdx
  1d:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  21:	0f be c0             	movsbl %al,%eax
  24:	89 c6                	mov    %eax,%esi
  26:	48 89 d7             	mov    %rdx,%rdi
  29:	e8 00 00 00 00       	call   2e <Hd44780::Write4bits(unsigned char)+0x2e>
  2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  32:	48 8d 50 14          	lea    0x14(%rax),%rdx
  36:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  3a:	83 c8 0c             	or     $0xc,%eax
  3d:	0f be c0             	movsbl %al,%eax
  40:	89 c6                	mov    %eax,%esi
  42:	48 89 d7             	mov    %rdx,%rdi
  45:	e8 00 00 00 00       	call   4a <Hd44780::Write4bits(unsigned char)+0x4a>
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	48 8d 50 14          	lea    0x14(%rax),%rdx
  52:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  56:	83 e0 f3             	and    $0xfffffff3,%eax
  59:	83 c8 08             	or     $0x8,%eax
  5c:	0f be c0             	movsbl %al,%eax
  5f:	89 c6                	mov    %eax,%esi
  61:	48 89 d7             	mov    %rdx,%rdi
  64:	e8 00 00 00 00       	call   69 <Hd44780::Write4bits(unsigned char)+0x69>
  69:	90                   	nop
  6a:	c9                   	leave  
  6b:	c3                   	ret    

Disassembly of section .text._ZN7Hd447808WriteCmdEh:

0000000000000000 <Hd44780::WriteCmd(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  19:	25 f0 00 00 00       	and    $0xf0,%eax
  1e:	89 c2                	mov    %eax,%edx
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	89 d6                	mov    %edx,%esi
  26:	48 89 c7             	mov    %rax,%rdi
  29:	e8 00 00 00 00       	call   2e <Hd44780::WriteCmd(unsigned char)+0x2e>
  2e:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  32:	c1 e0 04             	shl    $0x4,%eax
  35:	0f b6 d0             	movzbl %al,%edx
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	89 d6                	mov    %edx,%esi
  3e:	48 89 c7             	mov    %rax,%rdi
  41:	e8 00 00 00 00       	call   46 <Hd44780::WriteCmd(unsigned char)+0x46>
  46:	bf 25 00 00 00       	mov    $0x25,%edi
  4b:	e8 00 00 00 00       	call   50 <Hd44780::WriteCmd(unsigned char)+0x50>
  50:	90                   	nop
  51:	c9                   	leave  
  52:	c3                   	ret    

Disassembly of section .text._ZN7Hd447808WriteRegEh:

0000000000000000 <Hd44780::WriteReg(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  19:	83 e0 f0             	and    $0xfffffff0,%eax
  1c:	83 c8 01             	or     $0x1,%eax
  1f:	0f b6 d0             	movzbl %al,%edx
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	89 d6                	mov    %edx,%esi
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <Hd44780::WriteReg(unsigned char)+0x30>
  30:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  34:	c1 e0 04             	shl    $0x4,%eax
  37:	83 c8 01             	or     $0x1,%eax
  3a:	0f b6 d0             	movzbl %al,%edx
  3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41:	89 d6                	mov    %edx,%esi
  43:	48 89 c7             	mov    %rax,%rdi
  46:	e8 00 00 00 00       	call   4b <Hd44780::WriteReg(unsigned char)+0x4b>
  4b:	bf 2b 00 00 00       	mov    $0x2b,%edi
  50:	e8 00 00 00 00       	call   55 <Hd44780::WriteReg(unsigned char)+0x55>
  55:	90                   	nop
  56:	c9                   	leave  
  57:	c3                   	ret    

Disassembly of section .text._ZN7Hd447809SetCursorEj:

0000000000000000 <Hd44780::SetCursor(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	c6 45 ff 0c          	movb   $0xc,-0x1(%rbp)
  17:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  1a:	83 e0 01             	and    $0x1,%eax
  1d:	85 c0                	test   %eax,%eax
  1f:	74 04                	je     25 <Hd44780::SetCursor(unsigned int)+0x25>
  21:	80 4d ff 02          	orb    $0x2,-0x1(%rbp)
  25:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  28:	83 e0 02             	and    $0x2,%eax
  2b:	85 c0                	test   %eax,%eax
  2d:	74 04                	je     33 <Hd44780::SetCursor(unsigned int)+0x33>
  2f:	80 4d ff 01          	orb    $0x1,-0x1(%rbp)
  33:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
  37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3b:	89 d6                	mov    %edx,%esi
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	call   45 <Hd44780::SetCursor(unsigned int)+0x45>
  45:	90                   	nop
  46:	c9                   	leave  
  47:	c3                   	ret    

Disassembly of section .text._ZN7Hd44780D2Ev:

0000000000000000 <Hd44780::~Hd44780()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <Hd44780::~Hd44780()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <Hd44780::~Hd44780()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN7Hd44780D0Ev:

0000000000000000 <Hd44780::~Hd44780()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <Hd44780::~Hd44780()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <Hd44780::~Hd44780()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

ssd1306.o:     file format elf64-x86-64


Disassembly of section .text._ZN10DisplaySetD2Ev:

0000000000000000 <DisplaySet::~DisplaySet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DisplaySet::~DisplaySet()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySetD0Ev:

0000000000000000 <DisplaySet::~DisplaySet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <DisplaySet::~DisplaySet()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <DisplaySet::~DisplaySet()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet8SetSleepEb:

0000000000000000 <DisplaySet::SetSleep(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet11SetContrastEh:

0000000000000000 <DisplaySet::SetContrast(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet17SetFlipVerticallyEb:

0000000000000000 <DisplaySet::SetFlipVertically(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet9PrintInfoEv:

0000000000000000 <DisplaySet::PrintInfo()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text.i2c_set_baudrate:

0000000000000000 <i2c_set_baudrate>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	90                   	nop
   8:	5d                   	pop    %rbp
   9:	c3                   	ret    

Disassembly of section .text.i2c_set_address:

0000000000000000 <i2c_set_address>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 f8                	mov    %edi,%eax
   6:	88 45 fc             	mov    %al,-0x4(%rbp)
   9:	90                   	nop
   a:	5d                   	pop    %rbp
   b:	c3                   	ret    

Disassembly of section .text.i2c_write:

0000000000000000 <i2c_write>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text.i2c_read:

0000000000000000 <i2c_read>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2CC2Ehj:

0000000000000000 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	89 55 f0             	mov    %edx,-0x10(%rbp)
  11:	88 45 f4             	mov    %al,-0xc(%rbp)
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  1c:	88 10                	mov    %dl,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	8b 55 f0             	mov    -0x10(%rbp),%edx
  25:	89 50 04             	mov    %edx,0x4(%rax)
  28:	90                   	nop
  29:	5d                   	pop    %rbp
  2a:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C11IsConnectedEv:

0000000000000000 <HAL_I2C::IsConnected()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 50 04             	mov    0x4(%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	0f b6 00             	movzbl (%rax),%eax
  1e:	0f b6 c0             	movzbl %al,%eax
  21:	89 d6                	mov    %edx,%esi
  23:	89 c7                	mov    %eax,%edi
  25:	e8 00 00 00 00       	call   2a <HAL_I2C::IsConnected()+0x2a>
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5WriteEc:

0000000000000000 <HAL_I2C::Write(char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <HAL_I2C::Write(char)+0x21>
  21:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  25:	be 01 00 00 00       	mov    $0x1,%esi
  2a:	48 89 c7             	mov    %rax,%rdi
  2d:	e8 00 00 00 00       	call   32 <HAL_I2C::Write(char)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5WriteEPKcj:

0000000000000000 <HAL_I2C::Write(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <HAL_I2C::Write(char const*, unsigned int)+0x23>
  23:	8b 55 ec             	mov    -0x14(%rbp),%edx
  26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2a:	89 d6                	mov    %edx,%esi
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	e8 00 00 00 00       	call   34 <HAL_I2C::Write(char const*, unsigned int)+0x34>
  34:	90                   	nop
  35:	c9                   	leave  
  36:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C13WriteRegisterEhh:

0000000000000000 <HAL_I2C::WriteRegister(unsigned char, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	88 45 e0             	mov    %al,-0x20(%rbp)
  1c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  23:	00 00 
  25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  29:	31 c0                	xor    %eax,%eax
  2b:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  2f:	88 45 f6             	mov    %al,-0xa(%rbp)
  32:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
  36:	88 45 f7             	mov    %al,-0x9(%rbp)
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	call   45 <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x45>
  45:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  49:	be 02 00 00 00       	mov    $0x2,%esi
  4e:	48 89 c7             	mov    %rax,%rdi
  51:	e8 00 00 00 00       	call   56 <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x56>
  56:	90                   	nop
  57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  62:	00 00 
  64:	74 05                	je     6b <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x6b>
  66:	e8 00 00 00 00       	call   6b <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x6b>
  6b:	c9                   	leave  
  6c:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C4ReadEPcj:

0000000000000000 <HAL_I2C::Read(char*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <HAL_I2C::Read(char*, unsigned int)+0x23>
  23:	8b 55 ec             	mov    -0x14(%rbp),%edx
  26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2a:	89 d6                	mov    %edx,%esi
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	e8 00 00 00 00       	call   34 <HAL_I2C::Read(char*, unsigned int)+0x34>
  34:	c9                   	leave  
  35:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5SetupEv:

0000000000000000 <HAL_I2C::Setup()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 08          	sub    $0x8,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	0f b6 00             	movzbl (%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	89 c7                	mov    %eax,%edi
  1c:	e8 00 00 00 00       	call   21 <HAL_I2C::Setup()+0x21>
  21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  25:	8b 40 04             	mov    0x4(%rax),%eax
  28:	89 c7                	mov    %eax,%edi
  2a:	e8 00 00 00 00       	call   2f <HAL_I2C::Setup()+0x2f>
  2f:	90                   	nop
  30:	c9                   	leave  
  31:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C12IsConnected_Ehj:

0000000000000000 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 f8                	mov    %edi,%eax
   e:	89 75 e8             	mov    %esi,-0x18(%rbp)
  11:	88 45 ec             	mov    %al,-0x14(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  27:	89 c7                	mov    %eax,%edi
  29:	e8 00 00 00 00       	call   2e <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x2e>
  2e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  31:	89 c7                	mov    %eax,%edi
  33:	e8 00 00 00 00       	call   38 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x38>
  38:	80 7d ec 2f          	cmpb   $0x2f,-0x14(%rbp)
  3c:	76 06                	jbe    44 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x44>
  3e:	80 7d ec 37          	cmpb   $0x37,-0x14(%rbp)
  42:	76 0c                	jbe    50 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x50>
  44:	80 7d ec 4f          	cmpb   $0x4f,-0x14(%rbp)
  48:	76 1e                	jbe    68 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x68>
  4a:	80 7d ec 5f          	cmpb   $0x5f,-0x14(%rbp)
  4e:	77 18                	ja     68 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x68>
  50:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
  54:	be 01 00 00 00       	mov    $0x1,%esi
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x61>
  61:	84 c0                	test   %al,%al
  63:	0f 94 c0             	sete   %al
  66:	eb 14                	jmp    7c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x7c>
  68:	be 00 00 00 00       	mov    $0x0,%esi
  6d:	bf 00 00 00 00       	mov    $0x0,%edi
  72:	e8 00 00 00 00       	call   77 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
  77:	84 c0                	test   %al,%al
  79:	0f 94 c0             	sete   %al
  7c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  80:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  87:	00 00 
  89:	74 05                	je     90 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
  8b:	e8 00 00 00 00       	call   90 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
  90:	c9                   	leave  
  91:	c3                   	ret    

Disassembly of section .text._ZN7Ssd1306D2Ev:

0000000000000000 <Ssd1306::~Ssd1306()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <Ssd1306::~Ssd1306()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 8b 40 30          	mov    0x30(%rax),%rax
  26:	48 85 c0             	test   %rax,%rax
  29:	74 10                	je     3b <Ssd1306::~Ssd1306()+0x3b>
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	48 8b 40 30          	mov    0x30(%rax),%rax
  33:	48 89 c7             	mov    %rax,%rdi
  36:	e8 00 00 00 00       	call   3b <Ssd1306::~Ssd1306()+0x3b>
  3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3f:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  46:	00 
  47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	call   53 <Ssd1306::~Ssd1306()+0x53>
  53:	90                   	nop
  54:	c9                   	leave  
  55:	c3                   	ret    

Disassembly of section .text._ZN7Ssd1306D0Ev:

0000000000000000 <Ssd1306::~Ssd1306()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <Ssd1306::~Ssd1306()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <Ssd1306::~Ssd1306()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySetC2Ev:

0000000000000000 <DisplaySet::DisplaySet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DisplaySet::DisplaySet()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1e:	c6 40 10 7f          	movb   $0x7f,0x10(%rax)
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  2a:	90                   	nop
  2b:	5d                   	pop    %rbp
  2c:	c3                   	ret    

Disassembly of section .text._ZN7Ssd1306C2Ev:

0000000000000000 <Ssd1306::Ssd1306()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <Ssd1306::Ssd1306()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <Ssd1306::Ssd1306()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 83 c0 14          	add    $0x14,%rax
  32:	ba 80 1a 06 00       	mov    $0x61a80,%edx
  37:	be 3c 00 00 00       	mov    $0x3c,%esi
  3c:	48 89 c7             	mov    %rax,%rdi
  3f:	e8 00 00 00 00       	call   44 <Ssd1306::Ssd1306()+0x44>
  44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  48:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  53:	c6 40 20 00          	movb   $0x0,0x20(%rax)
  57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5b:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  66:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  6d:	00 
  6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  72:	66 c7 40 38 00 00    	movw   $0x0,0x38(%rax)
  78:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 7f <Ssd1306::Ssd1306()+0x7f>
  7f:	48 85 c0             	test   %rax,%rax
  82:	74 28                	je     ac <Ssd1306::Ssd1306()+0xac>
  84:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8b <Ssd1306::Ssd1306()+0x8b>
  8b:	48 89 c1             	mov    %rax,%rcx
  8e:	ba d7 00 00 00       	mov    $0xd7,%edx
  93:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9a <Ssd1306::Ssd1306()+0x9a>
  9a:	48 89 c6             	mov    %rax,%rsi
  9d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a4 <Ssd1306::Ssd1306()+0xa4>
  a4:	48 89 c7             	mov    %rax,%rdi
  a7:	e8 00 00 00 00       	call   ac <Ssd1306::Ssd1306()+0xac>
  ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b0:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # b7 <Ssd1306::Ssd1306()+0xb7>
  b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bb:	48 89 c7             	mov    %rax,%rdi
  be:	e8 00 00 00 00       	call   c3 <Ssd1306::Ssd1306()+0xc3>
  c3:	90                   	nop
  c4:	c9                   	leave  
  c5:	c3                   	ret    

Disassembly of section .text._ZN7Ssd1306C2E10TOledPanel:

0000000000000000 <Ssd1306::Ssd1306(TOledPanel)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 c7             	mov    %rax,%rdi
  1a:	e8 00 00 00 00       	call   1f <Ssd1306::Ssd1306(TOledPanel)+0x1f>
  1f:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 26 <Ssd1306::Ssd1306(TOledPanel)+0x26>
  26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2a:	48 89 10             	mov    %rdx,(%rax)
  2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  31:	48 83 c0 14          	add    $0x14,%rax
  35:	ba 80 1a 06 00       	mov    $0x61a80,%edx
  3a:	be 3c 00 00 00       	mov    $0x3c,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <Ssd1306::Ssd1306(TOledPanel)+0x47>
  47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4b:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4e:	89 50 1c             	mov    %edx,0x1c(%rax)
  51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  55:	c6 40 20 00          	movb   $0x0,0x20(%rax)
  59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5d:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  68:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  6f:	00 
  70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  74:	66 c7 40 38 00 00    	movw   $0x0,0x38(%rax)
  7a:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 81 <Ssd1306::Ssd1306(TOledPanel)+0x81>
  81:	48 85 c0             	test   %rax,%rax
  84:	74 28                	je     ae <Ssd1306::Ssd1306(TOledPanel)+0xae>
  86:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 8d <Ssd1306::Ssd1306(TOledPanel)+0x8d>
  8d:	48 89 c1             	mov    %rax,%rcx
  90:	ba de 00 00 00       	mov    $0xde,%edx
  95:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 9c <Ssd1306::Ssd1306(TOledPanel)+0x9c>
  9c:	48 89 c6             	mov    %rax,%rsi
  9f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a6 <Ssd1306::Ssd1306(TOledPanel)+0xa6>
  a6:	48 89 c7             	mov    %rax,%rdi
  a9:	e8 00 00 00 00       	call   ae <Ssd1306::Ssd1306(TOledPanel)+0xae>
  ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b2:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # b9 <Ssd1306::Ssd1306(TOledPanel)+0xb9>
  b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bd:	48 89 c7             	mov    %rax,%rdi
  c0:	e8 00 00 00 00       	call   c5 <Ssd1306::Ssd1306(TOledPanel)+0xc5>
  c5:	90                   	nop
  c6:	c9                   	leave  
  c7:	c3                   	ret    

Disassembly of section .text._ZN7Ssd1306C2Eh10TOledPanel:

0000000000000000 <Ssd1306::Ssd1306(unsigned char, TOledPanel)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	89 55 f0             	mov    %edx,-0x10(%rbp)
  15:	88 45 f4             	mov    %al,-0xc(%rbp)
  18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	e8 00 00 00 00       	call   24 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x24>
  24:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 2b <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x2b>
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	48 89 10             	mov    %rdx,(%rax)
  32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  36:	48 8d 48 14          	lea    0x14(%rax),%rcx
  3a:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
  3e:	74 06                	je     46 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x46>
  40:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  44:	eb 05                	jmp    4b <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x4b>
  46:	b8 3c 00 00 00       	mov    $0x3c,%eax
  4b:	ba 80 1a 06 00       	mov    $0x61a80,%edx
  50:	89 c6                	mov    %eax,%esi
  52:	48 89 cf             	mov    %rcx,%rdi
  55:	e8 00 00 00 00       	call   5a <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x5a>
  5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5e:	8b 55 f0             	mov    -0x10(%rbp),%edx
  61:	89 50 1c             	mov    %edx,0x1c(%rax)
  64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  68:	c6 40 20 00          	movb   $0x0,0x20(%rax)
  6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  70:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7b:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  82:	00 
  83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  87:	66 c7 40 38 00 00    	movw   $0x0,0x38(%rax)
  8d:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 94 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x94>
  94:	48 85 c0             	test   %rax,%rax
  97:	74 28                	je     c1 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xc1>
  99:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # a0 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xa0>
  a0:	48 89 c1             	mov    %rax,%rcx
  a3:	ba e5 00 00 00       	mov    $0xe5,%edx
  a8:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # af <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xaf>
  af:	48 89 c6             	mov    %rax,%rsi
  b2:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # b9 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xb9>
  b9:	48 89 c7             	mov    %rax,%rdi
  bc:	e8 00 00 00 00       	call   c1 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xc1>
  c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c5:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # cc <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xcc>
  cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d0:	48 89 c7             	mov    %rax,%rdi
  d3:	e8 00 00 00 00       	call   d8 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0xd8>
  d8:	90                   	nop
  d9:	c9                   	leave  
  da:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13069PrintInfoEv:

0000000000000000 <Ssd1306::PrintInfo()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 48 08             	mov    0x8(%rax),%ecx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	8b 50 0c             	mov    0xc(%rax),%edx
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	0f b6 40 20          	movzbl 0x20(%rax),%eax
  26:	84 c0                	test   %al,%al
  28:	74 09                	je     33 <Ssd1306::PrintInfo()+0x33>
  2a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 31 <Ssd1306::PrintInfo()+0x31>
  31:	eb 07                	jmp    3a <Ssd1306::PrintInfo()+0x3a>
  33:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3a <Ssd1306::PrintInfo()+0x3a>
  3a:	48 89 c6             	mov    %rax,%rsi
  3d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 44 <Ssd1306::PrintInfo()+0x44>
  44:	48 89 c7             	mov    %rax,%rdi
  47:	b8 00 00 00 00       	mov    $0x0,%eax
  4c:	e8 00 00 00 00       	call   51 <Ssd1306::PrintInfo()+0x51>
  51:	90                   	nop
  52:	c9                   	leave  
  53:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130611CheckSH1106Ev:

0000000000000000 <Ssd1306::CheckSH1106()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	be 00 00 00 00       	mov    $0x0,%esi
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <Ssd1306::CheckSH1106()+0x30>
  30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  34:	be 90 00 00 00       	mov    $0x90,%esi
  39:	48 89 c7             	mov    %rax,%rdi
  3c:	e8 00 00 00 00       	call   41 <Ssd1306::CheckSH1106()+0x41>
  41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  45:	be b0 00 00 00       	mov    $0xb0,%esi
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	e8 00 00 00 00       	call   52 <Ssd1306::CheckSH1106()+0x52>
  52:	c7 45 ee 40 aa ee aa 	movl   $0xaaeeaa40,-0x12(%rbp)
  59:	c6 45 f2 ee          	movb   $0xee,-0xe(%rbp)
  5d:	48 8d 4d ee          	lea    -0x12(%rbp),%rcx
  61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  65:	ba 05 00 00 00       	mov    $0x5,%edx
  6a:	48 89 ce             	mov    %rcx,%rsi
  6d:	48 89 c7             	mov    %rax,%rdi
  70:	e8 00 00 00 00       	call   75 <Ssd1306::CheckSH1106()+0x75>
  75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  79:	be 00 00 00 00       	mov    $0x0,%esi
  7e:	48 89 c7             	mov    %rax,%rdi
  81:	e8 00 00 00 00       	call   86 <Ssd1306::CheckSH1106()+0x86>
  86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  8a:	be 90 00 00 00       	mov    $0x90,%esi
  8f:	48 89 c7             	mov    %rax,%rdi
  92:	e8 00 00 00 00       	call   97 <Ssd1306::CheckSH1106()+0x97>
  97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  9b:	be b0 00 00 00       	mov    $0xb0,%esi
  a0:	48 89 c7             	mov    %rax,%rdi
  a3:	e8 00 00 00 00       	call   a8 <Ssd1306::CheckSH1106()+0xa8>
  a8:	c7 45 f3 00 00 00 00 	movl   $0x0,-0xd(%rbp)
  af:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
  b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b7:	48 83 c0 14          	add    $0x14,%rax
  bb:	be 40 00 00 00       	mov    $0x40,%esi
  c0:	48 89 c7             	mov    %rax,%rdi
  c3:	e8 00 00 00 00       	call   c8 <Ssd1306::CheckSH1106()+0xc8>
  c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  cc:	48 8d 48 14          	lea    0x14(%rax),%rcx
  d0:	48 8d 45 f3          	lea    -0xd(%rbp),%rax
  d4:	ba 05 00 00 00       	mov    $0x5,%edx
  d9:	48 89 c6             	mov    %rax,%rsi
  dc:	48 89 cf             	mov    %rcx,%rdi
  df:	e8 00 00 00 00       	call   e4 <Ssd1306::CheckSH1106()+0xe4>
  e4:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
  e8:	0f be f8             	movsbl %al,%edi
  eb:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
  ef:	0f be f0             	movsbl %al,%esi
  f2:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
  f6:	0f be c8             	movsbl %al,%ecx
  f9:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  fd:	0f be d0             	movsbl %al,%edx
 100:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
 104:	0f be c0             	movsbl %al,%eax
 107:	41 89 f9             	mov    %edi,%r9d
 10a:	41 89 f0             	mov    %esi,%r8d
 10d:	89 c6                	mov    %eax,%esi
 10f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 116 <Ssd1306::CheckSH1106()+0x116>
 116:	48 89 c7             	mov    %rax,%rdi
 119:	b8 00 00 00 00       	mov    $0x0,%eax
 11e:	e8 00 00 00 00       	call   123 <Ssd1306::CheckSH1106()+0x123>
 123:	48 8d 45 f3          	lea    -0xd(%rbp),%rax
 127:	48 8d 48 01          	lea    0x1(%rax),%rcx
 12b:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
 12f:	48 83 c0 01          	add    $0x1,%rax
 133:	ba 04 00 00 00       	mov    $0x4,%edx
 138:	48 89 ce             	mov    %rcx,%rsi
 13b:	48 89 c7             	mov    %rax,%rdi
 13e:	e8 00 00 00 00       	call   143 <Ssd1306::CheckSH1106()+0x143>
 143:	85 c0                	test   %eax,%eax
 145:	0f 94 c2             	sete   %dl
 148:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 14c:	88 50 20             	mov    %dl,0x20(%rax)
 14f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 153:	0f b6 40 20          	movzbl 0x20(%rax),%eax
 157:	0f b6 c0             	movzbl %al,%eax
 15a:	89 c6                	mov    %eax,%esi
 15c:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 163 <Ssd1306::CheckSH1106()+0x163>
 163:	48 89 c7             	mov    %rax,%rdi
 166:	b8 00 00 00 00       	mov    $0x0,%eax
 16b:	e8 00 00 00 00       	call   170 <Ssd1306::CheckSH1106()+0x170>
 170:	90                   	nop
 171:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 175:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 17c:	00 00 
 17e:	74 05                	je     185 <Ssd1306::CheckSH1106()+0x185>
 180:	e8 00 00 00 00       	call   185 <Ssd1306::CheckSH1106()+0x185>
 185:	c9                   	leave  
 186:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13065StartEv:

0000000000000000 <Ssd1306::Start()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  14:	48 83 c0 14          	add    $0x14,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <Ssd1306::Start()+0x20>
  20:	83 f0 01             	xor    $0x1,%eax
  23:	84 c0                	test   %al,%al
  25:	74 0a                	je     31 <Ssd1306::Start()+0x31>
  27:	b8 00 00 00 00       	mov    $0x0,%eax
  2c:	e9 fb 00 00 00       	jmp    12c <Ssd1306::Start()+0x12c>
  31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  35:	8b 40 1c             	mov    0x1c(%rax),%eax
  38:	85 c0                	test   %eax,%eax
  3a:	74 0e                	je     4a <Ssd1306::Start()+0x4a>
  3c:	85 c0                	test   %eax,%eax
  3e:	78 7e                	js     be <Ssd1306::Start()+0xbe>
  40:	83 e8 01             	sub    $0x1,%eax
  43:	83 f8 01             	cmp    $0x1,%eax
  46:	77 76                	ja     be <Ssd1306::Start()+0xbe>
  48:	eb 3a                	jmp    84 <Ssd1306::Start()+0x84>
  4a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  51:	00 
  52:	eb 27                	jmp    7b <Ssd1306::Start()+0x7b>
  54:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 5b <Ssd1306::Start()+0x5b>
  5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5f:	48 01 d0             	add    %rdx,%rax
  62:	0f b6 00             	movzbl (%rax),%eax
  65:	0f b6 d0             	movzbl %al,%edx
  68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  6c:	89 d6                	mov    %edx,%esi
  6e:	48 89 c7             	mov    %rax,%rdi
  71:	e8 00 00 00 00       	call   76 <Ssd1306::Start()+0x76>
  76:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  7b:	48 83 7d e8 17       	cmpq   $0x17,-0x18(%rbp)
  80:	76 d2                	jbe    54 <Ssd1306::Start()+0x54>
  82:	eb 41                	jmp    c5 <Ssd1306::Start()+0xc5>
  84:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  8b:	00 
  8c:	eb 27                	jmp    b5 <Ssd1306::Start()+0xb5>
  8e:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 95 <Ssd1306::Start()+0x95>
  95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  99:	48 01 d0             	add    %rdx,%rax
  9c:	0f b6 00             	movzbl (%rax),%eax
  9f:	0f b6 d0             	movzbl %al,%edx
  a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a6:	89 d6                	mov    %edx,%esi
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	call   b0 <Ssd1306::Start()+0xb0>
  b0:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  b5:	48 83 7d f0 17       	cmpq   $0x17,-0x10(%rbp)
  ba:	76 d2                	jbe    8e <Ssd1306::Start()+0x8e>
  bc:	eb 07                	jmp    c5 <Ssd1306::Start()+0xc5>
  be:	b8 00 00 00 00       	mov    $0x0,%eax
  c3:	eb 67                	jmp    12c <Ssd1306::Start()+0x12c>
  c5:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  cc:	00 
  cd:	eb 16                	jmp    e5 <Ssd1306::Start()+0xe5>
  cf:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # d6 <Ssd1306::Start()+0xd6>
  d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  da:	48 01 d0             	add    %rdx,%rax
  dd:	c6 00 00             	movb   $0x0,(%rax)
  e0:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  e5:	48 81 7d f8 85 00 00 	cmpq   $0x85,-0x8(%rbp)
  ec:	00 
  ed:	76 e0                	jbe    cf <Ssd1306::Start()+0xcf>
  ef:	c6 05 00 00 00 00 40 	movb   $0x40,0x0(%rip)        # f6 <Ssd1306::Start()+0xf6>
  f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  fa:	48 89 c7             	mov    %rax,%rdi
  fd:	e8 00 00 00 00       	call   102 <Ssd1306::Start()+0x102>
 102:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 106:	48 89 c7             	mov    %rax,%rdi
 109:	e8 00 00 00 00       	call   10e <Ssd1306::Start()+0x10e>
 10e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 112:	be af 00 00 00       	mov    $0xaf,%esi
 117:	48 89 c7             	mov    %rax,%rdi
 11a:	e8 00 00 00 00       	call   11f <Ssd1306::Start()+0x11f>
 11f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 123:	c6 40 11 01          	movb   $0x1,0x11(%rax)
 127:	b8 01 00 00 00       	mov    $0x1,%eax
 12c:	c9                   	leave  
 12d:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13063ClsEv:

0000000000000000 <Ssd1306::Cls()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	c6 45 fb 00          	movb   $0x0,-0x5(%rbp)
  14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  18:	0f b6 40 20          	movzbl 0x20(%rax),%eax
  1c:	84 c0                	test   %al,%al
  1e:	74 04                	je     24 <Ssd1306::Cls()+0x24>
  20:	c6 45 fb 04          	movb   $0x4,-0x5(%rbp)
  24:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  2b:	e9 aa 00 00 00       	jmp    da <Ssd1306::Cls()+0xda>
  30:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
  34:	83 e0 0f             	and    $0xf,%eax
  37:	89 c2                	mov    %eax,%edx
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	89 d6                	mov    %edx,%esi
  3f:	48 89 c7             	mov    %rax,%rdi
  42:	e8 00 00 00 00       	call   47 <Ssd1306::Cls()+0x47>
  47:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
  4b:	83 c8 10             	or     $0x10,%eax
  4e:	0f b6 d0             	movzbl %al,%edx
  51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  55:	89 d6                	mov    %edx,%esi
  57:	48 89 c7             	mov    %rax,%rdi
  5a:	e8 00 00 00 00       	call   5f <Ssd1306::Cls()+0x5f>
  5f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  62:	83 c8 b0             	or     $0xffffffb0,%eax
  65:	0f b6 d0             	movzbl %al,%edx
  68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  6c:	89 d6                	mov    %edx,%esi
  6e:	48 89 c7             	mov    %rax,%rdi
  71:	e8 00 00 00 00       	call   76 <Ssd1306::Cls()+0x76>
  76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7a:	8b 40 1c             	mov    0x1c(%rax),%eax
  7d:	85 c0                	test   %eax,%eax
  7f:	74 0e                	je     8f <Ssd1306::Cls()+0x8f>
  81:	85 c0                	test   %eax,%eax
  83:	78 50                	js     d5 <Ssd1306::Cls()+0xd5>
  85:	83 e8 01             	sub    $0x1,%eax
  88:	83 f8 01             	cmp    $0x1,%eax
  8b:	77 48                	ja     d5 <Ssd1306::Cls()+0xd5>
  8d:	eb 23                	jmp    b2 <Ssd1306::Cls()+0xb2>
  8f:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
  93:	05 81 00 00 00       	add    $0x81,%eax
  98:	89 c2                	mov    %eax,%edx
  9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  9e:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # a5 <Ssd1306::Cls()+0xa5>
  a5:	48 89 ce             	mov    %rcx,%rsi
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	call   b0 <Ssd1306::Cls()+0xb0>
  b0:	eb 24                	jmp    d6 <Ssd1306::Cls()+0xd6>
  b2:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
  b6:	05 81 00 00 00       	add    $0x81,%eax
  bb:	89 c2                	mov    %eax,%edx
  bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c1:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # c8 <Ssd1306::Cls()+0xc8>
  c8:	48 89 ce             	mov    %rcx,%rsi
  cb:	48 89 c7             	mov    %rax,%rdi
  ce:	e8 00 00 00 00       	call   d3 <Ssd1306::Cls()+0xd3>
  d3:	eb 01                	jmp    d6 <Ssd1306::Cls()+0xd6>
  d5:	90                   	nop
  d6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  de:	8b 40 24             	mov    0x24(%rax),%eax
  e1:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  e4:	0f 82 46 ff ff ff    	jb     30 <Ssd1306::Cls()+0x30>
  ea:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
  ee:	83 e0 0f             	and    $0xf,%eax
  f1:	89 c2                	mov    %eax,%edx
  f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f7:	89 d6                	mov    %edx,%esi
  f9:	48 89 c7             	mov    %rax,%rdi
  fc:	e8 00 00 00 00       	call   101 <Ssd1306::Cls()+0x101>
 101:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
 105:	83 c8 10             	or     $0x10,%eax
 108:	0f b6 d0             	movzbl %al,%edx
 10b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 10f:	89 d6                	mov    %edx,%esi
 111:	48 89 c7             	mov    %rax,%rdi
 114:	e8 00 00 00 00       	call   119 <Ssd1306::Cls()+0x119>
 119:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 11d:	be b0 00 00 00       	mov    $0xb0,%esi
 122:	48 89 c7             	mov    %rax,%rdi
 125:	e8 00 00 00 00       	call   12a <Ssd1306::Cls()+0x12a>
 12a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 12e:	66 c7 40 38 00 00    	movw   $0x0,0x38(%rax)
 134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 138:	8b 50 08             	mov    0x8(%rax),%edx
 13b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 13f:	8b 40 0c             	mov    0xc(%rax),%eax
 142:	0f af c2             	imul   %edx,%eax
 145:	89 c2                	mov    %eax,%edx
 147:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 14b:	48 8b 40 30          	mov    0x30(%rax),%rax
 14f:	be 20 00 00 00       	mov    $0x20,%esi
 154:	48 89 c7             	mov    %rax,%rdi
 157:	e8 00 00 00 00       	call   15c <Ssd1306::Cls()+0x15c>
 15c:	90                   	nop
 15d:	c9                   	leave  
 15e:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13067PutCharEi:

0000000000000000 <Ssd1306::PutChar(int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  13:	83 7d e4 1f          	cmpl   $0x1f,-0x1c(%rbp)
  17:	7e 06                	jle    1f <Ssd1306::PutChar(int)+0x1f>
  19:	83 7d e4 7f          	cmpl   $0x7f,-0x1c(%rbp)
  1d:	7e 10                	jle    2f <Ssd1306::PutChar(int)+0x2f>
  1f:	c7 45 e4 20 00 00 00 	movl   $0x20,-0x1c(%rbp)
  26:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  2d:	eb 09                	jmp    38 <Ssd1306::PutChar(int)+0x38>
  2f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  32:	83 e8 20             	sub    $0x20,%eax
  35:	89 45 f4             	mov    %eax,-0xc(%rbp)
  38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3c:	48 8b 70 30          	mov    0x30(%rax),%rsi
  40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  44:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  48:	8d 48 01             	lea    0x1(%rax),%ecx
  4b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4f:	66 89 4a 38          	mov    %cx,0x38(%rdx)
  53:	0f b7 c0             	movzwl %ax,%eax
  56:	48 01 f0             	add    %rsi,%rax
  59:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  5c:	88 10                	mov    %dl,(%rax)
  5e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  61:	89 d0                	mov    %edx,%eax
  63:	c1 e0 03             	shl    $0x3,%eax
  66:	29 d0                	sub    %edx,%eax
  68:	48 98                	cltq   
  6a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 71 <Ssd1306::PutChar(int)+0x71>
  71:	48 01 d0             	add    %rdx,%rax
  74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  78:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  80:	ba 07 00 00 00       	mov    $0x7,%edx
  85:	48 89 ce             	mov    %rcx,%rsi
  88:	48 89 c7             	mov    %rax,%rdi
  8b:	e8 00 00 00 00       	call   90 <Ssd1306::PutChar(int)+0x90>
  90:	90                   	nop
  91:	c9                   	leave  
  92:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13069PutStringEPKc:

0000000000000000 <Ssd1306::PutString(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  23:	eb 21                	jmp    46 <Ssd1306::PutString(char const*)+0x46>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	0f b6 00             	movzbl (%rax),%eax
  2c:	0f be d0             	movsbl %al,%edx
  2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  33:	89 d6                	mov    %edx,%esi
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <Ssd1306::PutString(char const*)+0x3d>
  3d:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  42:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4a:	0f b6 00             	movzbl (%rax),%eax
  4d:	84 c0                	test   %al,%al
  4f:	75 d4                	jne    25 <Ssd1306::PutString(char const*)+0x25>
  51:	90                   	nop
  52:	90                   	nop
  53:	c9                   	leave  
  54:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13069ClearLineEj:

0000000000000000 <Ssd1306::ClearLine(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	8b 40 0c             	mov    0xc(%rax),%eax
  1a:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  1d:	0f 97 c0             	seta   %al
  20:	0f b6 c0             	movzbl %al,%eax
  23:	48 85 c0             	test   %rax,%rax
  26:	75 51                	jne    79 <Ssd1306::ClearLine(unsigned int)+0x79>
  28:	8b 45 f4             	mov    -0xc(%rbp),%eax
  2b:	83 e8 01             	sub    $0x1,%eax
  2e:	0f b6 d0             	movzbl %al,%edx
  31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  35:	be 00 00 00 00       	mov    $0x0,%esi
  3a:	48 89 c7             	mov    %rax,%rdi
  3d:	e8 00 00 00 00       	call   42 <Ssd1306::ClearLine(unsigned int)+0x42>
  42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  46:	ba 81 00 00 00       	mov    $0x81,%edx
  4b:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 52 <Ssd1306::ClearLine(unsigned int)+0x52>
  52:	48 89 ce             	mov    %rcx,%rsi
  55:	48 89 c7             	mov    %rax,%rdi
  58:	e8 00 00 00 00       	call   5d <Ssd1306::ClearLine(unsigned int)+0x5d>
  5d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  60:	83 e8 01             	sub    $0x1,%eax
  63:	0f b6 d0             	movzbl %al,%edx
  66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6a:	be 00 00 00 00       	mov    $0x0,%esi
  6f:	48 89 c7             	mov    %rax,%rdi
  72:	e8 00 00 00 00       	call   77 <Ssd1306::ClearLine(unsigned int)+0x77>
  77:	eb 01                	jmp    7a <Ssd1306::ClearLine(unsigned int)+0x7a>
  79:	90                   	nop
  7a:	c9                   	leave  
  7b:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13068TextLineEjPKcj:

0000000000000000 <Ssd1306::TextLine(unsigned int, char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1e:	8b 40 0c             	mov    0xc(%rax),%eax
  21:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  24:	0f 97 c0             	seta   %al
  27:	0f b6 c0             	movzbl %al,%eax
  2a:	48 85 c0             	test   %rax,%rax
  2d:	75 32                	jne    61 <Ssd1306::TextLine(unsigned int, char const*, unsigned int)+0x61>
  2f:	8b 45 f4             	mov    -0xc(%rbp),%eax
  32:	83 e8 01             	sub    $0x1,%eax
  35:	0f b6 d0             	movzbl %al,%edx
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	be 00 00 00 00       	mov    $0x0,%esi
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <Ssd1306::TextLine(unsigned int, char const*, unsigned int)+0x49>
  49:	8b 55 f0             	mov    -0x10(%rbp),%edx
  4c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  54:	48 89 ce             	mov    %rcx,%rsi
  57:	48 89 c7             	mov    %rax,%rdi
  5a:	e8 00 00 00 00       	call   5f <Ssd1306::TextLine(unsigned int, char const*, unsigned int)+0x5f>
  5f:	eb 01                	jmp    62 <Ssd1306::TextLine(unsigned int, char const*, unsigned int)+0x62>
  61:	90                   	nop
  62:	c9                   	leave  
  63:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13064TextEPKcj:

0000000000000000 <Ssd1306::Text(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  14:	89 55 dc             	mov    %edx,-0x24(%rbp)
  17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1b:	8b 40 08             	mov    0x8(%rax),%eax
  1e:	39 45 dc             	cmp    %eax,-0x24(%rbp)
  21:	76 0a                	jbe    2d <Ssd1306::Text(char const*, unsigned int)+0x2d>
  23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  27:	8b 40 08             	mov    0x8(%rax),%eax
  2a:	89 45 dc             	mov    %eax,-0x24(%rbp)
  2d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  34:	eb 22                	jmp    58 <Ssd1306::Text(char const*, unsigned int)+0x58>
  36:	8b 55 fc             	mov    -0x4(%rbp),%edx
  39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  3d:	48 01 d0             	add    %rdx,%rax
  40:	0f b6 00             	movzbl (%rax),%eax
  43:	0f be d0             	movsbl %al,%edx
  46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4a:	89 d6                	mov    %edx,%esi
  4c:	48 89 c7             	mov    %rax,%rdi
  4f:	e8 00 00 00 00       	call   54 <Ssd1306::Text(char const*, unsigned int)+0x54>
  54:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  58:	8b 45 fc             	mov    -0x4(%rbp),%eax
  5b:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  5e:	72 d6                	jb     36 <Ssd1306::Text(char const*, unsigned int)+0x36>
  60:	90                   	nop
  61:	90                   	nop
  62:	c9                   	leave  
  63:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130612SetCursorPosEjj:

0000000000000000 <Ssd1306::SetCursorPos(unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	83 7d f4 14          	cmpl   $0x14,-0xc(%rbp)
  1a:	0f 97 c0             	seta   %al
  1d:	0f b6 c0             	movzbl %al,%eax
  20:	48 85 c0             	test   %rax,%rax
  23:	75 15                	jne    3a <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x3a>
  25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  29:	8b 40 0c             	mov    0xc(%rax),%eax
  2c:	39 45 f0             	cmp    %eax,-0x10(%rbp)
  2f:	0f 93 c0             	setae  %al
  32:	0f b6 c0             	movzbl %al,%eax
  35:	48 85 c0             	test   %rax,%rax
  38:	74 07                	je     41 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x41>
  3a:	b8 01 00 00 00       	mov    $0x1,%eax
  3f:	eb 05                	jmp    46 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x46>
  41:	b8 00 00 00 00       	mov    $0x0,%eax
  46:	0f b6 c0             	movzbl %al,%eax
  49:	48 85 c0             	test   %rax,%rax
  4c:	0f 85 f1 00 00 00    	jne    143 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x143>
  52:	8b 45 f4             	mov    -0xc(%rbp),%eax
  55:	89 c2                	mov    %eax,%edx
  57:	89 d0                	mov    %edx,%eax
  59:	01 c0                	add    %eax,%eax
  5b:	01 d0                	add    %edx,%eax
  5d:	01 c0                	add    %eax,%eax
  5f:	0f b6 c0             	movzbl %al,%eax
  62:	89 45 f4             	mov    %eax,-0xc(%rbp)
  65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  69:	0f b6 40 20          	movzbl 0x20(%rax),%eax
  6d:	84 c0                	test   %al,%al
  6f:	74 0c                	je     7d <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x7d>
  71:	8b 45 f4             	mov    -0xc(%rbp),%eax
  74:	83 c0 04             	add    $0x4,%eax
  77:	0f b6 c0             	movzbl %al,%eax
  7a:	89 45 f4             	mov    %eax,-0xc(%rbp)
  7d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  80:	0f b6 c0             	movzbl %al,%eax
  83:	83 e0 0f             	and    $0xf,%eax
  86:	89 c2                	mov    %eax,%edx
  88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8c:	89 d6                	mov    %edx,%esi
  8e:	48 89 c7             	mov    %rax,%rdi
  91:	e8 00 00 00 00       	call   96 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x96>
  96:	8b 45 f4             	mov    -0xc(%rbp),%eax
  99:	c1 e8 04             	shr    $0x4,%eax
  9c:	83 c8 10             	or     $0x10,%eax
  9f:	0f b6 d0             	movzbl %al,%edx
  a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a6:	89 d6                	mov    %edx,%esi
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	call   b0 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0xb0>
  b0:	8b 45 f0             	mov    -0x10(%rbp),%eax
  b3:	83 c8 b0             	or     $0xffffffb0,%eax
  b6:	0f b6 d0             	movzbl %al,%edx
  b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  bd:	89 d6                	mov    %edx,%esi
  bf:	48 89 c7             	mov    %rax,%rdi
  c2:	e8 00 00 00 00       	call   c7 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0xc7>
  c7:	8b 45 f0             	mov    -0x10(%rbp),%eax
  ca:	89 c2                	mov    %eax,%edx
  cc:	89 d0                	mov    %edx,%eax
  ce:	c1 e0 02             	shl    $0x2,%eax
  d1:	01 d0                	add    %edx,%eax
  d3:	c1 e0 02             	shl    $0x2,%eax
  d6:	01 c2                	add    %eax,%edx
  d8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  db:	89 c1                	mov    %eax,%ecx
  dd:	b8 ab aa aa aa       	mov    $0xaaaaaaab,%eax
  e2:	48 0f af c1          	imul   %rcx,%rax
  e6:	48 c1 e8 20          	shr    $0x20,%rax
  ea:	c1 e8 02             	shr    $0x2,%eax
  ed:	01 c2                	add    %eax,%edx
  ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  f3:	66 89 50 38          	mov    %dx,0x38(%rax)
  f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  fb:	8b 40 28             	mov    0x28(%rax),%eax
  fe:	83 f8 01             	cmp    $0x1,%eax
 101:	75 1a                	jne    11d <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x11d>
 103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 107:	48 89 c7             	mov    %rax,%rdi
 10a:	e8 00 00 00 00       	call   10f <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x10f>
 10f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 113:	48 89 c7             	mov    %rax,%rdi
 116:	e8 00 00 00 00       	call   11b <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x11b>
 11b:	eb 27                	jmp    144 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x144>
 11d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 121:	8b 40 28             	mov    0x28(%rax),%eax
 124:	83 f8 03             	cmp    $0x3,%eax
 127:	75 1b                	jne    144 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x144>
 129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 12d:	48 89 c7             	mov    %rax,%rdi
 130:	e8 00 00 00 00       	call   135 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x135>
 135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 139:	48 89 c7             	mov    %rax,%rdi
 13c:	e8 00 00 00 00       	call   141 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x141>
 141:	eb 01                	jmp    144 <Ssd1306::SetCursorPos(unsigned int, unsigned int)+0x144>
 143:	90                   	nop
 144:	c9                   	leave  
 145:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13068SetSleepEb:

0000000000000000 <Ssd1306::SetSleep(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
  19:	74 13                	je     2e <Ssd1306::SetSleep(bool)+0x2e>
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	be ae 00 00 00       	mov    $0xae,%esi
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <Ssd1306::SetSleep(bool)+0x2c>
  2c:	eb 11                	jmp    3f <Ssd1306::SetSleep(bool)+0x3f>
  2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  32:	be af 00 00 00       	mov    $0xaf,%esi
  37:	48 89 c7             	mov    %rax,%rdi
  3a:	e8 00 00 00 00       	call   3f <Ssd1306::SetSleep(bool)+0x3f>
  3f:	90                   	nop
  40:	c9                   	leave  
  41:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130611SetContrastEh:

0000000000000000 <Ssd1306::SetContrast(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  1d:	88 50 10             	mov    %dl,0x10(%rax)
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	be 81 00 00 00       	mov    $0x81,%esi
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	call   31 <Ssd1306::SetContrast(unsigned char)+0x31>
  31:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  39:	89 d6                	mov    %edx,%esi
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	e8 00 00 00 00       	call   43 <Ssd1306::SetContrast(unsigned char)+0x43>
  43:	90                   	nop
  44:	c9                   	leave  
  45:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130617SetFlipVerticallyEb:

0000000000000000 <Ssd1306::SetFlipVertically(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  1d:	88 50 11             	mov    %dl,0x11(%rax)
  20:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
  24:	74 24                	je     4a <Ssd1306::SetFlipVertically(bool)+0x4a>
  26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2a:	be c0 00 00 00       	mov    $0xc0,%esi
  2f:	48 89 c7             	mov    %rax,%rdi
  32:	e8 00 00 00 00       	call   37 <Ssd1306::SetFlipVertically(bool)+0x37>
  37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3b:	be a0 00 00 00       	mov    $0xa0,%esi
  40:	48 89 c7             	mov    %rax,%rdi
  43:	e8 00 00 00 00       	call   48 <Ssd1306::SetFlipVertically(bool)+0x48>
  48:	eb 22                	jmp    6c <Ssd1306::SetFlipVertically(bool)+0x6c>
  4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4e:	be c8 00 00 00       	mov    $0xc8,%esi
  53:	48 89 c7             	mov    %rax,%rdi
  56:	e8 00 00 00 00       	call   5b <Ssd1306::SetFlipVertically(bool)+0x5b>
  5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5f:	be a1 00 00 00       	mov    $0xa1,%esi
  64:	48 89 c7             	mov    %rax,%rdi
  67:	e8 00 00 00 00       	call   6c <Ssd1306::SetFlipVertically(bool)+0x6c>
  6c:	90                   	nop
  6d:	c9                   	leave  
  6e:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130611InitMembersEv:

0000000000000000 <Ssd1306::InitMembers()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 40 1c             	mov    0x1c(%rax),%eax
  17:	85 c0                	test   %eax,%eax
  19:	74 0e                	je     29 <Ssd1306::InitMembers()+0x29>
  1b:	85 c0                	test   %eax,%eax
  1d:	78 3a                	js     59 <Ssd1306::InitMembers()+0x59>
  1f:	83 e8 01             	sub    $0x1,%eax
  22:	83 f8 01             	cmp    $0x1,%eax
  25:	77 32                	ja     59 <Ssd1306::InitMembers()+0x59>
  27:	eb 18                	jmp    41 <Ssd1306::InitMembers()+0x41>
  29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2d:	c7 40 08 15 00 00 00 	movl   $0x15,0x8(%rax)
  34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  38:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%rax)
  3f:	eb 2f                	jmp    70 <Ssd1306::InitMembers()+0x70>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	c7 40 08 15 00 00 00 	movl   $0x15,0x8(%rax)
  4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  50:	c7 40 0c 04 00 00 00 	movl   $0x4,0xc(%rax)
  57:	eb 17                	jmp    70 <Ssd1306::InitMembers()+0x70>
  59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5d:	c7 40 08 15 00 00 00 	movl   $0x15,0x8(%rax)
  64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  68:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%rax)
  6f:	90                   	nop
  70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  74:	8b 40 1c             	mov    0x1c(%rax),%eax
  77:	85 c0                	test   %eax,%eax
  79:	75 07                	jne    82 <Ssd1306::InitMembers()+0x82>
  7b:	ba 08 00 00 00       	mov    $0x8,%edx
  80:	eb 05                	jmp    87 <Ssd1306::InitMembers()+0x87>
  82:	ba 04 00 00 00       	mov    $0x4,%edx
  87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8b:	89 50 24             	mov    %edx,0x24(%rax)
  8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  92:	8b 50 0c             	mov    0xc(%rax),%edx
  95:	89 d0                	mov    %edx,%eax
  97:	c1 e0 02             	shl    $0x2,%eax
  9a:	01 d0                	add    %edx,%eax
  9c:	c1 e0 02             	shl    $0x2,%eax
  9f:	01 d0                	add    %edx,%eax
  a1:	89 c0                	mov    %eax,%eax
  a3:	48 89 c7             	mov    %rax,%rdi
  a6:	e8 00 00 00 00       	call   ab <Ssd1306::InitMembers()+0xab>
  ab:	48 89 c2             	mov    %rax,%rdx
  ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b2:	48 89 50 30          	mov    %rdx,0x30(%rax)
  b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ba:	66 c7 40 38 00 00    	movw   $0x0,0x38(%rax)
  c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  c4:	8b 50 0c             	mov    0xc(%rax),%edx
  c7:	89 d0                	mov    %edx,%eax
  c9:	c1 e0 02             	shl    $0x2,%eax
  cc:	01 d0                	add    %edx,%eax
  ce:	c1 e0 02             	shl    $0x2,%eax
  d1:	01 d0                	add    %edx,%eax
  d3:	89 c2                	mov    %eax,%edx
  d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d9:	48 8b 40 30          	mov    0x30(%rax),%rax
  dd:	be 20 00 00 00       	mov    $0x20,%esi
  e2:	48 89 c7             	mov    %rax,%rdi
  e5:	e8 00 00 00 00       	call   ea <Ssd1306::InitMembers()+0xea>
  ea:	90                   	nop
  eb:	c9                   	leave  
  ec:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130611SendCommandEh:

0000000000000000 <Ssd1306::SendCommand(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8d 48 14          	lea    0x14(%rax),%rcx
  1d:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  21:	89 c2                	mov    %eax,%edx
  23:	be 00 00 00 00       	mov    $0x0,%esi
  28:	48 89 cf             	mov    %rcx,%rdi
  2b:	e8 00 00 00 00       	call   30 <Ssd1306::SendCommand(unsigned char)+0x30>
  30:	90                   	nop
  31:	c9                   	leave  
  32:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13068SendDataEPKhj:

0000000000000000 <Ssd1306::SendData(unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 8d 48 14          	lea    0x14(%rax),%rcx
  1f:	8b 55 ec             	mov    -0x14(%rbp),%edx
  22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 89 cf             	mov    %rcx,%rdi
  2c:	e8 00 00 00 00       	call   31 <Ssd1306::SendData(unsigned char const*, unsigned int)+0x31>
  31:	90                   	nop
  32:	c9                   	leave  
  33:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13069SetCursorEj:

0000000000000000 <Ssd1306::SetCursor(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	8b 40 28             	mov    0x28(%rax),%eax
  1a:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  1d:	74 4c                	je     6b <Ssd1306::SetCursor(unsigned int)+0x6b>
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	8b 55 f4             	mov    -0xc(%rbp),%edx
  26:	89 50 28             	mov    %edx,0x28(%rax)
  29:	8b 45 f4             	mov    -0xc(%rbp),%eax
  2c:	83 f8 03             	cmp    $0x3,%eax
  2f:	74 2c                	je     5d <Ssd1306::SetCursor(unsigned int)+0x5d>
  31:	83 f8 03             	cmp    $0x3,%eax
  34:	7f 38                	jg     6e <Ssd1306::SetCursor(unsigned int)+0x6e>
  36:	85 c0                	test   %eax,%eax
  38:	74 07                	je     41 <Ssd1306::SetCursor(unsigned int)+0x41>
  3a:	83 f8 01             	cmp    $0x1,%eax
  3d:	74 10                	je     4f <Ssd1306::SetCursor(unsigned int)+0x4f>
  3f:	eb 2d                	jmp    6e <Ssd1306::SetCursor(unsigned int)+0x6e>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	48 89 c7             	mov    %rax,%rdi
  48:	e8 00 00 00 00       	call   4d <Ssd1306::SetCursor(unsigned int)+0x4d>
  4d:	eb 20                	jmp    6f <Ssd1306::SetCursor(unsigned int)+0x6f>
  4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  53:	48 89 c7             	mov    %rax,%rdi
  56:	e8 00 00 00 00       	call   5b <Ssd1306::SetCursor(unsigned int)+0x5b>
  5b:	eb 12                	jmp    6f <Ssd1306::SetCursor(unsigned int)+0x6f>
  5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  61:	48 89 c7             	mov    %rax,%rdi
  64:	e8 00 00 00 00       	call   69 <Ssd1306::SetCursor(unsigned int)+0x69>
  69:	eb 04                	jmp    6f <Ssd1306::SetCursor(unsigned int)+0x6f>
  6b:	90                   	nop
  6c:	eb 01                	jmp    6f <Ssd1306::SetCursor(unsigned int)+0x6f>
  6e:	90                   	nop
  6f:	c9                   	leave  
  70:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130611SetCursorOnEv:

0000000000000000 <Ssd1306::SetCursorOn()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  27:	0f b7 d0             	movzwl %ax,%edx
  2a:	48 63 c2             	movslq %edx,%rax
  2d:	48 69 c0 31 0c c3 30 	imul   $0x30c30c31,%rax,%rax
  34:	48 c1 e8 20          	shr    $0x20,%rax
  38:	c1 f8 02             	sar    $0x2,%eax
  3b:	89 d6                	mov    %edx,%esi
  3d:	c1 fe 1f             	sar    $0x1f,%esi
  40:	29 f0                	sub    %esi,%eax
  42:	89 c1                	mov    %eax,%ecx
  44:	89 c8                	mov    %ecx,%eax
  46:	c1 e0 02             	shl    $0x2,%eax
  49:	01 c8                	add    %ecx,%eax
  4b:	c1 e0 02             	shl    $0x2,%eax
  4e:	01 c8                	add    %ecx,%eax
  50:	89 d1                	mov    %edx,%ecx
  52:	29 c1                	sub    %eax,%ecx
  54:	89 ca                	mov    %ecx,%edx
  56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5a:	88 50 3b             	mov    %dl,0x3b(%rax)
  5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  61:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  65:	0f b7 c0             	movzwl %ax,%eax
  68:	48 63 d0             	movslq %eax,%rdx
  6b:	48 69 d2 31 0c c3 30 	imul   $0x30c30c31,%rdx,%rdx
  72:	48 c1 ea 20          	shr    $0x20,%rdx
  76:	c1 fa 02             	sar    $0x2,%edx
  79:	c1 f8 1f             	sar    $0x1f,%eax
  7c:	89 c1                	mov    %eax,%ecx
  7e:	89 d0                	mov    %edx,%eax
  80:	29 c8                	sub    %ecx,%eax
  82:	89 c2                	mov    %eax,%edx
  84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  88:	88 50 3c             	mov    %dl,0x3c(%rax)
  8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  8f:	48 8b 50 30          	mov    0x30(%rax),%rdx
  93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  97:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  9b:	0f b7 c0             	movzwl %ax,%eax
  9e:	48 01 d0             	add    %rdx,%rax
  a1:	0f b6 00             	movzbl (%rax),%eax
  a4:	8d 50 e0             	lea    -0x20(%rax),%edx
  a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ab:	88 50 3a             	mov    %dl,0x3a(%rax)
  ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b2:	0f b6 40 3a          	movzbl 0x3a(%rax),%eax
  b6:	0f b6 d0             	movzbl %al,%edx
  b9:	89 d0                	mov    %edx,%eax
  bb:	c1 e0 03             	shl    $0x3,%eax
  be:	29 d0                	sub    %edx,%eax
  c0:	48 98                	cltq   
  c2:	48 8d 50 01          	lea    0x1(%rax),%rdx
  c6:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # cd <Ssd1306::SetCursorOn()+0xcd>
  cd:	48 01 d0             	add    %rdx,%rax
  d0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  d4:	c6 45 f1 40          	movb   $0x40,-0xf(%rbp)
  d8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
  df:	eb 1c                	jmp    fd <Ssd1306::SetCursorOn()+0xfd>
  e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e5:	0f b6 00             	movzbl (%rax),%eax
  e8:	83 c8 80             	or     $0xffffff80,%eax
  eb:	89 c2                	mov    %eax,%edx
  ed:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  f0:	88 54 05 f1          	mov    %dl,-0xf(%rbp,%rax,1)
  f4:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  f9:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  fd:	83 7d e4 06          	cmpl   $0x6,-0x1c(%rbp)
 101:	76 de                	jbe    e1 <Ssd1306::SetCursorOn()+0xe1>
 103:	48 8d 4d f1          	lea    -0xf(%rbp),%rcx
 107:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 10b:	ba 07 00 00 00       	mov    $0x7,%edx
 110:	48 89 ce             	mov    %rcx,%rsi
 113:	48 89 c7             	mov    %rax,%rdi
 116:	e8 00 00 00 00       	call   11b <Ssd1306::SetCursorOn()+0x11b>
 11b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 11f:	0f b6 40 3c          	movzbl 0x3c(%rax),%eax
 123:	0f b6 d0             	movzbl %al,%edx
 126:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 12a:	0f b6 40 3b          	movzbl 0x3b(%rax),%eax
 12e:	0f b6 c8             	movzbl %al,%ecx
 131:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 135:	89 ce                	mov    %ecx,%esi
 137:	48 89 c7             	mov    %rax,%rdi
 13a:	e8 00 00 00 00       	call   13f <Ssd1306::SetCursorOn()+0x13f>
 13f:	90                   	nop
 140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 144:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 14b:	00 00 
 14d:	74 05                	je     154 <Ssd1306::SetCursorOn()+0x154>
 14f:	e8 00 00 00 00       	call   154 <Ssd1306::SetCursorOn()+0x154>
 154:	c9                   	leave  
 155:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130616SetCursorBlinkOnEv:

0000000000000000 <Ssd1306::SetCursorBlinkOn()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  27:	0f b7 d0             	movzwl %ax,%edx
  2a:	48 63 c2             	movslq %edx,%rax
  2d:	48 69 c0 31 0c c3 30 	imul   $0x30c30c31,%rax,%rax
  34:	48 c1 e8 20          	shr    $0x20,%rax
  38:	c1 f8 02             	sar    $0x2,%eax
  3b:	89 d6                	mov    %edx,%esi
  3d:	c1 fe 1f             	sar    $0x1f,%esi
  40:	29 f0                	sub    %esi,%eax
  42:	89 c1                	mov    %eax,%ecx
  44:	89 c8                	mov    %ecx,%eax
  46:	c1 e0 02             	shl    $0x2,%eax
  49:	01 c8                	add    %ecx,%eax
  4b:	c1 e0 02             	shl    $0x2,%eax
  4e:	01 c8                	add    %ecx,%eax
  50:	89 d1                	mov    %edx,%ecx
  52:	29 c1                	sub    %eax,%ecx
  54:	89 ca                	mov    %ecx,%edx
  56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5a:	88 50 3b             	mov    %dl,0x3b(%rax)
  5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  61:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  65:	0f b7 c0             	movzwl %ax,%eax
  68:	48 63 d0             	movslq %eax,%rdx
  6b:	48 69 d2 31 0c c3 30 	imul   $0x30c30c31,%rdx,%rdx
  72:	48 c1 ea 20          	shr    $0x20,%rdx
  76:	c1 fa 02             	sar    $0x2,%edx
  79:	c1 f8 1f             	sar    $0x1f,%eax
  7c:	89 c1                	mov    %eax,%ecx
  7e:	89 d0                	mov    %edx,%eax
  80:	29 c8                	sub    %ecx,%eax
  82:	89 c2                	mov    %eax,%edx
  84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  88:	88 50 3c             	mov    %dl,0x3c(%rax)
  8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  8f:	48 8b 50 30          	mov    0x30(%rax),%rdx
  93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  97:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  9b:	0f b7 c0             	movzwl %ax,%eax
  9e:	48 01 d0             	add    %rdx,%rax
  a1:	0f b6 00             	movzbl (%rax),%eax
  a4:	8d 50 e0             	lea    -0x20(%rax),%edx
  a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  ab:	88 50 3a             	mov    %dl,0x3a(%rax)
  ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  b2:	0f b6 40 3a          	movzbl 0x3a(%rax),%eax
  b6:	0f b6 d0             	movzbl %al,%edx
  b9:	89 d0                	mov    %edx,%eax
  bb:	c1 e0 03             	shl    $0x3,%eax
  be:	29 d0                	sub    %edx,%eax
  c0:	48 98                	cltq   
  c2:	48 8d 50 01          	lea    0x1(%rax),%rdx
  c6:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # cd <Ssd1306::SetCursorBlinkOn()+0xcd>
  cd:	48 01 d0             	add    %rdx,%rax
  d0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  d4:	c6 45 f1 40          	movb   $0x40,-0xf(%rbp)
  d8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
  df:	eb 1b                	jmp    fc <Ssd1306::SetCursorBlinkOn()+0xfc>
  e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e5:	0f b6 00             	movzbl (%rax),%eax
  e8:	f7 d0                	not    %eax
  ea:	89 c2                	mov    %eax,%edx
  ec:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  ef:	88 54 05 f1          	mov    %dl,-0xf(%rbp,%rax,1)
  f3:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  f8:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  fc:	83 7d e4 06          	cmpl   $0x6,-0x1c(%rbp)
 100:	76 df                	jbe    e1 <Ssd1306::SetCursorBlinkOn()+0xe1>
 102:	48 8d 4d f1          	lea    -0xf(%rbp),%rcx
 106:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 10a:	ba 07 00 00 00       	mov    $0x7,%edx
 10f:	48 89 ce             	mov    %rcx,%rsi
 112:	48 89 c7             	mov    %rax,%rdi
 115:	e8 00 00 00 00       	call   11a <Ssd1306::SetCursorBlinkOn()+0x11a>
 11a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 11e:	0f b6 40 3c          	movzbl 0x3c(%rax),%eax
 122:	0f b6 d0             	movzbl %al,%edx
 125:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 129:	0f b6 40 3b          	movzbl 0x3b(%rax),%eax
 12d:	0f b6 c8             	movzbl %al,%ecx
 130:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 134:	89 ce                	mov    %ecx,%esi
 136:	48 89 c7             	mov    %rax,%rdi
 139:	e8 00 00 00 00       	call   13e <Ssd1306::SetCursorBlinkOn()+0x13e>
 13e:	90                   	nop
 13f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 143:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
 14a:	00 00 
 14c:	74 05                	je     153 <Ssd1306::SetCursorBlinkOn()+0x153>
 14e:	e8 00 00 00 00       	call   153 <Ssd1306::SetCursorBlinkOn()+0x153>
 153:	c9                   	leave  
 154:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130612SetCursorOffEv:

0000000000000000 <Ssd1306::SetCursorOff()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  18:	0f b7 c8             	movzwl %ax,%ecx
  1b:	48 63 c1             	movslq %ecx,%rax
  1e:	48 69 c0 31 0c c3 30 	imul   $0x30c30c31,%rax,%rax
  25:	48 c1 e8 20          	shr    $0x20,%rax
  29:	c1 f8 02             	sar    $0x2,%eax
  2c:	89 ce                	mov    %ecx,%esi
  2e:	c1 fe 1f             	sar    $0x1f,%esi
  31:	29 f0                	sub    %esi,%eax
  33:	89 c2                	mov    %eax,%edx
  35:	89 d0                	mov    %edx,%eax
  37:	c1 e0 02             	shl    $0x2,%eax
  3a:	01 d0                	add    %edx,%eax
  3c:	c1 e0 02             	shl    $0x2,%eax
  3f:	01 d0                	add    %edx,%eax
  41:	29 c1                	sub    %eax,%ecx
  43:	89 ca                	mov    %ecx,%edx
  45:	88 55 f6             	mov    %dl,-0xa(%rbp)
  48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4c:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  50:	0f b7 c0             	movzwl %ax,%eax
  53:	48 63 d0             	movslq %eax,%rdx
  56:	48 69 d2 31 0c c3 30 	imul   $0x30c30c31,%rdx,%rdx
  5d:	48 c1 ea 20          	shr    $0x20,%rdx
  61:	c1 fa 02             	sar    $0x2,%edx
  64:	c1 f8 1f             	sar    $0x1f,%eax
  67:	89 c1                	mov    %eax,%ecx
  69:	89 d0                	mov    %edx,%eax
  6b:	29 c8                	sub    %ecx,%eax
  6d:	88 45 f7             	mov    %al,-0x9(%rbp)
  70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  74:	0f b6 40 3c          	movzbl 0x3c(%rax),%eax
  78:	0f b6 d0             	movzbl %al,%edx
  7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7f:	0f b6 40 3b          	movzbl 0x3b(%rax),%eax
  83:	0f b6 c8             	movzbl %al,%ecx
  86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  8a:	89 ce                	mov    %ecx,%esi
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	e8 00 00 00 00       	call   94 <Ssd1306::SetCursorOff()+0x94>
  94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  98:	0f b6 40 3a          	movzbl 0x3a(%rax),%eax
  9c:	0f b6 d0             	movzbl %al,%edx
  9f:	89 d0                	mov    %edx,%eax
  a1:	c1 e0 03             	shl    $0x3,%eax
  a4:	29 d0                	sub    %edx,%eax
  a6:	48 98                	cltq   
  a8:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # af <Ssd1306::SetCursorOff()+0xaf>
  af:	48 01 d0             	add    %rdx,%rax
  b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  b6:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  be:	ba 07 00 00 00       	mov    $0x7,%edx
  c3:	48 89 ce             	mov    %rcx,%rsi
  c6:	48 89 c7             	mov    %rax,%rdi
  c9:	e8 00 00 00 00       	call   ce <Ssd1306::SetCursorOff()+0xce>
  ce:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
  d2:	0f b6 4d f6          	movzbl -0xa(%rbp),%ecx
  d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  da:	89 ce                	mov    %ecx,%esi
  dc:	48 89 c7             	mov    %rax,%rdi
  df:	e8 00 00 00 00       	call   e4 <Ssd1306::SetCursorOff()+0xe4>
  e4:	90                   	nop
  e5:	c9                   	leave  
  e6:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130612SetColumnRowEhh:

0000000000000000 <Ssd1306::SetColumnRow(unsigned char, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	88 45 e0             	mov    %al,-0x20(%rbp)
  1c:	0f b6 55 e4          	movzbl -0x1c(%rbp),%edx
  20:	89 d0                	mov    %edx,%eax
  22:	01 c0                	add    %eax,%eax
  24:	01 d0                	add    %edx,%eax
  26:	01 c0                	add    %eax,%eax
  28:	88 45 ff             	mov    %al,-0x1(%rbp)
  2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  2f:	0f b6 40 20          	movzbl 0x20(%rax),%eax
  33:	84 c0                	test   %al,%al
  35:	74 04                	je     3b <Ssd1306::SetColumnRow(unsigned char, unsigned char)+0x3b>
  37:	80 45 ff 04          	addb   $0x4,-0x1(%rbp)
  3b:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  3f:	83 e0 0f             	and    $0xf,%eax
  42:	89 c2                	mov    %eax,%edx
  44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  48:	89 d6                	mov    %edx,%esi
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	e8 00 00 00 00       	call   52 <Ssd1306::SetColumnRow(unsigned char, unsigned char)+0x52>
  52:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  56:	c0 e8 04             	shr    $0x4,%al
  59:	83 c8 10             	or     $0x10,%eax
  5c:	0f b6 d0             	movzbl %al,%edx
  5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  63:	89 d6                	mov    %edx,%esi
  65:	48 89 c7             	mov    %rax,%rdi
  68:	e8 00 00 00 00       	call   6d <Ssd1306::SetColumnRow(unsigned char, unsigned char)+0x6d>
  6d:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
  71:	83 c8 b0             	or     $0xffffffb0,%eax
  74:	0f b6 d0             	movzbl %al,%edx
  77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7b:	89 d6                	mov    %edx,%esi
  7d:	48 89 c7             	mov    %rax,%rdi
  80:	e8 00 00 00 00       	call   85 <Ssd1306::SetColumnRow(unsigned char, unsigned char)+0x85>
  85:	90                   	nop
  86:	c9                   	leave  
  87:	c3                   	ret    

Disassembly of section .text._ZN7Ssd130613DumpShadowRamEv:

0000000000000000 <Ssd1306::DumpShadowRam()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  17:	eb 42                	jmp    5b <Ssd1306::DumpShadowRam()+0x5b>
  19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  1d:	48 8b 48 30          	mov    0x30(%rax),%rcx
  21:	8b 55 fc             	mov    -0x4(%rbp),%edx
  24:	89 d0                	mov    %edx,%eax
  26:	c1 e0 02             	shl    $0x2,%eax
  29:	01 d0                	add    %edx,%eax
  2b:	c1 e0 02             	shl    $0x2,%eax
  2e:	01 d0                	add    %edx,%eax
  30:	89 c0                	mov    %eax,%eax
  32:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
  36:	8b 45 fc             	mov    -0x4(%rbp),%eax
  39:	48 89 d1             	mov    %rdx,%rcx
  3c:	ba 15 00 00 00       	mov    $0x15,%edx
  41:	89 c6                	mov    %eax,%esi
  43:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 4a <Ssd1306::DumpShadowRam()+0x4a>
  4a:	48 89 c7             	mov    %rax,%rdi
  4d:	b8 00 00 00 00       	mov    $0x0,%eax
  52:	e8 00 00 00 00       	call   57 <Ssd1306::DumpShadowRam()+0x57>
  57:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  5f:	8b 40 0c             	mov    0xc(%rax),%eax
  62:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  65:	72 b2                	jb     19 <Ssd1306::DumpShadowRam()+0x19>
  67:	90                   	nop
  68:	90                   	nop
  69:	c9                   	leave  
  6a:	c3                   	ret    

ssd1311.o:     file format elf64-x86-64


Disassembly of section .text._ZN10DisplaySetD2Ev:

0000000000000000 <DisplaySet::~DisplaySet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DisplaySet::~DisplaySet()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	90                   	nop
  1b:	5d                   	pop    %rbp
  1c:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySetD0Ev:

0000000000000000 <DisplaySet::~DisplaySet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <DisplaySet::~DisplaySet()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <DisplaySet::~DisplaySet()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet8SetSleepEb:

0000000000000000 <DisplaySet::SetSleep(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet11SetContrastEh:

0000000000000000 <DisplaySet::SetContrast(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet17SetFlipVerticallyEb:

0000000000000000 <DisplaySet::SetFlipVertically(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	88 45 f4             	mov    %al,-0xc(%rbp)
  11:	90                   	nop
  12:	5d                   	pop    %rbp
  13:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySet9PrintInfoEv:

0000000000000000 <DisplaySet::PrintInfo()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	90                   	nop
   d:	5d                   	pop    %rbp
   e:	c3                   	ret    

Disassembly of section .text.i2c_set_baudrate:

0000000000000000 <i2c_set_baudrate>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	90                   	nop
   8:	5d                   	pop    %rbp
   9:	c3                   	ret    

Disassembly of section .text.i2c_set_address:

0000000000000000 <i2c_set_address>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 f8                	mov    %edi,%eax
   6:	88 45 fc             	mov    %al,-0x4(%rbp)
   9:	90                   	nop
   a:	5d                   	pop    %rbp
   b:	c3                   	ret    

Disassembly of section .text.i2c_write:

0000000000000000 <i2c_write>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text.i2c_read:

0000000000000000 <i2c_read>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   8:	89 75 f4             	mov    %esi,-0xc(%rbp)
   b:	b8 01 00 00 00       	mov    $0x1,%eax
  10:	5d                   	pop    %rbp
  11:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2CC2Ehj:

0000000000000000 <HAL_I2C::HAL_I2C(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	89 f0                	mov    %esi,%eax
   e:	89 55 f0             	mov    %edx,-0x10(%rbp)
  11:	88 45 f4             	mov    %al,-0xc(%rbp)
  14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  18:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  1c:	88 10                	mov    %dl,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	8b 55 f0             	mov    -0x10(%rbp),%edx
  25:	89 50 04             	mov    %edx,0x4(%rax)
  28:	90                   	nop
  29:	5d                   	pop    %rbp
  2a:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C11IsConnectedEv:

0000000000000000 <HAL_I2C::IsConnected()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 50 04             	mov    0x4(%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	0f b6 00             	movzbl (%rax),%eax
  1e:	0f b6 c0             	movzbl %al,%eax
  21:	89 d6                	mov    %edx,%esi
  23:	89 c7                	mov    %eax,%edi
  25:	e8 00 00 00 00       	call   2a <HAL_I2C::IsConnected()+0x2a>
  2a:	c9                   	leave  
  2b:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5WriteEc:

0000000000000000 <HAL_I2C::Write(char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <HAL_I2C::Write(char)+0x21>
  21:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
  25:	be 01 00 00 00       	mov    $0x1,%esi
  2a:	48 89 c7             	mov    %rax,%rdi
  2d:	e8 00 00 00 00       	call   32 <HAL_I2C::Write(char)+0x32>
  32:	90                   	nop
  33:	c9                   	leave  
  34:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5WriteEPKcj:

0000000000000000 <HAL_I2C::Write(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <HAL_I2C::Write(char const*, unsigned int)+0x23>
  23:	8b 55 ec             	mov    -0x14(%rbp),%edx
  26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2a:	89 d6                	mov    %edx,%esi
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	e8 00 00 00 00       	call   34 <HAL_I2C::Write(char const*, unsigned int)+0x34>
  34:	90                   	nop
  35:	c9                   	leave  
  36:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C13WriteRegisterEhh:

0000000000000000 <HAL_I2C::WriteRegister(unsigned char, unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	89 f1                	mov    %esi,%ecx
  12:	89 d0                	mov    %edx,%eax
  14:	89 ca                	mov    %ecx,%edx
  16:	88 55 e4             	mov    %dl,-0x1c(%rbp)
  19:	88 45 e0             	mov    %al,-0x20(%rbp)
  1c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  23:	00 00 
  25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  29:	31 c0                	xor    %eax,%eax
  2b:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
  2f:	88 45 f6             	mov    %al,-0xa(%rbp)
  32:	0f b6 45 e0          	movzbl -0x20(%rbp),%eax
  36:	88 45 f7             	mov    %al,-0x9(%rbp)
  39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  3d:	48 89 c7             	mov    %rax,%rdi
  40:	e8 00 00 00 00       	call   45 <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x45>
  45:	48 8d 45 f6          	lea    -0xa(%rbp),%rax
  49:	be 02 00 00 00       	mov    $0x2,%esi
  4e:	48 89 c7             	mov    %rax,%rdi
  51:	e8 00 00 00 00       	call   56 <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x56>
  56:	90                   	nop
  57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  62:	00 00 
  64:	74 05                	je     6b <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x6b>
  66:	e8 00 00 00 00       	call   6b <HAL_I2C::WriteRegister(unsigned char, unsigned char)+0x6b>
  6b:	c9                   	leave  
  6c:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C4ReadEPcj:

0000000000000000 <HAL_I2C::Read(char*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 c7             	mov    %rax,%rdi
  1e:	e8 00 00 00 00       	call   23 <HAL_I2C::Read(char*, unsigned int)+0x23>
  23:	8b 55 ec             	mov    -0x14(%rbp),%edx
  26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2a:	89 d6                	mov    %edx,%esi
  2c:	48 89 c7             	mov    %rax,%rdi
  2f:	e8 00 00 00 00       	call   34 <HAL_I2C::Read(char*, unsigned int)+0x34>
  34:	c9                   	leave  
  35:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C5SetupEv:

0000000000000000 <HAL_I2C::Setup()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 08          	sub    $0x8,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	0f b6 00             	movzbl (%rax),%eax
  17:	0f b6 c0             	movzbl %al,%eax
  1a:	89 c7                	mov    %eax,%edi
  1c:	e8 00 00 00 00       	call   21 <HAL_I2C::Setup()+0x21>
  21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  25:	8b 40 04             	mov    0x4(%rax),%eax
  28:	89 c7                	mov    %eax,%edi
  2a:	e8 00 00 00 00       	call   2f <HAL_I2C::Setup()+0x2f>
  2f:	90                   	nop
  30:	c9                   	leave  
  31:	c3                   	ret    

Disassembly of section .text._ZN7HAL_I2C12IsConnected_Ehj:

0000000000000000 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	89 f8                	mov    %edi,%eax
   e:	89 75 e8             	mov    %esi,-0x18(%rbp)
  11:	88 45 ec             	mov    %al,-0x14(%rbp)
  14:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  1b:	00 00 
  1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  21:	31 c0                	xor    %eax,%eax
  23:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  27:	89 c7                	mov    %eax,%edi
  29:	e8 00 00 00 00       	call   2e <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x2e>
  2e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  31:	89 c7                	mov    %eax,%edi
  33:	e8 00 00 00 00       	call   38 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x38>
  38:	80 7d ec 2f          	cmpb   $0x2f,-0x14(%rbp)
  3c:	76 06                	jbe    44 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x44>
  3e:	80 7d ec 37          	cmpb   $0x37,-0x14(%rbp)
  42:	76 0c                	jbe    50 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x50>
  44:	80 7d ec 4f          	cmpb   $0x4f,-0x14(%rbp)
  48:	76 1e                	jbe    68 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x68>
  4a:	80 7d ec 5f          	cmpb   $0x5f,-0x14(%rbp)
  4e:	77 18                	ja     68 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x68>
  50:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
  54:	be 01 00 00 00       	mov    $0x1,%esi
  59:	48 89 c7             	mov    %rax,%rdi
  5c:	e8 00 00 00 00       	call   61 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x61>
  61:	84 c0                	test   %al,%al
  63:	0f 94 c0             	sete   %al
  66:	eb 14                	jmp    7c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x7c>
  68:	be 00 00 00 00       	mov    $0x0,%esi
  6d:	bf 00 00 00 00       	mov    $0x0,%edi
  72:	e8 00 00 00 00       	call   77 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x77>
  77:	84 c0                	test   %al,%al
  79:	0f 94 c0             	sete   %al
  7c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  80:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  87:	00 00 
  89:	74 05                	je     90 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
  8b:	e8 00 00 00 00       	call   90 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x90>
  90:	c9                   	leave  
  91:	c3                   	ret    

Disassembly of section .text._ZN7Ssd1311D2Ev:

0000000000000000 <Ssd1311::~Ssd1311()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 17 <Ssd1311::~Ssd1311()+0x17>
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 89 10             	mov    %rdx,(%rax)
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	48 89 c7             	mov    %rax,%rdi
  25:	e8 00 00 00 00       	call   2a <Ssd1311::~Ssd1311()+0x2a>
  2a:	90                   	nop
  2b:	c9                   	leave  
  2c:	c3                   	ret    

Disassembly of section .text._ZN7Ssd1311D0Ev:

0000000000000000 <Ssd1311::~Ssd1311()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <Ssd1311::~Ssd1311()+0x1c>
  1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	call   28 <Ssd1311::~Ssd1311()+0x28>
  28:	c9                   	leave  
  29:	c3                   	ret    

Disassembly of section .text._ZN10DisplaySetC2Ev:

0000000000000000 <DisplaySet::DisplaySet()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 13 <DisplaySet::DisplaySet()+0x13>
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	48 89 10             	mov    %rdx,(%rax)
  1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1e:	c6 40 10 7f          	movb   $0x7f,0x10(%rax)
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	c6 40 11 00          	movb   $0x0,0x11(%rax)
  2a:	90                   	nop
  2b:	5d                   	pop    %rbp
  2c:	c3                   	ret    

Disassembly of section .text._ZN7Ssd1311C2Ev:

0000000000000000 <Ssd1311::Ssd1311()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	48 89 c7             	mov    %rax,%rdi
  17:	e8 00 00 00 00       	call   1c <Ssd1311::Ssd1311()+0x1c>
  1c:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 23 <Ssd1311::Ssd1311()+0x23>
  23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  27:	48 89 10             	mov    %rdx,(%rax)
  2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2e:	48 83 c0 14          	add    $0x14,%rax
  32:	ba 80 1a 06 00       	mov    $0x61a80,%edx
  37:	be 3c 00 00 00       	mov    $0x3c,%esi
  3c:	48 89 c7             	mov    %rax,%rdi
  3f:	e8 00 00 00 00       	call   44 <Ssd1311::Ssd1311()+0x44>
  44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  48:	c6 40 1c 08          	movb   $0x8,0x1c(%rax)
  4c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 53 <Ssd1311::Ssd1311()+0x53>
  53:	48 85 c0             	test   %rax,%rax
  56:	74 28                	je     80 <Ssd1311::Ssd1311()+0x80>
  58:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 5f <Ssd1311::Ssd1311()+0x5f>
  5f:	48 89 c1             	mov    %rax,%rcx
  62:	ba 3f 00 00 00       	mov    $0x3f,%edx
  67:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 6e <Ssd1311::Ssd1311()+0x6e>
  6e:	48 89 c6             	mov    %rax,%rsi
  71:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 78 <Ssd1311::Ssd1311()+0x78>
  78:	48 89 c7             	mov    %rax,%rdi
  7b:	e8 00 00 00 00       	call   80 <Ssd1311::Ssd1311()+0x80>
  80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  84:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 8b <Ssd1311::Ssd1311()+0x8b>
  8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  8f:	c7 40 0c 04 00 00 00 	movl   $0x4,0xc(%rax)
  96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  9a:	c7 40 08 14 00 00 00 	movl   $0x14,0x8(%rax)
  a1:	90                   	nop
  a2:	c9                   	leave  
  a3:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13115StartEv:

0000000000000000 <Ssd1311::Start()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  14:	48 83 c0 14          	add    $0x14,%rax
  18:	48 89 c7             	mov    %rax,%rdi
  1b:	e8 00 00 00 00       	call   20 <Ssd1311::Start()+0x20>
  20:	83 f0 01             	xor    $0x1,%eax
  23:	84 c0                	test   %al,%al
  25:	74 0a                	je     31 <Ssd1311::Start()+0x31>
  27:	b8 00 00 00 00       	mov    $0x0,%eax
  2c:	e9 22 01 00 00       	jmp    153 <Ssd1311::Start()+0x153>
  31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <Ssd1311::Start()+0x3d>
  3d:	83 f0 01             	xor    $0x1,%eax
  40:	84 c0                	test   %al,%al
  42:	74 0a                	je     4e <Ssd1311::Start()+0x4e>
  44:	b8 00 00 00 00       	mov    $0x0,%eax
  49:	e9 05 01 00 00       	jmp    153 <Ssd1311::Start()+0x153>
  4e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  55:	eb 12                	jmp    69 <Ssd1311::Start()+0x69>
  57:	8b 45 fc             	mov    -0x4(%rbp),%eax
  5a:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 61 <Ssd1311::Start()+0x61>
  61:	c6 04 10 20          	movb   $0x20,(%rax,%rdx,1)
  65:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  69:	83 7d fc 14          	cmpl   $0x14,-0x4(%rbp)
  6d:	76 e8                	jbe    57 <Ssd1311::Start()+0x57>
  6f:	c6 05 00 00 00 00 40 	movb   $0x40,0x0(%rip)        # 76 <Ssd1311::Start()+0x76>
  76:	c6 05 00 00 00 00 40 	movb   $0x40,0x0(%rip)        # 7d <Ssd1311::Start()+0x7d>
  7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  81:	be 3a 00 00 00       	mov    $0x3a,%esi
  86:	48 89 c7             	mov    %rax,%rdi
  89:	e8 00 00 00 00       	call   8e <Ssd1311::Start()+0x8e>
  8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  92:	be 09 00 00 00       	mov    $0x9,%esi
  97:	48 89 c7             	mov    %rax,%rdi
  9a:	e8 00 00 00 00       	call   9f <Ssd1311::Start()+0x9f>
  9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  a3:	be 05 00 00 00       	mov    $0x5,%esi
  a8:	48 89 c7             	mov    %rax,%rdi
  ab:	e8 00 00 00 00       	call   b0 <Ssd1311::Start()+0xb0>
  b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  b4:	be 1c 00 00 00       	mov    $0x1c,%esi
  b9:	48 89 c7             	mov    %rax,%rdi
  bc:	e8 00 00 00 00       	call   c1 <Ssd1311::Start()+0xc1>
  c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  c5:	be 3c 00 00 00       	mov    $0x3c,%esi
  ca:	48 89 c7             	mov    %rax,%rdi
  cd:	e8 00 00 00 00       	call   d2 <Ssd1311::Start()+0xd2>
  d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  d6:	be 3a 00 00 00       	mov    $0x3a,%esi
  db:	48 89 c7             	mov    %rax,%rdi
  de:	e8 00 00 00 00       	call   e3 <Ssd1311::Start()+0xe3>
  e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  e7:	be 72 00 00 00       	mov    $0x72,%esi
  ec:	48 89 c7             	mov    %rax,%rdi
  ef:	e8 00 00 00 00       	call   f4 <Ssd1311::Start()+0xf4>
  f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  f8:	be 00 00 00 00       	mov    $0x0,%esi
  fd:	48 89 c7             	mov    %rax,%rdi
 100:	e8 00 00 00 00       	call   105 <Ssd1311::Start()+0x105>
 105:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 109:	be 3c 00 00 00       	mov    $0x3c,%esi
 10e:	48 89 c7             	mov    %rax,%rdi
 111:	e8 00 00 00 00       	call   116 <Ssd1311::Start()+0x116>
 116:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 11a:	be 0c 00 00 00       	mov    $0xc,%esi
 11f:	48 89 c7             	mov    %rax,%rdi
 122:	e8 00 00 00 00       	call   127 <Ssd1311::Start()+0x127>
 127:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 12b:	be 01 00 00 00       	mov    $0x1,%esi
 130:	48 89 c7             	mov    %rax,%rdi
 133:	e8 00 00 00 00       	call   138 <Ssd1311::Start()+0x138>
 138:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 13c:	ba 00 00 00 00       	mov    $0x0,%edx
 141:	be 00 00 00 00       	mov    $0x0,%esi
 146:	48 89 c7             	mov    %rax,%rdi
 149:	e8 00 00 00 00       	call   14e <Ssd1311::Start()+0x14e>
 14e:	b8 01 00 00 00       	mov    $0x1,%eax
 153:	c9                   	leave  
 154:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13119PrintInfoEv:

0000000000000000 <Ssd1311::PrintInfo()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	8b 50 08             	mov    0x8(%rax),%edx
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	8b 40 0c             	mov    0xc(%rax),%eax
  1e:	89 c6                	mov    %eax,%esi
  20:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 27 <Ssd1311::PrintInfo()+0x27>
  27:	48 89 c7             	mov    %rax,%rdi
  2a:	b8 00 00 00 00       	mov    $0x0,%eax
  2f:	e8 00 00 00 00       	call   34 <Ssd1311::PrintInfo()+0x34>
  34:	90                   	nop
  35:	c9                   	leave  
  36:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13113ClsEv:

0000000000000000 <Ssd1311::Cls()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  14:	be 01 00 00 00       	mov    $0x1,%esi
  19:	48 89 c7             	mov    %rax,%rdi
  1c:	e8 00 00 00 00       	call   21 <Ssd1311::Cls()+0x21>
  21:	90                   	nop
  22:	c9                   	leave  
  23:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13117PutCharEi:

0000000000000000 <Ssd1311::PutChar(int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	8b 45 f4             	mov    -0xc(%rbp),%eax
  16:	0f b6 c0             	movzbl %al,%eax
  19:	83 e0 7f             	and    $0x7f,%eax
  1c:	89 c2                	mov    %eax,%edx
  1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  22:	89 d6                	mov    %edx,%esi
  24:	48 89 c7             	mov    %rax,%rdi
  27:	e8 00 00 00 00       	call   2c <Ssd1311::PutChar(int)+0x2c>
  2c:	90                   	nop
  2d:	c9                   	leave  
  2e:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13119PutStringEPKc:

0000000000000000 <Ssd1311::PutString(char const*)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  14:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  19:	75 28                	jne    43 <Ssd1311::PutString(char const*)+0x43>
  1b:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 22 <Ssd1311::PutString(char const*)+0x22>
  22:	48 89 c1             	mov    %rax,%rcx
  25:	ba 74 00 00 00       	mov    $0x74,%edx
  2a:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 31 <Ssd1311::PutString(char const*)+0x31>
  31:	48 89 c6             	mov    %rax,%rsi
  34:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 3b <Ssd1311::PutString(char const*)+0x3b>
  3b:	48 89 c7             	mov    %rax,%rdi
  3e:	e8 00 00 00 00       	call   43 <Ssd1311::PutString(char const*)+0x43>
  43:	66 c7 45 ee 14 00    	movw   $0x14,-0x12(%rbp)
  49:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  51:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 58 <Ssd1311::PutString(char const*)+0x58>
  58:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  5c:	eb 22                	jmp    80 <Ssd1311::PutString(char const*)+0x80>
  5e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  62:	48 8d 42 01          	lea    0x1(%rdx),%rax
  66:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6e:	48 8d 48 01          	lea    0x1(%rax),%rcx
  72:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  76:	0f b6 12             	movzbl (%rdx),%edx
  79:	88 10                	mov    %dl,(%rax)
  7b:	66 83 6d ee 01       	subw   $0x1,-0x12(%rbp)
  80:	66 83 7d ee 00       	cmpw   $0x0,-0x12(%rbp)
  85:	74 0b                	je     92 <Ssd1311::PutString(char const*)+0x92>
  87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  8b:	0f b6 00             	movzbl (%rax),%eax
  8e:	84 c0                	test   %al,%al
  90:	75 cc                	jne    5e <Ssd1311::PutString(char const*)+0x5e>
  92:	0f b7 45 ee          	movzwl -0x12(%rbp),%eax
  96:	ba 15 00 00 00       	mov    $0x15,%edx
  9b:	29 c2                	sub    %eax,%edx
  9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  a1:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # a8 <Ssd1311::PutString(char const*)+0xa8>
  a8:	48 89 ce             	mov    %rcx,%rsi
  ab:	48 89 c7             	mov    %rax,%rdi
  ae:	e8 00 00 00 00       	call   b3 <Ssd1311::PutString(char const*)+0xb3>
  b3:	90                   	nop
  b4:	c9                   	leave  
  b5:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13119ClearLineEj:

0000000000000000 <Ssd1311::ClearLine(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  17:	0f 94 c0             	sete   %al
  1a:	0f b6 c0             	movzbl %al,%eax
  1d:	48 85 c0             	test   %rax,%rax
  20:	75 0f                	jne    31 <Ssd1311::ClearLine(unsigned int)+0x31>
  22:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
  26:	0f 97 c0             	seta   %al
  29:	0f b6 c0             	movzbl %al,%eax
  2c:	48 85 c0             	test   %rax,%rax
  2f:	74 07                	je     38 <Ssd1311::ClearLine(unsigned int)+0x38>
  31:	b8 01 00 00 00       	mov    $0x1,%eax
  36:	eb 05                	jmp    3d <Ssd1311::ClearLine(unsigned int)+0x3d>
  38:	b8 00 00 00 00       	mov    $0x0,%eax
  3d:	0f b6 c0             	movzbl %al,%eax
  40:	48 85 c0             	test   %rax,%rax
  43:	75 51                	jne    96 <Ssd1311::ClearLine(unsigned int)+0x96>
  45:	8b 45 f4             	mov    -0xc(%rbp),%eax
  48:	83 e8 01             	sub    $0x1,%eax
  4b:	0f b6 d0             	movzbl %al,%edx
  4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  52:	be 00 00 00 00       	mov    $0x0,%esi
  57:	48 89 c7             	mov    %rax,%rdi
  5a:	e8 00 00 00 00       	call   5f <Ssd1311::ClearLine(unsigned int)+0x5f>
  5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  63:	ba 15 00 00 00       	mov    $0x15,%edx
  68:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 6f <Ssd1311::ClearLine(unsigned int)+0x6f>
  6f:	48 89 ce             	mov    %rcx,%rsi
  72:	48 89 c7             	mov    %rax,%rdi
  75:	e8 00 00 00 00       	call   7a <Ssd1311::ClearLine(unsigned int)+0x7a>
  7a:	8b 45 f4             	mov    -0xc(%rbp),%eax
  7d:	83 e8 01             	sub    $0x1,%eax
  80:	0f b6 d0             	movzbl %al,%edx
  83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  87:	be 00 00 00 00       	mov    $0x0,%esi
  8c:	48 89 c7             	mov    %rax,%rdi
  8f:	e8 00 00 00 00       	call   94 <Ssd1311::ClearLine(unsigned int)+0x94>
  94:	eb 01                	jmp    97 <Ssd1311::ClearLine(unsigned int)+0x97>
  96:	90                   	nop
  97:	c9                   	leave  
  98:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13118TextLineEjPKcj:

0000000000000000 <Ssd1311::TextLine(unsigned int, char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  17:	89 4d f0             	mov    %ecx,-0x10(%rbp)
  1a:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  1e:	0f 94 c0             	sete   %al
  21:	0f b6 c0             	movzbl %al,%eax
  24:	48 85 c0             	test   %rax,%rax
  27:	75 0f                	jne    38 <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0x38>
  29:	83 7d f4 04          	cmpl   $0x4,-0xc(%rbp)
  2d:	0f 97 c0             	seta   %al
  30:	0f b6 c0             	movzbl %al,%eax
  33:	48 85 c0             	test   %rax,%rax
  36:	74 07                	je     3f <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0x3f>
  38:	b8 01 00 00 00       	mov    $0x1,%eax
  3d:	eb 05                	jmp    44 <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0x44>
  3f:	b8 00 00 00 00       	mov    $0x0,%eax
  44:	0f b6 c0             	movzbl %al,%eax
  47:	48 85 c0             	test   %rax,%rax
  4a:	75 5e                	jne    aa <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0xaa>
  4c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4f:	83 e8 01             	sub    $0x1,%eax
  52:	0f b6 d0             	movzbl %al,%edx
  55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  59:	be 00 00 00 00       	mov    $0x0,%esi
  5e:	48 89 c7             	mov    %rax,%rdi
  61:	e8 00 00 00 00       	call   66 <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0x66>
  66:	83 7d f0 14          	cmpl   $0x14,-0x10(%rbp)
  6a:	76 07                	jbe    73 <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0x73>
  6c:	c7 45 f0 14 00 00 00 	movl   $0x14,-0x10(%rbp)
  73:	8b 55 f0             	mov    -0x10(%rbp),%edx
  76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  7a:	48 89 c6             	mov    %rax,%rsi
  7d:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 84 <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0x84>
  84:	48 89 c7             	mov    %rax,%rdi
  87:	e8 00 00 00 00       	call   8c <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0x8c>
  8c:	8b 45 f0             	mov    -0x10(%rbp),%eax
  8f:	8d 50 01             	lea    0x1(%rax),%edx
  92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  96:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 9d <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0x9d>
  9d:	48 89 ce             	mov    %rcx,%rsi
  a0:	48 89 c7             	mov    %rax,%rdi
  a3:	e8 00 00 00 00       	call   a8 <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0xa8>
  a8:	eb 01                	jmp    ab <Ssd1311::TextLine(unsigned int, char const*, unsigned int)+0xab>
  aa:	90                   	nop
  ab:	c9                   	leave  
  ac:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13114TextEPKcj:

0000000000000000 <Ssd1311::Text(char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	83 7d ec 14          	cmpl   $0x14,-0x14(%rbp)
  1b:	76 07                	jbe    24 <Ssd1311::Text(char const*, unsigned int)+0x24>
  1d:	c7 45 ec 14 00 00 00 	movl   $0x14,-0x14(%rbp)
  24:	8b 55 ec             	mov    -0x14(%rbp),%edx
  27:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  2b:	48 89 c6             	mov    %rax,%rsi
  2e:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 35 <Ssd1311::Text(char const*, unsigned int)+0x35>
  35:	48 89 c7             	mov    %rax,%rdi
  38:	e8 00 00 00 00       	call   3d <Ssd1311::Text(char const*, unsigned int)+0x3d>
  3d:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40:	8d 50 01             	lea    0x1(%rax),%edx
  43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  47:	48 8d 0d 00 00 00 00 	lea    0x0(%rip),%rcx        # 4e <Ssd1311::Text(char const*, unsigned int)+0x4e>
  4e:	48 89 ce             	mov    %rcx,%rsi
  51:	48 89 c7             	mov    %rax,%rdi
  54:	e8 00 00 00 00       	call   59 <Ssd1311::Text(char const*, unsigned int)+0x59>
  59:	90                   	nop
  5a:	c9                   	leave  
  5b:	c3                   	ret    

Disassembly of section .text._ZN7Ssd131112SetCursorPosEjj:

0000000000000000 <Ssd1311::SetCursorPos(unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	83 7d f4 13          	cmpl   $0x13,-0xc(%rbp)
  1a:	0f 97 c0             	seta   %al
  1d:	0f b6 c0             	movzbl %al,%eax
  20:	48 85 c0             	test   %rax,%rax
  23:	75 0f                	jne    34 <Ssd1311::SetCursorPos(unsigned int, unsigned int)+0x34>
  25:	83 7d f0 03          	cmpl   $0x3,-0x10(%rbp)
  29:	0f 97 c0             	seta   %al
  2c:	0f b6 c0             	movzbl %al,%eax
  2f:	48 85 c0             	test   %rax,%rax
  32:	74 07                	je     3b <Ssd1311::SetCursorPos(unsigned int, unsigned int)+0x3b>
  34:	b8 01 00 00 00       	mov    $0x1,%eax
  39:	eb 05                	jmp    40 <Ssd1311::SetCursorPos(unsigned int, unsigned int)+0x40>
  3b:	b8 00 00 00 00       	mov    $0x0,%eax
  40:	0f b6 c0             	movzbl %al,%eax
  43:	48 85 c0             	test   %rax,%rax
  46:	75 20                	jne    68 <Ssd1311::SetCursorPos(unsigned int, unsigned int)+0x68>
  48:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4b:	c1 e0 05             	shl    $0x5,%eax
  4e:	89 c2                	mov    %eax,%edx
  50:	8b 45 f4             	mov    -0xc(%rbp),%eax
  53:	01 d0                	add    %edx,%eax
  55:	0f b6 d0             	movzbl %al,%edx
  58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5c:	89 d6                	mov    %edx,%esi
  5e:	48 89 c7             	mov    %rax,%rdi
  61:	e8 00 00 00 00       	call   66 <Ssd1311::SetCursorPos(unsigned int, unsigned int)+0x66>
  66:	eb 01                	jmp    69 <Ssd1311::SetCursorPos(unsigned int, unsigned int)+0x69>
  68:	90                   	nop
  69:	c9                   	leave  
  6a:	c3                   	ret    

Disassembly of section .text._ZN7Ssd131112SelectRamRomEjj:

0000000000000000 <Ssd1311::SelectRamRom(unsigned int, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	89 55 f0             	mov    %edx,-0x10(%rbp)
  16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1a:	be 01 00 00 00       	mov    $0x1,%esi
  1f:	48 89 c7             	mov    %rax,%rdi
  22:	e8 00 00 00 00       	call   27 <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x27>
  27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2b:	be 02 00 00 00       	mov    $0x2,%esi
  30:	48 89 c7             	mov    %rax,%rdi
  33:	e8 00 00 00 00       	call   38 <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x38>
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	be 72 00 00 00       	mov    $0x72,%esi
  41:	48 89 c7             	mov    %rax,%rdi
  44:	e8 00 00 00 00       	call   49 <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x49>
  49:	8b 45 f0             	mov    -0x10(%rbp),%eax
  4c:	c1 e0 02             	shl    $0x2,%eax
  4f:	83 e0 0c             	and    $0xc,%eax
  52:	89 c2                	mov    %eax,%edx
  54:	8b 45 f4             	mov    -0xc(%rbp),%eax
  57:	83 e0 03             	and    $0x3,%eax
  5a:	09 d0                	or     %edx,%eax
  5c:	0f b6 d0             	movzbl %al,%edx
  5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  63:	89 d6                	mov    %edx,%esi
  65:	48 89 c7             	mov    %rax,%rdi
  68:	e8 00 00 00 00       	call   6d <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x6d>
  6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  71:	be 00 00 00 00       	mov    $0x0,%esi
  76:	48 89 c7             	mov    %rax,%rdi
  79:	e8 00 00 00 00       	call   7e <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x7e>
  7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  82:	be 00 00 00 00       	mov    $0x0,%esi
  87:	48 89 c7             	mov    %rax,%rdi
  8a:	e8 00 00 00 00       	call   8f <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x8f>
  8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  93:	48 89 c7             	mov    %rax,%rdi
  96:	e8 00 00 00 00       	call   9b <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x9b>
  9b:	90                   	nop
  9c:	c9                   	leave  
  9d:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13118SetDDRAMEh:

0000000000000000 <Ssd1311::SetDDRAM(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  19:	83 c8 80             	or     $0xffffff80,%eax
  1c:	0f b6 d0             	movzbl %al,%edx
  1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  23:	89 d6                	mov    %edx,%esi
  25:	48 89 c7             	mov    %rax,%rdi
  28:	e8 00 00 00 00       	call   2d <Ssd1311::SetDDRAM(unsigned char)+0x2d>
  2d:	90                   	nop
  2e:	c9                   	leave  
  2f:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13118SetCGRAMEh:

0000000000000000 <Ssd1311::SetCGRAM(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  19:	83 e0 3f             	and    $0x3f,%eax
  1c:	83 c8 40             	or     $0x40,%eax
  1f:	0f b6 d0             	movzbl %al,%edx
  22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  26:	89 d6                	mov    %edx,%esi
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <Ssd1311::SetCGRAM(unsigned char)+0x30>
  30:	90                   	nop
  31:	c9                   	leave  
  32:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13115SetREENS_11FunctionSetE:

0000000000000000 <Ssd1311::SetRE(Ssd1311::FunctionSet)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  13:	c6 45 eb 20          	movb   $0x20,-0x15(%rbp)
  17:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  1e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  25:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  29:	75 0d                	jne    38 <Ssd1311::SetRE(Ssd1311::FunctionSet)+0x38>
  2b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  32:	80 4d eb 08          	orb    $0x8,-0x15(%rbp)
  36:	eb 16                	jmp    4e <Ssd1311::SetRE(Ssd1311::FunctionSet)+0x4e>
  38:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  3f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  46:	80 4d eb 08          	orb    $0x8,-0x15(%rbp)
  4a:	80 4d eb 02          	orb    $0x2,-0x15(%rbp)
  4e:	0f b6 55 eb          	movzbl -0x15(%rbp),%edx
  52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  56:	89 d6                	mov    %edx,%esi
  58:	48 89 c7             	mov    %rax,%rdi
  5b:	e8 00 00 00 00       	call   60 <Ssd1311::SetRE(Ssd1311::FunctionSet)+0x60>
  60:	90                   	nop
  61:	c9                   	leave  
  62:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13115SetSDENS_10CommandSetE:

0000000000000000 <Ssd1311::SetSD(Ssd1311::CommandSet)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  17:	be 02 00 00 00       	mov    $0x2,%esi
  1c:	48 89 c7             	mov    %rax,%rdi
  1f:	e8 00 00 00 00       	call   24 <Ssd1311::SetSD(Ssd1311::CommandSet)+0x24>
  24:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  28:	75 07                	jne    31 <Ssd1311::SetSD(Ssd1311::CommandSet)+0x31>
  2a:	ba 78 00 00 00       	mov    $0x78,%edx
  2f:	eb 05                	jmp    36 <Ssd1311::SetSD(Ssd1311::CommandSet)+0x36>
  31:	ba 79 00 00 00       	mov    $0x79,%edx
  36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3a:	89 d6                	mov    %edx,%esi
  3c:	48 89 c7             	mov    %rax,%rdi
  3f:	e8 00 00 00 00       	call   44 <Ssd1311::SetSD(Ssd1311::CommandSet)+0x44>
  44:	90                   	nop
  45:	c9                   	leave  
  46:	c3                   	ret    

Disassembly of section .text._ZN7Ssd131111SendCommandEh:

0000000000000000 <Ssd1311::SendCommand(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8d 48 14          	lea    0x14(%rax),%rcx
  1d:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  21:	89 c2                	mov    %eax,%edx
  23:	be 80 00 00 00       	mov    $0x80,%esi
  28:	48 89 cf             	mov    %rcx,%rdi
  2b:	e8 00 00 00 00       	call   30 <Ssd1311::SendCommand(unsigned char)+0x30>
  30:	90                   	nop
  31:	c9                   	leave  
  32:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13118SendDataEh:

0000000000000000 <Ssd1311::SendData(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	48 8d 48 14          	lea    0x14(%rax),%rcx
  1d:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
  21:	89 c2                	mov    %eax,%edx
  23:	be 40 00 00 00       	mov    $0x40,%esi
  28:	48 89 cf             	mov    %rcx,%rdi
  2b:	e8 00 00 00 00       	call   30 <Ssd1311::SendData(unsigned char)+0x30>
  30:	90                   	nop
  31:	c9                   	leave  
  32:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13118SendDataEPKhj:

0000000000000000 <Ssd1311::SendData(unsigned char const*, unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 20          	sub    $0x20,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  14:	89 55 ec             	mov    %edx,-0x14(%rbp)
  17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1b:	48 8d 48 14          	lea    0x14(%rax),%rcx
  1f:	8b 55 ec             	mov    -0x14(%rbp),%edx
  22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  26:	48 89 c6             	mov    %rax,%rsi
  29:	48 89 cf             	mov    %rcx,%rdi
  2c:	e8 00 00 00 00       	call   31 <Ssd1311::SendData(unsigned char const*, unsigned int)+0x31>
  31:	90                   	nop
  32:	c9                   	leave  
  33:	c3                   	ret    

Disassembly of section .text._ZN7Ssd131112CheckSSD1311Ev:

0000000000000000 <Ssd1311::CheckSSD1311()>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  10:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  17:	00 00 
  19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  1d:	31 c0                	xor    %eax,%eax
  1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  23:	be 00 00 00 00       	mov    $0x0,%esi
  28:	48 89 c7             	mov    %rax,%rdi
  2b:	e8 00 00 00 00       	call   30 <Ssd1311::CheckSSD1311()+0x30>
  30:	c7 45 ed 40 aa 55 aa 	movl   $0xaa55aa40,-0x13(%rbp)
  37:	c6 45 f1 55          	movb   $0x55,-0xf(%rbp)
  3b:	48 8d 4d ed          	lea    -0x13(%rbp),%rcx
  3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  43:	ba 05 00 00 00       	mov    $0x5,%edx
  48:	48 89 ce             	mov    %rcx,%rsi
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	call   53 <Ssd1311::CheckSSD1311()+0x53>
  53:	c7 45 f2 00 00 00 00 	movl   $0x0,-0xe(%rbp)
  5a:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%rbp)
  60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  64:	be 00 00 00 00       	mov    $0x0,%esi
  69:	48 89 c7             	mov    %rax,%rdi
  6c:	e8 00 00 00 00       	call   71 <Ssd1311::CheckSSD1311()+0x71>
  71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  75:	48 83 c0 14          	add    $0x14,%rax
  79:	be 40 00 00 00       	mov    $0x40,%esi
  7e:	48 89 c7             	mov    %rax,%rdi
  81:	e8 00 00 00 00       	call   86 <Ssd1311::CheckSSD1311()+0x86>
  86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  8a:	48 8d 48 14          	lea    0x14(%rax),%rcx
  8e:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
  92:	ba 06 00 00 00       	mov    $0x6,%edx
  97:	48 89 c6             	mov    %rax,%rsi
  9a:	48 89 cf             	mov    %rcx,%rdi
  9d:	e8 00 00 00 00       	call   a2 <Ssd1311::CheckSSD1311()+0xa2>
  a2:	48 8d 45 f2          	lea    -0xe(%rbp),%rax
  a6:	48 8d 48 01          	lea    0x1(%rax),%rcx
  aa:	48 8d 45 ed          	lea    -0x13(%rbp),%rax
  ae:	48 83 c0 01          	add    $0x1,%rax
  b2:	ba 04 00 00 00       	mov    $0x4,%edx
  b7:	48 89 ce             	mov    %rcx,%rsi
  ba:	48 89 c7             	mov    %rax,%rdi
  bd:	e8 00 00 00 00       	call   c2 <Ssd1311::CheckSSD1311()+0xc2>
  c2:	85 c0                	test   %eax,%eax
  c4:	0f 94 c0             	sete   %al
  c7:	88 45 ec             	mov    %al,-0x14(%rbp)
  ca:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  ce:	89 c6                	mov    %eax,%esi
  d0:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # d7 <Ssd1311::CheckSSD1311()+0xd7>
  d7:	48 89 c7             	mov    %rax,%rdi
  da:	b8 00 00 00 00       	mov    $0x0,%eax
  df:	e8 00 00 00 00       	call   e4 <Ssd1311::CheckSSD1311()+0xe4>
  e4:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  e8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  ec:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  f3:	00 00 
  f5:	74 05                	je     fc <Ssd1311::CheckSSD1311()+0xfc>
  f7:	e8 00 00 00 00       	call   fc <Ssd1311::CheckSSD1311()+0xfc>
  fc:	c9                   	leave  
  fd:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13118SetSleepEb:

0000000000000000 <Ssd1311::SetSleep(bool)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	80 7d f4 00          	cmpb   $0x0,-0xc(%rbp)
  19:	74 16                	je     31 <Ssd1311::SetSleep(bool)+0x31>
  1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  1f:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
  23:	83 e0 fb             	and    $0xfffffffb,%eax
  26:	89 c2                	mov    %eax,%edx
  28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2c:	88 50 1c             	mov    %dl,0x1c(%rax)
  2f:	eb 14                	jmp    45 <Ssd1311::SetSleep(bool)+0x45>
  31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  35:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
  39:	83 c8 04             	or     $0x4,%eax
  3c:	89 c2                	mov    %eax,%edx
  3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  42:	88 50 1c             	mov    %dl,0x1c(%rax)
  45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  49:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
  4d:	0f b6 d0             	movzbl %al,%edx
  50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  54:	89 d6                	mov    %edx,%esi
  56:	48 89 c7             	mov    %rax,%rdi
  59:	e8 00 00 00 00       	call   5e <Ssd1311::SetSleep(bool)+0x5e>
  5e:	90                   	nop
  5f:	c9                   	leave  
  60:	c3                   	ret    

Disassembly of section .text._ZN7Ssd131111SetContrastEh:

0000000000000000 <Ssd1311::SetContrast(unsigned char)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 f0                	mov    %esi,%eax
  12:	88 45 f4             	mov    %al,-0xc(%rbp)
  15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  19:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  1d:	88 50 10             	mov    %dl,0x10(%rax)
  20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  24:	be 02 00 00 00       	mov    $0x2,%esi
  29:	48 89 c7             	mov    %rax,%rdi
  2c:	e8 00 00 00 00       	call   31 <Ssd1311::SetContrast(unsigned char)+0x31>
  31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  35:	be 01 00 00 00       	mov    $0x1,%esi
  3a:	48 89 c7             	mov    %rax,%rdi
  3d:	e8 00 00 00 00       	call   42 <Ssd1311::SetContrast(unsigned char)+0x42>
  42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  46:	be 81 00 00 00       	mov    $0x81,%esi
  4b:	48 89 c7             	mov    %rax,%rdi
  4e:	e8 00 00 00 00       	call   53 <Ssd1311::SetContrast(unsigned char)+0x53>
  53:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
  57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  5b:	89 d6                	mov    %edx,%esi
  5d:	48 89 c7             	mov    %rax,%rdi
  60:	e8 00 00 00 00       	call   65 <Ssd1311::SetContrast(unsigned char)+0x65>
  65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  69:	be 00 00 00 00       	mov    $0x0,%esi
  6e:	48 89 c7             	mov    %rax,%rdi
  71:	e8 00 00 00 00       	call   76 <Ssd1311::SetContrast(unsigned char)+0x76>
  76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7a:	be 00 00 00 00       	mov    $0x0,%esi
  7f:	48 89 c7             	mov    %rax,%rdi
  82:	e8 00 00 00 00       	call   87 <Ssd1311::SetContrast(unsigned char)+0x87>
  87:	90                   	nop
  88:	c9                   	leave  
  89:	c3                   	ret    

Disassembly of section .text._ZN7Ssd13119SetCursorEj:

0000000000000000 <Ssd1311::SetCursor(unsigned int)>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 10          	sub    $0x10,%rsp
   c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  10:	89 75 f4             	mov    %esi,-0xc(%rbp)
  13:	8b 45 f4             	mov    -0xc(%rbp),%eax
  16:	83 f8 03             	cmp    $0x3,%eax
  19:	74 50                	je     6b <Ssd1311::SetCursor(unsigned int)+0x6b>
  1b:	83 f8 03             	cmp    $0x3,%eax
  1e:	7f 75                	jg     95 <Ssd1311::SetCursor(unsigned int)+0x95>
  20:	85 c0                	test   %eax,%eax
  22:	74 07                	je     2b <Ssd1311::SetCursor(unsigned int)+0x2b>
  24:	83 f8 01             	cmp    $0x1,%eax
  27:	74 18                	je     41 <Ssd1311::SetCursor(unsigned int)+0x41>
  29:	eb 6a                	jmp    95 <Ssd1311::SetCursor(unsigned int)+0x95>
  2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  2f:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
  33:	83 e0 fd             	and    $0xfffffffd,%eax
  36:	89 c2                	mov    %eax,%edx
  38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  3c:	88 50 1c             	mov    %dl,0x1c(%rax)
  3f:	eb 55                	jmp    96 <Ssd1311::SetCursor(unsigned int)+0x96>
  41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  45:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
  49:	83 c8 02             	or     $0x2,%eax
  4c:	89 c2                	mov    %eax,%edx
  4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  52:	88 50 1c             	mov    %dl,0x1c(%rax)
  55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  59:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
  5d:	83 e0 fe             	and    $0xfffffffe,%eax
  60:	89 c2                	mov    %eax,%edx
  62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  66:	88 50 1c             	mov    %dl,0x1c(%rax)
  69:	eb 2b                	jmp    96 <Ssd1311::SetCursor(unsigned int)+0x96>
  6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  6f:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
  73:	83 c8 02             	or     $0x2,%eax
  76:	89 c2                	mov    %eax,%edx
  78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  7c:	88 50 1c             	mov    %dl,0x1c(%rax)
  7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  83:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
  87:	83 c8 01             	or     $0x1,%eax
  8a:	89 c2                	mov    %eax,%edx
  8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  90:	88 50 1c             	mov    %dl,0x1c(%rax)
  93:	eb 01                	jmp    96 <Ssd1311::SetCursor(unsigned int)+0x96>
  95:	90                   	nop
  96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  9a:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
  9e:	0f b6 d0             	movzbl %al,%edx
  a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a5:	89 d6                	mov    %edx,%esi
  a7:	48 89 c7             	mov    %rax,%rdi
  aa:	e8 00 00 00 00       	call   af <Ssd1311::SetCursor(unsigned int)+0xaf>
  af:	90                   	nop
  b0:	c9                   	leave  
  b1:	c3                   	ret    
