In archive lib/libdisplay.a:

display_timeout.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <display::timeout::gpio_init()>:
   0:	e12fff1e 	bx	lr

00000004 <display::timeout::gpio_renew()>:
   4:	e3a00000 	mov	r0, #0
   8:	e12fff1e 	bx	lr

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <display::timeout::gpio_renew()+0x168d828>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <display::timeout::gpio_renew()+0x42420>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


display.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000007 	andeq	r0, r0, r7
   8:	00000008 	andeq	r0, r0, r8

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000009 	andeq	r0, r0, r9
   8:	0000000a 	andeq	r0, r0, sl

Disassembly of section .text:

00000000 <Display::Detect(display::Type)>:
   0:	e3510002 	cmp	r1, #2
   4:	e92d4070 	push	{r4, r5, r6, lr}
   8:	e1a04000 	mov	r4, r0
   c:	0a000021 	beq	98 <Display::Detect(display::Type)+0x98>
  10:	e5945018 	ldr	r5, [r4, #24]
  14:	e3510004 	cmp	r1, #4
  18:	05801000 	streq	r1, [r0]
  1c:	e3550000 	cmp	r5, #0
  20:	0a000012 	beq	70 <Display::Detect(display::Type)+0x70>
  24:	e5953000 	ldr	r3, [r5]
  28:	e1a00005 	mov	r0, r5
  2c:	e5933008 	ldr	r3, [r3, #8]
  30:	e12fff33 	blx	r3
  34:	e3500000 	cmp	r0, #0
  38:	e5940018 	ldr	r0, [r4, #24]
  3c:	1a00000e 	bne	7c <Display::Detect(display::Type)+0x7c>
  40:	e3500000 	cmp	r0, #0
  44:	0a000005 	beq	60 <Display::Detect(display::Type)+0x60>
  48:	e5903000 	ldr	r3, [r0]
  4c:	e59f2068 	ldr	r2, [pc, #104]	; bc <Display::Detect(display::Type)+0xbc>
  50:	e5933004 	ldr	r3, [r3, #4]
  54:	e1530002 	cmp	r3, r2
  58:	1a000015 	bne	b4 <Display::Detect(display::Type)+0xb4>
  5c:	ebfffffe 	bl	0 <operator delete(void*)>
  60:	e3a02000 	mov	r2, #0
  64:	e3a03004 	mov	r3, #4
  68:	e5842018 	str	r2, [r4, #24]
  6c:	e5843000 	str	r3, [r4]
  70:	e3a03000 	mov	r3, #0
  74:	e5843014 	str	r3, [r4, #20]
  78:	e8bd8070 	pop	{r4, r5, r6, pc}
  7c:	e5903000 	ldr	r3, [r0]
  80:	e593300c 	ldr	r3, [r3, #12]
  84:	e12fff33 	blx	r3
  88:	e5943018 	ldr	r3, [r4, #24]
  8c:	e3530000 	cmp	r3, #0
  90:	18bd8070 	popne	{r4, r5, r6, pc}
  94:	eafffff5 	b	70 <Display::Detect(display::Type)+0x70>
  98:	e3a00018 	mov	r0, #24
  9c:	ebfffffe 	bl	0 <operator new(unsigned int)>
  a0:	e1a05000 	mov	r5, r0
  a4:	e3a01000 	mov	r1, #0
  a8:	ebfffffe 	bl	0 <Ssd1306::Ssd1306(TOledPanel)>
  ac:	e5845018 	str	r5, [r4, #24]
  b0:	eaffffdb 	b	24 <Display::Detect(display::Type)+0x24>
  b4:	e12fff33 	blx	r3
  b8:	eaffffe8 	b	60 <Display::Detect(display::Type)+0x60>
  bc:	00000000 	andeq	r0, r0, r0

000000c0 <Display::Display()>:
  c0:	e3a03004 	mov	r3, #4
  c4:	e92d4030 	push	{r4, r5, lr}
  c8:	e1a04000 	mov	r4, r0
  cc:	e24dd00c 	sub	sp, sp, #12
  d0:	e5803000 	str	r3, [r0]
  d4:	ebfffffe 	bl	0 <millis>
  d8:	e3a03000 	mov	r3, #0
  dc:	e3a02021 	mov	r2, #33	; 0x21
  e0:	e59f1154 	ldr	r1, [pc, #340]	; 23c <Display::Display()+0x17c>
  e4:	e5840004 	str	r0, [r4, #4]
  e8:	e584100c 	str	r1, [r4, #12]
  ec:	e59f114c 	ldr	r1, [pc, #332]	; 240 <Display::Display()+0x180>
  f0:	e1a00004 	mov	r0, r4
  f4:	e5841014 	str	r1, [r4, #20]
  f8:	e59f1144 	ldr	r1, [pc, #324]	; 244 <Display::Display()+0x184>
  fc:	e1c431b0 	strh	r3, [r4, #16]
 100:	e5814000 	str	r4, [r1]
 104:	e5c42008 	strb	r2, [r4, #8]
 108:	e3a01002 	mov	r1, #2
 10c:	e5843018 	str	r3, [r4, #24]
 110:	ebfffffe 	bl	0 <Display::Detect(display::Type)>
 114:	e5d45008 	ldrb	r5, [r4, #8]
 118:	e59f3128 	ldr	r3, [pc, #296]	; 248 <Display::Display()+0x188>
 11c:	e594000c 	ldr	r0, [r4, #12]
 120:	e583500c 	str	r5, [r3, #12]
 124:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 128:	e2451030 	sub	r1, r5, #48	; 0x30
 12c:	e2455050 	sub	r5, r5, #80	; 0x50
 130:	e355000f 	cmp	r5, #15
 134:	83510007 	cmphi	r1, #7
 138:	93a01001 	movls	r1, #1
 13c:	83a01000 	movhi	r1, #0
 140:	8a000014 	bhi	198 <Display::Display()+0xd8>
 144:	e3a01001 	mov	r1, #1
 148:	e28d0004 	add	r0, sp, #4
 14c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 150:	e16f0f10 	clz	r0, r0
 154:	e1a002a0 	lsr	r0, r0, #5
 158:	e3500000 	cmp	r0, #0
 15c:	e5c40011 	strb	r0, [r4, #17]
 160:	1a000013 	bne	1b4 <Display::Display()+0xf4>
 164:	e5943018 	ldr	r3, [r4, #24]
 168:	e3530000 	cmp	r3, #0
 16c:	0a00002f 	beq	230 <Display::Display()+0x170>
 170:	ebfffffe 	bl	0 <display::timeout::gpio_init()>
 174:	e5940018 	ldr	r0, [r4, #24]
 178:	e3500000 	cmp	r0, #0
 17c:	0a00002b 	beq	230 <Display::Display()+0x170>
 180:	e5903000 	ldr	r3, [r0]
 184:	e5933034 	ldr	r3, [r3, #52]	; 0x34
 188:	e12fff33 	blx	r3
 18c:	e1a00004 	mov	r0, r4
 190:	e28dd00c 	add	sp, sp, #12
 194:	e8bd8030 	pop	{r4, r5, pc}
 198:	e1a00001 	mov	r0, r1
 19c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1a0:	e16f0f10 	clz	r0, r0
 1a4:	e1a002a0 	lsr	r0, r0, #5
 1a8:	e3500000 	cmp	r0, #0
 1ac:	e5c40011 	strb	r0, [r4, #17]
 1b0:	0affffeb 	beq	164 <Display::Display()+0xa4>
 1b4:	e3a03000 	mov	r3, #0
 1b8:	e5d42008 	ldrb	r2, [r4, #8]
 1bc:	e59f5084 	ldr	r5, [pc, #132]	; 248 <Display::Display()+0x188>
 1c0:	e5cd3004 	strb	r3, [sp, #4]
 1c4:	e5cd3005 	strb	r3, [sp, #5]
 1c8:	e5cd3006 	strb	r3, [sp, #6]
 1cc:	e594000c 	ldr	r0, [r4, #12]
 1d0:	e585200c 	str	r2, [r5, #12]
 1d4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1d8:	e3a01003 	mov	r1, #3
 1dc:	e28d0004 	add	r0, sp, #4
 1e0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1e4:	e5d43011 	ldrb	r3, [r4, #17]
 1e8:	e3530000 	cmp	r3, #0
 1ec:	0affffdc 	beq	164 <Display::Display()+0xa4>
 1f0:	e3a02012 	mov	r2, #18
 1f4:	e5cd2004 	strb	r2, [sp, #4]
 1f8:	e3e0203f 	mvn	r2, #63	; 0x3f
 1fc:	e5cd2005 	strb	r2, [sp, #5]
 200:	e3e02000 	mvn	r2, #0
 204:	e5d43008 	ldrb	r3, [r4, #8]
 208:	e594000c 	ldr	r0, [r4, #12]
 20c:	e5cd2006 	strb	r2, [sp, #6]
 210:	e585300c 	str	r3, [r5, #12]
 214:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 218:	e3a01003 	mov	r1, #3
 21c:	e28d0004 	add	r0, sp, #4
 220:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 224:	e5943018 	ldr	r3, [r4, #24]
 228:	e3530000 	cmp	r3, #0
 22c:	1affffcf 	bne	170 <Display::Display()+0xb0>
 230:	e59f0014 	ldr	r0, [pc, #20]	; 24c <Display::Display()+0x18c>
 234:	ebfffffe 	bl	0 <puts>
 238:	eaffffd3 	b	18c <Display::Display()+0xcc>
 23c:	00061a80 	andeq	r1, r6, r0, lsl #21
 240:	000493e0 	andeq	r9, r4, r0, ror #7
 244:	00000000 	andeq	r0, r0, r0
 248:	20804000 	addcs	r4, r0, r0
 24c:	00000000 	andeq	r0, r0, r0

00000250 <Display::Display(display::Type)>:
 250:	e92d4030 	push	{r4, r5, lr}
 254:	e1a04000 	mov	r4, r0
 258:	e24dd00c 	sub	sp, sp, #12
 25c:	e5801000 	str	r1, [r0]
 260:	e1a05001 	mov	r5, r1
 264:	ebfffffe 	bl	0 <millis>
 268:	e3a03000 	mov	r3, #0
 26c:	e3a02021 	mov	r2, #33	; 0x21
 270:	e59fc154 	ldr	ip, [pc, #340]	; 3cc <Display::Display(display::Type)+0x17c>
 274:	e1a01005 	mov	r1, r5
 278:	e584c00c 	str	ip, [r4, #12]
 27c:	e59fc14c 	ldr	ip, [pc, #332]	; 3d0 <Display::Display(display::Type)+0x180>
 280:	e5840004 	str	r0, [r4, #4]
 284:	e584c014 	str	ip, [r4, #20]
 288:	e59fc144 	ldr	ip, [pc, #324]	; 3d4 <Display::Display(display::Type)+0x184>
 28c:	e1a00004 	mov	r0, r4
 290:	e5c42008 	strb	r2, [r4, #8]
 294:	e1c431b0 	strh	r3, [r4, #16]
 298:	e5843018 	str	r3, [r4, #24]
 29c:	e58c4000 	str	r4, [ip]
 2a0:	ebfffffe 	bl	0 <Display::Detect(display::Type)>
 2a4:	e5d45008 	ldrb	r5, [r4, #8]
 2a8:	e59f3128 	ldr	r3, [pc, #296]	; 3d8 <Display::Display(display::Type)+0x188>
 2ac:	e594000c 	ldr	r0, [r4, #12]
 2b0:	e583500c 	str	r5, [r3, #12]
 2b4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2b8:	e2451030 	sub	r1, r5, #48	; 0x30
 2bc:	e2455050 	sub	r5, r5, #80	; 0x50
 2c0:	e355000f 	cmp	r5, #15
 2c4:	83510007 	cmphi	r1, #7
 2c8:	93a01001 	movls	r1, #1
 2cc:	83a01000 	movhi	r1, #0
 2d0:	8a000014 	bhi	328 <Display::Display(display::Type)+0xd8>
 2d4:	e3a01001 	mov	r1, #1
 2d8:	e28d0004 	add	r0, sp, #4
 2dc:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 2e0:	e16f0f10 	clz	r0, r0
 2e4:	e1a002a0 	lsr	r0, r0, #5
 2e8:	e3500000 	cmp	r0, #0
 2ec:	e5c40011 	strb	r0, [r4, #17]
 2f0:	1a000013 	bne	344 <Display::Display(display::Type)+0xf4>
 2f4:	e5943018 	ldr	r3, [r4, #24]
 2f8:	e3530000 	cmp	r3, #0
 2fc:	0a00002f 	beq	3c0 <Display::Display(display::Type)+0x170>
 300:	ebfffffe 	bl	0 <display::timeout::gpio_init()>
 304:	e5940018 	ldr	r0, [r4, #24]
 308:	e3500000 	cmp	r0, #0
 30c:	0a00002b 	beq	3c0 <Display::Display(display::Type)+0x170>
 310:	e5903000 	ldr	r3, [r0]
 314:	e5933034 	ldr	r3, [r3, #52]	; 0x34
 318:	e12fff33 	blx	r3
 31c:	e1a00004 	mov	r0, r4
 320:	e28dd00c 	add	sp, sp, #12
 324:	e8bd8030 	pop	{r4, r5, pc}
 328:	e1a00001 	mov	r0, r1
 32c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 330:	e16f0f10 	clz	r0, r0
 334:	e1a002a0 	lsr	r0, r0, #5
 338:	e3500000 	cmp	r0, #0
 33c:	e5c40011 	strb	r0, [r4, #17]
 340:	0affffeb 	beq	2f4 <Display::Display(display::Type)+0xa4>
 344:	e3a03000 	mov	r3, #0
 348:	e5d42008 	ldrb	r2, [r4, #8]
 34c:	e59f5084 	ldr	r5, [pc, #132]	; 3d8 <Display::Display(display::Type)+0x188>
 350:	e5cd3004 	strb	r3, [sp, #4]
 354:	e5cd3005 	strb	r3, [sp, #5]
 358:	e5cd3006 	strb	r3, [sp, #6]
 35c:	e594000c 	ldr	r0, [r4, #12]
 360:	e585200c 	str	r2, [r5, #12]
 364:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 368:	e3a01003 	mov	r1, #3
 36c:	e28d0004 	add	r0, sp, #4
 370:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 374:	e5d43011 	ldrb	r3, [r4, #17]
 378:	e3530000 	cmp	r3, #0
 37c:	0affffdc 	beq	2f4 <Display::Display(display::Type)+0xa4>
 380:	e3a02012 	mov	r2, #18
 384:	e5cd2004 	strb	r2, [sp, #4]
 388:	e3e0203f 	mvn	r2, #63	; 0x3f
 38c:	e5cd2005 	strb	r2, [sp, #5]
 390:	e3e02000 	mvn	r2, #0
 394:	e5d43008 	ldrb	r3, [r4, #8]
 398:	e594000c 	ldr	r0, [r4, #12]
 39c:	e5cd2006 	strb	r2, [sp, #6]
 3a0:	e585300c 	str	r3, [r5, #12]
 3a4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3a8:	e3a01003 	mov	r1, #3
 3ac:	e28d0004 	add	r0, sp, #4
 3b0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3b4:	e5943018 	ldr	r3, [r4, #24]
 3b8:	e3530000 	cmp	r3, #0
 3bc:	1affffcf 	bne	300 <Display::Display(display::Type)+0xb0>
 3c0:	e59f0014 	ldr	r0, [pc, #20]	; 3dc <Display::Display(display::Type)+0x18c>
 3c4:	ebfffffe 	bl	0 <puts>
 3c8:	eaffffd3 	b	31c <Display::Display(display::Type)+0xcc>
 3cc:	00061a80 	andeq	r1, r6, r0, lsl #21
 3d0:	000493e0 	andeq	r9, r4, r0, ror #7
 3d4:	00000000 	andeq	r0, r0, r0
 3d8:	20804000 	addcs	r4, r0, r0
 3dc:	00000000 	andeq	r0, r0, r0

000003e0 <Display::Detect(unsigned int)>:
 3e0:	e3a0203c 	mov	r2, #60	; 0x3c
 3e4:	e59f30a4 	ldr	r3, [pc, #164]	; 490 <Display::Detect(unsigned int)+0xb0>
 3e8:	e92d4070 	push	{r4, r5, r6, lr}
 3ec:	e583200c 	str	r2, [r3, #12]
 3f0:	e1a04000 	mov	r4, r0
 3f4:	e59f0098 	ldr	r0, [pc, #152]	; 494 <Display::Detect(unsigned int)+0xb4>
 3f8:	e1a06001 	mov	r6, r1
 3fc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 400:	e3a01000 	mov	r1, #0
 404:	e1a00001 	mov	r0, r1
 408:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 40c:	e2505000 	subs	r5, r0, #0
 410:	1a00000d 	bne	44c <Display::Detect(unsigned int)+0x6c>
 414:	e3560004 	cmp	r6, #4
 418:	e3a00018 	mov	r0, #24
 41c:	9a00000e 	bls	45c <Display::Detect(unsigned int)+0x7c>
 420:	ebfffffe 	bl	0 <operator new(unsigned int)>
 424:	e1a01005 	mov	r1, r5
 428:	e1a05000 	mov	r5, r0
 42c:	ebfffffe 	bl	0 <Ssd1306::Ssd1306(TOledPanel)>
 430:	e5845018 	str	r5, [r4, #24]
 434:	e5953000 	ldr	r3, [r5]
 438:	e1a00005 	mov	r0, r5
 43c:	e5933008 	ldr	r3, [r3, #8]
 440:	e12fff33 	blx	r3
 444:	e3500000 	cmp	r0, #0
 448:	1a000009 	bne	474 <Display::Detect(unsigned int)+0x94>
 44c:	e5943018 	ldr	r3, [r4, #24]
 450:	e3530000 	cmp	r3, #0
 454:	05843014 	streq	r3, [r4, #20]
 458:	e8bd8070 	pop	{r4, r5, r6, pc}
 45c:	ebfffffe 	bl	0 <operator new(unsigned int)>
 460:	e1a05000 	mov	r5, r0
 464:	e3a01001 	mov	r1, #1
 468:	ebfffffe 	bl	0 <Ssd1306::Ssd1306(TOledPanel)>
 46c:	e5845018 	str	r5, [r4, #24]
 470:	eaffffef 	b	434 <Display::Detect(unsigned int)+0x54>
 474:	e3a03002 	mov	r3, #2
 478:	e3a01001 	mov	r1, #1
 47c:	e1a00004 	mov	r0, r4
 480:	e59f2010 	ldr	r2, [pc, #16]	; 498 <Display::Detect(unsigned int)+0xb8>
 484:	e5843000 	str	r3, [r4]
 488:	ebfffffe 	bl	0 <Display::Detect(display::Type)>
 48c:	eaffffee 	b	44c <Display::Detect(unsigned int)+0x6c>
 490:	20804000 	addcs	r4, r0, r0
 494:	000186a0 	andeq	r8, r1, r0, lsr #13
 498:	00000014 	andeq	r0, r0, r4, lsl r0

0000049c <Display::Display(unsigned int)>:
 49c:	e3a03004 	mov	r3, #4
 4a0:	e92d4030 	push	{r4, r5, lr}
 4a4:	e1a04000 	mov	r4, r0
 4a8:	e24dd014 	sub	sp, sp, #20
 4ac:	e5803000 	str	r3, [r0]
 4b0:	e58d1004 	str	r1, [sp, #4]
 4b4:	ebfffffe 	bl	0 <millis>
 4b8:	e3a03000 	mov	r3, #0
 4bc:	e3a02021 	mov	r2, #33	; 0x21
 4c0:	e59fc154 	ldr	ip, [pc, #340]	; 61c <Display::Display(unsigned int)+0x180>
 4c4:	e59d1004 	ldr	r1, [sp, #4]
 4c8:	e584c00c 	str	ip, [r4, #12]
 4cc:	e59fc14c 	ldr	ip, [pc, #332]	; 620 <Display::Display(unsigned int)+0x184>
 4d0:	e5840004 	str	r0, [r4, #4]
 4d4:	e584c014 	str	ip, [r4, #20]
 4d8:	e59fc144 	ldr	ip, [pc, #324]	; 624 <Display::Display(unsigned int)+0x188>
 4dc:	e1a00004 	mov	r0, r4
 4e0:	e5c42008 	strb	r2, [r4, #8]
 4e4:	e1c431b0 	strh	r3, [r4, #16]
 4e8:	e5843018 	str	r3, [r4, #24]
 4ec:	e58c4000 	str	r4, [ip]
 4f0:	ebfffffe 	bl	3e0 <Display::Detect(unsigned int)>
 4f4:	e5d45008 	ldrb	r5, [r4, #8]
 4f8:	e59f3128 	ldr	r3, [pc, #296]	; 628 <Display::Display(unsigned int)+0x18c>
 4fc:	e594000c 	ldr	r0, [r4, #12]
 500:	e583500c 	str	r5, [r3, #12]
 504:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 508:	e2451030 	sub	r1, r5, #48	; 0x30
 50c:	e2455050 	sub	r5, r5, #80	; 0x50
 510:	e355000f 	cmp	r5, #15
 514:	83510007 	cmphi	r1, #7
 518:	93a01001 	movls	r1, #1
 51c:	83a01000 	movhi	r1, #0
 520:	8a000014 	bhi	578 <Display::Display(unsigned int)+0xdc>
 524:	e3a01001 	mov	r1, #1
 528:	e28d000c 	add	r0, sp, #12
 52c:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 530:	e16f0f10 	clz	r0, r0
 534:	e1a002a0 	lsr	r0, r0, #5
 538:	e3500000 	cmp	r0, #0
 53c:	e5c40011 	strb	r0, [r4, #17]
 540:	1a000013 	bne	594 <Display::Display(unsigned int)+0xf8>
 544:	e5943018 	ldr	r3, [r4, #24]
 548:	e3530000 	cmp	r3, #0
 54c:	0a00002f 	beq	610 <Display::Display(unsigned int)+0x174>
 550:	ebfffffe 	bl	0 <display::timeout::gpio_init()>
 554:	e5940018 	ldr	r0, [r4, #24]
 558:	e3500000 	cmp	r0, #0
 55c:	0a00002b 	beq	610 <Display::Display(unsigned int)+0x174>
 560:	e5903000 	ldr	r3, [r0]
 564:	e5933034 	ldr	r3, [r3, #52]	; 0x34
 568:	e12fff33 	blx	r3
 56c:	e1a00004 	mov	r0, r4
 570:	e28dd014 	add	sp, sp, #20
 574:	e8bd8030 	pop	{r4, r5, pc}
 578:	e1a00001 	mov	r0, r1
 57c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 580:	e16f0f10 	clz	r0, r0
 584:	e1a002a0 	lsr	r0, r0, #5
 588:	e3500000 	cmp	r0, #0
 58c:	e5c40011 	strb	r0, [r4, #17]
 590:	0affffeb 	beq	544 <Display::Display(unsigned int)+0xa8>
 594:	e3a03000 	mov	r3, #0
 598:	e5d42008 	ldrb	r2, [r4, #8]
 59c:	e59f5084 	ldr	r5, [pc, #132]	; 628 <Display::Display(unsigned int)+0x18c>
 5a0:	e5cd300c 	strb	r3, [sp, #12]
 5a4:	e5cd300d 	strb	r3, [sp, #13]
 5a8:	e5cd300e 	strb	r3, [sp, #14]
 5ac:	e594000c 	ldr	r0, [r4, #12]
 5b0:	e585200c 	str	r2, [r5, #12]
 5b4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 5b8:	e3a01003 	mov	r1, #3
 5bc:	e28d000c 	add	r0, sp, #12
 5c0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 5c4:	e5d43011 	ldrb	r3, [r4, #17]
 5c8:	e3530000 	cmp	r3, #0
 5cc:	0affffdc 	beq	544 <Display::Display(unsigned int)+0xa8>
 5d0:	e3a02012 	mov	r2, #18
 5d4:	e5cd200c 	strb	r2, [sp, #12]
 5d8:	e3e0203f 	mvn	r2, #63	; 0x3f
 5dc:	e5cd200d 	strb	r2, [sp, #13]
 5e0:	e3e02000 	mvn	r2, #0
 5e4:	e5d43008 	ldrb	r3, [r4, #8]
 5e8:	e594000c 	ldr	r0, [r4, #12]
 5ec:	e5cd200e 	strb	r2, [sp, #14]
 5f0:	e585300c 	str	r3, [r5, #12]
 5f4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 5f8:	e3a01003 	mov	r1, #3
 5fc:	e28d000c 	add	r0, sp, #12
 600:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 604:	e5943018 	ldr	r3, [r4, #24]
 608:	e3530000 	cmp	r3, #0
 60c:	1affffcf 	bne	550 <Display::Display(unsigned int)+0xb4>
 610:	e59f0014 	ldr	r0, [pc, #20]	; 62c <Display::Display(unsigned int)+0x190>
 614:	ebfffffe 	bl	0 <puts>
 618:	eaffffd3 	b	56c <Display::Display(unsigned int)+0xd0>
 61c:	00061a80 	andeq	r1, r6, r0, lsl #21
 620:	000493e0 	andeq	r9, r4, r0, ror #7
 624:	00000000 	andeq	r0, r0, r0
 628:	20804000 	addcs	r4, r0, r0
 62c:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss:

00000000 <Display::s_pThis>:
   0:	00000000 	andeq	r0, r0, r0

Disassembly of section .text._ZN7Ssd1306D0Ev:

00000000 <Ssd1306::~Ssd1306()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .text._ZN7Display6PrintfEhPKcz:

00000000 <Display::Printf(unsigned char, char const*, ...)>:
   0:	e92d000c 	push	{r2, r3}
   4:	e92d4070 	push	{r4, r5, r6, lr}
   8:	e5904018 	ldr	r4, [r0, #24]
   c:	e24dd028 	sub	sp, sp, #40	; 0x28
  10:	e3540000 	cmp	r4, #0
  14:	0a00000f 	beq	58 <Display::Printf(unsigned char, char const*, ...)+0x58>
  18:	e1a05000 	mov	r5, r0
  1c:	e28d303c 	add	r3, sp, #60	; 0x3c
  20:	e1a06001 	mov	r6, r1
  24:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
  28:	e3a01020 	mov	r1, #32
  2c:	e28d0008 	add	r0, sp, #8
  30:	e58d3004 	str	r3, [sp, #4]
  34:	ebfffffe 	bl	0 <vsnprintf>
  38:	e1a04000 	mov	r4, r0
  3c:	e5950018 	ldr	r0, [r5, #24]
  40:	e1a01006 	mov	r1, r6
  44:	e5903000 	ldr	r3, [r0]
  48:	e28d2008 	add	r2, sp, #8
  4c:	e593501c 	ldr	r5, [r3, #28]
  50:	e6ff3074 	uxth	r3, r4
  54:	e12fff35 	blx	r5
  58:	e1a00004 	mov	r0, r4
  5c:	e28dd028 	add	sp, sp, #40	; 0x28
  60:	e8bd4070 	pop	{r4, r5, r6, lr}
  64:	e28dd008 	add	sp, sp, #8
  68:	e12fff1e 	bx	lr

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
   4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
   8:	66207961 	strtvs	r7, [r0], -r1, ror #18
   c:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
  10:	00000000 	andeq	r0, r0, r0
  14:	31445353 	cmpcc	r4, r3, asr r3
  18:	00363033 	eorseq	r3, r6, r3, lsr r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <Display::Display(unsigned int)+0x168d390>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <Display::Display(unsigned int)+0x41f88>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


hd44780.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000000a 	andeq	r0, r0, sl

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000000b 	andeq	r0, r0, fp

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000000c 	andeq	r0, r0, ip

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000000d 	andeq	r0, r0, sp

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000000f 	andeq	r0, r0, pc
   8:	00000010 	andeq	r0, r0, r0, lsl r0

Disassembly of section .text:

00000000 <Hd44780::SetCursor(unsigned int)>:
   0:	e12fff1e 	bx	lr

00000004 <Hd44780::PrintInfo()>:
   4:	e1a03000 	mov	r3, r0
   8:	e59f0008 	ldr	r0, [pc, #8]	; 18 <Hd44780::PrintInfo()+0x14>
   c:	e5d32004 	ldrb	r2, [r3, #4]
  10:	e5d31005 	ldrb	r1, [r3, #5]
  14:	eafffffe 	b	0 <printf>
  18:	00000000 	andeq	r0, r0, r0

0000001c <Hd44780::Hd44780()>:
  1c:	e3a02027 	mov	r2, #39	; 0x27
  20:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  24:	e59fc014 	ldr	ip, [pc, #20]	; 40 <Hd44780::Hd44780()+0x24>
  28:	e59f1014 	ldr	r1, [pc, #20]	; 44 <Hd44780::Hd44780()+0x28>
  2c:	e59fe014 	ldr	lr, [pc, #20]	; 48 <Hd44780::Hd44780()+0x2c>
  30:	e580100c 	str	r1, [r0, #12]
  34:	e8805000 	stm	r0, {ip, lr}
  38:	e5c02008 	strb	r2, [r0, #8]
  3c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
  40:	00000008 	andeq	r0, r0, r8
  44:	00061a80 	andeq	r1, r6, r0, lsl #21
  48:	007f0210 	rsbseq	r0, pc, r0, lsl r2	; <UNPREDICTABLE>

0000004c <Hd44780::Hd44780(unsigned char, unsigned char)>:
  4c:	e3510010 	cmp	r1, #16
  50:	33a01010 	movcc	r1, #16
  54:	e3510014 	cmp	r1, #20
  58:	23a01014 	movcs	r1, #20
  5c:	e3520002 	cmp	r2, #2
  60:	33a02002 	movcc	r2, #2
  64:	e3520004 	cmp	r2, #4
  68:	e92d4030 	push	{r4, r5, lr}
  6c:	23a02004 	movcs	r2, #4
  70:	e3a0507f 	mov	r5, #127	; 0x7f
  74:	e3a04027 	mov	r4, #39	; 0x27
  78:	e59fc01c 	ldr	ip, [pc, #28]	; 9c <Hd44780::Hd44780(unsigned char, unsigned char)+0x50>
  7c:	e59fe01c 	ldr	lr, [pc, #28]	; a0 <Hd44780::Hd44780(unsigned char, unsigned char)+0x54>
  80:	e1c050b6 	strh	r5, [r0, #6]
  84:	e5c04008 	strb	r4, [r0, #8]
  88:	e580e00c 	str	lr, [r0, #12]
  8c:	e580c000 	str	ip, [r0]
  90:	e5c01004 	strb	r1, [r0, #4]
  94:	e5c02005 	strb	r2, [r0, #5]
  98:	e8bd8030 	pop	{r4, r5, pc}
  9c:	00000008 	andeq	r0, r0, r8
  a0:	00061a80 	andeq	r1, r6, r0, lsl #21

000000a4 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)>:
  a4:	e3510000 	cmp	r1, #0
  a8:	03a01027 	moveq	r1, #39	; 0x27
  ac:	e3520010 	cmp	r2, #16
  b0:	33a02010 	movcc	r2, #16
  b4:	e3520014 	cmp	r2, #20
  b8:	23a02014 	movcs	r2, #20
  bc:	e3530002 	cmp	r3, #2
  c0:	33a03002 	movcc	r3, #2
  c4:	e3530004 	cmp	r3, #4
  c8:	e92d4030 	push	{r4, r5, lr}
  cc:	23a03004 	movcs	r3, #4
  d0:	e3a0507f 	mov	r5, #127	; 0x7f
  d4:	e59f401c 	ldr	r4, [pc, #28]	; f8 <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x54>
  d8:	e59fe01c 	ldr	lr, [pc, #28]	; fc <Hd44780::Hd44780(unsigned char, unsigned char, unsigned char)+0x58>
  dc:	e1c050b6 	strh	r5, [r0, #6]
  e0:	e5804000 	str	r4, [r0]
  e4:	e5c01008 	strb	r1, [r0, #8]
  e8:	e580e00c 	str	lr, [r0, #12]
  ec:	e5c02004 	strb	r2, [r0, #4]
  f0:	e5c03005 	strb	r3, [r0, #5]
  f4:	e8bd8030 	pop	{r4, r5, pc}
  f8:	00000008 	andeq	r0, r0, r8
  fc:	00061a80 	andeq	r1, r6, r0, lsl #21

00000100 <Hd44780::Write4bits(unsigned char)>:
 100:	e92d4070 	push	{r4, r5, r6, lr}
 104:	e1a05000 	mov	r5, r0
 108:	e1a04001 	mov	r4, r1
 10c:	e5d53008 	ldrb	r3, [r5, #8]
 110:	e59f6070 	ldr	r6, [pc, #112]	; 188 <Hd44780::Write4bits(unsigned char)+0x88>
 114:	e24dd008 	sub	sp, sp, #8
 118:	e5cd1007 	strb	r1, [sp, #7]
 11c:	e590000c 	ldr	r0, [r0, #12]
 120:	e586300c 	str	r3, [r6, #12]
 124:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 128:	e3a01001 	mov	r1, #1
 12c:	e28d0007 	add	r0, sp, #7
 130:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 134:	e5d53008 	ldrb	r3, [r5, #8]
 138:	e384200c 	orr	r2, r4, #12
 13c:	e5cd2007 	strb	r2, [sp, #7]
 140:	e595000c 	ldr	r0, [r5, #12]
 144:	e586300c 	str	r3, [r6, #12]
 148:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 14c:	e3a01001 	mov	r1, #1
 150:	e28d0007 	add	r0, sp, #7
 154:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 158:	e3c4400c 	bic	r4, r4, #12
 15c:	e5d53008 	ldrb	r3, [r5, #8]
 160:	e3844008 	orr	r4, r4, #8
 164:	e595000c 	ldr	r0, [r5, #12]
 168:	e5cd4007 	strb	r4, [sp, #7]
 16c:	e586300c 	str	r3, [r6, #12]
 170:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 174:	e3a01001 	mov	r1, #1
 178:	e28d0007 	add	r0, sp, #7
 17c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 180:	e28dd008 	add	sp, sp, #8
 184:	e8bd8070 	pop	{r4, r5, r6, pc}
 188:	20804000 	addcs	r4, r0, r0

0000018c <Hd44780::PutString(char const*)>:
 18c:	e92d4070 	push	{r4, r5, r6, lr}
 190:	e5d14000 	ldrb	r4, [r1]
 194:	e3540000 	cmp	r4, #0
 198:	08bd8070 	popeq	{r4, r5, r6, pc}
 19c:	e1a05001 	mov	r5, r1
 1a0:	e1a06000 	mov	r6, r0
 1a4:	e3c4100f 	bic	r1, r4, #15
 1a8:	e1a04204 	lsl	r4, r4, #4
 1ac:	e1a00006 	mov	r0, r6
 1b0:	e3811001 	orr	r1, r1, #1
 1b4:	e3844001 	orr	r4, r4, #1
 1b8:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 1bc:	e20410f1 	and	r1, r4, #241	; 0xf1
 1c0:	e1a00006 	mov	r0, r6
 1c4:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 1c8:	e3a0002b 	mov	r0, #43	; 0x2b
 1cc:	ebfffffe 	bl	0 <udelay>
 1d0:	e5f54001 	ldrb	r4, [r5, #1]!
 1d4:	e3540000 	cmp	r4, #0
 1d8:	1afffff1 	bne	1a4 <Hd44780::PutString(char const*)+0x18>
 1dc:	e8bd8070 	pop	{r4, r5, r6, pc}

000001e0 <Hd44780::Text(char const*, unsigned int)>:
 1e0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 1e4:	e5d07004 	ldrb	r7, [r0, #4]
 1e8:	e1570002 	cmp	r7, r2
 1ec:	21a07002 	movcs	r7, r2
 1f0:	e3570000 	cmp	r7, #0
 1f4:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
 1f8:	e1a06000 	mov	r6, r0
 1fc:	e2415001 	sub	r5, r1, #1
 200:	e0857007 	add	r7, r5, r7
 204:	e5f54001 	ldrb	r4, [r5, #1]!
 208:	e1a00006 	mov	r0, r6
 20c:	e3c4100f 	bic	r1, r4, #15
 210:	e3811001 	orr	r1, r1, #1
 214:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 218:	e1a01204 	lsl	r1, r4, #4
 21c:	e3811001 	orr	r1, r1, #1
 220:	e1a00006 	mov	r0, r6
 224:	e20110f1 	and	r1, r1, #241	; 0xf1
 228:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 22c:	e3a0002b 	mov	r0, #43	; 0x2b
 230:	ebfffffe 	bl	0 <udelay>
 234:	e1570005 	cmp	r7, r5
 238:	1afffff1 	bne	204 <Hd44780::Text(char const*, unsigned int)+0x24>
 23c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00000240 <Hd44780::Cls()>:
 240:	e92d4010 	push	{r4, lr}
 244:	e1a04000 	mov	r4, r0
 248:	e3a01000 	mov	r1, #0
 24c:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 250:	e1a00004 	mov	r0, r4
 254:	e3a01010 	mov	r1, #16
 258:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 25c:	e3a00025 	mov	r0, #37	; 0x25
 260:	ebfffffe 	bl	0 <udelay>
 264:	e8bd4010 	pop	{r4, lr}
 268:	e59f0000 	ldr	r0, [pc]	; 270 <Hd44780::Cls()+0x30>
 26c:	eafffffe 	b	0 <udelay>
 270:	000005cb 	andeq	r0, r0, fp, asr #11

00000274 <Hd44780::PutChar(int)>:
 274:	e92d4070 	push	{r4, r5, r6, lr}
 278:	e1a04001 	mov	r4, r1
 27c:	e1a05000 	mov	r5, r0
 280:	e20110f0 	and	r1, r1, #240	; 0xf0
 284:	e3811001 	orr	r1, r1, #1
 288:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 28c:	e1a01204 	lsl	r1, r4, #4
 290:	e20110f0 	and	r1, r1, #240	; 0xf0
 294:	e1a00005 	mov	r0, r5
 298:	e3811001 	orr	r1, r1, #1
 29c:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 2a0:	e8bd4070 	pop	{r4, r5, r6, lr}
 2a4:	e3a0002b 	mov	r0, #43	; 0x2b
 2a8:	eafffffe 	b	0 <udelay>

000002ac <Hd44780::SetCursorPos(unsigned char, unsigned char)>:
 2ac:	e92d4030 	push	{r4, r5, lr}
 2b0:	e59f3050 	ldr	r3, [pc, #80]	; 308 <Hd44780::SetCursorPos(unsigned char, unsigned char)+0x5c>
 2b4:	e24dd00c 	sub	sp, sp, #12
 2b8:	e58d3004 	str	r3, [sp, #4]
 2bc:	e2022003 	and	r2, r2, #3
 2c0:	e28d3008 	add	r3, sp, #8
 2c4:	e0832002 	add	r2, r3, r2
 2c8:	e5523004 	ldrb	r3, [r2, #-4]
 2cc:	e1a05000 	mov	r5, r0
 2d0:	e0811003 	add	r1, r1, r3
 2d4:	e1e01c81 	mvn	r1, r1, lsl #25
 2d8:	e1e01ca1 	mvn	r1, r1, lsr #25
 2dc:	e6ef4071 	uxtb	r4, r1
 2e0:	e20110f0 	and	r1, r1, #240	; 0xf0
 2e4:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 2e8:	e1a01204 	lsl	r1, r4, #4
 2ec:	e1a00005 	mov	r0, r5
 2f0:	e20110f0 	and	r1, r1, #240	; 0xf0
 2f4:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 2f8:	e3a00025 	mov	r0, #37	; 0x25
 2fc:	e28dd00c 	add	sp, sp, #12
 300:	e8bd4030 	pop	{r4, r5, lr}
 304:	eafffffe 	b	0 <udelay>
 308:	54144000 	ldrpl	r4, [r4], #-0

0000030c <Hd44780::TextLine(unsigned char, char const*, unsigned int)>:
 30c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 310:	e1a07003 	mov	r7, r3
 314:	e5d03005 	ldrb	r3, [r0, #5]
 318:	e24dd00c 	sub	sp, sp, #12
 31c:	e1530001 	cmp	r3, r1
 320:	2a000001 	bcs	32c <Hd44780::TextLine(unsigned char, char const*, unsigned int)+0x20>
 324:	e28dd00c 	add	sp, sp, #12
 328:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 32c:	e1a06000 	mov	r6, r0
 330:	e2411001 	sub	r1, r1, #1
 334:	e28d3008 	add	r3, sp, #8
 338:	e2011003 	and	r1, r1, #3
 33c:	e0831001 	add	r1, r3, r1
 340:	e59f3088 	ldr	r3, [pc, #136]	; 3d0 <Hd44780::TextLine(unsigned char, char const*, unsigned int)+0xc4>
 344:	e1a05002 	mov	r5, r2
 348:	e58d3004 	str	r3, [sp, #4]
 34c:	e5514004 	ldrb	r4, [r1, #-4]
 350:	e3844080 	orr	r4, r4, #128	; 0x80
 354:	e20410f0 	and	r1, r4, #240	; 0xf0
 358:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 35c:	e1a01204 	lsl	r1, r4, #4
 360:	e1a00006 	mov	r0, r6
 364:	e20110f0 	and	r1, r1, #240	; 0xf0
 368:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 36c:	e3a00025 	mov	r0, #37	; 0x25
 370:	ebfffffe 	bl	0 <udelay>
 374:	e5d62004 	ldrb	r2, [r6, #4]
 378:	e1520007 	cmp	r2, r7
 37c:	31a07002 	movcc	r7, r2
 380:	e3570000 	cmp	r7, #0
 384:	0affffe6 	beq	324 <Hd44780::TextLine(unsigned char, char const*, unsigned int)+0x18>
 388:	e2455001 	sub	r5, r5, #1
 38c:	e0857007 	add	r7, r5, r7
 390:	e5f54001 	ldrb	r4, [r5, #1]!
 394:	e1a00006 	mov	r0, r6
 398:	e3c4100f 	bic	r1, r4, #15
 39c:	e3811001 	orr	r1, r1, #1
 3a0:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 3a4:	e1a01204 	lsl	r1, r4, #4
 3a8:	e3811001 	orr	r1, r1, #1
 3ac:	e1a00006 	mov	r0, r6
 3b0:	e20110f1 	and	r1, r1, #241	; 0xf1
 3b4:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 3b8:	e3a0002b 	mov	r0, #43	; 0x2b
 3bc:	ebfffffe 	bl	0 <udelay>
 3c0:	e1570005 	cmp	r7, r5
 3c4:	1afffff1 	bne	390 <Hd44780::TextLine(unsigned char, char const*, unsigned int)+0x84>
 3c8:	e28dd00c 	add	sp, sp, #12
 3cc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 3d0:	54144000 	ldrpl	r4, [r4], #-0

000003d4 <Hd44780::Start()>:
 3d4:	e92d4030 	push	{r4, r5, lr}
 3d8:	e59f3134 	ldr	r3, [pc, #308]	; 514 <Hd44780::Start()+0x140>
 3dc:	e5d05008 	ldrb	r5, [r0, #8]
 3e0:	e1a04000 	mov	r4, r0
 3e4:	e24dd00c 	sub	sp, sp, #12
 3e8:	e590000c 	ldr	r0, [r0, #12]
 3ec:	e583500c 	str	r5, [r3, #12]
 3f0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3f4:	e2451030 	sub	r1, r5, #48	; 0x30
 3f8:	e2455050 	sub	r5, r5, #80	; 0x50
 3fc:	e355000f 	cmp	r5, #15
 400:	83510007 	cmphi	r1, #7
 404:	93a01001 	movls	r1, #1
 408:	83a01000 	movhi	r1, #0
 40c:	8a000007 	bhi	430 <Hd44780::Start()+0x5c>
 410:	e3a01001 	mov	r1, #1
 414:	e28d0007 	add	r0, sp, #7
 418:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 41c:	e3500000 	cmp	r0, #0
 420:	0a000006 	beq	440 <Hd44780::Start()+0x6c>
 424:	e3a00000 	mov	r0, #0
 428:	e28dd00c 	add	sp, sp, #12
 42c:	e8bd8030 	pop	{r4, r5, pc}
 430:	e1a00001 	mov	r0, r1
 434:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 438:	e3500000 	cmp	r0, #0
 43c:	1afffff8 	bne	424 <Hd44780::Start()+0x50>
 440:	e1a00004 	mov	r0, r4
 444:	e3a01030 	mov	r1, #48	; 0x30
 448:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 44c:	e3a01030 	mov	r1, #48	; 0x30
 450:	e1a00004 	mov	r0, r4
 454:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 458:	e3a00025 	mov	r0, #37	; 0x25
 45c:	ebfffffe 	bl	0 <udelay>
 460:	e1a00004 	mov	r0, r4
 464:	e3a01030 	mov	r1, #48	; 0x30
 468:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 46c:	e3a01020 	mov	r1, #32
 470:	e1a00004 	mov	r0, r4
 474:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 478:	e3a00025 	mov	r0, #37	; 0x25
 47c:	ebfffffe 	bl	0 <udelay>
 480:	e1a00004 	mov	r0, r4
 484:	e3a01020 	mov	r1, #32
 488:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 48c:	e3a01080 	mov	r1, #128	; 0x80
 490:	e1a00004 	mov	r0, r4
 494:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 498:	e3a00025 	mov	r0, #37	; 0x25
 49c:	ebfffffe 	bl	0 <udelay>
 4a0:	e1a00004 	mov	r0, r4
 4a4:	e3a01000 	mov	r1, #0
 4a8:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 4ac:	e3a010c0 	mov	r1, #192	; 0xc0
 4b0:	e1a00004 	mov	r0, r4
 4b4:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 4b8:	e3a00025 	mov	r0, #37	; 0x25
 4bc:	ebfffffe 	bl	0 <udelay>
 4c0:	e1a00004 	mov	r0, r4
 4c4:	e3a01000 	mov	r1, #0
 4c8:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 4cc:	e3a01010 	mov	r1, #16
 4d0:	e1a00004 	mov	r0, r4
 4d4:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 4d8:	e3a00025 	mov	r0, #37	; 0x25
 4dc:	ebfffffe 	bl	0 <udelay>
 4e0:	e59f0030 	ldr	r0, [pc, #48]	; 518 <Hd44780::Start()+0x144>
 4e4:	ebfffffe 	bl	0 <udelay>
 4e8:	e1a00004 	mov	r0, r4
 4ec:	e3a01000 	mov	r1, #0
 4f0:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 4f4:	e3a01060 	mov	r1, #96	; 0x60
 4f8:	e1a00004 	mov	r0, r4
 4fc:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 500:	e3a00025 	mov	r0, #37	; 0x25
 504:	ebfffffe 	bl	0 <udelay>
 508:	e3a00001 	mov	r0, #1
 50c:	e28dd00c 	add	sp, sp, #12
 510:	e8bd8030 	pop	{r4, r5, pc}
 514:	20804000 	addcs	r4, r0, r0
 518:	000005cb 	andeq	r0, r0, fp, asr #11

0000051c <Hd44780::ClearLine(unsigned char)>:
 51c:	e5d03005 	ldrb	r3, [r0, #5]
 520:	e1530001 	cmp	r3, r1
 524:	312fff1e 	bxcc	lr
 528:	e92d4070 	push	{r4, r5, r6, lr}
 52c:	e1a04000 	mov	r4, r0
 530:	e59f30b8 	ldr	r3, [pc, #184]	; 5f0 <Hd44780::ClearLine(unsigned char)+0xd4>
 534:	e24dd008 	sub	sp, sp, #8
 538:	e2416001 	sub	r6, r1, #1
 53c:	e58d3004 	str	r3, [sp, #4]
 540:	e2066003 	and	r6, r6, #3
 544:	e28d3008 	add	r3, sp, #8
 548:	e0836006 	add	r6, r3, r6
 54c:	e5565004 	ldrb	r5, [r6, #-4]
 550:	e3855080 	orr	r5, r5, #128	; 0x80
 554:	e20510f0 	and	r1, r5, #240	; 0xf0
 558:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 55c:	e1a01205 	lsl	r1, r5, #4
 560:	e1a00004 	mov	r0, r4
 564:	e20110f0 	and	r1, r1, #240	; 0xf0
 568:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 56c:	e3a00025 	mov	r0, #37	; 0x25
 570:	ebfffffe 	bl	0 <udelay>
 574:	e5d43004 	ldrb	r3, [r4, #4]
 578:	e3530000 	cmp	r3, #0
 57c:	0a00000c 	beq	5b4 <Hd44780::ClearLine(unsigned char)+0x98>
 580:	e3a05000 	mov	r5, #0
 584:	e3a01021 	mov	r1, #33	; 0x21
 588:	e1a00004 	mov	r0, r4
 58c:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 590:	e3a01001 	mov	r1, #1
 594:	e1a00004 	mov	r0, r4
 598:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 59c:	e3a0002b 	mov	r0, #43	; 0x2b
 5a0:	ebfffffe 	bl	0 <udelay>
 5a4:	e5d43004 	ldrb	r3, [r4, #4]
 5a8:	e2855001 	add	r5, r5, #1
 5ac:	e1530005 	cmp	r3, r5
 5b0:	8afffff3 	bhi	584 <Hd44780::ClearLine(unsigned char)+0x68>
 5b4:	e59f3034 	ldr	r3, [pc, #52]	; 5f0 <Hd44780::ClearLine(unsigned char)+0xd4>
 5b8:	e1a00004 	mov	r0, r4
 5bc:	e58d3004 	str	r3, [sp, #4]
 5c0:	e5565004 	ldrb	r5, [r6, #-4]
 5c4:	e3855080 	orr	r5, r5, #128	; 0x80
 5c8:	e20510f0 	and	r1, r5, #240	; 0xf0
 5cc:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 5d0:	e1a01205 	lsl	r1, r5, #4
 5d4:	e1a00004 	mov	r0, r4
 5d8:	e20110f0 	and	r1, r1, #240	; 0xf0
 5dc:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 5e0:	e3a00025 	mov	r0, #37	; 0x25
 5e4:	e28dd008 	add	sp, sp, #8
 5e8:	e8bd4070 	pop	{r4, r5, r6, lr}
 5ec:	eafffffe 	b	0 <udelay>
 5f0:	54144000 	ldrpl	r4, [r4], #-0

000005f4 <Hd44780::WriteCmd(unsigned char)>:
 5f4:	e92d4070 	push	{r4, r5, r6, lr}
 5f8:	e1a04001 	mov	r4, r1
 5fc:	e1a05000 	mov	r5, r0
 600:	e20110f0 	and	r1, r1, #240	; 0xf0
 604:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 608:	e1a01204 	lsl	r1, r4, #4
 60c:	e1a00005 	mov	r0, r5
 610:	e20110f0 	and	r1, r1, #240	; 0xf0
 614:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 618:	e8bd4070 	pop	{r4, r5, r6, lr}
 61c:	e3a00025 	mov	r0, #37	; 0x25
 620:	eafffffe 	b	0 <udelay>

00000624 <Hd44780::WriteReg(unsigned char)>:
 624:	e92d4070 	push	{r4, r5, r6, lr}
 628:	e1a04001 	mov	r4, r1
 62c:	e1a05000 	mov	r5, r0
 630:	e3c1100f 	bic	r1, r1, #15
 634:	e3811001 	orr	r1, r1, #1
 638:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 63c:	e1a01204 	lsl	r1, r4, #4
 640:	e3811001 	orr	r1, r1, #1
 644:	e1a00005 	mov	r0, r5
 648:	e20110f1 	and	r1, r1, #241	; 0xf1
 64c:	ebfffffe 	bl	100 <Hd44780::Write4bits(unsigned char)>
 650:	e8bd4070 	pop	{r4, r5, r6, lr}
 654:	e3a0002b 	mov	r0, #43	; 0x2b
 658:	eafffffe 	b	0 <udelay>

Disassembly of section .text._ZN10DisplaySet8SetSleepEb:

00000000 <DisplaySet::SetSleep(bool)>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN10DisplaySet11SetContrastEh:

00000000 <DisplaySet::SetContrast(unsigned char)>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN10DisplaySet17SetFlipVerticallyEb:

00000000 <DisplaySet::SetFlipVertically(bool)>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN7Hd44780D1Ev:

00000000 <Hd44780::~Hd44780()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	34344448 	ldrtcc	r4, [r4], #-1096	; 0xfffffbb8
   4:	20303837 	eorscs	r3, r0, r7, lsr r8
   8:	4643505b 			; <UNDEFINED> instruction: 0x4643505b
   c:	34373538 	ldrtcc	r3, [r7], #-1336	; 0xfffffac8
  10:	28205d54 	stmdacs	r0!, {r2, r4, r6, r8, sl, fp, ip, lr}
  14:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
  18:	000a2964 	andeq	r2, sl, r4, ror #18

Disassembly of section .text._ZN7Hd44780D0Ev:

00000000 <Hd44780::~Hd44780()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata:

00000000 <vtable for Hd44780>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <Hd44780::WriteReg(unsigned char)+0x168d208>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <Hd44780::WriteReg(unsigned char)+0x41e00>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


ssd1306.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000007 	andeq	r0, r0, r7

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000009 	andeq	r0, r0, r9
   8:	0000000a 	andeq	r0, r0, sl

Disassembly of section .text:

00000000 <Ssd1306::SetCursor(unsigned int)>:
   0:	e12fff1e 	bx	lr

00000004 <Ssd1306::PrintInfo()>:
   4:	e1a02000 	mov	r2, r0
   8:	e5d2c011 	ldrb	ip, [r2, #17]
   c:	e59f3018 	ldr	r3, [pc, #24]	; 2c <Ssd1306::PrintInfo()+0x28>
  10:	e35c0000 	cmp	ip, #0
  14:	e59f1014 	ldr	r1, [pc, #20]	; 30 <Ssd1306::PrintInfo()+0x2c>
  18:	e59f0014 	ldr	r0, [pc, #20]	; 34 <Ssd1306::PrintInfo()+0x30>
  1c:	01a01003 	moveq	r1, r3
  20:	e5d23004 	ldrb	r3, [r2, #4]
  24:	e5d22005 	ldrb	r2, [r2, #5]
  28:	eafffffe 	b	0 <printf>
  2c:	00000008 	andeq	r0, r0, r8
  30:	00000000 	andeq	r0, r0, r0
  34:	00000010 	andeq	r0, r0, r0, lsl r0

00000038 <Ssd1306::PutChar(int)>:
  38:	e92d4010 	push	{r4, lr}
  3c:	e2411020 	sub	r1, r1, #32
  40:	e5d02008 	ldrb	r2, [r0, #8]
  44:	e59f3028 	ldr	r3, [pc, #40]	; 74 <Ssd1306::PutChar(int)+0x3c>
  48:	e351005f 	cmp	r1, #95	; 0x5f
  4c:	e59f4024 	ldr	r4, [pc, #36]	; 78 <Ssd1306::PutChar(int)+0x40>
  50:	90611181 	rsbls	r1, r1, r1, lsl #3
  54:	e583200c 	str	r2, [r3, #12]
  58:	90844001 	addls	r4, r4, r1
  5c:	e590000c 	ldr	r0, [r0, #12]
  60:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  64:	e1a00004 	mov	r0, r4
  68:	e8bd4010 	pop	{r4, lr}
  6c:	e3a01007 	mov	r1, #7
  70:	eafffffe 	b	0 <bcm2835_i2c_write>
  74:	20804000 	addcs	r4, r0, r0
  78:	00000000 	andeq	r0, r0, r0

0000007c <Ssd1306::PutString(char const*)>:
  7c:	e5d13000 	ldrb	r3, [r1]
  80:	e3530000 	cmp	r3, #0
  84:	012fff1e 	bxeq	lr
  88:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
  8c:	e1a05001 	mov	r5, r1
  90:	e1a06000 	mov	r6, r0
  94:	e59f8040 	ldr	r8, [pc, #64]	; dc <Ssd1306::PutString(char const*)+0x60>
  98:	e59f7040 	ldr	r7, [pc, #64]	; e0 <Ssd1306::PutString(char const*)+0x64>
  9c:	e2433020 	sub	r3, r3, #32
  a0:	e353005f 	cmp	r3, #95	; 0x5f
  a4:	81a04008 	movhi	r4, r8
  a8:	e0633183 	rsb	r3, r3, r3, lsl #3
  ac:	90884003 	addls	r4, r8, r3
  b0:	e5d63008 	ldrb	r3, [r6, #8]
  b4:	e587300c 	str	r3, [r7, #12]
  b8:	e596000c 	ldr	r0, [r6, #12]
  bc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  c0:	e3a01007 	mov	r1, #7
  c4:	e1a00004 	mov	r0, r4
  c8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  cc:	e5f53001 	ldrb	r3, [r5, #1]!
  d0:	e3530000 	cmp	r3, #0
  d4:	1afffff0 	bne	9c <Ssd1306::PutString(char const*)+0x20>
  d8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
  dc:	00000000 	andeq	r0, r0, r0
  e0:	20804000 	addcs	r4, r0, r0

000000e4 <Ssd1306::SetContrast(unsigned char)>:
  e4:	e3e0307e 	mvn	r3, #126	; 0x7e
  e8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
  ec:	e3a07000 	mov	r7, #0
  f0:	e1a04000 	mov	r4, r0
  f4:	e1a05001 	mov	r5, r1
  f8:	e24dd00c 	sub	sp, sp, #12
  fc:	e5cd3005 	strb	r3, [sp, #5]
 100:	e59f604c 	ldr	r6, [pc, #76]	; 154 <Ssd1306::SetContrast(unsigned char)+0x70>
 104:	e5d03008 	ldrb	r3, [r0, #8]
 108:	e5c01006 	strb	r1, [r0, #6]
 10c:	e5cd7004 	strb	r7, [sp, #4]
 110:	e586300c 	str	r3, [r6, #12]
 114:	e590000c 	ldr	r0, [r0, #12]
 118:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 11c:	e3a01002 	mov	r1, #2
 120:	e28d0004 	add	r0, sp, #4
 124:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 128:	e5d43008 	ldrb	r3, [r4, #8]
 12c:	e5cd7004 	strb	r7, [sp, #4]
 130:	e5cd5005 	strb	r5, [sp, #5]
 134:	e586300c 	str	r3, [r6, #12]
 138:	e594000c 	ldr	r0, [r4, #12]
 13c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 140:	e3a01002 	mov	r1, #2
 144:	e28d0004 	add	r0, sp, #4
 148:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 14c:	e28dd00c 	add	sp, sp, #12
 150:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 154:	20804000 	addcs	r4, r0, r0

00000158 <Ssd1306::SetSleep(bool)>:
 158:	e3510000 	cmp	r1, #0
 15c:	13e01051 	mvnne	r1, #81	; 0x51
 160:	13a0c000 	movne	ip, #0
 164:	03e0c050 	mvneq	ip, #80	; 0x50
 168:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 16c:	159f2038 	ldrne	r2, [pc, #56]	; 1ac <Ssd1306::SetSleep(bool)+0x54>
 170:	e5d03008 	ldrb	r3, [r0, #8]
 174:	059f2030 	ldreq	r2, [pc, #48]	; 1ac <Ssd1306::SetSleep(bool)+0x54>
 178:	e24dd00c 	sub	sp, sp, #12
 17c:	15cd1005 	strbne	r1, [sp, #5]
 180:	05cd1004 	strbeq	r1, [sp, #4]
 184:	15cdc004 	strbne	ip, [sp, #4]
 188:	05cdc005 	strbeq	ip, [sp, #5]
 18c:	e590000c 	ldr	r0, [r0, #12]
 190:	e582300c 	str	r3, [r2, #12]
 194:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 198:	e3a01002 	mov	r1, #2
 19c:	e28d0004 	add	r0, sp, #4
 1a0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1a4:	e28dd00c 	add	sp, sp, #12
 1a8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 1ac:	20804000 	addcs	r4, r0, r0

000001b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 1b0:	e3510014 	cmp	r1, #20
 1b4:	812fff1e 	bxhi	lr
 1b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 1bc:	e5d03005 	ldrb	r3, [r0, #5]
 1c0:	e1a05000 	mov	r5, r0
 1c4:	e1530002 	cmp	r3, r2
 1c8:	e1a06002 	mov	r6, r2
 1cc:	e24dd008 	sub	sp, sp, #8
 1d0:	9a000029 	bls	27c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0xcc>
 1d4:	e3a08000 	mov	r8, #0
 1d8:	e5d03011 	ldrb	r3, [r0, #17]
 1dc:	e0811081 	add	r1, r1, r1, lsl #1
 1e0:	e1a04081 	lsl	r4, r1, #1
 1e4:	e3530000 	cmp	r3, #0
 1e8:	e6ef4074 	uxtb	r4, r4
 1ec:	12844004 	addne	r4, r4, #4
 1f0:	16ef4074 	uxtbne	r4, r4
 1f4:	e204300f 	and	r3, r4, #15
 1f8:	e59f7084 	ldr	r7, [pc, #132]	; 284 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0xd4>
 1fc:	e5cd3005 	strb	r3, [sp, #5]
 200:	e5d03008 	ldrb	r3, [r0, #8]
 204:	e5cd8004 	strb	r8, [sp, #4]
 208:	e587300c 	str	r3, [r7, #12]
 20c:	e590000c 	ldr	r0, [r0, #12]
 210:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 214:	e3a01002 	mov	r1, #2
 218:	e28d0004 	add	r0, sp, #4
 21c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 220:	e1a04224 	lsr	r4, r4, #4
 224:	e5d53008 	ldrb	r3, [r5, #8]
 228:	e3844010 	orr	r4, r4, #16
 22c:	e5cd4005 	strb	r4, [sp, #5]
 230:	e5cd8004 	strb	r8, [sp, #4]
 234:	e587300c 	str	r3, [r7, #12]
 238:	e595000c 	ldr	r0, [r5, #12]
 23c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 240:	e3a01002 	mov	r1, #2
 244:	e28d0004 	add	r0, sp, #4
 248:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 24c:	e1e02006 	mvn	r2, r6
 250:	e202204f 	and	r2, r2, #79	; 0x4f
 254:	e1e02002 	mvn	r2, r2
 258:	e5d53008 	ldrb	r3, [r5, #8]
 25c:	e5cd8004 	strb	r8, [sp, #4]
 260:	e5cd2005 	strb	r2, [sp, #5]
 264:	e587300c 	str	r3, [r7, #12]
 268:	e595000c 	ldr	r0, [r5, #12]
 26c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 270:	e3a01002 	mov	r1, #2
 274:	e28d0004 	add	r0, sp, #4
 278:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 27c:	e28dd008 	add	sp, sp, #8
 280:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 284:	20804000 	addcs	r4, r0, r0

00000288 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 288:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 28c:	e1a06003 	mov	r6, r3
 290:	e5d03005 	ldrb	r3, [r0, #5]
 294:	e1530001 	cmp	r3, r1
 298:	38bd87f0 	popcc	{r4, r5, r6, r7, r8, r9, sl, pc}
 29c:	e1a09000 	mov	r9, r0
 2a0:	e2411001 	sub	r1, r1, #1
 2a4:	e1a05002 	mov	r5, r2
 2a8:	e6ef2071 	uxtb	r2, r1
 2ac:	e3a01000 	mov	r1, #0
 2b0:	ebfffffe 	bl	1b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 2b4:	e5d91004 	ldrb	r1, [r9, #4]
 2b8:	e1510006 	cmp	r1, r6
 2bc:	31a06001 	movcc	r6, r1
 2c0:	e3560000 	cmp	r6, #0
 2c4:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 2c8:	e2455001 	sub	r5, r5, #1
 2cc:	e59f8044 	ldr	r8, [pc, #68]	; 318 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x90>
 2d0:	e59f7044 	ldr	r7, [pc, #68]	; 31c <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x94>
 2d4:	e0856006 	add	r6, r5, r6
 2d8:	e5f53001 	ldrb	r3, [r5, #1]!
 2dc:	e2433020 	sub	r3, r3, #32
 2e0:	e353005f 	cmp	r3, #95	; 0x5f
 2e4:	81a04008 	movhi	r4, r8
 2e8:	e0633183 	rsb	r3, r3, r3, lsl #3
 2ec:	90884003 	addls	r4, r8, r3
 2f0:	e5d93008 	ldrb	r3, [r9, #8]
 2f4:	e587300c 	str	r3, [r7, #12]
 2f8:	e599000c 	ldr	r0, [r9, #12]
 2fc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 300:	e3a01007 	mov	r1, #7
 304:	e1a00004 	mov	r0, r4
 308:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 30c:	e1550006 	cmp	r5, r6
 310:	1afffff0 	bne	2d8 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x50>
 314:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 318:	00000000 	andeq	r0, r0, r0
 31c:	20804000 	addcs	r4, r0, r0

00000320 <Ssd1306::ClearLine(unsigned char)>:
 320:	e5d03005 	ldrb	r3, [r0, #5]
 324:	e1530001 	cmp	r3, r1
 328:	312fff1e 	bxcc	lr
 32c:	e92d4010 	push	{r4, lr}
 330:	e1a04000 	mov	r4, r0
 334:	e2411001 	sub	r1, r1, #1
 338:	e24dd008 	sub	sp, sp, #8
 33c:	e6ef2071 	uxtb	r2, r1
 340:	e3a01000 	mov	r1, #0
 344:	e58d2004 	str	r2, [sp, #4]
 348:	ebfffffe 	bl	1b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 34c:	e5d41008 	ldrb	r1, [r4, #8]
 350:	e59f302c 	ldr	r3, [pc, #44]	; 384 <Ssd1306::ClearLine(unsigned char)+0x64>
 354:	e583100c 	str	r1, [r3, #12]
 358:	e594000c 	ldr	r0, [r4, #12]
 35c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 360:	e3a01081 	mov	r1, #129	; 0x81
 364:	e59f001c 	ldr	r0, [pc, #28]	; 388 <Ssd1306::ClearLine(unsigned char)+0x68>
 368:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 36c:	e3a01000 	mov	r1, #0
 370:	e1a00004 	mov	r0, r4
 374:	e59d2004 	ldr	r2, [sp, #4]
 378:	e28dd008 	add	sp, sp, #8
 37c:	e8bd4010 	pop	{r4, lr}
 380:	eafffffe 	b	1b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 384:	20804000 	addcs	r4, r0, r0
 388:	00000000 	andeq	r0, r0, r0

0000038c <Ssd1306::SetFlipVertically(bool)>:
 38c:	e92d4070 	push	{r4, r5, r6, lr}
 390:	e1a04000 	mov	r4, r0
 394:	e3510000 	cmp	r1, #0
 398:	e5d03008 	ldrb	r3, [r0, #8]
 39c:	e24dd008 	sub	sp, sp, #8
 3a0:	e590000c 	ldr	r0, [r0, #12]
 3a4:	e5c41007 	strb	r1, [r4, #7]
 3a8:	0a000015 	beq	404 <Ssd1306::SetFlipVertically(bool)+0x78>
 3ac:	e3e0203f 	mvn	r2, #63	; 0x3f
 3b0:	e3a06000 	mov	r6, #0
 3b4:	e59f5088 	ldr	r5, [pc, #136]	; 444 <Ssd1306::SetFlipVertically(bool)+0xb8>
 3b8:	e5cd2005 	strb	r2, [sp, #5]
 3bc:	e5cd6004 	strb	r6, [sp, #4]
 3c0:	e585300c 	str	r3, [r5, #12]
 3c4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3c8:	e3a01002 	mov	r1, #2
 3cc:	e28d0004 	add	r0, sp, #4
 3d0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3d4:	e3e0205f 	mvn	r2, #95	; 0x5f
 3d8:	e5d43008 	ldrb	r3, [r4, #8]
 3dc:	e5cd6004 	strb	r6, [sp, #4]
 3e0:	e5cd2005 	strb	r2, [sp, #5]
 3e4:	e585300c 	str	r3, [r5, #12]
 3e8:	e594000c 	ldr	r0, [r4, #12]
 3ec:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3f0:	e3a01002 	mov	r1, #2
 3f4:	e28d0004 	add	r0, sp, #4
 3f8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3fc:	e28dd008 	add	sp, sp, #8
 400:	e8bd8070 	pop	{r4, r5, r6, pc}
 404:	e3e02037 	mvn	r2, #55	; 0x37
 408:	e59f6034 	ldr	r6, [pc, #52]	; 444 <Ssd1306::SetFlipVertically(bool)+0xb8>
 40c:	e5cd2005 	strb	r2, [sp, #5]
 410:	e5cd1004 	strb	r1, [sp, #4]
 414:	e586300c 	str	r3, [r6, #12]
 418:	e1a05001 	mov	r5, r1
 41c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 420:	e3a01002 	mov	r1, #2
 424:	e28d0004 	add	r0, sp, #4
 428:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 42c:	e3e0205e 	mvn	r2, #94	; 0x5e
 430:	e5d43008 	ldrb	r3, [r4, #8]
 434:	e5cd5004 	strb	r5, [sp, #4]
 438:	e5cd2005 	strb	r2, [sp, #5]
 43c:	e586300c 	str	r3, [r6, #12]
 440:	eaffffe8 	b	3e8 <Ssd1306::SetFlipVertically(bool)+0x5c>
 444:	20804000 	addcs	r4, r0, r0

00000448 <Ssd1306::Cls()>:
 448:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 44c:	e5d02011 	ldrb	r2, [r0, #17]
 450:	e5903014 	ldr	r3, [r0, #20]
 454:	e3520000 	cmp	r2, #0
 458:	03a09010 	moveq	r9, #16
 45c:	13a09014 	movne	r9, #20
 460:	03a08000 	moveq	r8, #0
 464:	13a08004 	movne	r8, #4
 468:	e3530000 	cmp	r3, #0
 46c:	e1a04000 	mov	r4, r0
 470:	e24dd00c 	sub	sp, sp, #12
 474:	0a000054 	beq	5cc <Ssd1306::Cls()+0x184>
 478:	e3a05000 	mov	r5, #0
 47c:	e59f6150 	ldr	r6, [pc, #336]	; 5d4 <Ssd1306::Cls()+0x18c>
 480:	e59fa150 	ldr	sl, [pc, #336]	; 5d8 <Ssd1306::Cls()+0x190>
 484:	e28d7004 	add	r7, sp, #4
 488:	e3a0b000 	mov	fp, #0
 48c:	e5d43008 	ldrb	r3, [r4, #8]
 490:	e5cd8005 	strb	r8, [sp, #5]
 494:	e5cdb004 	strb	fp, [sp, #4]
 498:	e586300c 	str	r3, [r6, #12]
 49c:	e594000c 	ldr	r0, [r4, #12]
 4a0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4a4:	e3a01002 	mov	r1, #2
 4a8:	e1a00007 	mov	r0, r7
 4ac:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4b0:	e5d43008 	ldrb	r3, [r4, #8]
 4b4:	e5cdb004 	strb	fp, [sp, #4]
 4b8:	e5cd9005 	strb	r9, [sp, #5]
 4bc:	e586300c 	str	r3, [r6, #12]
 4c0:	e594000c 	ldr	r0, [r4, #12]
 4c4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4c8:	e3a01002 	mov	r1, #2
 4cc:	e1a00007 	mov	r0, r7
 4d0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 4d4:	e1e03005 	mvn	r3, r5
 4d8:	e203304f 	and	r3, r3, #79	; 0x4f
 4dc:	e1e03003 	mvn	r3, r3
 4e0:	e5d42008 	ldrb	r2, [r4, #8]
 4e4:	e5cd3005 	strb	r3, [sp, #5]
 4e8:	e5cdb004 	strb	fp, [sp, #4]
 4ec:	e586200c 	str	r2, [r6, #12]
 4f0:	e594000c 	ldr	r0, [r4, #12]
 4f4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 4f8:	e3a01002 	mov	r1, #2
 4fc:	e1a00007 	mov	r0, r7
 500:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 504:	e5d43010 	ldrb	r3, [r4, #16]
 508:	e153000b 	cmp	r3, fp
 50c:	e2432001 	sub	r2, r3, #1
 510:	0a000001 	beq	51c <Ssd1306::Cls()+0xd4>
 514:	e3520001 	cmp	r2, #1
 518:	8a000007 	bhi	53c <Ssd1306::Cls()+0xf4>
 51c:	e5d43008 	ldrb	r3, [r4, #8]
 520:	e586300c 	str	r3, [r6, #12]
 524:	e594000c 	ldr	r0, [r4, #12]
 528:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 52c:	e248107f 	sub	r1, r8, #127	; 0x7f
 530:	e1a0000a 	mov	r0, sl
 534:	e6ef1071 	uxtb	r1, r1
 538:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 53c:	e5943014 	ldr	r3, [r4, #20]
 540:	e2855001 	add	r5, r5, #1
 544:	e1530005 	cmp	r3, r5
 548:	8affffce 	bhi	488 <Ssd1306::Cls()+0x40>
 54c:	e3a06000 	mov	r6, #0
 550:	e5d43008 	ldrb	r3, [r4, #8]
 554:	e59f5078 	ldr	r5, [pc, #120]	; 5d4 <Ssd1306::Cls()+0x18c>
 558:	e5cd8005 	strb	r8, [sp, #5]
 55c:	e5cd6004 	strb	r6, [sp, #4]
 560:	e585300c 	str	r3, [r5, #12]
 564:	e594000c 	ldr	r0, [r4, #12]
 568:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 56c:	e3a01002 	mov	r1, #2
 570:	e1a00007 	mov	r0, r7
 574:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 578:	e5d43008 	ldrb	r3, [r4, #8]
 57c:	e5cd6004 	strb	r6, [sp, #4]
 580:	e5cd9005 	strb	r9, [sp, #5]
 584:	e585300c 	str	r3, [r5, #12]
 588:	e594000c 	ldr	r0, [r4, #12]
 58c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 590:	e3a01002 	mov	r1, #2
 594:	e1a00007 	mov	r0, r7
 598:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 59c:	e3e0204f 	mvn	r2, #79	; 0x4f
 5a0:	e5d43008 	ldrb	r3, [r4, #8]
 5a4:	e5cd2005 	strb	r2, [sp, #5]
 5a8:	e5cd6004 	strb	r6, [sp, #4]
 5ac:	e585300c 	str	r3, [r5, #12]
 5b0:	e594000c 	ldr	r0, [r4, #12]
 5b4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 5b8:	e3a01002 	mov	r1, #2
 5bc:	e1a00007 	mov	r0, r7
 5c0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 5c4:	e28dd00c 	add	sp, sp, #12
 5c8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 5cc:	e28d7004 	add	r7, sp, #4
 5d0:	eaffffdd 	b	54c <Ssd1306::Cls()+0x104>
 5d4:	20804000 	addcs	r4, r0, r0
 5d8:	00000000 	andeq	r0, r0, r0

000005dc <Ssd1306::Ssd1306()>:
 5dc:	e92d4070 	push	{r4, r5, r6, lr}
 5e0:	e3a0103c 	mov	r1, #60	; 0x3c
 5e4:	e3a04000 	mov	r4, #0
 5e8:	e3a02008 	mov	r2, #8
 5ec:	e59f6028 	ldr	r6, [pc, #40]	; 61c <Ssd1306::Ssd1306()+0x40>
 5f0:	e59f5028 	ldr	r5, [pc, #40]	; 620 <Ssd1306::Ssd1306()+0x44>
 5f4:	e59fe028 	ldr	lr, [pc, #40]	; 624 <Ssd1306::Ssd1306()+0x48>
 5f8:	e59fc028 	ldr	ip, [pc, #40]	; 628 <Ssd1306::Ssd1306()+0x4c>
 5fc:	e5806000 	str	r6, [r0]
 600:	e580500c 	str	r5, [r0, #12]
 604:	e1c041b0 	strh	r4, [r0, #16]
 608:	e58e0088 	str	r0, [lr, #136]	; 0x88
 60c:	e580c004 	str	ip, [r0, #4]
 610:	e5c01008 	strb	r1, [r0, #8]
 614:	e5802014 	str	r2, [r0, #20]
 618:	e8bd8070 	pop	{r4, r5, r6, pc}
 61c:	000002a8 	andeq	r0, r0, r8, lsr #5
 620:	00061a80 	andeq	r1, r6, r0, lsl #21
 624:	00000000 	andeq	r0, r0, r0
 628:	007f0815 	rsbseq	r0, pc, r5, lsl r8	; <UNPREDICTABLE>

0000062c <Ssd1306::Ssd1306(TOledPanel)>:
 62c:	e3a02000 	mov	r2, #0
 630:	e92d4030 	push	{r4, r5, lr}
 634:	e3a0407f 	mov	r4, #127	; 0x7f
 638:	e3a0e03c 	mov	lr, #60	; 0x3c
 63c:	e59f5070 	ldr	r5, [pc, #112]	; 6b4 <Ssd1306::Ssd1306(TOledPanel)+0x88>
 640:	e59fc070 	ldr	ip, [pc, #112]	; 6b8 <Ssd1306::Ssd1306(TOledPanel)+0x8c>
 644:	e59f3070 	ldr	r3, [pc, #112]	; 6bc <Ssd1306::Ssd1306(TOledPanel)+0x90>
 648:	e1510002 	cmp	r1, r2
 64c:	e5805000 	str	r5, [r0]
 650:	e1c040b6 	strh	r4, [r0, #6]
 654:	e5c0e008 	strb	lr, [r0, #8]
 658:	e580c00c 	str	ip, [r0, #12]
 65c:	e5c01010 	strb	r1, [r0, #16]
 660:	e5c02011 	strb	r2, [r0, #17]
 664:	e5830088 	str	r0, [r3, #136]	; 0x88
 668:	0a000007 	beq	68c <Ssd1306::Ssd1306(TOledPanel)+0x60>
 66c:	e2411001 	sub	r1, r1, #1
 670:	e3510001 	cmp	r1, #1
 674:	8a000009 	bhi	6a0 <Ssd1306::Ssd1306(TOledPanel)+0x74>
 678:	e3a03004 	mov	r3, #4
 67c:	e59f203c 	ldr	r2, [pc, #60]	; 6c0 <Ssd1306::Ssd1306(TOledPanel)+0x94>
 680:	e5803014 	str	r3, [r0, #20]
 684:	e1c020b4 	strh	r2, [r0, #4]
 688:	e8bd8030 	pop	{r4, r5, pc}
 68c:	e3a03008 	mov	r3, #8
 690:	e59f202c 	ldr	r2, [pc, #44]	; 6c4 <Ssd1306::Ssd1306(TOledPanel)+0x98>
 694:	e5803014 	str	r3, [r0, #20]
 698:	e1c020b4 	strh	r2, [r0, #4]
 69c:	e8bd8030 	pop	{r4, r5, pc}
 6a0:	e3a03004 	mov	r3, #4
 6a4:	e59f2018 	ldr	r2, [pc, #24]	; 6c4 <Ssd1306::Ssd1306(TOledPanel)+0x98>
 6a8:	e5803014 	str	r3, [r0, #20]
 6ac:	e1c020b4 	strh	r2, [r0, #4]
 6b0:	e8bd8030 	pop	{r4, r5, pc}
 6b4:	000002a8 	andeq	r0, r0, r8, lsr #5
 6b8:	00061a80 	andeq	r1, r6, r0, lsl #21
 6bc:	00000000 	andeq	r0, r0, r0
 6c0:	00000415 	andeq	r0, r0, r5, lsl r4
 6c4:	00000815 	andeq	r0, r0, r5, lsl r8

000006c8 <Ssd1306::Ssd1306(unsigned char, TOledPanel)>:
 6c8:	e3510000 	cmp	r1, #0
 6cc:	e3a0c000 	mov	ip, #0
 6d0:	e92d4030 	push	{r4, r5, lr}
 6d4:	03a0103c 	moveq	r1, #60	; 0x3c
 6d8:	e3a0e07f 	mov	lr, #127	; 0x7f
 6dc:	e59f5070 	ldr	r5, [pc, #112]	; 754 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x8c>
 6e0:	e59f4070 	ldr	r4, [pc, #112]	; 758 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x90>
 6e4:	e59f3070 	ldr	r3, [pc, #112]	; 75c <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x94>
 6e8:	e152000c 	cmp	r2, ip
 6ec:	e5805000 	str	r5, [r0]
 6f0:	e5c01008 	strb	r1, [r0, #8]
 6f4:	e580400c 	str	r4, [r0, #12]
 6f8:	e1c0e0b6 	strh	lr, [r0, #6]
 6fc:	e5c02010 	strb	r2, [r0, #16]
 700:	e5c0c011 	strb	ip, [r0, #17]
 704:	e5830088 	str	r0, [r3, #136]	; 0x88
 708:	0a000007 	beq	72c <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x64>
 70c:	e2422001 	sub	r2, r2, #1
 710:	e3520001 	cmp	r2, #1
 714:	8a000009 	bhi	740 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x78>
 718:	e3a03004 	mov	r3, #4
 71c:	e59f203c 	ldr	r2, [pc, #60]	; 760 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x98>
 720:	e5803014 	str	r3, [r0, #20]
 724:	e1c020b4 	strh	r2, [r0, #4]
 728:	e8bd8030 	pop	{r4, r5, pc}
 72c:	e3a03008 	mov	r3, #8
 730:	e59f202c 	ldr	r2, [pc, #44]	; 764 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x9c>
 734:	e5803014 	str	r3, [r0, #20]
 738:	e1c020b4 	strh	r2, [r0, #4]
 73c:	e8bd8030 	pop	{r4, r5, pc}
 740:	e3a03004 	mov	r3, #4
 744:	e59f2018 	ldr	r2, [pc, #24]	; 764 <Ssd1306::Ssd1306(unsigned char, TOledPanel)+0x9c>
 748:	e5803014 	str	r3, [r0, #20]
 74c:	e1c020b4 	strh	r2, [r0, #4]
 750:	e8bd8030 	pop	{r4, r5, pc}
 754:	000002a8 	andeq	r0, r0, r8, lsr #5
 758:	00061a80 	andeq	r1, r6, r0, lsl #21
 75c:	00000000 	andeq	r0, r0, r0
 760:	00000415 	andeq	r0, r0, r5, lsl r4
 764:	00000815 	andeq	r0, r0, r5, lsl r8

00000768 <Ssd1306::CheckSH1106()>:
 768:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 76c:	e3a05000 	mov	r5, #0
 770:	e1a04000 	mov	r4, r0
 774:	e3e0806f 	mvn	r8, #111	; 0x6f
 778:	e3e0704f 	mvn	r7, #79	; 0x4f
 77c:	e59f6194 	ldr	r6, [pc, #404]	; 918 <Ssd1306::CheckSH1106()+0x1b0>
 780:	e5d03008 	ldrb	r3, [r0, #8]
 784:	e24dd018 	sub	sp, sp, #24
 788:	e5cd5010 	strb	r5, [sp, #16]
 78c:	e5cd5011 	strb	r5, [sp, #17]
 790:	e586300c 	str	r3, [r6, #12]
 794:	e590000c 	ldr	r0, [r0, #12]
 798:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 79c:	e3a01002 	mov	r1, #2
 7a0:	e28d0010 	add	r0, sp, #16
 7a4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7a8:	e5d43008 	ldrb	r3, [r4, #8]
 7ac:	e5cd5010 	strb	r5, [sp, #16]
 7b0:	e5cd8011 	strb	r8, [sp, #17]
 7b4:	e586300c 	str	r3, [r6, #12]
 7b8:	e594000c 	ldr	r0, [r4, #12]
 7bc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7c0:	e3a01002 	mov	r1, #2
 7c4:	e28d0010 	add	r0, sp, #16
 7c8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7cc:	e5d43008 	ldrb	r3, [r4, #8]
 7d0:	e5cd5010 	strb	r5, [sp, #16]
 7d4:	e5cd7011 	strb	r7, [sp, #17]
 7d8:	e586300c 	str	r3, [r6, #12]
 7dc:	e594000c 	ldr	r0, [r4, #12]
 7e0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7e4:	e3a01002 	mov	r1, #2
 7e8:	e28d0010 	add	r0, sp, #16
 7ec:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7f0:	e5d42008 	ldrb	r2, [r4, #8]
 7f4:	e59f3120 	ldr	r3, [pc, #288]	; 91c <Ssd1306::CheckSH1106()+0x1b4>
 7f8:	e8930003 	ldm	r3, {r0, r1}
 7fc:	e58d0008 	str	r0, [sp, #8]
 800:	e5cd100c 	strb	r1, [sp, #12]
 804:	e586200c 	str	r2, [r6, #12]
 808:	e594000c 	ldr	r0, [r4, #12]
 80c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 810:	e3a01005 	mov	r1, #5
 814:	e28d0008 	add	r0, sp, #8
 818:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 81c:	e5d43008 	ldrb	r3, [r4, #8]
 820:	e5cd5010 	strb	r5, [sp, #16]
 824:	e5cd5011 	strb	r5, [sp, #17]
 828:	e586300c 	str	r3, [r6, #12]
 82c:	e594000c 	ldr	r0, [r4, #12]
 830:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 834:	e3a01002 	mov	r1, #2
 838:	e28d0010 	add	r0, sp, #16
 83c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 840:	e5d43008 	ldrb	r3, [r4, #8]
 844:	e5cd8011 	strb	r8, [sp, #17]
 848:	e5cd5010 	strb	r5, [sp, #16]
 84c:	e586300c 	str	r3, [r6, #12]
 850:	e594000c 	ldr	r0, [r4, #12]
 854:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 858:	e3a01002 	mov	r1, #2
 85c:	e28d0010 	add	r0, sp, #16
 860:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 864:	e5d43008 	ldrb	r3, [r4, #8]
 868:	e5cd5010 	strb	r5, [sp, #16]
 86c:	e5cd7011 	strb	r7, [sp, #17]
 870:	e586300c 	str	r3, [r6, #12]
 874:	e594000c 	ldr	r0, [r4, #12]
 878:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 87c:	e3a01002 	mov	r1, #2
 880:	e28d0010 	add	r0, sp, #16
 884:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 888:	e3a02040 	mov	r2, #64	; 0x40
 88c:	e5d43008 	ldrb	r3, [r4, #8]
 890:	e5cd2007 	strb	r2, [sp, #7]
 894:	e594000c 	ldr	r0, [r4, #12]
 898:	e58d5010 	str	r5, [sp, #16]
 89c:	e5cd5014 	strb	r5, [sp, #20]
 8a0:	e586300c 	str	r3, [r6, #12]
 8a4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 8a8:	e3a01001 	mov	r1, #1
 8ac:	e28d0007 	add	r0, sp, #7
 8b0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 8b4:	e5d43008 	ldrb	r3, [r4, #8]
 8b8:	e594000c 	ldr	r0, [r4, #12]
 8bc:	e586300c 	str	r3, [r6, #12]
 8c0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 8c4:	e3a01005 	mov	r1, #5
 8c8:	e28d0010 	add	r0, sp, #16
 8cc:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 8d0:	e28d3009 	add	r3, sp, #9
 8d4:	e28d2011 	add	r2, sp, #17
 8d8:	e28dc00d 	add	ip, sp, #13
 8dc:	ea000001 	b	8e8 <Ssd1306::CheckSH1106()+0x180>
 8e0:	e15c0003 	cmp	ip, r3
 8e4:	0a000007 	beq	908 <Ssd1306::CheckSH1106()+0x1a0>
 8e8:	e4d30001 	ldrb	r0, [r3], #1
 8ec:	e4d21001 	ldrb	r1, [r2], #1
 8f0:	e1500001 	cmp	r0, r1
 8f4:	0afffff9 	beq	8e0 <Ssd1306::CheckSH1106()+0x178>
 8f8:	e3a03000 	mov	r3, #0
 8fc:	e5c43011 	strb	r3, [r4, #17]
 900:	e28dd018 	add	sp, sp, #24
 904:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 908:	e3a03001 	mov	r3, #1
 90c:	e5c43011 	strb	r3, [r4, #17]
 910:	e28dd018 	add	sp, sp, #24
 914:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 918:	20804000 	addcs	r4, r0, r0
 91c:	0000001c 	andeq	r0, r0, ip, lsl r0

00000920 <Ssd1306::Start()>:
 920:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
 924:	e59f31a0 	ldr	r3, [pc, #416]	; acc <Ssd1306::Start()+0x1ac>
 928:	e5d04008 	ldrb	r4, [r0, #8]
 92c:	e1a05000 	mov	r5, r0
 930:	e24dd00c 	sub	sp, sp, #12
 934:	e590000c 	ldr	r0, [r0, #12]
 938:	e583400c 	str	r4, [r3, #12]
 93c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 940:	e2441030 	sub	r1, r4, #48	; 0x30
 944:	e2444050 	sub	r4, r4, #80	; 0x50
 948:	e354000f 	cmp	r4, #15
 94c:	83510007 	cmphi	r1, #7
 950:	93a04001 	movls	r4, #1
 954:	83a04000 	movhi	r4, #0
 958:	8a00003b 	bhi	a4c <Ssd1306::Start()+0x12c>
 95c:	e3a01001 	mov	r1, #1
 960:	e28d0004 	add	r0, sp, #4
 964:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 968:	e3500000 	cmp	r0, #0
 96c:	1a00003f 	bne	a70 <Ssd1306::Start()+0x150>
 970:	e5d57010 	ldrb	r7, [r5, #16]
 974:	e3570000 	cmp	r7, #0
 978:	0a000040 	beq	a80 <Ssd1306::Start()+0x160>
 97c:	e2477001 	sub	r7, r7, #1
 980:	e3570001 	cmp	r7, #1
 984:	8a000039 	bhi	a70 <Ssd1306::Start()+0x150>
 988:	e59f4140 	ldr	r4, [pc, #320]	; ad0 <Ssd1306::Start()+0x1b0>
 98c:	e3a030ae 	mov	r3, #174	; 0xae
 990:	e3a09000 	mov	r9, #0
 994:	e59f8130 	ldr	r8, [pc, #304]	; acc <Ssd1306::Start()+0x1ac>
 998:	e2847017 	add	r7, r4, #23
 99c:	e28d6004 	add	r6, sp, #4
 9a0:	ea000000 	b	9a8 <Ssd1306::Start()+0x88>
 9a4:	e5f43001 	ldrb	r3, [r4, #1]!
 9a8:	e5d52008 	ldrb	r2, [r5, #8]
 9ac:	e5cd3005 	strb	r3, [sp, #5]
 9b0:	e5cd9004 	strb	r9, [sp, #4]
 9b4:	e588200c 	str	r2, [r8, #12]
 9b8:	e595000c 	ldr	r0, [r5, #12]
 9bc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 9c0:	e3a01002 	mov	r1, #2
 9c4:	e1a00006 	mov	r0, r6
 9c8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 9cc:	e1540007 	cmp	r4, r7
 9d0:	1afffff3 	bne	9a4 <Ssd1306::Start()+0x84>
 9d4:	e3a04000 	mov	r4, #0
 9d8:	e59f30f4 	ldr	r3, [pc, #244]	; ad4 <Ssd1306::Start()+0x1b4>
 9dc:	e2832086 	add	r2, r3, #134	; 0x86
 9e0:	e5e34001 	strb	r4, [r3, #1]!
 9e4:	e1530002 	cmp	r3, r2
 9e8:	1afffffc 	bne	9e0 <Ssd1306::Start()+0xc0>
 9ec:	e3a02040 	mov	r2, #64	; 0x40
 9f0:	e59f30e0 	ldr	r3, [pc, #224]	; ad8 <Ssd1306::Start()+0x1b8>
 9f4:	e1a00005 	mov	r0, r5
 9f8:	e5c32000 	strb	r2, [r3]
 9fc:	ebfffffe 	bl	768 <Ssd1306::CheckSH1106()>
 a00:	e1a00005 	mov	r0, r5
 a04:	ebfffffe 	bl	448 <Ssd1306::Cls()>
 a08:	e3e01050 	mvn	r1, #80	; 0x50
 a0c:	e59f30b8 	ldr	r3, [pc, #184]	; acc <Ssd1306::Start()+0x1ac>
 a10:	e5d52008 	ldrb	r2, [r5, #8]
 a14:	e5cd4004 	strb	r4, [sp, #4]
 a18:	e5cd1005 	strb	r1, [sp, #5]
 a1c:	e583200c 	str	r2, [r3, #12]
 a20:	e595000c 	ldr	r0, [r5, #12]
 a24:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 a28:	e3a01002 	mov	r1, #2
 a2c:	e1a00006 	mov	r0, r6
 a30:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 a34:	e3a03001 	mov	r3, #1
 a38:	e1a04003 	mov	r4, r3
 a3c:	e5c53007 	strb	r3, [r5, #7]
 a40:	e1a00004 	mov	r0, r4
 a44:	e28dd00c 	add	sp, sp, #12
 a48:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
 a4c:	e1a01004 	mov	r1, r4
 a50:	e1a00004 	mov	r0, r4
 a54:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 a58:	e3500000 	cmp	r0, #0
 a5c:	1afffff7 	bne	a40 <Ssd1306::Start()+0x120>
 a60:	e5d57010 	ldrb	r7, [r5, #16]
 a64:	e3570000 	cmp	r7, #0
 a68:	1affffc3 	bne	97c <Ssd1306::Start()+0x5c>
 a6c:	ea000003 	b	a80 <Ssd1306::Start()+0x160>
 a70:	e3a04000 	mov	r4, #0
 a74:	e1a00004 	mov	r0, r4
 a78:	e28dd00c 	add	sp, sp, #12
 a7c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
 a80:	e59f4054 	ldr	r4, [pc, #84]	; adc <Ssd1306::Start()+0x1bc>
 a84:	e3a030ae 	mov	r3, #174	; 0xae
 a88:	e59f803c 	ldr	r8, [pc, #60]	; acc <Ssd1306::Start()+0x1ac>
 a8c:	e2849017 	add	r9, r4, #23
 a90:	e28d6004 	add	r6, sp, #4
 a94:	ea000000 	b	a9c <Ssd1306::Start()+0x17c>
 a98:	e5f43001 	ldrb	r3, [r4, #1]!
 a9c:	e5d52008 	ldrb	r2, [r5, #8]
 aa0:	e5cd3005 	strb	r3, [sp, #5]
 aa4:	e5cd7004 	strb	r7, [sp, #4]
 aa8:	e588200c 	str	r2, [r8, #12]
 aac:	e595000c 	ldr	r0, [r5, #12]
 ab0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 ab4:	e3a01002 	mov	r1, #2
 ab8:	e1a00006 	mov	r0, r6
 abc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 ac0:	e1540009 	cmp	r4, r9
 ac4:	1afffff3 	bne	a98 <Ssd1306::Start()+0x178>
 ac8:	eaffffc1 	b	9d4 <Ssd1306::Start()+0xb4>
 acc:	20804000 	addcs	r4, r0, r0
 ad0:	000002e0 	andeq	r0, r0, r0, ror #5
 ad4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 ad8:	00000000 	andeq	r0, r0, r0
 adc:	000002f8 	strdeq	r0, [r0], -r8

00000ae0 <Ssd1306::Text(char const*, unsigned int)>:
 ae0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 ae4:	e5d06004 	ldrb	r6, [r0, #4]
 ae8:	e1560002 	cmp	r6, r2
 aec:	21a06002 	movcs	r6, r2
 af0:	e3560000 	cmp	r6, #0
 af4:	08bd87f0 	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
 af8:	e1a09000 	mov	r9, r0
 afc:	e2415001 	sub	r5, r1, #1
 b00:	e59f8044 	ldr	r8, [pc, #68]	; b4c <Ssd1306::Text(char const*, unsigned int)+0x6c>
 b04:	e59f7044 	ldr	r7, [pc, #68]	; b50 <Ssd1306::Text(char const*, unsigned int)+0x70>
 b08:	e0856006 	add	r6, r5, r6
 b0c:	e5f53001 	ldrb	r3, [r5, #1]!
 b10:	e2433020 	sub	r3, r3, #32
 b14:	e353005f 	cmp	r3, #95	; 0x5f
 b18:	81a04008 	movhi	r4, r8
 b1c:	e0633183 	rsb	r3, r3, r3, lsl #3
 b20:	90884003 	addls	r4, r8, r3
 b24:	e5d93008 	ldrb	r3, [r9, #8]
 b28:	e587300c 	str	r3, [r7, #12]
 b2c:	e599000c 	ldr	r0, [r9, #12]
 b30:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 b34:	e3a01007 	mov	r1, #7
 b38:	e1a00004 	mov	r0, r4
 b3c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 b40:	e1560005 	cmp	r6, r5
 b44:	1afffff0 	bne	b0c <Ssd1306::Text(char const*, unsigned int)+0x2c>
 b48:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 b4c:	00000000 	andeq	r0, r0, r0
 b50:	20804000 	addcs	r4, r0, r0

00000b54 <Ssd1306::InitMembers()>:
 b54:	e5d03010 	ldrb	r3, [r0, #16]
 b58:	e3530000 	cmp	r3, #0
 b5c:	0a000007 	beq	b80 <Ssd1306::InitMembers()+0x2c>
 b60:	e2433001 	sub	r3, r3, #1
 b64:	e3530001 	cmp	r3, #1
 b68:	8a000009 	bhi	b94 <Ssd1306::InitMembers()+0x40>
 b6c:	e3a03004 	mov	r3, #4
 b70:	e59f2030 	ldr	r2, [pc, #48]	; ba8 <Ssd1306::InitMembers()+0x54>
 b74:	e5803014 	str	r3, [r0, #20]
 b78:	e1c020b4 	strh	r2, [r0, #4]
 b7c:	e12fff1e 	bx	lr
 b80:	e3a03008 	mov	r3, #8
 b84:	e59f2020 	ldr	r2, [pc, #32]	; bac <Ssd1306::InitMembers()+0x58>
 b88:	e5803014 	str	r3, [r0, #20]
 b8c:	e1c020b4 	strh	r2, [r0, #4]
 b90:	e12fff1e 	bx	lr
 b94:	e3a03004 	mov	r3, #4
 b98:	e59f200c 	ldr	r2, [pc, #12]	; bac <Ssd1306::InitMembers()+0x58>
 b9c:	e5803014 	str	r3, [r0, #20]
 ba0:	e1c020b4 	strh	r2, [r0, #4]
 ba4:	e12fff1e 	bx	lr
 ba8:	00000415 	andeq	r0, r0, r5, lsl r4
 bac:	00000815 	andeq	r0, r0, r5, lsl r8

00000bb0 <Ssd1306::SendCommand(unsigned char)>:
 bb0:	e3a02000 	mov	r2, #0
 bb4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 bb8:	e24dd00c 	sub	sp, sp, #12
 bbc:	e59f3028 	ldr	r3, [pc, #40]	; bec <Ssd1306::SendCommand(unsigned char)+0x3c>
 bc0:	e5cd2004 	strb	r2, [sp, #4]
 bc4:	e5d02008 	ldrb	r2, [r0, #8]
 bc8:	e5cd1005 	strb	r1, [sp, #5]
 bcc:	e583200c 	str	r2, [r3, #12]
 bd0:	e590000c 	ldr	r0, [r0, #12]
 bd4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 bd8:	e3a01002 	mov	r1, #2
 bdc:	e28d0004 	add	r0, sp, #4
 be0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 be4:	e28dd00c 	add	sp, sp, #12
 be8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 bec:	20804000 	addcs	r4, r0, r0

00000bf0 <Ssd1306::SendData(unsigned char const*, unsigned int)>:
 bf0:	e92d4010 	push	{r4, lr}
 bf4:	e1a04001 	mov	r4, r1
 bf8:	e24dd008 	sub	sp, sp, #8
 bfc:	e58d2004 	str	r2, [sp, #4]
 c00:	e59f3020 	ldr	r3, [pc, #32]	; c28 <Ssd1306::SendData(unsigned char const*, unsigned int)+0x38>
 c04:	e5d02008 	ldrb	r2, [r0, #8]
 c08:	e583200c 	str	r2, [r3, #12]
 c0c:	e590000c 	ldr	r0, [r0, #12]
 c10:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 c14:	e1a00004 	mov	r0, r4
 c18:	e59d1004 	ldr	r1, [sp, #4]
 c1c:	e28dd008 	add	sp, sp, #8
 c20:	e8bd4010 	pop	{r4, lr}
 c24:	eafffffe 	b	0 <bcm2835_i2c_write>
 c28:	20804000 	addcs	r4, r0, r0

00000c2c <Ssd1306::SetCursorOn()>:
 c2c:	e12fff1e 	bx	lr

00000c30 <Ssd1306::SetCursorBlinkOn()>:
 c30:	e12fff1e 	bx	lr

00000c34 <Ssd1306::SetCursorOff()>:
 c34:	e12fff1e 	bx	lr

00000c38 <Ssd1306::SetColumnRow(unsigned char, unsigned char)>:
 c38:	e12fff1e 	bx	lr

00000c3c <Ssd1306::DumpShadowRam()>:
 c3c:	e12fff1e 	bx	lr

Disassembly of section .bss:

00000000 <_ClearBuffer>:
	...

00000088 <Ssd1306::s_pThis>:
  88:	00000000 	andeq	r0, r0, r0

Disassembly of section .text._ZN7Ssd1306D1Ev:

00000000 <Ssd1306::~Ssd1306()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	31314853 	teqcc	r1, r3, asr r8
   4:	00003630 	andeq	r3, r0, r0, lsr r6
   8:	31445353 	cmpcc	r4, r3, asr r3
   c:	00363033 	eorseq	r3, r6, r3, lsr r0
  10:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
  14:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
  18:	000a2964 	andeq	r2, sl, r4, ror #18
  1c:	aaeeaa40 	bge	ffbaa924 <Ssd1306::DumpShadowRam()+0xffba9ce8>
  20:	Address 0x0000000000000020 is out of bounds.


Disassembly of section .text._ZN7Ssd1306D0Ev:

00000000 <Ssd1306::~Ssd1306()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata:

00000000 <_OledFont8x6>:
   0:	00000040 	andeq	r0, r0, r0, asr #32
   4:	40000000 	andmi	r0, r0, r0
   8:	005f0000 	subseq	r0, pc, r0
   c:	00400000 	subeq	r0, r0, r0
  10:	00070007 	andeq	r0, r7, r7
  14:	7f144000 	svcvc	0x00144000
  18:	00147f14 	andseq	r7, r4, r4, lsl pc
  1c:	7f2a2440 	svcvc	0x002a2440
  20:	4000122a 	andmi	r1, r0, sl, lsr #4
  24:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
  28:	36400062 	strbcc	r0, [r0], -r2, rrx
  2c:	50205649 	eorpl	r5, r0, r9, asr #12
  30:	08004000 	stmdaeq	r0, {lr}
  34:	00000307 	andeq	r0, r0, r7, lsl #6
  38:	221c0040 	andscs	r0, ip, #64	; 0x40
  3c:	40000041 	andmi	r0, r0, r1, asr #32
  40:	1c224100 	stfnes	f4, [r2], #-0
  44:	2a400000 	bcs	100004c <Ssd1306::DumpShadowRam()+0xfff410>
  48:	2a1c7f1c 	bcs	71fcc0 <Ssd1306::DumpShadowRam()+0x71f084>
  4c:	08084000 	stmdaeq	r8, {lr}
  50:	0008083e 	andeq	r0, r8, lr, lsr r8
  54:	70800040 	addvc	r0, r0, r0, asr #32
  58:	40000030 	andmi	r0, r0, r0, lsr r0
  5c:	08080808 	stmdaeq	r8, {r3, fp}
  60:	00400008 	subeq	r0, r0, r8
  64:	00606000 	rsbeq	r6, r0, r0
  68:	10204000 	eorne	r4, r0, r0
  6c:	00020408 	andeq	r0, r2, r8, lsl #8
  70:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
  74:	40003e45 	andmi	r3, r0, r5, asr #28
  78:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
  7c:	72400000 	subvc	r0, r0, #0
  80:	46494949 	strbmi	r4, [r9], -r9, asr #18
  84:	41214000 			; <UNDEFINED> instruction: 0x41214000
  88:	00334d49 	eorseq	r4, r3, r9, asr #26
  8c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
  90:	4000107f 	andmi	r1, r0, pc, ror r0
  94:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
  98:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
  9c:	3149494a 	cmpcc	r9, sl, asr #18
  a0:	21414000 	mrscs	r4, (UNDEF: 65)
  a4:	00070911 	andeq	r0, r7, r1, lsl r9
  a8:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
  ac:	40003649 	andmi	r3, r0, r9, asr #12
  b0:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
  b4:	0040001e 	subeq	r0, r0, lr, lsl r0
  b8:	00001400 	andeq	r1, r0, r0, lsl #8
  bc:	40004000 	andmi	r4, r0, r0
  c0:	00000034 	andeq	r0, r0, r4, lsr r0
  c4:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
  c8:	40004122 	andmi	r4, r0, r2, lsr #2
  cc:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
  d0:	00400014 	subeq	r0, r0, r4, lsl r0
  d4:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
  d8:	01024000 	mrseq	r4, (UNDEF: 2)
  dc:	00060959 	andeq	r0, r6, r9, asr r9
  e0:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
  e4:	40004e59 	andmi	r4, r0, r9, asr lr
  e8:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
  ec:	7f40007c 	svcvc	0x0040007c
  f0:	36494949 	strbcc	r4, [r9], -r9, asr #18
  f4:	413e4000 	teqmi	lr, r0
  f8:	00224141 	eoreq	r4, r2, r1, asr #2
  fc:	41417f40 	cmpmi	r1, r0, asr #30
 100:	40003e41 	andmi	r3, r0, r1, asr #28
 104:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 108:	7f400041 	svcvc	0x00400041
 10c:	01090909 	tsteq	r9, r9, lsl #18
 110:	413e4000 	teqmi	lr, r0
 114:	00735141 	rsbseq	r5, r3, r1, asr #2
 118:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 11c:	40007f08 	andmi	r7, r0, r8, lsl #30
 120:	417f4100 	cmnmi	pc, r0, lsl #2
 124:	20400000 	subcs	r0, r0, r0
 128:	013f4140 	teqeq	pc, r0, asr #2
 12c:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 130:	00412214 	subeq	r2, r1, r4, lsl r2
 134:	40407f40 	submi	r7, r0, r0, asr #30
 138:	40004040 	andmi	r4, r0, r0, asr #32
 13c:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 140:	7f40007f 	svcvc	0x0040007f
 144:	7f100804 	svcvc	0x00100804
 148:	413e4000 	teqmi	lr, r0
 14c:	003e4141 	eorseq	r4, lr, r1, asr #2
 150:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 154:	40000609 	andmi	r0, r0, r9, lsl #12
 158:	2151413e 	cmpcs	r1, lr, lsr r1
 15c:	7f40005e 	svcvc	0x0040005e
 160:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 164:	49264000 	stmdbmi	r6!, {lr}
 168:	00324949 	eorseq	r4, r2, r9, asr #18
 16c:	7f010340 	svcvc	0x00010340
 170:	40000301 	andmi	r0, r0, r1, lsl #6
 174:	4040403f 	submi	r4, r0, pc, lsr r0
 178:	1f40003f 	svcne	0x0040003f
 17c:	1f204020 	svcne	0x00204020
 180:	403f4000 	eorsmi	r4, pc, r0
 184:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 188:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 18c:	40006314 	andmi	r6, r0, r4, lsl r3
 190:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 194:	61400003 	cmpvs	r0, r3
 198:	434d4959 	movtmi	r4, #55641	; 0xd959
 19c:	7f004000 	svcvc	0x00004000
 1a0:	00414141 	subeq	r4, r1, r1, asr #2
 1a4:	08040240 	stmdaeq	r4, {r6, r9}
 1a8:	40002010 	andmi	r2, r0, r0, lsl r0
 1ac:	41414100 	mrsmi	r4, (UNDEF: 81)
 1b0:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 1b4:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 1b8:	40404000 	submi	r4, r0, r0
 1bc:	00404040 	subeq	r4, r0, r0, asr #32
 1c0:	07030040 	streq	r0, [r3, -r0, asr #32]
 1c4:	40000008 	andmi	r0, r0, r8
 1c8:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 1cc:	7f400040 	svcvc	0x00400040
 1d0:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 1d4:	44384000 	ldrtmi	r4, [r8], #-0
 1d8:	00284444 	eoreq	r4, r8, r4, asr #8
 1dc:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 1e0:	40007f28 	andmi	r7, r0, r8, lsr #30
 1e4:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 1e8:	00400018 	subeq	r0, r0, r8, lsl r0
 1ec:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 1f0:	a4184000 	ldrge	r4, [r8], #-0
 1f4:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 1f8:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 1fc:	40007804 	andmi	r7, r0, r4, lsl #16
 200:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 204:	20400000 	subcs	r0, r0, r0
 208:	003d4040 	eorseq	r4, sp, r0, asr #32
 20c:	107f4000 	rsbsne	r4, pc, r0
 210:	00004428 	andeq	r4, r0, r8, lsr #8
 214:	7f410040 	svcvc	0x00410040
 218:	40000040 	andmi	r0, r0, r0, asr #32
 21c:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 220:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 224:	78040408 	stmdavc	r4, {r3, sl}
 228:	44384000 	ldrtmi	r4, [r8], #-0
 22c:	00384444 	eorseq	r4, r8, r4, asr #8
 230:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 234:	40001824 	andmi	r1, r0, r4, lsr #16
 238:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 23c:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 240:	08040408 	stmdaeq	r4, {r3, sl}
 244:	54484000 	strbpl	r4, [r8], #-0
 248:	00245454 	eoreq	r5, r4, r4, asr r4
 24c:	3f040440 	svccc	0x00040440
 250:	40002444 	andmi	r2, r0, r4, asr #8
 254:	2040403c 	subcs	r4, r0, ip, lsr r0
 258:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 25c:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 260:	403c4000 	eorsmi	r4, ip, r0
 264:	003c4030 	eorseq	r4, ip, r0, lsr r0
 268:	10284440 	eorne	r4, r8, r0, asr #8
 26c:	40004428 	andmi	r4, r0, r8, lsr #8
 270:	9090904c 	addsls	r9, r0, ip, asr #32
 274:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 278:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 27c:	08004000 	stmdaeq	r0, {lr}
 280:	00004136 	andeq	r4, r0, r6, lsr r1
 284:	77000040 	strvc	r0, [r0, -r0, asr #32]
 288:	40000000 	andmi	r0, r0, r0
 28c:	08364100 	ldmdaeq	r6!, {r8, lr}
 290:	02400000 	subeq	r0, r0, #0
 294:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 298:	263c4000 	ldrtcs	r4, [ip], -r0
 29c:	003c2623 	eorseq	r2, ip, r3, lsr #12

000002a0 <vtable for Ssd1306>:
	...

000002e0 <oled_128x32_init>:
 2e0:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 2e4:	4000d31f 	andmi	sp, r0, pc, lsl r3
 2e8:	0020148d 	eoreq	r1, r0, sp, lsl #9
 2ec:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 2f0:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 2f4:	a6a440db 	ssatge	r4, #5, fp, asr #1

000002f8 <oled_128x64_init>:
 2f8:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 2fc:	4000d33f 	andmi	sp, r0, pc, lsr r3
 300:	0020148d 	eoreq	r1, r0, sp, lsl #9
 304:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 308:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 30c:	a6a440db 	ssatge	r4, #5, fp, asr #1

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <Ssd1306::DumpShadowRam()+0x168cbf0>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <Ssd1306::DumpShadowRam()+0x417e8>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.


ssd1311.o:     file format elf32-littlearm


Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000008 	andeq	r0, r0, r8

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	00000009 	andeq	r0, r0, r9

Disassembly of section .group:

00000000 <.group>:
   0:	00000001 	andeq	r0, r0, r1
   4:	0000000b 	andeq	r0, r0, fp
   8:	0000000c 	andeq	r0, r0, ip

Disassembly of section .text:

00000000 <Ssd1311::SetCursor(unsigned int)>:
   0:	e12fff1e 	bx	lr

00000004 <Ssd1311::PrintInfo()>:
   4:	e1a03000 	mov	r3, r0
   8:	e59f0008 	ldr	r0, [pc, #8]	; 18 <Ssd1311::PrintInfo()+0x14>
   c:	e5d32004 	ldrb	r2, [r3, #4]
  10:	e5d31005 	ldrb	r1, [r3, #5]
  14:	eafffffe 	b	0 <printf>
  18:	00000000 	andeq	r0, r0, r0

0000001c <Ssd1311::PutString(char const*)>:
  1c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  20:	e3a03014 	mov	r3, #20
  24:	e59fc060 	ldr	ip, [pc, #96]	; 8c <Ssd1311::PutString(char const*)+0x70>
  28:	e24dd00c 	sub	sp, sp, #12
  2c:	e2411001 	sub	r1, r1, #1
  30:	ea000003 	b	44 <Ssd1311::PutString(char const*)+0x28>
  34:	e6ff307e 	uxth	r3, lr
  38:	e3530000 	cmp	r3, #0
  3c:	e4cc2001 	strb	r2, [ip], #1
  40:	0a00000f 	beq	84 <Ssd1311::PutString(char const*)+0x68>
  44:	e5f12001 	ldrb	r2, [r1, #1]!
  48:	e243e001 	sub	lr, r3, #1
  4c:	e3520000 	cmp	r2, #0
  50:	1afffff7 	bne	34 <Ssd1311::PutString(char const*)+0x18>
  54:	e2631015 	rsb	r1, r3, #21
  58:	e5d02008 	ldrb	r2, [r0, #8]
  5c:	e59f302c 	ldr	r3, [pc, #44]	; 90 <Ssd1311::PutString(char const*)+0x74>
  60:	e58d1004 	str	r1, [sp, #4]
  64:	e583200c 	str	r2, [r3, #12]
  68:	e590000c 	ldr	r0, [r0, #12]
  6c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  70:	e59d1004 	ldr	r1, [sp, #4]
  74:	e59f0018 	ldr	r0, [pc, #24]	; 94 <Ssd1311::PutString(char const*)+0x78>
  78:	e28dd00c 	add	sp, sp, #12
  7c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
  80:	eafffffe 	b	0 <bcm2835_i2c_write>
  84:	e3a01015 	mov	r1, #21
  88:	eafffff2 	b	58 <Ssd1311::PutString(char const*)+0x3c>
  8c:	00000001 	andeq	r0, r0, r1
  90:	20804000 	addcs	r4, r0, r0
  94:	00000000 	andeq	r0, r0, r0

00000098 <Ssd1311::Cls()>:
  98:	e3a02001 	mov	r2, #1
  9c:	e3e0107f 	mvn	r1, #127	; 0x7f
  a0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  a4:	e24dd00c 	sub	sp, sp, #12
  a8:	e59f3028 	ldr	r3, [pc, #40]	; d8 <Ssd1311::Cls()+0x40>
  ac:	e5cd2005 	strb	r2, [sp, #5]
  b0:	e5d02008 	ldrb	r2, [r0, #8]
  b4:	e5cd1004 	strb	r1, [sp, #4]
  b8:	e583200c 	str	r2, [r3, #12]
  bc:	e590000c 	ldr	r0, [r0, #12]
  c0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
  c4:	e3a01002 	mov	r1, #2
  c8:	e28d0004 	add	r0, sp, #4
  cc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
  d0:	e28dd00c 	add	sp, sp, #12
  d4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
  d8:	20804000 	addcs	r4, r0, r0

000000dc <Ssd1311::PutChar(int)>:
  dc:	e3a02040 	mov	r2, #64	; 0x40
  e0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
  e4:	e24dd00c 	sub	sp, sp, #12
  e8:	e59f302c 	ldr	r3, [pc, #44]	; 11c <Ssd1311::PutChar(int)+0x40>
  ec:	e5cd2004 	strb	r2, [sp, #4]
  f0:	e5d02008 	ldrb	r2, [r0, #8]
  f4:	e201107f 	and	r1, r1, #127	; 0x7f
  f8:	e5cd1005 	strb	r1, [sp, #5]
  fc:	e583200c 	str	r2, [r3, #12]
 100:	e590000c 	ldr	r0, [r0, #12]
 104:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 108:	e3a01002 	mov	r1, #2
 10c:	e28d0004 	add	r0, sp, #4
 110:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 114:	e28dd00c 	add	sp, sp, #12
 118:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 11c:	20804000 	addcs	r4, r0, r0

00000120 <Ssd1311::SetSleep(bool)>:
 120:	e3e0c07f 	mvn	ip, #127	; 0x7f
 124:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 128:	e5d03010 	ldrb	r3, [r0, #16]
 12c:	e3510000 	cmp	r1, #0
 130:	e59f2038 	ldr	r2, [pc, #56]	; 170 <Ssd1311::SetSleep(bool)+0x50>
 134:	e5d01008 	ldrb	r1, [r0, #8]
 138:	e24dd00c 	sub	sp, sp, #12
 13c:	120330fb 	andne	r3, r3, #251	; 0xfb
 140:	03833004 	orreq	r3, r3, #4
 144:	e5c03010 	strb	r3, [r0, #16]
 148:	e5cd3005 	strb	r3, [sp, #5]
 14c:	e5cdc004 	strb	ip, [sp, #4]
 150:	e582100c 	str	r1, [r2, #12]
 154:	e590000c 	ldr	r0, [r0, #12]
 158:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 15c:	e3a01002 	mov	r1, #2
 160:	e28d0004 	add	r0, sp, #4
 164:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 168:	e28dd00c 	add	sp, sp, #12
 16c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 170:	20804000 	addcs	r4, r0, r0

00000174 <Ssd1311::SetCursorPos(unsigned char, unsigned char)>:
 174:	e3520003 	cmp	r2, #3
 178:	93510013 	cmpls	r1, #19
 17c:	812fff1e 	bxhi	lr
 180:	e3e0307f 	mvn	r3, #127	; 0x7f
 184:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 188:	e0811282 	add	r1, r1, r2, lsl #5
 18c:	e5d0c008 	ldrb	ip, [r0, #8]
 190:	e59f202c 	ldr	r2, [pc, #44]	; 1c4 <Ssd1311::SetCursorPos(unsigned char, unsigned char)+0x50>
 194:	e24dd00c 	sub	sp, sp, #12
 198:	e1831001 	orr	r1, r3, r1
 19c:	e5cd3004 	strb	r3, [sp, #4]
 1a0:	e5cd1005 	strb	r1, [sp, #5]
 1a4:	e582c00c 	str	ip, [r2, #12]
 1a8:	e590000c 	ldr	r0, [r0, #12]
 1ac:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 1b0:	e3a01002 	mov	r1, #2
 1b4:	e28d0004 	add	r0, sp, #4
 1b8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 1bc:	e28dd00c 	add	sp, sp, #12
 1c0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 1c4:	20804000 	addcs	r4, r0, r0

000001c8 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)>:
 1c8:	e2411001 	sub	r1, r1, #1
 1cc:	e6ef1071 	uxtb	r1, r1
 1d0:	e3510003 	cmp	r1, #3
 1d4:	812fff1e 	bxhi	lr
 1d8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 1dc:	e1a06003 	mov	r6, r3
 1e0:	e3e0307f 	mvn	r3, #127	; 0x7f
 1e4:	e1a05000 	mov	r5, r0
 1e8:	e1a04002 	mov	r4, r2
 1ec:	e5d00008 	ldrb	r0, [r0, #8]
 1f0:	e59f2078 	ldr	r2, [pc, #120]	; 270 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0xa8>
 1f4:	e24dd00c 	sub	sp, sp, #12
 1f8:	e1831281 	orr	r1, r3, r1, lsl #5
 1fc:	e5cd3004 	strb	r3, [sp, #4]
 200:	e5cd1005 	strb	r1, [sp, #5]
 204:	e582000c 	str	r0, [r2, #12]
 208:	e595000c 	ldr	r0, [r5, #12]
 20c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 210:	e3a01002 	mov	r1, #2
 214:	e28d0004 	add	r0, sp, #4
 218:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 21c:	e3560014 	cmp	r6, #20
 220:	31a07006 	movcc	r7, r6
 224:	23a07014 	movcs	r7, #20
 228:	e3560000 	cmp	r6, #0
 22c:	0a000005 	beq	248 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0x80>
 230:	e59f303c 	ldr	r3, [pc, #60]	; 274 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0xac>
 234:	e084c007 	add	ip, r4, r7
 238:	e4d42001 	ldrb	r2, [r4], #1
 23c:	e15c0004 	cmp	ip, r4
 240:	e4c32001 	strb	r2, [r3], #1
 244:	1afffffb 	bne	238 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0x70>
 248:	e5d52008 	ldrb	r2, [r5, #8]
 24c:	e59f301c 	ldr	r3, [pc, #28]	; 270 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0xa8>
 250:	e583200c 	str	r2, [r3, #12]
 254:	e595000c 	ldr	r0, [r5, #12]
 258:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 25c:	e59f0014 	ldr	r0, [pc, #20]	; 278 <Ssd1311::TextLine(unsigned char, char const*, unsigned int)+0xb0>
 260:	e2871001 	add	r1, r7, #1
 264:	e28dd00c 	add	sp, sp, #12
 268:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
 26c:	eafffffe 	b	0 <bcm2835_i2c_write>
 270:	20804000 	addcs	r4, r0, r0
 274:	00000001 	andeq	r0, r0, r1
 278:	00000000 	andeq	r0, r0, r0

0000027c <Ssd1311::ClearLine(unsigned char)>:
 27c:	e2411001 	sub	r1, r1, #1
 280:	e6ef1071 	uxtb	r1, r1
 284:	e3510003 	cmp	r1, #3
 288:	812fff1e 	bxhi	lr
 28c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 290:	e3e0707f 	mvn	r7, #127	; 0x7f
 294:	e1a05000 	mov	r5, r0
 298:	e5d03008 	ldrb	r3, [r0, #8]
 29c:	e59f6070 	ldr	r6, [pc, #112]	; 314 <Ssd1311::ClearLine(unsigned char)+0x98>
 2a0:	e1871281 	orr	r1, r7, r1, lsl #5
 2a4:	e24dd00c 	sub	sp, sp, #12
 2a8:	e6ef4071 	uxtb	r4, r1
 2ac:	e5cd7004 	strb	r7, [sp, #4]
 2b0:	e5cd4005 	strb	r4, [sp, #5]
 2b4:	e586300c 	str	r3, [r6, #12]
 2b8:	e590000c 	ldr	r0, [r0, #12]
 2bc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2c0:	e3a01002 	mov	r1, #2
 2c4:	e28d0004 	add	r0, sp, #4
 2c8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 2cc:	e5d53008 	ldrb	r3, [r5, #8]
 2d0:	e586300c 	str	r3, [r6, #12]
 2d4:	e595000c 	ldr	r0, [r5, #12]
 2d8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 2dc:	e3a01015 	mov	r1, #21
 2e0:	e59f0030 	ldr	r0, [pc, #48]	; 318 <Ssd1311::ClearLine(unsigned char)+0x9c>
 2e4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 2e8:	e5d53008 	ldrb	r3, [r5, #8]
 2ec:	e5cd7004 	strb	r7, [sp, #4]
 2f0:	e5cd4005 	strb	r4, [sp, #5]
 2f4:	e586300c 	str	r3, [r6, #12]
 2f8:	e595000c 	ldr	r0, [r5, #12]
 2fc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 300:	e3a01002 	mov	r1, #2
 304:	e28d0004 	add	r0, sp, #4
 308:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 30c:	e28dd00c 	add	sp, sp, #12
 310:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 314:	20804000 	addcs	r4, r0, r0
 318:	00000018 	andeq	r0, r0, r8, lsl r0

0000031c <Ssd1311::SetContrast(unsigned char)>:
 31c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 320:	e3e0607f 	mvn	r6, #127	; 0x7f
 324:	e3a0802a 	mov	r8, #42	; 0x2a
 328:	e1a04000 	mov	r4, r0
 32c:	e59f5140 	ldr	r5, [pc, #320]	; 474 <Ssd1311::SetContrast(unsigned char)+0x158>
 330:	e5d03008 	ldrb	r3, [r0, #8]
 334:	e24dd008 	sub	sp, sp, #8
 338:	e5c01006 	strb	r1, [r0, #6]
 33c:	e5cd6004 	strb	r6, [sp, #4]
 340:	e5cd8005 	strb	r8, [sp, #5]
 344:	e585300c 	str	r3, [r5, #12]
 348:	e590000c 	ldr	r0, [r0, #12]
 34c:	e1a07001 	mov	r7, r1
 350:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 354:	e3a01002 	mov	r1, #2
 358:	e28d0004 	add	r0, sp, #4
 35c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 360:	e5d43008 	ldrb	r3, [r4, #8]
 364:	e5cd6004 	strb	r6, [sp, #4]
 368:	e5cd8005 	strb	r8, [sp, #5]
 36c:	e585300c 	str	r3, [r5, #12]
 370:	e594000c 	ldr	r0, [r4, #12]
 374:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 378:	e3a01002 	mov	r1, #2
 37c:	e28d0004 	add	r0, sp, #4
 380:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 384:	e3a03079 	mov	r3, #121	; 0x79
 388:	e5cd3005 	strb	r3, [sp, #5]
 38c:	e5d43008 	ldrb	r3, [r4, #8]
 390:	e5cd6004 	strb	r6, [sp, #4]
 394:	e585300c 	str	r3, [r5, #12]
 398:	e594000c 	ldr	r0, [r4, #12]
 39c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3a0:	e3a01002 	mov	r1, #2
 3a4:	e28d0004 	add	r0, sp, #4
 3a8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3ac:	e3e0307e 	mvn	r3, #126	; 0x7e
 3b0:	e5cd3005 	strb	r3, [sp, #5]
 3b4:	e5d43008 	ldrb	r3, [r4, #8]
 3b8:	e5cd6004 	strb	r6, [sp, #4]
 3bc:	e585300c 	str	r3, [r5, #12]
 3c0:	e594000c 	ldr	r0, [r4, #12]
 3c4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3c8:	e3a01002 	mov	r1, #2
 3cc:	e28d0004 	add	r0, sp, #4
 3d0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3d4:	e5d43008 	ldrb	r3, [r4, #8]
 3d8:	e5cd7005 	strb	r7, [sp, #5]
 3dc:	e5cd6004 	strb	r6, [sp, #4]
 3e0:	e585300c 	str	r3, [r5, #12]
 3e4:	e594000c 	ldr	r0, [r4, #12]
 3e8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 3ec:	e3a01002 	mov	r1, #2
 3f0:	e28d0004 	add	r0, sp, #4
 3f4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 3f8:	e5d43008 	ldrb	r3, [r4, #8]
 3fc:	e5cd6004 	strb	r6, [sp, #4]
 400:	e5cd8005 	strb	r8, [sp, #5]
 404:	e585300c 	str	r3, [r5, #12]
 408:	e594000c 	ldr	r0, [r4, #12]
 40c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 410:	e3a01002 	mov	r1, #2
 414:	e28d0004 	add	r0, sp, #4
 418:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 41c:	e3a02078 	mov	r2, #120	; 0x78
 420:	e5d43008 	ldrb	r3, [r4, #8]
 424:	e5cd2005 	strb	r2, [sp, #5]
 428:	e5cd6004 	strb	r6, [sp, #4]
 42c:	e585300c 	str	r3, [r5, #12]
 430:	e594000c 	ldr	r0, [r4, #12]
 434:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 438:	e3a01002 	mov	r1, #2
 43c:	e28d0004 	add	r0, sp, #4
 440:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 444:	e3a02028 	mov	r2, #40	; 0x28
 448:	e5d43008 	ldrb	r3, [r4, #8]
 44c:	e5cd2005 	strb	r2, [sp, #5]
 450:	e5cd6004 	strb	r6, [sp, #4]
 454:	e585300c 	str	r3, [r5, #12]
 458:	e594000c 	ldr	r0, [r4, #12]
 45c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 460:	e3a01002 	mov	r1, #2
 464:	e28d0004 	add	r0, sp, #4
 468:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 46c:	e28dd008 	add	sp, sp, #8
 470:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 474:	20804000 	addcs	r4, r0, r0

00000478 <Ssd1311::Ssd1311()>:
 478:	e92d4030 	push	{r4, r5, lr}
 47c:	e3a0203c 	mov	r2, #60	; 0x3c
 480:	e3a04008 	mov	r4, #8
 484:	e59fc024 	ldr	ip, [pc, #36]	; 4b0 <Ssd1311::Ssd1311()+0x38>
 488:	e59f5024 	ldr	r5, [pc, #36]	; 4b4 <Ssd1311::Ssd1311()+0x3c>
 48c:	e59fe024 	ldr	lr, [pc, #36]	; 4b8 <Ssd1311::Ssd1311()+0x40>
 490:	e59f1024 	ldr	r1, [pc, #36]	; 4bc <Ssd1311::Ssd1311()+0x44>
 494:	e580500c 	str	r5, [r0, #12]
 498:	e5c04010 	strb	r4, [r0, #16]
 49c:	e58e0030 	str	r0, [lr, #48]	; 0x30
 4a0:	e580c000 	str	ip, [r0]
 4a4:	e5801004 	str	r1, [r0, #4]
 4a8:	e5c02008 	strb	r2, [r0, #8]
 4ac:	e8bd8030 	pop	{r4, r5, pc}
 4b0:	00000008 	andeq	r0, r0, r8
 4b4:	00061a80 	andeq	r1, r6, r0, lsl #21
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	007f0414 	rsbseq	r0, pc, r4, lsl r4	; <UNPREDICTABLE>

000004c0 <Ssd1311::Text(char const*, unsigned int)>:
 4c0:	e3520014 	cmp	r2, #20
 4c4:	e92d4010 	push	{r4, lr}
 4c8:	31a04002 	movcc	r4, r2
 4cc:	23a04014 	movcs	r4, #20
 4d0:	e3520000 	cmp	r2, #0
 4d4:	0a000005 	beq	4f0 <Ssd1311::Text(char const*, unsigned int)+0x30>
 4d8:	e59f3034 	ldr	r3, [pc, #52]	; 514 <Ssd1311::Text(char const*, unsigned int)+0x54>
 4dc:	e081c004 	add	ip, r1, r4
 4e0:	e4d12001 	ldrb	r2, [r1], #1
 4e4:	e15c0001 	cmp	ip, r1
 4e8:	e4c32001 	strb	r2, [r3], #1
 4ec:	1afffffb 	bne	4e0 <Ssd1311::Text(char const*, unsigned int)+0x20>
 4f0:	e5d02008 	ldrb	r2, [r0, #8]
 4f4:	e59f301c 	ldr	r3, [pc, #28]	; 518 <Ssd1311::Text(char const*, unsigned int)+0x58>
 4f8:	e583200c 	str	r2, [r3, #12]
 4fc:	e590000c 	ldr	r0, [r0, #12]
 500:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 504:	e2841001 	add	r1, r4, #1
 508:	e59f000c 	ldr	r0, [pc, #12]	; 51c <Ssd1311::Text(char const*, unsigned int)+0x5c>
 50c:	e8bd4010 	pop	{r4, lr}
 510:	eafffffe 	b	0 <bcm2835_i2c_write>
 514:	00000001 	andeq	r0, r0, r1
 518:	20804000 	addcs	r4, r0, r0
 51c:	00000000 	andeq	r0, r0, r0

00000520 <Ssd1311::SelectRamRom(unsigned int, unsigned int)>:
 520:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 524:	e3e0707f 	mvn	r7, #127	; 0x7f
 528:	e5d03010 	ldrb	r3, [r0, #16]
 52c:	e24dd008 	sub	sp, sp, #8
 530:	e20330fb 	and	r3, r3, #251	; 0xfb
 534:	e59f613c 	ldr	r6, [pc, #316]	; 678 <Ssd1311::SelectRamRom(unsigned int, unsigned int)+0x158>
 538:	e5c03010 	strb	r3, [r0, #16]
 53c:	e5cd3005 	strb	r3, [sp, #5]
 540:	e5d03008 	ldrb	r3, [r0, #8]
 544:	e5cd7004 	strb	r7, [sp, #4]
 548:	e586300c 	str	r3, [r6, #12]
 54c:	e1a04000 	mov	r4, r0
 550:	e590000c 	ldr	r0, [r0, #12]
 554:	e1a05002 	mov	r5, r2
 558:	e1a08001 	mov	r8, r1
 55c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 560:	e3a01002 	mov	r1, #2
 564:	e28d0004 	add	r0, sp, #4
 568:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 56c:	e3a0302a 	mov	r3, #42	; 0x2a
 570:	e5cd3005 	strb	r3, [sp, #5]
 574:	e5d43008 	ldrb	r3, [r4, #8]
 578:	e5cd7004 	strb	r7, [sp, #4]
 57c:	e586300c 	str	r3, [r6, #12]
 580:	e594000c 	ldr	r0, [r4, #12]
 584:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 588:	e3a01002 	mov	r1, #2
 58c:	e28d0004 	add	r0, sp, #4
 590:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 594:	e3a03072 	mov	r3, #114	; 0x72
 598:	e5cd3005 	strb	r3, [sp, #5]
 59c:	e5d43008 	ldrb	r3, [r4, #8]
 5a0:	e5cd7004 	strb	r7, [sp, #4]
 5a4:	e586300c 	str	r3, [r6, #12]
 5a8:	e594000c 	ldr	r0, [r4, #12]
 5ac:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 5b0:	e1a05105 	lsl	r5, r5, #2
 5b4:	e3a01002 	mov	r1, #2
 5b8:	e28d0004 	add	r0, sp, #4
 5bc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 5c0:	e2088003 	and	r8, r8, #3
 5c4:	e5d43008 	ldrb	r3, [r4, #8]
 5c8:	e205500c 	and	r5, r5, #12
 5cc:	e1855008 	orr	r5, r5, r8
 5d0:	e5cd7004 	strb	r7, [sp, #4]
 5d4:	e5cd5005 	strb	r5, [sp, #5]
 5d8:	e586300c 	str	r3, [r6, #12]
 5dc:	e594000c 	ldr	r0, [r4, #12]
 5e0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 5e4:	e3a01002 	mov	r1, #2
 5e8:	e28d0004 	add	r0, sp, #4
 5ec:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 5f0:	e3a02028 	mov	r2, #40	; 0x28
 5f4:	e5d43008 	ldrb	r3, [r4, #8]
 5f8:	e5cd2005 	strb	r2, [sp, #5]
 5fc:	e5cd7004 	strb	r7, [sp, #4]
 600:	e586300c 	str	r3, [r6, #12]
 604:	e594000c 	ldr	r0, [r4, #12]
 608:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 60c:	e3a01002 	mov	r1, #2
 610:	e28d0004 	add	r0, sp, #4
 614:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 618:	e5d43010 	ldrb	r3, [r4, #16]
 61c:	e5cd7004 	strb	r7, [sp, #4]
 620:	e3833004 	orr	r3, r3, #4
 624:	e5c43010 	strb	r3, [r4, #16]
 628:	e5cd3005 	strb	r3, [sp, #5]
 62c:	e5d43008 	ldrb	r3, [r4, #8]
 630:	e586300c 	str	r3, [r6, #12]
 634:	e594000c 	ldr	r0, [r4, #12]
 638:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 63c:	e3a01002 	mov	r1, #2
 640:	e28d0004 	add	r0, sp, #4
 644:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 648:	e3a02001 	mov	r2, #1
 64c:	e5d43008 	ldrb	r3, [r4, #8]
 650:	e5cd2005 	strb	r2, [sp, #5]
 654:	e5cd7004 	strb	r7, [sp, #4]
 658:	e586300c 	str	r3, [r6, #12]
 65c:	e594000c 	ldr	r0, [r4, #12]
 660:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 664:	e3a01002 	mov	r1, #2
 668:	e28d0004 	add	r0, sp, #4
 66c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 670:	e28dd008 	add	sp, sp, #8
 674:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
 678:	20804000 	addcs	r4, r0, r0

0000067c <Ssd1311::SetDDRAM(unsigned char)>:
 67c:	e3e0307f 	mvn	r3, #127	; 0x7f
 680:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 684:	e24dd00c 	sub	sp, sp, #12
 688:	e59f202c 	ldr	r2, [pc, #44]	; 6bc <Ssd1311::SetDDRAM(unsigned char)+0x40>
 68c:	e1811003 	orr	r1, r1, r3
 690:	e5cd3004 	strb	r3, [sp, #4]
 694:	e5d03008 	ldrb	r3, [r0, #8]
 698:	e5cd1005 	strb	r1, [sp, #5]
 69c:	e582300c 	str	r3, [r2, #12]
 6a0:	e590000c 	ldr	r0, [r0, #12]
 6a4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 6a8:	e3a01002 	mov	r1, #2
 6ac:	e28d0004 	add	r0, sp, #4
 6b0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 6b4:	e28dd00c 	add	sp, sp, #12
 6b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 6bc:	20804000 	addcs	r4, r0, r0

000006c0 <Ssd1311::SetCGRAM(unsigned char)>:
 6c0:	e3e0207f 	mvn	r2, #127	; 0x7f
 6c4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 6c8:	e24dd00c 	sub	sp, sp, #12
 6cc:	e59f3030 	ldr	r3, [pc, #48]	; 704 <Ssd1311::SetCGRAM(unsigned char)+0x44>
 6d0:	e5cd2004 	strb	r2, [sp, #4]
 6d4:	e201103f 	and	r1, r1, #63	; 0x3f
 6d8:	e5d02008 	ldrb	r2, [r0, #8]
 6dc:	e3811040 	orr	r1, r1, #64	; 0x40
 6e0:	e5cd1005 	strb	r1, [sp, #5]
 6e4:	e583200c 	str	r2, [r3, #12]
 6e8:	e590000c 	ldr	r0, [r0, #12]
 6ec:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 6f0:	e3a01002 	mov	r1, #2
 6f4:	e28d0004 	add	r0, sp, #4
 6f8:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 6fc:	e28dd00c 	add	sp, sp, #12
 700:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 704:	20804000 	addcs	r4, r0, r0

00000708 <Ssd1311::SetRE(Ssd1311::FunctionSet)>:
 708:	e3e0207f 	mvn	r2, #127	; 0x7f
 70c:	e3510000 	cmp	r1, #0
 710:	03a01028 	moveq	r1, #40	; 0x28
 714:	13a0102a 	movne	r1, #42	; 0x2a
 718:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 71c:	e24dd00c 	sub	sp, sp, #12
 720:	e59f3028 	ldr	r3, [pc, #40]	; 750 <Ssd1311::SetRE(Ssd1311::FunctionSet)+0x48>
 724:	e5cd2004 	strb	r2, [sp, #4]
 728:	e5d02008 	ldrb	r2, [r0, #8]
 72c:	e5cd1005 	strb	r1, [sp, #5]
 730:	e583200c 	str	r2, [r3, #12]
 734:	e590000c 	ldr	r0, [r0, #12]
 738:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 73c:	e3a01002 	mov	r1, #2
 740:	e28d0004 	add	r0, sp, #4
 744:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 748:	e28dd00c 	add	sp, sp, #12
 74c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 750:	20804000 	addcs	r4, r0, r0

00000754 <Ssd1311::SetSD(Ssd1311::CommandSet)>:
 754:	e3a0302a 	mov	r3, #42	; 0x2a
 758:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 75c:	e3e0707f 	mvn	r7, #127	; 0x7f
 760:	e1a05001 	mov	r5, r1
 764:	e24dd00c 	sub	sp, sp, #12
 768:	e5cd3005 	strb	r3, [sp, #5]
 76c:	e59f6058 	ldr	r6, [pc, #88]	; 7cc <Ssd1311::SetSD(Ssd1311::CommandSet)+0x78>
 770:	e5d03008 	ldrb	r3, [r0, #8]
 774:	e5cd7004 	strb	r7, [sp, #4]
 778:	e586300c 	str	r3, [r6, #12]
 77c:	e1a04000 	mov	r4, r0
 780:	e590000c 	ldr	r0, [r0, #12]
 784:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 788:	e3a01002 	mov	r1, #2
 78c:	e28d0004 	add	r0, sp, #4
 790:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 794:	e3550000 	cmp	r5, #0
 798:	03a02078 	moveq	r2, #120	; 0x78
 79c:	13a02079 	movne	r2, #121	; 0x79
 7a0:	e5d43008 	ldrb	r3, [r4, #8]
 7a4:	e5cd2005 	strb	r2, [sp, #5]
 7a8:	e5cd7004 	strb	r7, [sp, #4]
 7ac:	e586300c 	str	r3, [r6, #12]
 7b0:	e594000c 	ldr	r0, [r4, #12]
 7b4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7b8:	e3a01002 	mov	r1, #2
 7bc:	e28d0004 	add	r0, sp, #4
 7c0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 7c4:	e28dd00c 	add	sp, sp, #12
 7c8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 7cc:	20804000 	addcs	r4, r0, r0

000007d0 <Ssd1311::SendCommand(unsigned char)>:
 7d0:	e3e0207f 	mvn	r2, #127	; 0x7f
 7d4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 7d8:	e24dd00c 	sub	sp, sp, #12
 7dc:	e59f3028 	ldr	r3, [pc, #40]	; 80c <Ssd1311::SendCommand(unsigned char)+0x3c>
 7e0:	e5cd2004 	strb	r2, [sp, #4]
 7e4:	e5d02008 	ldrb	r2, [r0, #8]
 7e8:	e5cd1005 	strb	r1, [sp, #5]
 7ec:	e583200c 	str	r2, [r3, #12]
 7f0:	e590000c 	ldr	r0, [r0, #12]
 7f4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 7f8:	e3a01002 	mov	r1, #2
 7fc:	e28d0004 	add	r0, sp, #4
 800:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 804:	e28dd00c 	add	sp, sp, #12
 808:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 80c:	20804000 	addcs	r4, r0, r0

00000810 <Ssd1311::SendData(unsigned char)>:
 810:	e3a02040 	mov	r2, #64	; 0x40
 814:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 818:	e24dd00c 	sub	sp, sp, #12
 81c:	e59f3028 	ldr	r3, [pc, #40]	; 84c <Ssd1311::SendData(unsigned char)+0x3c>
 820:	e5cd2004 	strb	r2, [sp, #4]
 824:	e5d02008 	ldrb	r2, [r0, #8]
 828:	e5cd1005 	strb	r1, [sp, #5]
 82c:	e583200c 	str	r2, [r3, #12]
 830:	e590000c 	ldr	r0, [r0, #12]
 834:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 838:	e3a01002 	mov	r1, #2
 83c:	e28d0004 	add	r0, sp, #4
 840:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 844:	e28dd00c 	add	sp, sp, #12
 848:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 84c:	20804000 	addcs	r4, r0, r0

00000850 <Ssd1311::SendData(unsigned char const*, unsigned int)>:
 850:	e92d4010 	push	{r4, lr}
 854:	e1a04001 	mov	r4, r1
 858:	e24dd008 	sub	sp, sp, #8
 85c:	e58d2004 	str	r2, [sp, #4]
 860:	e59f3020 	ldr	r3, [pc, #32]	; 888 <Ssd1311::SendData(unsigned char const*, unsigned int)+0x38>
 864:	e5d02008 	ldrb	r2, [r0, #8]
 868:	e583200c 	str	r2, [r3, #12]
 86c:	e590000c 	ldr	r0, [r0, #12]
 870:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 874:	e1a00004 	mov	r0, r4
 878:	e59d1004 	ldr	r1, [sp, #4]
 87c:	e28dd008 	add	sp, sp, #8
 880:	e8bd4010 	pop	{r4, lr}
 884:	eafffffe 	b	0 <bcm2835_i2c_write>
 888:	20804000 	addcs	r4, r0, r0

0000088c <Ssd1311::CheckSSD1311()>:
 88c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 890:	e3a06040 	mov	r6, #64	; 0x40
 894:	e3e0707f 	mvn	r7, #127	; 0x7f
 898:	e1a04000 	mov	r4, r0
 89c:	e59f5100 	ldr	r5, [pc, #256]	; 9a4 <Ssd1311::CheckSSD1311()+0x118>
 8a0:	e5d03008 	ldrb	r3, [r0, #8]
 8a4:	e24dd01c 	sub	sp, sp, #28
 8a8:	e5cd6011 	strb	r6, [sp, #17]
 8ac:	e5cd7010 	strb	r7, [sp, #16]
 8b0:	e585300c 	str	r3, [r5, #12]
 8b4:	e590000c 	ldr	r0, [r0, #12]
 8b8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 8bc:	e3a01002 	mov	r1, #2
 8c0:	e28d0010 	add	r0, sp, #16
 8c4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 8c8:	e5d42008 	ldrb	r2, [r4, #8]
 8cc:	e59f30d4 	ldr	r3, [pc, #212]	; 9a8 <Ssd1311::CheckSSD1311()+0x11c>
 8d0:	e8930003 	ldm	r3, {r0, r1}
 8d4:	e58d0008 	str	r0, [sp, #8]
 8d8:	e5cd100c 	strb	r1, [sp, #12]
 8dc:	e585200c 	str	r2, [r5, #12]
 8e0:	e594000c 	ldr	r0, [r4, #12]
 8e4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 8e8:	e3a01005 	mov	r1, #5
 8ec:	e28d0008 	add	r0, sp, #8
 8f0:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 8f4:	e5d42008 	ldrb	r2, [r4, #8]
 8f8:	e59f30ac 	ldr	r3, [pc, #172]	; 9ac <Ssd1311::CheckSSD1311()+0x120>
 8fc:	e5cd7004 	strb	r7, [sp, #4]
 900:	e8930003 	ldm	r3, {r0, r1}
 904:	e5cd6005 	strb	r6, [sp, #5]
 908:	e58d0010 	str	r0, [sp, #16]
 90c:	e1cd11b4 	strh	r1, [sp, #20]
 910:	e585200c 	str	r2, [r5, #12]
 914:	e594000c 	ldr	r0, [r4, #12]
 918:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 91c:	e3a01002 	mov	r1, #2
 920:	e28d0004 	add	r0, sp, #4
 924:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 928:	e5d43008 	ldrb	r3, [r4, #8]
 92c:	e594000c 	ldr	r0, [r4, #12]
 930:	e5cd6004 	strb	r6, [sp, #4]
 934:	e585300c 	str	r3, [r5, #12]
 938:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 93c:	e3a01001 	mov	r1, #1
 940:	e28d0004 	add	r0, sp, #4
 944:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 948:	e5d43008 	ldrb	r3, [r4, #8]
 94c:	e594000c 	ldr	r0, [r4, #12]
 950:	e585300c 	str	r3, [r5, #12]
 954:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 958:	e3a01006 	mov	r1, #6
 95c:	e28d0010 	add	r0, sp, #16
 960:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 964:	e28d3009 	add	r3, sp, #9
 968:	e28d2011 	add	r2, sp, #17
 96c:	e28dc00d 	add	ip, sp, #13
 970:	ea000001 	b	97c <Ssd1311::CheckSSD1311()+0xf0>
 974:	e153000c 	cmp	r3, ip
 978:	0a000006 	beq	998 <Ssd1311::CheckSSD1311()+0x10c>
 97c:	e4d30001 	ldrb	r0, [r3], #1
 980:	e4d21001 	ldrb	r1, [r2], #1
 984:	e1500001 	cmp	r0, r1
 988:	0afffff9 	beq	974 <Ssd1311::CheckSSD1311()+0xe8>
 98c:	e3a00000 	mov	r0, #0
 990:	e28dd01c 	add	sp, sp, #28
 994:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 998:	e3a00001 	mov	r0, #1
 99c:	e28dd01c 	add	sp, sp, #28
 9a0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 9a4:	20804000 	addcs	r4, r0, r0
 9a8:	00000014 	andeq	r0, r0, r4, lsl r0
 9ac:	00000040 	andeq	r0, r0, r0, asr #32

000009b0 <Ssd1311::Start()>:
 9b0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 9b4:	e59f3270 	ldr	r3, [pc, #624]	; c2c <Ssd1311::Start()+0x27c>
 9b8:	e5d05008 	ldrb	r5, [r0, #8]
 9bc:	e1a04000 	mov	r4, r0
 9c0:	e24dd00c 	sub	sp, sp, #12
 9c4:	e590000c 	ldr	r0, [r0, #12]
 9c8:	e583500c 	str	r5, [r3, #12]
 9cc:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 9d0:	e2451030 	sub	r1, r5, #48	; 0x30
 9d4:	e2455050 	sub	r5, r5, #80	; 0x50
 9d8:	e355000f 	cmp	r5, #15
 9dc:	83510007 	cmphi	r1, #7
 9e0:	93a01001 	movls	r1, #1
 9e4:	83a01000 	movhi	r1, #0
 9e8:	8a000008 	bhi	a10 <Ssd1311::Start()+0x60>
 9ec:	e3a01001 	mov	r1, #1
 9f0:	e28d0004 	add	r0, sp, #4
 9f4:	ebfffffe 	bl	0 <bcm2835_i2c_read>
 9f8:	e3500000 	cmp	r0, #0
 9fc:	0a000007 	beq	a20 <Ssd1311::Start()+0x70>
 a00:	e3a05000 	mov	r5, #0
 a04:	e1a00005 	mov	r0, r5
 a08:	e28dd00c 	add	sp, sp, #12
 a0c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 a10:	e1a00001 	mov	r0, r1
 a14:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 a18:	e3500000 	cmp	r0, #0
 a1c:	1afffff7 	bne	a00 <Ssd1311::Start()+0x50>
 a20:	e1a00004 	mov	r0, r4
 a24:	ebfffffe 	bl	88c <Ssd1311::CheckSSD1311()>
 a28:	e2505000 	subs	r5, r0, #0
 a2c:	0afffff3 	beq	a00 <Ssd1311::Start()+0x50>
 a30:	e3a01020 	mov	r1, #32
 a34:	e59f31f4 	ldr	r3, [pc, #500]	; c30 <Ssd1311::Start()+0x280>
 a38:	e2832015 	add	r2, r3, #21
 a3c:	e5e31001 	strb	r1, [r3, #1]!
 a40:	e1520003 	cmp	r2, r3
 a44:	1afffffc 	bne	a3c <Ssd1311::Start()+0x8c>
 a48:	e3e0707f 	mvn	r7, #127	; 0x7f
 a4c:	e3a08040 	mov	r8, #64	; 0x40
 a50:	e3a0b03a 	mov	fp, #58	; 0x3a
 a54:	e5d42008 	ldrb	r2, [r4, #8]
 a58:	e59f61cc 	ldr	r6, [pc, #460]	; c2c <Ssd1311::Start()+0x27c>
 a5c:	e59f31d0 	ldr	r3, [pc, #464]	; c34 <Ssd1311::Start()+0x284>
 a60:	e5cd7004 	strb	r7, [sp, #4]
 a64:	e5c38000 	strb	r8, [r3]
 a68:	e5c38018 	strb	r8, [r3, #24]
 a6c:	e5cdb005 	strb	fp, [sp, #5]
 a70:	e586200c 	str	r2, [r6, #12]
 a74:	e594000c 	ldr	r0, [r4, #12]
 a78:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 a7c:	e3a01002 	mov	r1, #2
 a80:	e28d0004 	add	r0, sp, #4
 a84:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 a88:	e3a03009 	mov	r3, #9
 a8c:	e5cd3005 	strb	r3, [sp, #5]
 a90:	e5d43008 	ldrb	r3, [r4, #8]
 a94:	e5cd7004 	strb	r7, [sp, #4]
 a98:	e586300c 	str	r3, [r6, #12]
 a9c:	e594000c 	ldr	r0, [r4, #12]
 aa0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 aa4:	e3a01002 	mov	r1, #2
 aa8:	e28d0004 	add	r0, sp, #4
 aac:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 ab0:	e3a03005 	mov	r3, #5
 ab4:	e5cd3005 	strb	r3, [sp, #5]
 ab8:	e5d43008 	ldrb	r3, [r4, #8]
 abc:	e5cd7004 	strb	r7, [sp, #4]
 ac0:	e586300c 	str	r3, [r6, #12]
 ac4:	e594000c 	ldr	r0, [r4, #12]
 ac8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 acc:	e3a01002 	mov	r1, #2
 ad0:	e28d0004 	add	r0, sp, #4
 ad4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 ad8:	e3a0301c 	mov	r3, #28
 adc:	e3a0a03c 	mov	sl, #60	; 0x3c
 ae0:	e5cd3005 	strb	r3, [sp, #5]
 ae4:	e5d43008 	ldrb	r3, [r4, #8]
 ae8:	e5cd7004 	strb	r7, [sp, #4]
 aec:	e586300c 	str	r3, [r6, #12]
 af0:	e594000c 	ldr	r0, [r4, #12]
 af4:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 af8:	e3a01002 	mov	r1, #2
 afc:	e28d0004 	add	r0, sp, #4
 b00:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 b04:	e5d43008 	ldrb	r3, [r4, #8]
 b08:	e5cd7004 	strb	r7, [sp, #4]
 b0c:	e5cda005 	strb	sl, [sp, #5]
 b10:	e586300c 	str	r3, [r6, #12]
 b14:	e594000c 	ldr	r0, [r4, #12]
 b18:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 b1c:	e3a01002 	mov	r1, #2
 b20:	e28d0004 	add	r0, sp, #4
 b24:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 b28:	e5d43008 	ldrb	r3, [r4, #8]
 b2c:	e5cdb005 	strb	fp, [sp, #5]
 b30:	e5cd7004 	strb	r7, [sp, #4]
 b34:	e586300c 	str	r3, [r6, #12]
 b38:	e594000c 	ldr	r0, [r4, #12]
 b3c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 b40:	e3a01002 	mov	r1, #2
 b44:	e28d0004 	add	r0, sp, #4
 b48:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 b4c:	e3a03072 	mov	r3, #114	; 0x72
 b50:	e3a09000 	mov	r9, #0
 b54:	e5cd3005 	strb	r3, [sp, #5]
 b58:	e5d43008 	ldrb	r3, [r4, #8]
 b5c:	e5cd7004 	strb	r7, [sp, #4]
 b60:	e586300c 	str	r3, [r6, #12]
 b64:	e594000c 	ldr	r0, [r4, #12]
 b68:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 b6c:	e3a01002 	mov	r1, #2
 b70:	e28d0004 	add	r0, sp, #4
 b74:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 b78:	e5d43008 	ldrb	r3, [r4, #8]
 b7c:	e5cd8004 	strb	r8, [sp, #4]
 b80:	e5cd9005 	strb	r9, [sp, #5]
 b84:	e586300c 	str	r3, [r6, #12]
 b88:	e594000c 	ldr	r0, [r4, #12]
 b8c:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 b90:	e3a01002 	mov	r1, #2
 b94:	e28d0004 	add	r0, sp, #4
 b98:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 b9c:	e5d43008 	ldrb	r3, [r4, #8]
 ba0:	e5cda005 	strb	sl, [sp, #5]
 ba4:	e5cd7004 	strb	r7, [sp, #4]
 ba8:	e586300c 	str	r3, [r6, #12]
 bac:	e594000c 	ldr	r0, [r4, #12]
 bb0:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 bb4:	e3a01002 	mov	r1, #2
 bb8:	e28d0004 	add	r0, sp, #4
 bbc:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 bc0:	e3a0300c 	mov	r3, #12
 bc4:	e5cd3005 	strb	r3, [sp, #5]
 bc8:	e5d43008 	ldrb	r3, [r4, #8]
 bcc:	e5cd7004 	strb	r7, [sp, #4]
 bd0:	e586300c 	str	r3, [r6, #12]
 bd4:	e594000c 	ldr	r0, [r4, #12]
 bd8:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 bdc:	e3a01002 	mov	r1, #2
 be0:	e28d0004 	add	r0, sp, #4
 be4:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 be8:	e3a03001 	mov	r3, #1
 bec:	e5cd3005 	strb	r3, [sp, #5]
 bf0:	e5d43008 	ldrb	r3, [r4, #8]
 bf4:	e5cd7004 	strb	r7, [sp, #4]
 bf8:	e586300c 	str	r3, [r6, #12]
 bfc:	e594000c 	ldr	r0, [r4, #12]
 c00:	ebfffffe 	bl	0 <bcm2835_i2c_set_baudrate>
 c04:	e3a01002 	mov	r1, #2
 c08:	e28d0004 	add	r0, sp, #4
 c0c:	ebfffffe 	bl	0 <bcm2835_i2c_write>
 c10:	e1a00004 	mov	r0, r4
 c14:	e1a02009 	mov	r2, r9
 c18:	e1a01009 	mov	r1, r9
 c1c:	ebfffffe 	bl	520 <Ssd1311::SelectRamRom(unsigned int, unsigned int)>
 c20:	e1a00005 	mov	r0, r5
 c24:	e28dd00c 	add	sp, sp, #12
 c28:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c2c:	20804000 	addcs	r4, r0, r0
 c30:	00000017 	andeq	r0, r0, r7, lsl r0
 c34:	00000000 	andeq	r0, r0, r0

Disassembly of section .bss:

00000000 <_TextBuffer>:
	...

00000018 <_ClearBuffer>:
	...

00000030 <Ssd1311::s_pThis>:
  30:	00000000 	andeq	r0, r0, r0

Disassembly of section .text._ZN10DisplaySet17SetFlipVerticallyEb:

00000000 <DisplaySet::SetFlipVertically(bool)>:
   0:	e12fff1e 	bx	lr

Disassembly of section .text._ZN7Ssd1311D1Ev:

00000000 <Ssd1311::~Ssd1311()>:
   0:	e12fff1e 	bx	lr

Disassembly of section .rodata.str1.4:

00000000 <.rodata.str1.4>:
   0:	31445353 	cmpcc	r4, r3, asr r3
   4:	20313133 	eorscs	r3, r1, r3, lsr r1
   8:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
   c:	0a296425 	beq	a590a8 <Ssd1311::Start()+0xa586f8>
  10:	00000000 	andeq	r0, r0, r0
  14:	aa55aa40 	bge	156a91c <Ssd1311::Start()+0x1569f6c>
  18:	Address 0x0000000000000018 is out of bounds.


Disassembly of section .text._ZN7Ssd1311D0Ev:

00000000 <Ssd1311::~Ssd1311()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	ebfffffe 	bl	0 <operator delete(void*)>
   c:	e1a00004 	mov	r0, r4
  10:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata:

00000000 <vtable for Ssd1311>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003241 	andeq	r3, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000028 	andeq	r0, r0, r8, lsr #32
  10:	4b5a3605 	blmi	168d82c <Ssd1311::Start()+0x168ce7c>
  14:	08070600 	stmdaeq	r7, {r9, sl}
  18:	0a010901 	beq	42424 <Ssd1311::Start()+0x41a74>
  1c:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  20:	17011501 	strne	r1, [r1, -r1, lsl #10]
  24:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  28:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x0000000000000030 is out of bounds.

