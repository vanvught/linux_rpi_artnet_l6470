In archive lib7/liboscserver.a:

oscservermsgconst.o:     file format elf32-littlearm


Disassembly of section .rodata:

00000000 <OscServerMsgConst::STARTED>:
   0:	2043534f 	subcs	r5, r3, pc, asr #6
   4:	76726553 			; <UNDEFINED> instruction: 0x76726553
   8:	73207265 			; <UNDEFINED> instruction: 0x73207265
   c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  10:	00006465 	andeq	r6, r0, r5, ror #8

00000014 <OscServerMsgConst::START>:
  14:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
  18:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
  1c:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
  20:	43534f20 	cmpmi	r3, #32, 30	; 0x80
  24:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
  28:	00726576 	rsbseq	r6, r2, r6, ror r5

0000002c <OscServerMsgConst::PARAMS>:
  2c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
  30:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
  34:	20676e69 	rsbcs	r6, r7, r9, ror #28
  38:	2043534f 	subcs	r5, r3, pc, asr #6
  3c:	76726553 			; <UNDEFINED> instruction: 0x76726553
  40:	Address 0x0000000000000040 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


oscserverconst.o:     file format elf32-littlearm


Disassembly of section .rodata:

00000000 <OSCServerConst::PARAMS_PATH_BLACKOUT>:
   0:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
   4:	616c625f 	cmnvs	ip, pc, asr r2
   8:	756f6b63 	strbvc	r6, [pc, #-2915]!	; fffff4ad <OSCServerConst::MSG_BRIDGE_PARAMS+0xfffff445>
   c:	00000074 	andeq	r0, r0, r4, ror r0

00000010 <OSCServerConst::PARAMS_PATH_INFO>:
  10:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
  14:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
  18:	0000006f 	andeq	r0, r0, pc, rrx

0000001c <OSCServerConst::PARAMS_TRANSMISSION>:
  1c:	74726170 	ldrbtvc	r6, [r2], #-368	; 0xfffffe90
  20:	5f6c6169 	svcpl	0x006c6169
  24:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
  28:	73696d73 	cmnvc	r9, #7360	; 0x1cc0
  2c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  30:	00000000 	andeq	r0, r0, r0

00000034 <OSCServerConst::PARAMS_PATH>:
  34:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
  38:	00000000 	andeq	r0, r0, r0

0000003c <OSCServerConst::PARAMS_FILE_NAME>:
  3c:	2e63736f 	cdpcs	3, 6, cr7, cr3, cr15, {3}
  40:	00747874 	rsbseq	r7, r4, r4, ror r8

00000044 <OSCServerConst::MSG_BRIDGE_STARTED>:
  44:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
  48:	73206567 			; <UNDEFINED> instruction: 0x73206567
  4c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  50:	00006465 	andeq	r6, r0, r5, ror #8

00000054 <OSCServerConst::MSG_BRIDGE_START>:
  54:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
  58:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
  5c:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
  60:	69724220 	ldmdbvs	r2!, {r5, r9, lr}^
  64:	00656764 	rsbeq	r6, r5, r4, ror #14

00000068 <OSCServerConst::MSG_BRIDGE_PARAMS>:
  68:	74746553 	ldrbtvc	r6, [r4], #-1363	; 0xfffffaad
  6c:	20676e69 	rsbcs	r6, r7, r9, ror #28
  70:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
  74:	70206567 	eorvc	r6, r0, r7, ror #10
  78:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
  7c:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
  80:	Address 0x0000000000000080 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


oscserverparams.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)>:
   0:	e92d4010 	push	{r4, lr}
   4:	e300218b 	movw	r2, #395	; 0x18b
   8:	e1a04000 	mov	r4, r0
   c:	e4801004 	str	r1, [r0], #4
  10:	e3a01000 	mov	r1, #0
  14:	ebfffffe 	bl	0 <memset>
  18:	e59f3008 	ldr	r3, [pc, #8]	; 28 <OSCServerParams::OSCServerParams(OSCServerParamsStore*)+0x28>
  1c:	e1a00004 	mov	r0, r4
  20:	e5843008 	str	r3, [r4, #8]
  24:	e8bd8010 	pop	{r4, pc}
  28:	23281f40 			; <UNDEFINED> instruction: 0x23281f40

0000002c <OSCServerParams::Load()>:
  2c:	e3a03000 	mov	r3, #0
  30:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
  34:	e1a02000 	mov	r2, r0
  38:	e5803004 	str	r3, [r0, #4]
  3c:	e1a04000 	mov	r4, r0
  40:	e59f1068 	ldr	r1, [pc, #104]	; b0 <OSCServerParams::Load()+0x84>
  44:	e1a0000d 	mov	r0, sp
  48:	ebfffffe 	bl	0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
  4c:	e59f1060 	ldr	r1, [pc, #96]	; b4 <OSCServerParams::Load()+0x88>
  50:	e1a0000d 	mov	r0, sp
  54:	ebfffffe 	bl	0 <ReadConfigFile::Read(char const*)>
  58:	e2505000 	subs	r5, r0, #0
  5c:	e5940000 	ldr	r0, [r4]
  60:	0a000006 	beq	80 <OSCServerParams::Load()+0x54>
  64:	e3500000 	cmp	r0, #0
  68:	0a00000b 	beq	9c <OSCServerParams::Load()+0x70>
  6c:	e5903000 	ldr	r3, [r0]
  70:	e2841004 	add	r1, r4, #4
  74:	e5933008 	ldr	r3, [r3, #8]
  78:	e12fff33 	blx	r3
  7c:	ea000006 	b	9c <OSCServerParams::Load()+0x70>
  80:	e3500000 	cmp	r0, #0
  84:	0a000004 	beq	9c <OSCServerParams::Load()+0x70>
  88:	e5903000 	ldr	r3, [r0]
  8c:	e2841004 	add	r1, r4, #4
  90:	e3a05001 	mov	r5, #1
  94:	e593300c 	ldr	r3, [r3, #12]
  98:	e12fff33 	blx	r3
  9c:	e1a0000d 	mov	r0, sp
  a0:	ebfffffe 	bl	0 <ReadConfigFile::~ReadConfigFile()>
  a4:	e1a00005 	mov	r0, r5
  a8:	e28dd00c 	add	sp, sp, #12
  ac:	e8bd8030 	pop	{r4, r5, pc}
	...

000000b8 <OSCServerParams::Load(char const*, unsigned int)>:
  b8:	e5903000 	ldr	r3, [r0]
  bc:	e3530000 	cmp	r3, #0
  c0:	012fff1e 	bxeq	lr
  c4:	e3a03000 	mov	r3, #0
  c8:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
  cc:	e1a04000 	mov	r4, r0
  d0:	e5803004 	str	r3, [r0, #4]
  d4:	e1a05001 	mov	r5, r1
  d8:	e59f1040 	ldr	r1, [pc, #64]	; 120 <OSCServerParams::Load(char const*, unsigned int)+0x68>
  dc:	e1a06002 	mov	r6, r2
  e0:	e1a02000 	mov	r2, r0
  e4:	e1a0000d 	mov	r0, sp
  e8:	ebfffffe 	bl	0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
  ec:	e1a02006 	mov	r2, r6
  f0:	e1a01005 	mov	r1, r5
  f4:	e1a0000d 	mov	r0, sp
  f8:	ebfffffe 	bl	0 <ReadConfigFile::Read(char const*, unsigned int)>
  fc:	e1a01004 	mov	r1, r4
 100:	e4910004 	ldr	r0, [r1], #4
 104:	e5903000 	ldr	r3, [r0]
 108:	e5933008 	ldr	r3, [r3, #8]
 10c:	e12fff33 	blx	r3
 110:	e1a0000d 	mov	r0, sp
 114:	ebfffffe 	bl	0 <ReadConfigFile::~ReadConfigFile()>
 118:	e28dd008 	add	sp, sp, #8
 11c:	e8bd8070 	pop	{r4, r5, r6, pc}
 120:	00000000 	andeq	r0, r0, r0

00000124 <OSCServerParams::callbackFunction(char const*)>:
 124:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
 128:	e1a05001 	mov	r5, r1
 12c:	e59f1124 	ldr	r1, [pc, #292]	; 258 <OSCServerParams::callbackFunction(char const*)+0x134>
 130:	e1a04000 	mov	r4, r0
 134:	e28d2002 	add	r2, sp, #2
 138:	e1a00005 	mov	r0, r5
 13c:	ebfffffe 	bl	0 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 140:	e3500000 	cmp	r0, #0
 144:	1a000006 	bne	164 <OSCServerParams::callbackFunction(char const*)+0x40>
 148:	e1dd30b2 	ldrh	r3, [sp, #2]
 14c:	e3530b01 	cmp	r3, #1024	; 0x400
 150:	21c430b8 	strhcs	r3, [r4, #8]
 154:	25943004 	ldrcs	r3, [r4, #4]
 158:	23833001 	orrcs	r3, r3, #1
 15c:	2a00003a 	bcs	24c <OSCServerParams::callbackFunction(char const*)+0x128>
 160:	ea00003a 	b	250 <OSCServerParams::callbackFunction(char const*)+0x12c>
 164:	e59f10f0 	ldr	r1, [pc, #240]	; 25c <OSCServerParams::callbackFunction(char const*)+0x138>
 168:	e28d2002 	add	r2, sp, #2
 16c:	e1a00005 	mov	r0, r5
 170:	ebfffffe 	bl	0 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 174:	e3500000 	cmp	r0, #0
 178:	1a000006 	bne	198 <OSCServerParams::callbackFunction(char const*)+0x74>
 17c:	e1dd30b2 	ldrh	r3, [sp, #2]
 180:	e3530b01 	cmp	r3, #1024	; 0x400
 184:	21c430ba 	strhcs	r3, [r4, #10]
 188:	25943004 	ldrcs	r3, [r4, #4]
 18c:	23833002 	orrcs	r3, r3, #2
 190:	2a00002d 	bcs	24c <OSCServerParams::callbackFunction(char const*)+0x128>
 194:	ea00002d 	b	250 <OSCServerParams::callbackFunction(char const*)+0x12c>
 198:	e59f10c0 	ldr	r1, [pc, #192]	; 260 <OSCServerParams::callbackFunction(char const*)+0x13c>
 19c:	e28d2001 	add	r2, sp, #1
 1a0:	e1a00005 	mov	r0, r5
 1a4:	ebfffffe 	bl	0 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 1a8:	e3500000 	cmp	r0, #0
 1ac:	1a000006 	bne	1cc <OSCServerParams::callbackFunction(char const*)+0xa8>
 1b0:	e5dd3001 	ldrb	r3, [sp, #1]
 1b4:	e2533000 	subs	r3, r3, #0
 1b8:	13a03001 	movne	r3, #1
 1bc:	e5c4300d 	strb	r3, [r4, #13]
 1c0:	e5943004 	ldr	r3, [r4, #4]
 1c4:	e3833008 	orr	r3, r3, #8
 1c8:	ea00001f 	b	24c <OSCServerParams::callbackFunction(char const*)+0x128>
 1cc:	e59f1090 	ldr	r1, [pc, #144]	; 264 <OSCServerParams::callbackFunction(char const*)+0x140>
 1d0:	e28d3004 	add	r3, sp, #4
 1d4:	e3a0607f 	mov	r6, #127	; 0x7f
 1d8:	e284200e 	add	r2, r4, #14
 1dc:	e58d6004 	str	r6, [sp, #4]
 1e0:	e1a00005 	mov	r0, r5
 1e4:	ebfffffe 	bl	0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 1e8:	e3500000 	cmp	r0, #0
 1ec:	05943004 	ldreq	r3, [r4, #4]
 1f0:	03833004 	orreq	r3, r3, #4
 1f4:	0a000014 	beq	24c <OSCServerParams::callbackFunction(char const*)+0x128>
 1f8:	e59f1068 	ldr	r1, [pc, #104]	; 268 <OSCServerParams::callbackFunction(char const*)+0x144>
 1fc:	e28d3004 	add	r3, sp, #4
 200:	e58d6004 	str	r6, [sp, #4]
 204:	e284208e 	add	r2, r4, #142	; 0x8e
 208:	e1a00005 	mov	r0, r5
 20c:	ebfffffe 	bl	0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 210:	e3500000 	cmp	r0, #0
 214:	05943004 	ldreq	r3, [r4, #4]
 218:	03833020 	orreq	r3, r3, #32
 21c:	0a00000a 	beq	24c <OSCServerParams::callbackFunction(char const*)+0x128>
 220:	e59f1040 	ldr	r1, [pc, #64]	; 268 <OSCServerParams::callbackFunction(char const*)+0x144>
 224:	e2842f43 	add	r2, r4, #268	; 0x10c
 228:	e58d6004 	str	r6, [sp, #4]
 22c:	e28d3004 	add	r3, sp, #4
 230:	e2822002 	add	r2, r2, #2
 234:	e1a00005 	mov	r0, r5
 238:	ebfffffe 	bl	0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 23c:	e3500000 	cmp	r0, #0
 240:	1a000002 	bne	250 <OSCServerParams::callbackFunction(char const*)+0x12c>
 244:	e5943004 	ldr	r3, [r4, #4]
 248:	e3833040 	orr	r3, r3, #64	; 0x40
 24c:	e5843004 	str	r3, [r4, #4]
 250:	e28dd008 	add	sp, sp, #8
 254:	e8bd8070 	pop	{r4, r5, r6, pc}
	...

0000026c <OSCServerParams::staticCallbackFunction(void*, char const*)>:
 26c:	eafffffe 	b	124 <OSCServerParams::callbackFunction(char const*)>

00000270 <OSCServerParams::Dump()>:
 270:	e12fff1e 	bx	lr

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


oscserverparamssave.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
   0:	e1d0c0b6 	ldrh	ip, [r0, #6]
   4:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
   8:	e1d050b4 	ldrh	r5, [r0, #4]
   c:	e15c0005 	cmp	ip, r5
  10:	2a00001c 	bcs	88 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x88>
  14:	e045500c 	sub	r5, r5, ip
  18:	e1a04000 	mov	r4, r0
  1c:	e5900000 	ldr	r0, [r0]
  20:	e3530000 	cmp	r3, #0
  24:	e080000c 	add	r0, r0, ip
  28:	e5d4c008 	ldrb	ip, [r4, #8]
  2c:	1a000002 	bne	3c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
  30:	e35c0000 	cmp	ip, #0
  34:	1a000002 	bne	44 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>
  38:	ea000009 	b	64 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x64>
  3c:	e35c0000 	cmp	ip, #0
  40:	0a000003 	beq	54 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x54>
  44:	e58d2000 	str	r2, [sp]
  48:	e1a03001 	mov	r3, r1
  4c:	e59f203c 	ldr	r2, [pc, #60]	; 90 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x90>
  50:	ea000006 	b	70 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x70>
  54:	e58d2000 	str	r2, [sp]
  58:	e1a03001 	mov	r3, r1
  5c:	e59f2030 	ldr	r2, [pc, #48]	; 94 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x94>
  60:	ea000002 	b	70 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x70>
  64:	e58d2000 	str	r2, [sp]
  68:	e1a03001 	mov	r3, r1
  6c:	e59f2024 	ldr	r2, [pc, #36]	; 98 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x98>
  70:	e1a01005 	mov	r1, r5
  74:	ebfffffe 	bl	0 <snprintf>
  78:	e1550000 	cmp	r5, r0
  7c:	a1d430b6 	ldrhge	r3, [r4, #6]
  80:	a0830000 	addge	r0, r3, r0
  84:	a1c400b6 	strhge	r0, [r4, #6]
  88:	e28dd00c 	add	sp, sp, #12
  8c:	e8bd8030 	pop	{r4, r5, pc}
  90:	00000000 	andeq	r0, r0, r0
  94:	00000009 	andeq	r0, r0, r9
  98:	00000010 	andeq	r0, r0, r0, lsl r0

0000009c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>:
  9c:	e1d0c0b6 	ldrh	ip, [r0, #6]
  a0:	e92d4037 	push	{r0, r1, r2, r4, r5, lr}
  a4:	e1d050b4 	ldrh	r5, [r0, #4]
  a8:	e15c0005 	cmp	ip, r5
  ac:	2a00001c 	bcs	124 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x88>
  b0:	e045500c 	sub	r5, r5, ip
  b4:	e1a04000 	mov	r4, r0
  b8:	e5900000 	ldr	r0, [r0]
  bc:	e3530000 	cmp	r3, #0
  c0:	e080000c 	add	r0, r0, ip
  c4:	e5d4c008 	ldrb	ip, [r4, #8]
  c8:	1a000002 	bne	d8 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x3c>
  cc:	e35c0000 	cmp	ip, #0
  d0:	1a000002 	bne	e0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x44>
  d4:	ea000009 	b	100 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x64>
  d8:	e35c0000 	cmp	ip, #0
  dc:	0a000003 	beq	f0 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x54>
  e0:	e58d2000 	str	r2, [sp]
  e4:	e1a03001 	mov	r3, r1
  e8:	e59f203c 	ldr	r2, [pc, #60]	; 12c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x90>
  ec:	ea000006 	b	10c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x70>
  f0:	e58d2000 	str	r2, [sp]
  f4:	e1a03001 	mov	r3, r1
  f8:	e59f2030 	ldr	r2, [pc, #48]	; 130 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x94>
  fc:	ea000002 	b	10c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x70>
 100:	e58d2000 	str	r2, [sp]
 104:	e1a03001 	mov	r3, r1
 108:	e59f2024 	ldr	r2, [pc, #36]	; 134 <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]+0x98>
 10c:	e1a01005 	mov	r1, r5
 110:	ebfffffe 	bl	0 <snprintf>
 114:	e1550000 	cmp	r5, r0
 118:	a1d430b6 	ldrhge	r3, [r4, #6]
 11c:	a0830000 	addge	r0, r3, r0
 120:	a1c400b6 	strhge	r0, [r4, #6]
 124:	e28dd00c 	add	sp, sp, #12
 128:	e8bd8030 	pop	{r4, r5, pc}
 12c:	00000018 	andeq	r0, r0, r8, lsl r0
 130:	00000023 	andeq	r0, r0, r3, lsr #32
 134:	0000002a 	andeq	r0, r0, sl, lsr #32

00000138 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)>:
 138:	e3510000 	cmp	r1, #0
 13c:	e92d4070 	push	{r4, r5, r6, lr}
 140:	e1a04000 	mov	r4, r0
 144:	e24dd018 	sub	sp, sp, #24
 148:	e1a05002 	mov	r5, r2
 14c:	e1a06003 	mov	r6, r3
 150:	e2800004 	add	r0, r0, #4
 154:	0a000002 	beq	164 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x2c>
 158:	e300218b 	movw	r2, #395	; 0x18b
 15c:	ebfffffe 	bl	0 <memcpy>
 160:	ea000005 	b	17c <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x44>
 164:	e5943000 	ldr	r3, [r4]
 168:	e1a01000 	mov	r1, r0
 16c:	e5932000 	ldr	r2, [r3]
 170:	e1a00003 	mov	r0, r3
 174:	e592200c 	ldr	r2, [r2, #12]
 178:	e12fff32 	blx	r2
 17c:	e59f115c 	ldr	r1, [pc, #348]	; 2e0 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1a8>
 180:	e1a02005 	mov	r2, r5
 184:	e1a03006 	mov	r3, r6
 188:	e28d000c 	add	r0, sp, #12
 18c:	ebfffffe 	bl	0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 190:	e5943004 	ldr	r3, [r4, #4]
 194:	e28d000c 	add	r0, sp, #12
 198:	e1d420b8 	ldrh	r2, [r4, #8]
 19c:	e59f1140 	ldr	r1, [pc, #320]	; 2e4 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1ac>
 1a0:	e2033001 	and	r3, r3, #1
 1a4:	ebffff95 	bl	0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 1a8:	e5943004 	ldr	r3, [r4, #4]
 1ac:	e28d000c 	add	r0, sp, #12
 1b0:	e1d420ba 	ldrh	r2, [r4, #10]
 1b4:	e7e030d3 	ubfx	r3, r3, #1, #1
 1b8:	e59f1128 	ldr	r1, [pc, #296]	; 2e8 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1b0>
 1bc:	ebffff8f 	bl	0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 1c0:	e5943004 	ldr	r3, [r4, #4]
 1c4:	e284200e 	add	r2, r4, #14
 1c8:	e59f111c 	ldr	r1, [pc, #284]	; 2ec <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1b4>
 1cc:	e28d000c 	add	r0, sp, #12
 1d0:	e7e03153 	ubfx	r3, r3, #2, #1
 1d4:	ebffffb0 	bl	9c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 1d8:	e5943004 	ldr	r3, [r4, #4]
 1dc:	e284208e 	add	r2, r4, #142	; 0x8e
 1e0:	e59f1108 	ldr	r1, [pc, #264]	; 2f0 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1b8>
 1e4:	e28d000c 	add	r0, sp, #12
 1e8:	e7e032d3 	ubfx	r3, r3, #5, #1
 1ec:	ebffffaa 	bl	9c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 1f0:	e5943004 	ldr	r3, [r4, #4]
 1f4:	e2842f43 	add	r2, r4, #268	; 0x10c
 1f8:	e59f10f4 	ldr	r1, [pc, #244]	; 2f4 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1bc>
 1fc:	e2822002 	add	r2, r2, #2
 200:	e7e03353 	ubfx	r3, r3, #6, #1
 204:	e28d000c 	add	r0, sp, #12
 208:	ebffffa3 	bl	9c <bool PropertiesBuilder::Add<char*>(char const*, char*, bool, unsigned int) [clone .isra.0]>
 20c:	e1dd11b2 	ldrh	r1, [sp, #18]
 210:	e1dd51b0 	ldrh	r5, [sp, #16]
 214:	e1510005 	cmp	r1, r5
 218:	2a00001d 	bcs	294 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x15c>
 21c:	e59d000c 	ldr	r0, [sp, #12]
 220:	e0455001 	sub	r5, r5, r1
 224:	e0800001 	add	r0, r0, r1
 228:	e5941004 	ldr	r1, [r4, #4]
 22c:	e5dd2014 	ldrb	r2, [sp, #20]
 230:	e5d4300d 	ldrb	r3, [r4, #13]
 234:	e3110008 	tst	r1, #8
 238:	1a000002 	bne	248 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x110>
 23c:	e3520000 	cmp	r2, #0
 240:	1a000002 	bne	250 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x118>
 244:	ea000009 	b	270 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x138>
 248:	e3520000 	cmp	r2, #0
 24c:	0a000003 	beq	260 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x128>
 250:	e58d3000 	str	r3, [sp]
 254:	e59f209c 	ldr	r2, [pc, #156]	; 2f8 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1c0>
 258:	e59f309c 	ldr	r3, [pc, #156]	; 2fc <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1c4>
 25c:	ea000006 	b	27c <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x144>
 260:	e58d3000 	str	r3, [sp]
 264:	e59f2094 	ldr	r2, [pc, #148]	; 300 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1c8>
 268:	e59f308c 	ldr	r3, [pc, #140]	; 2fc <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1c4>
 26c:	ea000002 	b	27c <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x144>
 270:	e58d3000 	str	r3, [sp]
 274:	e59f2088 	ldr	r2, [pc, #136]	; 304 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1cc>
 278:	e59f307c 	ldr	r3, [pc, #124]	; 2fc <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x1c4>
 27c:	e1a01005 	mov	r1, r5
 280:	ebfffffe 	bl	0 <snprintf>
 284:	e1550000 	cmp	r5, r0
 288:	a1dd31b2 	ldrhge	r3, [sp, #18]
 28c:	a0830000 	addge	r0, r3, r0
 290:	a1cd01b2 	strhge	r0, [sp, #18]
 294:	e5dd3014 	ldrb	r3, [sp, #20]
 298:	e3530000 	cmp	r3, #0
 29c:	0a00000a 	beq	2cc <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)+0x194>
 2a0:	e1dd21b2 	ldrh	r2, [sp, #18]
 2a4:	e59d300c 	ldr	r3, [sp, #12]
 2a8:	e0833002 	add	r3, r3, r2
 2ac:	e3a0207d 	mov	r2, #125	; 0x7d
 2b0:	e5432001 	strb	r2, [r3, #-1]
 2b4:	e59d100c 	ldr	r1, [sp, #12]
 2b8:	e1dd31b2 	ldrh	r3, [sp, #18]
 2bc:	e7c12003 	strb	r2, [r1, r3]
 2c0:	e1dd31b2 	ldrh	r3, [sp, #18]
 2c4:	e2833001 	add	r3, r3, #1
 2c8:	e1cd31b2 	strh	r3, [sp, #18]
 2cc:	e1dd21b2 	ldrh	r2, [sp, #18]
 2d0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
 2d4:	e5832000 	str	r2, [r3]
 2d8:	e28dd018 	add	sp, sp, #24
 2dc:	e8bd8070 	pop	{r4, r5, r6, pc}
	...
 300:	00000009 	andeq	r0, r0, r9
 304:	00000010 	andeq	r0, r0, r0, lsl r0

00000308 <OSCServerParams::Save(char*, unsigned int, unsigned int&)>:
 308:	e590c000 	ldr	ip, [r0]
 30c:	e35c0000 	cmp	ip, #0
 310:	1a000001 	bne	31c <OSCServerParams::Save(char*, unsigned int, unsigned int&)+0x14>
 314:	e583c000 	str	ip, [r3]
 318:	e12fff1e 	bx	lr
 31c:	e92d4007 	push	{r0, r1, r2, lr}
 320:	e58d3000 	str	r3, [sp]
 324:	e1a03002 	mov	r3, r2
 328:	e1a02001 	mov	r2, r1
 32c:	e3a01000 	mov	r1, #0
 330:	ebfffffe 	bl	138 <OSCServerParams::Builder(TOSCServerParams const*, char*, unsigned int, unsigned int&)>
 334:	e28dd00c 	add	sp, sp, #12
 338:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .rodata.str1.1:

00000000 <.rodata.str1.1>:
   0:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
   4:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
   8:	3d732500 	cfldr64cc	mvdx2, [r3, #-0]
   c:	000a6425 	andeq	r6, sl, r5, lsr #8
  10:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
  14:	000a6425 	andeq	r6, sl, r5, lsr #8
  18:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
  1c:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
  20:	25002c22 	strcs	r2, [r0, #-3106]	; 0xfffff3de
  24:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
  28:	2523000a 	strcs	r0, [r3, #-10]!
  2c:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
  30:	Address 0x0000000000000030 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


oscserverprint.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <OscServer::Print()>:
   0:	e92d4010 	push	{r4, lr}
   4:	e1a04000 	mov	r4, r0
   8:	e3000000 	movw	r0, #0
   c:	e3400000 	movt	r0, #0
  10:	ebfffffe 	bl	0 <printf>
  14:	e1d410b0 	ldrh	r1, [r4]
  18:	e3000000 	movw	r0, #0
  1c:	e3400000 	movt	r0, #0
  20:	ebfffffe 	bl	0 <printf>
  24:	e1d410b2 	ldrh	r1, [r4, #2]
  28:	e3000000 	movw	r0, #0
  2c:	e3400000 	movt	r0, #0
  30:	ebfffffe 	bl	0 <printf>
  34:	e3000000 	movw	r0, #0
  38:	e284208c 	add	r2, r4, #140	; 0x8c
  3c:	e3400000 	movt	r0, #0
  40:	e284100c 	add	r1, r4, #12
  44:	ebfffffe 	bl	0 <printf>
  48:	e3000000 	movw	r0, #0
  4c:	e2841f63 	add	r1, r4, #396	; 0x18c
  50:	e3400000 	movt	r0, #0
  54:	ebfffffe 	bl	0 <printf>
  58:	e5d41008 	ldrb	r1, [r4, #8]
  5c:	e3002000 	movw	r2, #0
  60:	e3402000 	movt	r2, #0
  64:	e3003000 	movw	r3, #0
  68:	e3403000 	movt	r3, #0
  6c:	e3510000 	cmp	r1, #0
  70:	e3000000 	movw	r0, #0
  74:	11a01002 	movne	r1, r2
  78:	e8bd4010 	pop	{r4, lr}
  7c:	e3400000 	movt	r0, #0
  80:	01a01003 	moveq	r1, r3
  84:	eafffffe 	b	0 <printf>

Disassembly of section .rodata.str1.4:

00000000 <.LC0>:
   0:	00736559 	rsbseq	r6, r3, r9, asr r5

00000004 <.LC1>:
   4:	00006f4e 	andeq	r6, r0, lr, asr #30

00000008 <.LC2>:
   8:	2043534f 	subcs	r5, r3, pc, asr #6
   c:	76726553 			; <UNDEFINED> instruction: 0x76726553
  10:	000a7265 	andeq	r7, sl, r5, ror #4

00000014 <.LC3>:
  14:	636e4920 	cmnvs	lr, #32, 18	; 0x80000
  18:	6e696d6f 	cdpvs	13, 6, cr6, cr9, cr15, {3}
  1c:	6f502067 	svcvs	0x00502067
  20:	20207472 	eorcs	r7, r0, r2, ror r4
  24:	20202020 	eorcs	r2, r0, r0, lsr #32
  28:	203a2020 	eorscs	r2, sl, r0, lsr #32
  2c:	000a6425 	andeq	r6, sl, r5, lsr #8

00000030 <.LC4>:
  30:	74754f20 	ldrbtvc	r4, [r5], #-3872	; 0xfffff0e0
  34:	6e696f67 	cdpvs	15, 6, cr6, cr9, cr7, {3}
  38:	6f502067 	svcvs	0x00502067
  3c:	20207472 	eorcs	r7, r0, r2, ror r4
  40:	20202020 	eorcs	r2, r0, r0, lsr #32
  44:	203a2020 	eorscs	r2, sl, r0, lsr #32
  48:	000a6425 	andeq	r6, sl, r5, lsr #8

0000004c <.LC5>:
  4c:	584d4420 	stmdapl	sp, {r5, sl, lr}^
  50:	74615020 	strbtvc	r5, [r1], #-32	; 0xffffffe0
  54:	20202068 	eorcs	r2, r0, r8, rrx
  58:	20202020 	eorcs	r2, r0, r0, lsr #32
  5c:	20202020 	eorcs	r2, r0, r0, lsr #32
  60:	203a2020 	eorscs	r2, sl, r0, lsr #32
  64:	5d73255b 	cfldr64pl	mvdx2, [r3, #-364]!	; 0xfffffe94
  68:	5d73255b 	cfldr64pl	mvdx2, [r3, #-364]!	; 0xfffffe94
  6c:	0000000a 	andeq	r0, r0, sl

00000070 <.LC6>:
  70:	6c422020 	mcrrvs	0, 2, r2, r2, cr0
  74:	6f6b6361 	svcvs	0x006b6361
  78:	50207475 	eorpl	r7, r0, r5, ror r4
  7c:	20687461 	rsbcs	r7, r8, r1, ror #8
  80:	20202020 	eorcs	r2, r0, r0, lsr #32
  84:	203a2020 	eorscs	r2, sl, r0, lsr #32
  88:	5d73255b 	cfldr64pl	mvdx2, [r3, #-364]!	; 0xfffffe94
  8c:	0000000a 	andeq	r0, r0, sl

00000090 <.LC7>:
  90:	72615020 	rsbvc	r5, r1, #32
  94:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
  98:	61725420 	cmnvs	r2, r0, lsr #8
  9c:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
  a0:	6f697373 	svcvs	0x00697373
  a4:	203a206e 	eorscs	r2, sl, lr, rrx
  a8:	000a7325 	andeq	r7, sl, r5, lsr #6

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


oscserver.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <OscServer::OscServer()>:
   0:	e3a03d7d 	mov	r3, #8000	; 0x1f40
   4:	e280100c 	add	r1, r0, #12
   8:	e3423328 	movt	r3, #9000	; 0x2328
   c:	e280208c 	add	r2, r0, #140	; 0x8c
  10:	e92d4030 	push	{r4, r5, lr}
  14:	e1a05000 	mov	r5, r0
  18:	e5803000 	str	r3, [r0]
  1c:	e24dd014 	sub	sp, sp, #20
  20:	e1a03001 	mov	r3, r1
  24:	e3a00000 	mov	r0, #0
  28:	e1c500b8 	strh	r0, [r5, #8]
  2c:	e3e0c000 	mvn	ip, #0
  30:	e585c004 	str	ip, [r5, #4]
  34:	e585020c 	str	r0, [r5, #524]	; 0x20c
  38:	e5850210 	str	r0, [r5, #528]	; 0x210
  3c:	e5c50214 	strb	r0, [r5, #532]	; 0x214
  40:	e5850218 	str	r0, [r5, #536]	; 0x218
  44:	e585021c 	str	r0, [r5, #540]	; 0x21c
  48:	e5850220 	str	r0, [r5, #544]	; 0x220
  4c:	e4c30001 	strb	r0, [r3], #1
  50:	e1530002 	cmp	r3, r2
  54:	1afffffc 	bne	4c <OscServer::OscServer()+0x4c>
  58:	e3000000 	movw	r0, #0
  5c:	e3a0302f 	mov	r3, #47	; 0x2f
  60:	e3400000 	movt	r0, #0
  64:	ea000000 	b	6c <OscServer::OscServer()+0x6c>
  68:	e5f03001 	ldrb	r3, [r0, #1]!
  6c:	e4c13001 	strb	r3, [r1], #1
  70:	e3530000 	cmp	r3, #0
  74:	1afffffb 	bne	68 <OscServer::OscServer()+0x68>
  78:	e2851f43 	add	r1, r5, #268	; 0x10c
  7c:	e1a00002 	mov	r0, r2
  80:	e4c03001 	strb	r3, [r0], #1
  84:	e1500001 	cmp	r0, r1
  88:	1afffffc 	bne	80 <OscServer::OscServer()+0x80>
  8c:	e3000000 	movw	r0, #0
  90:	e3a0302f 	mov	r3, #47	; 0x2f
  94:	e3400000 	movt	r0, #0
  98:	ea000000 	b	a0 <OscServer::OscServer()+0xa0>
  9c:	e5f03001 	ldrb	r3, [r0, #1]!
  a0:	e4c23001 	strb	r3, [r2], #1
  a4:	e3530000 	cmp	r3, #0
  a8:	1afffffb 	bne	9c <OscServer::OscServer()+0x9c>
  ac:	e2852f63 	add	r2, r5, #396	; 0x18c
  b0:	e1a00001 	mov	r0, r1
  b4:	e4c03001 	strb	r3, [r0], #1
  b8:	e1500002 	cmp	r0, r2
  bc:	1afffffc 	bne	b4 <OscServer::OscServer()+0xb4>
  c0:	e3000000 	movw	r0, #0
  c4:	e3a0302f 	mov	r3, #47	; 0x2f
  c8:	e3400000 	movt	r0, #0
  cc:	ea000000 	b	d4 <OscServer::OscServer()+0xd4>
  d0:	e5f03001 	ldrb	r3, [r0, #1]!
  d4:	e4c13001 	strb	r3, [r1], #1
  d8:	e3530000 	cmp	r3, #0
  dc:	1afffffb 	bne	d0 <OscServer::OscServer()+0xd0>
  e0:	e2850f83 	add	r0, r5, #524	; 0x20c
  e4:	e1a01002 	mov	r1, r2
  e8:	e4c13001 	strb	r3, [r1], #1
  ec:	e1510000 	cmp	r1, r0
  f0:	1afffffc 	bne	e8 <OscServer::OscServer()+0xe8>
  f4:	e3003000 	movw	r3, #0
  f8:	e3a0402f 	mov	r4, #47	; 0x2f
  fc:	e3403000 	movt	r3, #0
 100:	ea000000 	b	108 <OscServer::OscServer()+0x108>
 104:	e5f34001 	ldrb	r4, [r3, #1]!
 108:	e4c24001 	strb	r4, [r2], #1
 10c:	e3540000 	cmp	r4, #0
 110:	1afffffb 	bne	104 <OscServer::OscServer()+0x104>
 114:	e3a00a01 	mov	r0, #4096	; 0x1000
 118:	ebfffffe 	bl	0 <operator new[](unsigned int)>
 11c:	e5850218 	str	r0, [r5, #536]	; 0x218
 120:	e3a00c02 	mov	r0, #512	; 0x200
 124:	ebfffffe 	bl	0 <operator new[](unsigned int)>
 128:	e585021c 	str	r0, [r5, #540]	; 0x21c
 12c:	e1a02004 	mov	r2, r4
 130:	ea000000 	b	138 <OscServer::OscServer()+0x138>
 134:	e595021c 	ldr	r0, [r5, #540]	; 0x21c
 138:	e7c02004 	strb	r2, [r0, r4]
 13c:	e2844001 	add	r4, r4, #1
 140:	e3540c02 	cmp	r4, #512	; 0x200
 144:	1afffffa 	bne	134 <OscServer::OscServer()+0x134>
 148:	e1a00004 	mov	r0, r4
 14c:	e3004000 	movw	r4, #0
 150:	e3404000 	movt	r4, #0
 154:	ebfffffe 	bl	0 <operator new[](unsigned int)>
 158:	e5850220 	str	r0, [r5, #544]	; 0x220
 15c:	e3000000 	movw	r0, #0
 160:	e3400000 	movt	r0, #0
 164:	e3003000 	movw	r3, #0
 168:	e3403000 	movt	r3, #0
 16c:	e3002000 	movw	r2, #0
 170:	e3402000 	movt	r2, #0
 174:	e3a01020 	mov	r1, #32
 178:	e58d0000 	str	r0, [sp]
 17c:	e2850f89 	add	r0, r5, #548	; 0x224
 180:	ebfffffe 	bl	0 <snprintf>
 184:	e5940000 	ldr	r0, [r4]
 188:	e28d100f 	add	r1, sp, #15
 18c:	ebfffffe 	bl	0 <Hardware::GetBoardName(unsigned char&)>
 190:	e5850244 	str	r0, [r5, #580]	; 0x244
 194:	e28d100f 	add	r1, sp, #15
 198:	e5940000 	ldr	r0, [r4]
 19c:	ebfffffe 	bl	0 <Hardware::GetSocName(unsigned char&)>
 1a0:	e5850248 	str	r0, [r5, #584]	; 0x248
 1a4:	e5d03000 	ldrb	r3, [r0]
 1a8:	e3530000 	cmp	r3, #0
 1ac:	0a000002 	beq	1bc <OscServer::OscServer()+0x1bc>
 1b0:	e1a00005 	mov	r0, r5
 1b4:	e28dd014 	add	sp, sp, #20
 1b8:	e8bd8030 	pop	{r4, r5, pc}
 1bc:	e5940000 	ldr	r0, [r4]
 1c0:	e28d100f 	add	r1, sp, #15
 1c4:	ebfffffe 	bl	0 <Hardware::GetCpuName(unsigned char&)>
 1c8:	e5850248 	str	r0, [r5, #584]	; 0x248
 1cc:	e1a00005 	mov	r0, r5
 1d0:	e28dd014 	add	sp, sp, #20
 1d4:	e8bd8030 	pop	{r4, r5, pc}

000001d8 <OscServer::~OscServer()>:
 1d8:	e92d4010 	push	{r4, lr}
 1dc:	e1a04000 	mov	r4, r0
 1e0:	e5900210 	ldr	r0, [r0, #528]	; 0x210
 1e4:	e3500000 	cmp	r0, #0
 1e8:	0a000005 	beq	204 <OscServer::~OscServer()+0x2c>
 1ec:	e5903000 	ldr	r3, [r0]
 1f0:	e3a01000 	mov	r1, #0
 1f4:	e593300c 	ldr	r3, [r3, #12]
 1f8:	e12fff33 	blx	r3
 1fc:	e3a03000 	mov	r3, #0
 200:	e5843210 	str	r3, [r4, #528]	; 0x210
 204:	e5940218 	ldr	r0, [r4, #536]	; 0x218
 208:	e3500000 	cmp	r0, #0
 20c:	0a000000 	beq	214 <OscServer::~OscServer()+0x3c>
 210:	ebfffffe 	bl	0 <operator delete[](void*)>
 214:	e594021c 	ldr	r0, [r4, #540]	; 0x21c
 218:	e3a03000 	mov	r3, #0
 21c:	e5843218 	str	r3, [r4, #536]	; 0x218
 220:	e1500003 	cmp	r0, r3
 224:	0a000000 	beq	22c <OscServer::~OscServer()+0x54>
 228:	ebfffffe 	bl	0 <operator delete[](void*)>
 22c:	e5940220 	ldr	r0, [r4, #544]	; 0x220
 230:	e3a03000 	mov	r3, #0
 234:	e584321c 	str	r3, [r4, #540]	; 0x21c
 238:	e1500003 	cmp	r0, r3
 23c:	0a000000 	beq	244 <OscServer::~OscServer()+0x6c>
 240:	ebfffffe 	bl	0 <operator delete[](void*)>
 244:	e1a00004 	mov	r0, r4
 248:	e8bd8010 	pop	{r4, pc}

0000024c <OscServer::Start()>:
 24c:	e92d4030 	push	{r4, r5, lr}
 250:	e3005000 	movw	r5, #0
 254:	e3405000 	movt	r5, #0
 258:	e1a04000 	mov	r4, r0
 25c:	e24ddb01 	sub	sp, sp, #1024	; 0x400
 260:	e1d410b0 	ldrh	r1, [r4]
 264:	e24dd00c 	sub	sp, sp, #12
 268:	e5950000 	ldr	r0, [r5]
 26c:	ebfffffe 	bl	0 <Network::Begin(unsigned short)>
 270:	e5953000 	ldr	r3, [r5]
 274:	e300c000 	movw	ip, #0
 278:	e5840004 	str	r0, [r4, #4]
 27c:	e1a01000 	mov	r1, r0
 280:	e593200c 	ldr	r2, [r3, #12]
 284:	e5930004 	ldr	r0, [r3, #4]
 288:	e340c000 	movt	ip, #0
 28c:	e1d430b0 	ldrh	r3, [r4]
 290:	e1e02002 	mvn	r2, r2
 294:	e58dc000 	str	ip, [sp]
 298:	e3a0c000 	mov	ip, #0
 29c:	e1822000 	orr	r2, r2, r0
 2a0:	e28d0008 	add	r0, sp, #8
 2a4:	e58dc004 	str	ip, [sp, #4]
 2a8:	ebfffffe 	bl	0 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 2ac:	e3003000 	movw	r3, #0
 2b0:	e3a01002 	mov	r1, #2
 2b4:	e3403000 	movt	r3, #0
 2b8:	e5930000 	ldr	r0, [r3]
 2bc:	ebfffffe 	bl	0 <LedBlink::SetMode(ledblink::Mode)>
 2c0:	e28ddb01 	add	sp, sp, #1024	; 0x400
 2c4:	e28dd00c 	add	sp, sp, #12
 2c8:	e8bd8030 	pop	{r4, r5, pc}

000002cc <OscServer::Stop()>:
 2cc:	e5900210 	ldr	r0, [r0, #528]	; 0x210
 2d0:	e3500000 	cmp	r0, #0
 2d4:	012fff1e 	bxeq	lr
 2d8:	e5903000 	ldr	r3, [r0]
 2dc:	e3a01000 	mov	r1, #0
 2e0:	e593300c 	ldr	r3, [r3, #12]
 2e4:	e12fff13 	bx	r3

000002e8 <OscServer::GetPortIncoming() const>:
 2e8:	e1d000b0 	ldrh	r0, [r0]
 2ec:	e12fff1e 	bx	lr

000002f0 <OscServer::SetPortIncoming(unsigned short)>:
 2f0:	e1c010b0 	strh	r1, [r0]
 2f4:	e12fff1e 	bx	lr

000002f8 <OscServer::GetPortOutgoing() const>:
 2f8:	e1d000b2 	ldrh	r0, [r0, #2]
 2fc:	e12fff1e 	bx	lr

00000300 <OscServer::SetPortOutgoing(unsigned short)>:
 300:	e1c010b2 	strh	r1, [r0, #2]
 304:	e12fff1e 	bx	lr

00000308 <OscServer::SetOutput(LightSet*)>:
 308:	e5801210 	str	r1, [r0, #528]	; 0x210
 30c:	e12fff1e 	bx	lr

00000310 <OscServer::SetOscServerHandler(OscServerHandler*)>:
 310:	e580120c 	str	r1, [r0, #524]	; 0x20c
 314:	e12fff1e 	bx	lr

00000318 <OscServer::SetPath(char const*)>:
 318:	e5d12000 	ldrb	r2, [r1]
 31c:	e352002f 	cmp	r2, #47	; 0x2f
 320:	112fff1e 	bxne	lr
 324:	e92d4070 	push	{r4, r5, r6, lr}
 328:	e280e00c 	add	lr, r0, #12
 32c:	e2805089 	add	r5, r0, #137	; 0x89
 330:	e1a0300e 	mov	r3, lr
 334:	ea000002 	b	344 <OscServer::SetPath(char const*)+0x2c>
 338:	e5f12001 	ldrb	r2, [r1, #1]!
 33c:	e3520000 	cmp	r2, #0
 340:	0a00002f 	beq	404 <OscServer::SetPath(char const*)+0xec>
 344:	e1a04003 	mov	r4, r3
 348:	e4c32001 	strb	r2, [r3], #1
 34c:	e2632089 	rsb	r2, r3, #137	; 0x89
 350:	e1530005 	cmp	r3, r5
 354:	e080c002 	add	ip, r0, r2
 358:	1afffff6 	bne	338 <OscServer::SetPath(char const*)+0x20>
 35c:	e5d0300c 	ldrb	r3, [r0, #12]
 360:	e3530000 	cmp	r3, #0
 364:	0a00005b 	beq	4d8 <OscServer::SetPath(char const*)+0x1c0>
 368:	e1a0200e 	mov	r2, lr
 36c:	e5f21001 	ldrb	r1, [r2, #1]!
 370:	e3510000 	cmp	r1, #0
 374:	1afffffc 	bne	36c <OscServer::SetPath(char const*)+0x54>
 378:	e042200e 	sub	r2, r2, lr
 37c:	e2422001 	sub	r2, r2, #1
 380:	e0802002 	add	r2, r0, r2
 384:	e5d2100c 	ldrb	r1, [r2, #12]
 388:	e351002f 	cmp	r1, #47	; 0x2f
 38c:	e280108c 	add	r1, r0, #140	; 0x8c
 390:	03a03000 	moveq	r3, #0
 394:	05c2300c 	strbeq	r3, [r2, #12]
 398:	e1a02001 	mov	r2, r1
 39c:	05d0300c 	ldrbeq	r3, [r0, #12]
 3a0:	ea000000 	b	3a8 <OscServer::SetPath(char const*)+0x90>
 3a4:	e5523080 	ldrb	r3, [r2, #-128]	; 0xffffff80
 3a8:	e4c23001 	strb	r3, [r2], #1
 3ac:	e3530000 	cmp	r3, #0
 3b0:	1afffffb 	bne	3a4 <OscServer::SetPath(char const*)+0x8c>
 3b4:	e5d0208c 	ldrb	r2, [r0, #140]	; 0x8c
 3b8:	e3520000 	cmp	r2, #0
 3bc:	0a000047 	beq	4e0 <OscServer::SetPath(char const*)+0x1c8>
 3c0:	e1a03001 	mov	r3, r1
 3c4:	e5f32001 	ldrb	r2, [r3, #1]!
 3c8:	e3520000 	cmp	r2, #0
 3cc:	1afffffc 	bne	3c4 <OscServer::SetPath(char const*)+0xac>
 3d0:	e0433001 	sub	r3, r3, r1
 3d4:	e2832001 	add	r2, r3, #1
 3d8:	e2831002 	add	r1, r3, #2
 3dc:	e0803003 	add	r3, r0, r3
 3e0:	e0802002 	add	r2, r0, r2
 3e4:	e0800001 	add	r0, r0, r1
 3e8:	e3a0102f 	mov	r1, #47	; 0x2f
 3ec:	e5c3108c 	strb	r1, [r3, #140]	; 0x8c
 3f0:	e3a0302a 	mov	r3, #42	; 0x2a
 3f4:	e5c2308c 	strb	r3, [r2, #140]	; 0x8c
 3f8:	e3a03000 	mov	r3, #0
 3fc:	e5c0308c 	strb	r3, [r0, #140]	; 0x8c
 400:	e8bd8070 	pop	{r4, r5, r6, pc}
 404:	e24c1001 	sub	r1, ip, #1
 408:	e351001f 	cmp	r1, #31
 40c:	9a00002b 	bls	4c0 <OscServer::SetPath(char const*)+0x1a8>
 410:	e083100c 	add	r1, r3, ip
 414:	e28cc01f 	add	ip, ip, #31
 418:	e083c00c 	add	ip, r3, ip
 41c:	e2844021 	add	r4, r4, #33	; 0x21
 420:	e5442020 	strb	r2, [r4, #-32]	; 0xffffffe0
 424:	e1a03004 	mov	r3, r4
 428:	e544201f 	strb	r2, [r4, #-31]	; 0xffffffe1
 42c:	e544201e 	strb	r2, [r4, #-30]	; 0xffffffe2
 430:	e544201d 	strb	r2, [r4, #-29]	; 0xffffffe3
 434:	e544201c 	strb	r2, [r4, #-28]	; 0xffffffe4
 438:	e544201b 	strb	r2, [r4, #-27]	; 0xffffffe5
 43c:	e544201a 	strb	r2, [r4, #-26]	; 0xffffffe6
 440:	e5442019 	strb	r2, [r4, #-25]	; 0xffffffe7
 444:	e5442018 	strb	r2, [r4, #-24]	; 0xffffffe8
 448:	e5442017 	strb	r2, [r4, #-23]	; 0xffffffe9
 44c:	e5442016 	strb	r2, [r4, #-22]	; 0xffffffea
 450:	e5442015 	strb	r2, [r4, #-21]	; 0xffffffeb
 454:	e5442014 	strb	r2, [r4, #-20]	; 0xffffffec
 458:	e5442013 	strb	r2, [r4, #-19]	; 0xffffffed
 45c:	e5442012 	strb	r2, [r4, #-18]	; 0xffffffee
 460:	e5442011 	strb	r2, [r4, #-17]	; 0xffffffef
 464:	e5442010 	strb	r2, [r4, #-16]
 468:	e544200f 	strb	r2, [r4, #-15]
 46c:	e544200e 	strb	r2, [r4, #-14]
 470:	e544200d 	strb	r2, [r4, #-13]
 474:	e544200c 	strb	r2, [r4, #-12]
 478:	e544200b 	strb	r2, [r4, #-11]
 47c:	e544200a 	strb	r2, [r4, #-10]
 480:	e5442009 	strb	r2, [r4, #-9]
 484:	e5442008 	strb	r2, [r4, #-8]
 488:	e5442007 	strb	r2, [r4, #-7]
 48c:	e5442006 	strb	r2, [r4, #-6]
 490:	e5442005 	strb	r2, [r4, #-5]
 494:	e5442004 	strb	r2, [r4, #-4]
 498:	e5442003 	strb	r2, [r4, #-3]
 49c:	e5442002 	strb	r2, [r4, #-2]
 4a0:	f5d4f008 	pld	[r4, #8]
 4a4:	e0416004 	sub	r6, r1, r4
 4a8:	e2844020 	add	r4, r4, #32
 4ac:	e5442021 	strb	r2, [r4, #-33]	; 0xffffffdf
 4b0:	e04c5004 	sub	r5, ip, r4
 4b4:	e355001f 	cmp	r5, #31
 4b8:	8affffd8 	bhi	420 <OscServer::SetPath(char const*)+0x108>
 4bc:	e1a0c006 	mov	ip, r6
 4c0:	e083200c 	add	r2, r3, ip
 4c4:	e3a01000 	mov	r1, #0
 4c8:	e4c31001 	strb	r1, [r3], #1
 4cc:	e1530002 	cmp	r3, r2
 4d0:	1afffffc 	bne	4c8 <OscServer::SetPath(char const*)+0x1b0>
 4d4:	eaffffa0 	b	35c <OscServer::SetPath(char const*)+0x44>
 4d8:	e3e02000 	mvn	r2, #0
 4dc:	eaffffa7 	b	380 <OscServer::SetPath(char const*)+0x68>
 4e0:	e3a01002 	mov	r1, #2
 4e4:	e3a02001 	mov	r2, #1
 4e8:	eaffffbb 	b	3dc <OscServer::SetPath(char const*)+0xc4>

000004ec <OscServer::GetPath()>:
 4ec:	e280000c 	add	r0, r0, #12
 4f0:	e12fff1e 	bx	lr

000004f4 <OscServer::SetPathInfo(char const*)>:
 4f4:	e5d12000 	ldrb	r2, [r1]
 4f8:	e352002f 	cmp	r2, #47	; 0x2f
 4fc:	112fff1e 	bxne	lr
 500:	e92d4070 	push	{r4, r5, r6, lr}
 504:	e2804f43 	add	r4, r0, #268	; 0x10c
 508:	e300518b 	movw	r5, #395	; 0x18b
 50c:	e1a03004 	mov	r3, r4
 510:	e0806005 	add	r6, r0, r5
 514:	ea000002 	b	524 <OscServer::SetPathInfo(char const*)+0x30>
 518:	e5f12001 	ldrb	r2, [r1, #1]!
 51c:	e3520000 	cmp	r2, #0
 520:	0a000014 	beq	578 <OscServer::SetPathInfo(char const*)+0x84>
 524:	e1a0e003 	mov	lr, r3
 528:	e4c32001 	strb	r2, [r3], #1
 52c:	e1530006 	cmp	r3, r6
 530:	e0452003 	sub	r2, r5, r3
 534:	e080c002 	add	ip, r0, r2
 538:	1afffff6 	bne	518 <OscServer::SetPathInfo(char const*)+0x24>
 53c:	e5d0310c 	ldrb	r3, [r0, #268]	; 0x10c
 540:	e3530000 	cmp	r3, #0
 544:	0a000040 	beq	64c <OscServer::SetPathInfo(char const*)+0x158>
 548:	e1a03004 	mov	r3, r4
 54c:	e5f32001 	ldrb	r2, [r3, #1]!
 550:	e3520000 	cmp	r2, #0
 554:	1afffffc 	bne	54c <OscServer::SetPathInfo(char const*)+0x58>
 558:	e0433004 	sub	r3, r3, r4
 55c:	e2433001 	sub	r3, r3, #1
 560:	e0803003 	add	r3, r0, r3
 564:	e5d3210c 	ldrb	r2, [r3, #268]	; 0x10c
 568:	e352002f 	cmp	r2, #47	; 0x2f
 56c:	03a02000 	moveq	r2, #0
 570:	05c3210c 	strbeq	r2, [r3, #268]	; 0x10c
 574:	e8bd8070 	pop	{r4, r5, r6, pc}
 578:	e24c1001 	sub	r1, ip, #1
 57c:	e351001f 	cmp	r1, #31
 580:	9a00002b 	bls	634 <OscServer::SetPathInfo(char const*)+0x140>
 584:	e083100c 	add	r1, r3, ip
 588:	e28cc01f 	add	ip, ip, #31
 58c:	e083c00c 	add	ip, r3, ip
 590:	e28ee021 	add	lr, lr, #33	; 0x21
 594:	e54e2020 	strb	r2, [lr, #-32]	; 0xffffffe0
 598:	e1a0300e 	mov	r3, lr
 59c:	e54e201f 	strb	r2, [lr, #-31]	; 0xffffffe1
 5a0:	e54e201e 	strb	r2, [lr, #-30]	; 0xffffffe2
 5a4:	e54e201d 	strb	r2, [lr, #-29]	; 0xffffffe3
 5a8:	e54e201c 	strb	r2, [lr, #-28]	; 0xffffffe4
 5ac:	e54e201b 	strb	r2, [lr, #-27]	; 0xffffffe5
 5b0:	e54e201a 	strb	r2, [lr, #-26]	; 0xffffffe6
 5b4:	e54e2019 	strb	r2, [lr, #-25]	; 0xffffffe7
 5b8:	e54e2018 	strb	r2, [lr, #-24]	; 0xffffffe8
 5bc:	e54e2017 	strb	r2, [lr, #-23]	; 0xffffffe9
 5c0:	e54e2016 	strb	r2, [lr, #-22]	; 0xffffffea
 5c4:	e54e2015 	strb	r2, [lr, #-21]	; 0xffffffeb
 5c8:	e54e2014 	strb	r2, [lr, #-20]	; 0xffffffec
 5cc:	e54e2013 	strb	r2, [lr, #-19]	; 0xffffffed
 5d0:	e54e2012 	strb	r2, [lr, #-18]	; 0xffffffee
 5d4:	e54e2011 	strb	r2, [lr, #-17]	; 0xffffffef
 5d8:	e54e2010 	strb	r2, [lr, #-16]
 5dc:	e54e200f 	strb	r2, [lr, #-15]
 5e0:	e54e200e 	strb	r2, [lr, #-14]
 5e4:	e54e200d 	strb	r2, [lr, #-13]
 5e8:	e54e200c 	strb	r2, [lr, #-12]
 5ec:	e54e200b 	strb	r2, [lr, #-11]
 5f0:	e54e200a 	strb	r2, [lr, #-10]
 5f4:	e54e2009 	strb	r2, [lr, #-9]
 5f8:	e54e2008 	strb	r2, [lr, #-8]
 5fc:	e54e2007 	strb	r2, [lr, #-7]
 600:	e54e2006 	strb	r2, [lr, #-6]
 604:	e54e2005 	strb	r2, [lr, #-5]
 608:	e54e2004 	strb	r2, [lr, #-4]
 60c:	e54e2003 	strb	r2, [lr, #-3]
 610:	e54e2002 	strb	r2, [lr, #-2]
 614:	f5def008 	pld	[lr, #8]
 618:	e041600e 	sub	r6, r1, lr
 61c:	e28ee020 	add	lr, lr, #32
 620:	e54e2021 	strb	r2, [lr, #-33]	; 0xffffffdf
 624:	e04c500e 	sub	r5, ip, lr
 628:	e355001f 	cmp	r5, #31
 62c:	8affffd8 	bhi	594 <OscServer::SetPathInfo(char const*)+0xa0>
 630:	e1a0c006 	mov	ip, r6
 634:	e083200c 	add	r2, r3, ip
 638:	e3a01000 	mov	r1, #0
 63c:	e4c31001 	strb	r1, [r3], #1
 640:	e1530002 	cmp	r3, r2
 644:	1afffffc 	bne	63c <OscServer::SetPathInfo(char const*)+0x148>
 648:	eaffffbb 	b	53c <OscServer::SetPathInfo(char const*)+0x48>
 64c:	e3e03000 	mvn	r3, #0
 650:	eaffffc2 	b	560 <OscServer::SetPathInfo(char const*)+0x6c>

00000654 <OscServer::GetPathInfo()>:
 654:	e2800f43 	add	r0, r0, #268	; 0x10c
 658:	e12fff1e 	bx	lr

0000065c <OscServer::SetPathBlackOut(char const*)>:
 65c:	e5d12000 	ldrb	r2, [r1]
 660:	e352002f 	cmp	r2, #47	; 0x2f
 664:	112fff1e 	bxne	lr
 668:	e92d4070 	push	{r4, r5, r6, lr}
 66c:	e2804f63 	add	r4, r0, #396	; 0x18c
 670:	e300520b 	movw	r5, #523	; 0x20b
 674:	e1a03004 	mov	r3, r4
 678:	e0806005 	add	r6, r0, r5
 67c:	ea000002 	b	68c <OscServer::SetPathBlackOut(char const*)+0x30>
 680:	e5f12001 	ldrb	r2, [r1, #1]!
 684:	e3520000 	cmp	r2, #0
 688:	0a000014 	beq	6e0 <OscServer::SetPathBlackOut(char const*)+0x84>
 68c:	e1a0e003 	mov	lr, r3
 690:	e4c32001 	strb	r2, [r3], #1
 694:	e1530006 	cmp	r3, r6
 698:	e0452003 	sub	r2, r5, r3
 69c:	e080c002 	add	ip, r0, r2
 6a0:	1afffff6 	bne	680 <OscServer::SetPathBlackOut(char const*)+0x24>
 6a4:	e5d0318c 	ldrb	r3, [r0, #396]	; 0x18c
 6a8:	e3530000 	cmp	r3, #0
 6ac:	0a000040 	beq	7b4 <OscServer::SetPathBlackOut(char const*)+0x158>
 6b0:	e1a03004 	mov	r3, r4
 6b4:	e5f32001 	ldrb	r2, [r3, #1]!
 6b8:	e3520000 	cmp	r2, #0
 6bc:	1afffffc 	bne	6b4 <OscServer::SetPathBlackOut(char const*)+0x58>
 6c0:	e0433004 	sub	r3, r3, r4
 6c4:	e2433001 	sub	r3, r3, #1
 6c8:	e0803003 	add	r3, r0, r3
 6cc:	e5d3218c 	ldrb	r2, [r3, #396]	; 0x18c
 6d0:	e352002f 	cmp	r2, #47	; 0x2f
 6d4:	03a02000 	moveq	r2, #0
 6d8:	05c3218c 	strbeq	r2, [r3, #396]	; 0x18c
 6dc:	e8bd8070 	pop	{r4, r5, r6, pc}
 6e0:	e24c1001 	sub	r1, ip, #1
 6e4:	e351001f 	cmp	r1, #31
 6e8:	9a00002b 	bls	79c <OscServer::SetPathBlackOut(char const*)+0x140>
 6ec:	e083100c 	add	r1, r3, ip
 6f0:	e28cc01f 	add	ip, ip, #31
 6f4:	e083c00c 	add	ip, r3, ip
 6f8:	e28ee021 	add	lr, lr, #33	; 0x21
 6fc:	e54e2020 	strb	r2, [lr, #-32]	; 0xffffffe0
 700:	e1a0300e 	mov	r3, lr
 704:	e54e201f 	strb	r2, [lr, #-31]	; 0xffffffe1
 708:	e54e201e 	strb	r2, [lr, #-30]	; 0xffffffe2
 70c:	e54e201d 	strb	r2, [lr, #-29]	; 0xffffffe3
 710:	e54e201c 	strb	r2, [lr, #-28]	; 0xffffffe4
 714:	e54e201b 	strb	r2, [lr, #-27]	; 0xffffffe5
 718:	e54e201a 	strb	r2, [lr, #-26]	; 0xffffffe6
 71c:	e54e2019 	strb	r2, [lr, #-25]	; 0xffffffe7
 720:	e54e2018 	strb	r2, [lr, #-24]	; 0xffffffe8
 724:	e54e2017 	strb	r2, [lr, #-23]	; 0xffffffe9
 728:	e54e2016 	strb	r2, [lr, #-22]	; 0xffffffea
 72c:	e54e2015 	strb	r2, [lr, #-21]	; 0xffffffeb
 730:	e54e2014 	strb	r2, [lr, #-20]	; 0xffffffec
 734:	e54e2013 	strb	r2, [lr, #-19]	; 0xffffffed
 738:	e54e2012 	strb	r2, [lr, #-18]	; 0xffffffee
 73c:	e54e2011 	strb	r2, [lr, #-17]	; 0xffffffef
 740:	e54e2010 	strb	r2, [lr, #-16]
 744:	e54e200f 	strb	r2, [lr, #-15]
 748:	e54e200e 	strb	r2, [lr, #-14]
 74c:	e54e200d 	strb	r2, [lr, #-13]
 750:	e54e200c 	strb	r2, [lr, #-12]
 754:	e54e200b 	strb	r2, [lr, #-11]
 758:	e54e200a 	strb	r2, [lr, #-10]
 75c:	e54e2009 	strb	r2, [lr, #-9]
 760:	e54e2008 	strb	r2, [lr, #-8]
 764:	e54e2007 	strb	r2, [lr, #-7]
 768:	e54e2006 	strb	r2, [lr, #-6]
 76c:	e54e2005 	strb	r2, [lr, #-5]
 770:	e54e2004 	strb	r2, [lr, #-4]
 774:	e54e2003 	strb	r2, [lr, #-3]
 778:	e54e2002 	strb	r2, [lr, #-2]
 77c:	f5def008 	pld	[lr, #8]
 780:	e041600e 	sub	r6, r1, lr
 784:	e28ee020 	add	lr, lr, #32
 788:	e54e2021 	strb	r2, [lr, #-33]	; 0xffffffdf
 78c:	e04c500e 	sub	r5, ip, lr
 790:	e355001f 	cmp	r5, #31
 794:	8affffd8 	bhi	6fc <OscServer::SetPathBlackOut(char const*)+0xa0>
 798:	e1a0c006 	mov	ip, r6
 79c:	e083200c 	add	r2, r3, ip
 7a0:	e3a01000 	mov	r1, #0
 7a4:	e4c31001 	strb	r1, [r3], #1
 7a8:	e1530002 	cmp	r3, r2
 7ac:	1afffffc 	bne	7a4 <OscServer::SetPathBlackOut(char const*)+0x148>
 7b0:	eaffffbb 	b	6a4 <OscServer::SetPathBlackOut(char const*)+0x48>
 7b4:	e3e03000 	mvn	r3, #0
 7b8:	eaffffc2 	b	6c8 <OscServer::SetPathBlackOut(char const*)+0x6c>

000007bc <OscServer::GetPathBlackOut()>:
 7bc:	e2800f63 	add	r0, r0, #396	; 0x18c
 7c0:	e12fff1e 	bx	lr

000007c4 <OscServer::IsPartialTransmission() const>:
 7c4:	e5d00008 	ldrb	r0, [r0, #8]
 7c8:	e12fff1e 	bx	lr

000007cc <OscServer::SetPartialTransmission(bool)>:
 7cc:	e5c01008 	strb	r1, [r0, #8]
 7d0:	e12fff1e 	bx	lr

000007d4 <OscServer::GetChannel(char const*)>:
 7d4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 7d8:	e5d0300c 	ldrb	r3, [r0, #12]
 7dc:	e3530000 	cmp	r3, #0
 7e0:	0a000018 	beq	848 <OscServer::GetChannel(char const*)+0x74>
 7e4:	e280000c 	add	r0, r0, #12
 7e8:	e1a03000 	mov	r3, r0
 7ec:	e5f32001 	ldrb	r2, [r3, #1]!
 7f0:	e3520000 	cmp	r2, #0
 7f4:	1afffffc 	bne	7ec <OscServer::GetChannel(char const*)+0x18>
 7f8:	e0433000 	sub	r3, r3, r0
 7fc:	e2833001 	add	r3, r3, #1
 800:	e0813003 	add	r3, r1, r3
 804:	e3a00000 	mov	r0, #0
 808:	e2431001 	sub	r1, r3, #1
 80c:	e3a0e00a 	mov	lr, #10
 810:	e2833002 	add	r3, r3, #2
 814:	e5f12001 	ldrb	r2, [r1, #1]!
 818:	e3520000 	cmp	r2, #0
 81c:	e242c030 	sub	ip, r2, #48	; 0x30
 820:	e022209e 	mla	r2, lr, r0, r2
 824:	0a000004 	beq	83c <OscServer::GetChannel(char const*)+0x68>
 828:	e35c0009 	cmp	ip, #9
 82c:	e2420030 	sub	r0, r2, #48	; 0x30
 830:	8a000006 	bhi	850 <OscServer::GetChannel(char const*)+0x7c>
 834:	e1530001 	cmp	r3, r1
 838:	1afffff5 	bne	814 <OscServer::GetChannel(char const*)+0x40>
 83c:	e3500c02 	cmp	r0, #512	; 0x200
 840:	c3e00000 	mvngt	r0, #0
 844:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 848:	e3a03001 	mov	r3, #1
 84c:	eaffffeb 	b	800 <OscServer::GetChannel(char const*)+0x2c>
 850:	e3e00000 	mvn	r0, #0
 854:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00000858 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)>:
 858:	e92d4030 	push	{r4, r5, lr}
 85c:	e590521c 	ldr	r5, [r0, #540]	; 0x21c
 860:	e2420001 	sub	r0, r2, #1
 864:	e6ff0070 	uxth	r0, r0
 868:	e0804003 	add	r4, r0, r3
 86c:	e1500004 	cmp	r0, r4
 870:	2a000010 	bcs	8b8 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x60>
 874:	e2400001 	sub	r0, r0, #1
 878:	e2413001 	sub	r3, r1, #1
 87c:	e0855000 	add	r5, r5, r0
 880:	e3a00000 	mov	r0, #0
 884:	e1a0c005 	mov	ip, r5
 888:	e5fc1001 	ldrb	r1, [ip, #1]!
 88c:	e5f3e001 	ldrb	lr, [r3, #1]!
 890:	e151000e 	cmp	r1, lr
 894:	e24c1001 	sub	r1, ip, #1
 898:	e0821001 	add	r1, r2, r1
 89c:	13a00001 	movne	r0, #1
 8a0:	e0411005 	sub	r1, r1, r5
 8a4:	15cce000 	strbne	lr, [ip]
 8a8:	e6ff1071 	uxth	r1, r1
 8ac:	e1510004 	cmp	r1, r4
 8b0:	3afffff4 	bcc	888 <OscServer::IsDmxDataChanged(unsigned char const*, unsigned short, unsigned int)+0x30>
 8b4:	e8bd8030 	pop	{r4, r5, pc}
 8b8:	e3a00000 	mov	r0, #0
 8bc:	e8bd8030 	pop	{r4, r5, pc}

000008c0 <OscServer::Run()>:
 8c0:	e3003000 	movw	r3, #0
 8c4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
 8c8:	e24ddd31 	sub	sp, sp, #3136	; 0xc40
 8cc:	e3403000 	movt	r3, #0
 8d0:	e24dd004 	sub	sp, sp, #4
 8d4:	e1a04000 	mov	r4, r0
 8d8:	e28d1020 	add	r1, sp, #32
 8dc:	e5930000 	ldr	r0, [r3]
 8e0:	e28d301e 	add	r3, sp, #30
 8e4:	e5942218 	ldr	r2, [r4, #536]	; 0x218
 8e8:	e58d3004 	str	r3, [sp, #4]
 8ec:	e3a03a01 	mov	r3, #4096	; 0x1000
 8f0:	e58d1000 	str	r1, [sp]
 8f4:	e5941004 	ldr	r1, [r4, #4]
 8f8:	ebfffffe 	bl	0 <Network::RecvFrom(int, void*, unsigned short, unsigned int*, unsigned short*)>
 8fc:	e2505000 	subs	r5, r0, #0
 900:	1a000002 	bne	910 <OscServer::Run()+0x50>
 904:	e28ddd31 	add	sp, sp, #3136	; 0xc40
 908:	e28dd004 	add	sp, sp, #4
 90c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 910:	e5941218 	ldr	r1, [r4, #536]	; 0x218
 914:	e1a02005 	mov	r2, r5
 918:	e28d0024 	add	r0, sp, #36	; 0x24
 91c:	ebfffffe 	bl	0 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 920:	e5940218 	ldr	r0, [r4, #536]	; 0x218
 924:	e284100c 	add	r1, r4, #12
 928:	ebfffffe 	bl	0 <lo_pattern_match>
 92c:	e2506000 	subs	r6, r0, #0
 930:	0a000047 	beq	a54 <OscServer::Run()+0x194>
 934:	e5dd502c 	ldrb	r5, [sp, #44]	; 0x2c
 938:	e3550000 	cmp	r5, #0
 93c:	0afffff0 	beq	904 <OscServer::Run()+0x44>
 940:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
 944:	e3530001 	cmp	r3, #1
 948:	0a0000db 	beq	cbc <OscServer::Run()+0x3fc>
 94c:	e3530002 	cmp	r3, #2
 950:	1affffeb 	bne	904 <OscServer::Run()+0x44>
 954:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
 958:	e5d33000 	ldrb	r3, [r3]
 95c:	e3530069 	cmp	r3, #105	; 0x69
 960:	1affffe7 	bne	904 <OscServer::Run()+0x44>
 964:	e3a01000 	mov	r1, #0
 968:	e28d0024 	add	r0, sp, #36	; 0x24
 96c:	ebfffffe 	bl	0 <OscSimpleMessage::GetInt(unsigned int)>
 970:	e6ff7070 	uxth	r7, r0
 974:	e1a06000 	mov	r6, r0
 978:	e3570c02 	cmp	r7, #512	; 0x200
 97c:	2affffe0 	bcs	904 <OscServer::Run()+0x44>
 980:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
 984:	e3530001 	cmp	r3, #1
 988:	9affffdd 	bls	904 <OscServer::Run()+0x44>
 98c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
 990:	e5d33001 	ldrb	r3, [r3, #1]
 994:	e3530069 	cmp	r3, #105	; 0x69
 998:	0a000110 	beq	de0 <OscServer::Run()+0x520>
 99c:	e3530066 	cmp	r3, #102	; 0x66
 9a0:	1affffd7 	bne	904 <OscServer::Run()+0x44>
 9a4:	e28d0024 	add	r0, sp, #36	; 0x24
 9a8:	e3a01001 	mov	r1, #1
 9ac:	ebfffffe 	bl	0 <OscSimpleMessage::GetFloat(unsigned int)>
 9b0:	eddf7afb 	vldr	s15, [pc, #1004]	; da4 <OscServer::Run()+0x4e4>
 9b4:	ee607a27 	vmul.f32	s15, s0, s15
 9b8:	eefc7ae7 	vcvt.u32.f32	s15, s15
 9bc:	ee173a90 	vmov	r3, s15
 9c0:	e5cd3840 	strb	r3, [sp, #2112]	; 0x840
 9c4:	e594321c 	ldr	r3, [r4, #540]	; 0x21c
 9c8:	e6ff6076 	uxth	r6, r6
 9cc:	e286c001 	add	ip, r6, #1
 9d0:	e2466001 	sub	r6, r6, #1
 9d4:	e0836006 	add	r6, r3, r6
 9d8:	e28d0d21 	add	r0, sp, #2112	; 0x840
 9dc:	e1a02006 	mov	r2, r6
 9e0:	e3a0e000 	mov	lr, #0
 9e4:	e5f23001 	ldrb	r3, [r2, #1]!
 9e8:	e4d01001 	ldrb	r1, [r0], #1
 9ec:	e1530001 	cmp	r3, r1
 9f0:	e0873002 	add	r3, r7, r2
 9f4:	11a0e005 	movne	lr, r5
 9f8:	e0433006 	sub	r3, r3, r6
 9fc:	15c21000 	strbne	r1, [r2]
 a00:	e6ff3073 	uxth	r3, r3
 a04:	e15c0003 	cmp	ip, r3
 a08:	8afffff5 	bhi	9e4 <OscServer::Run()+0x124>
 a0c:	e35e0000 	cmp	lr, #0
 a10:	0a0000e8 	beq	db8 <OscServer::Run()+0x4f8>
 a14:	e5940210 	ldr	r0, [r4, #528]	; 0x210
 a18:	e5d41008 	ldrb	r1, [r4, #8]
 a1c:	e5903000 	ldr	r3, [r0]
 a20:	e594221c 	ldr	r2, [r4, #540]	; 0x21c
 a24:	e3510000 	cmp	r1, #0
 a28:	e5935010 	ldr	r5, [r3, #16]
 a2c:	0a0000d4 	beq	d84 <OscServer::Run()+0x4c4>
 a30:	e1d410ba 	ldrh	r1, [r4, #10]
 a34:	e2873001 	add	r3, r7, #1
 a38:	e6ff3073 	uxth	r3, r3
 a3c:	e1510003 	cmp	r1, r3
 a40:	21a03001 	movcs	r3, r1
 a44:	e3a01000 	mov	r1, #0
 a48:	e1c430ba 	strh	r3, [r4, #10]
 a4c:	e12fff35 	blx	r5
 a50:	ea000032 	b	b20 <OscServer::Run()+0x260>
 a54:	e5940218 	ldr	r0, [r4, #536]	; 0x218
 a58:	e284108c 	add	r1, r4, #140	; 0x8c
 a5c:	ebfffffe 	bl	0 <lo_pattern_match>
 a60:	e2507000 	subs	r7, r0, #0
 a64:	0a000037 	beq	b48 <OscServer::Run()+0x288>
 a68:	e5dd302c 	ldrb	r3, [sp, #44]	; 0x2c
 a6c:	e3530000 	cmp	r3, #0
 a70:	0affffa3 	beq	904 <OscServer::Run()+0x44>
 a74:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
 a78:	e3530001 	cmp	r3, #1
 a7c:	1affffa0 	bne	904 <OscServer::Run()+0x44>
 a80:	e5941218 	ldr	r1, [r4, #536]	; 0x218
 a84:	e1a00004 	mov	r0, r4
 a88:	ebfffffe 	bl	7d4 <OscServer::GetChannel(char const*)>
 a8c:	e6ff7070 	uxth	r7, r0
 a90:	e2475001 	sub	r5, r7, #1
 a94:	e6ff5075 	uxth	r5, r5
 a98:	e3550c02 	cmp	r5, #512	; 0x200
 a9c:	2affff98 	bcs	904 <OscServer::Run()+0x44>
 aa0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
 aa4:	e5d33000 	ldrb	r3, [r3]
 aa8:	e3530069 	cmp	r3, #105	; 0x69
 aac:	0a0000b7 	beq	d90 <OscServer::Run()+0x4d0>
 ab0:	e3530066 	cmp	r3, #102	; 0x66
 ab4:	1affff92 	bne	904 <OscServer::Run()+0x44>
 ab8:	e1a01006 	mov	r1, r6
 abc:	e28d0024 	add	r0, sp, #36	; 0x24
 ac0:	ebfffffe 	bl	0 <OscSimpleMessage::GetFloat(unsigned int)>
 ac4:	eddf7ab6 	vldr	s15, [pc, #728]	; da4 <OscServer::Run()+0x4e4>
 ac8:	ee607a27 	vmul.f32	s15, s0, s15
 acc:	eefc7ae7 	vcvt.u32.f32	s15, s15
 ad0:	edcd7a05 	vstr	s15, [sp, #20]
 ad4:	e5dd3014 	ldrb	r3, [sp, #20]
 ad8:	e594221c 	ldr	r2, [r4, #540]	; 0x21c
 adc:	e7d21005 	ldrb	r1, [r2, r5]
 ae0:	e1510003 	cmp	r1, r3
 ae4:	0a0000a2 	beq	d74 <OscServer::Run()+0x4b4>
 ae8:	e7c23005 	strb	r3, [r2, r5]
 aec:	e594221c 	ldr	r2, [r4, #540]	; 0x21c
 af0:	e5940210 	ldr	r0, [r4, #528]	; 0x210
 af4:	e5d41008 	ldrb	r1, [r4, #8]
 af8:	e5903000 	ldr	r3, [r0]
 afc:	e3510000 	cmp	r1, #0
 b00:	e5935010 	ldr	r5, [r3, #16]
 b04:	0a00009e 	beq	d84 <OscServer::Run()+0x4c4>
 b08:	e1d430ba 	ldrh	r3, [r4, #10]
 b0c:	e3a01000 	mov	r1, #0
 b10:	e1530007 	cmp	r3, r7
 b14:	31a03007 	movcc	r3, r7
 b18:	e1c430ba 	strh	r3, [r4, #10]
 b1c:	e12fff35 	blx	r5
 b20:	e5d41214 	ldrb	r1, [r4, #532]	; 0x214
 b24:	e3510000 	cmp	r1, #0
 b28:	1affff75 	bne	904 <OscServer::Run()+0x44>
 b2c:	e5940210 	ldr	r0, [r4, #528]	; 0x210
 b30:	e3a03001 	mov	r3, #1
 b34:	e5c43214 	strb	r3, [r4, #532]	; 0x214
 b38:	e5903000 	ldr	r3, [r0]
 b3c:	e5933008 	ldr	r3, [r3, #8]
 b40:	e12fff33 	blx	r3
 b44:	eaffff6e 	b	904 <OscServer::Run()+0x44>
 b48:	e594320c 	ldr	r3, [r4, #524]	; 0x20c
 b4c:	e5940218 	ldr	r0, [r4, #536]	; 0x218
 b50:	e3530000 	cmp	r3, #0
 b54:	0a000004 	beq	b6c <OscServer::Run()+0x2ac>
 b58:	e2841f63 	add	r1, r4, #396	; 0x18c
 b5c:	ebfffffe 	bl	0 <lo_pattern_match>
 b60:	e3500000 	cmp	r0, #0
 b64:	1a00003e 	bne	c64 <OscServer::Run()+0x3a4>
 b68:	e5940218 	ldr	r0, [r4, #536]	; 0x218
 b6c:	e3001000 	movw	r1, #0
 b70:	e3401000 	movt	r1, #0
 b74:	ebfffffe 	bl	0 <lo_pattern_match>
 b78:	e3500000 	cmp	r0, #0
 b7c:	1a00002e 	bne	c3c <OscServer::Run()+0x37c>
 b80:	e5940218 	ldr	r0, [r4, #536]	; 0x218
 b84:	e2841f43 	add	r1, r4, #268	; 0x10c
 b88:	ebfffffe 	bl	0 <lo_pattern_match>
 b8c:	e3500000 	cmp	r0, #0
 b90:	0affff5b 	beq	904 <OscServer::Run()+0x44>
 b94:	e1d430b2 	ldrh	r3, [r4, #2]
 b98:	e3005000 	movw	r5, #0
 b9c:	e3405000 	movt	r5, #0
 ba0:	e3001000 	movw	r1, #0
 ba4:	e3401000 	movt	r1, #0
 ba8:	e2842f89 	add	r2, r4, #548	; 0x224
 bac:	e58d2008 	str	r2, [sp, #8]
 bb0:	e28d0040 	add	r0, sp, #64	; 0x40
 bb4:	e59d2020 	ldr	r2, [sp, #32]
 bb8:	e88d0022 	stm	sp, {r1, r5}
 bbc:	e5941004 	ldr	r1, [r4, #4]
 bc0:	ebfffffe 	bl	0 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 bc4:	e5942244 	ldr	r2, [r4, #580]	; 0x244
 bc8:	e3001000 	movw	r1, #0
 bcc:	e3401000 	movt	r1, #0
 bd0:	e28d0d11 	add	r0, sp, #1088	; 0x440
 bd4:	e1d430b2 	ldrh	r3, [r4, #2]
 bd8:	e58d2008 	str	r2, [sp, #8]
 bdc:	e88d0022 	stm	sp, {r1, r5}
 be0:	e59d2020 	ldr	r2, [sp, #32]
 be4:	e5941004 	ldr	r1, [r4, #4]
 be8:	ebfffffe 	bl	0 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 bec:	e5942248 	ldr	r2, [r4, #584]	; 0x248
 bf0:	e3001000 	movw	r1, #0
 bf4:	e3401000 	movt	r1, #0
 bf8:	e28d0d21 	add	r0, sp, #2112	; 0x840
 bfc:	e1d430b2 	ldrh	r3, [r4, #2]
 c00:	e58d2008 	str	r2, [sp, #8]
 c04:	e88d0022 	stm	sp, {r1, r5}
 c08:	e59d2020 	ldr	r2, [sp, #32]
 c0c:	e5941004 	ldr	r1, [r4, #4]
 c10:	ebfffffe 	bl	0 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*, char const*)>
 c14:	e594020c 	ldr	r0, [r4, #524]	; 0x20c
 c18:	e3500000 	cmp	r0, #0
 c1c:	0affff38 	beq	904 <OscServer::Run()+0x44>
 c20:	e590c000 	ldr	ip, [r0]
 c24:	e1d430b2 	ldrh	r3, [r4, #2]
 c28:	e5941004 	ldr	r1, [r4, #4]
 c2c:	e59d2020 	ldr	r2, [sp, #32]
 c30:	e59c4010 	ldr	r4, [ip, #16]
 c34:	e12fff34 	blx	r4
 c38:	eaffff31 	b	904 <OscServer::Run()+0x44>
 c3c:	e1d430b2 	ldrh	r3, [r4, #2]
 c40:	e3000000 	movw	r0, #0
 c44:	e3400000 	movt	r0, #0
 c48:	e3a0c000 	mov	ip, #0
 c4c:	e5941004 	ldr	r1, [r4, #4]
 c50:	e59d2020 	ldr	r2, [sp, #32]
 c54:	e88d1001 	stm	sp, {r0, ip}
 c58:	e28d0d21 	add	r0, sp, #2112	; 0x840
 c5c:	ebfffffe 	bl	0 <OscSimpleSend::OscSimpleSend(int, unsigned int, unsigned short, char const*, char const*)>
 c60:	eaffff27 	b	904 <OscServer::Run()+0x44>
 c64:	e5941218 	ldr	r1, [r4, #536]	; 0x218
 c68:	e1a02005 	mov	r2, r5
 c6c:	e28d0d21 	add	r0, sp, #2112	; 0x840
 c70:	ebfffffe 	bl	0 <OscSimpleMessage::OscSimpleMessage(void*, unsigned int)>
 c74:	e59d3850 	ldr	r3, [sp, #2128]	; 0x850
 c78:	e3530000 	cmp	r3, #0
 c7c:	0affff20 	beq	904 <OscServer::Run()+0x44>
 c80:	e59d384c 	ldr	r3, [sp, #2124]	; 0x84c
 c84:	e5d33000 	ldrb	r3, [r3]
 c88:	e3530066 	cmp	r3, #102	; 0x66
 c8c:	1affff1c 	bne	904 <OscServer::Run()+0x44>
 c90:	e28d0d21 	add	r0, sp, #2112	; 0x840
 c94:	e1a01007 	mov	r1, r7
 c98:	ebfffffe 	bl	0 <OscSimpleMessage::GetFloat(unsigned int)>
 c9c:	eeb50a40 	vcmp.f32	s0, #0.0
 ca0:	e594020c 	ldr	r0, [r4, #524]	; 0x20c
 ca4:	e5903000 	ldr	r3, [r0]
 ca8:	eef1fa10 	vmrs	APSR_nzcv, fpscr
 cac:	15933008 	ldrne	r3, [r3, #8]
 cb0:	0593300c 	ldreq	r3, [r3, #12]
 cb4:	e12fff33 	blx	r3
 cb8:	eaffff11 	b	904 <OscServer::Run()+0x44>
 cbc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
 cc0:	e5d33000 	ldrb	r3, [r3]
 cc4:	e3530062 	cmp	r3, #98	; 0x62
 cc8:	1affff0d 	bne	904 <OscServer::Run()+0x44>
 ccc:	e3a02000 	mov	r2, #0
 cd0:	e28d1024 	add	r1, sp, #36	; 0x24
 cd4:	e28d0d21 	add	r0, sp, #2112	; 0x840
 cd8:	ebfffffe 	bl	0 <OscSimpleMessage::GetBlob(unsigned int)>
 cdc:	e59dc844 	ldr	ip, [sp, #2116]	; 0x844
 ce0:	e6ff607c 	uxth	r6, ip
 ce4:	e3560c02 	cmp	r6, #512	; 0x200
 ce8:	8affff05 	bhi	904 <OscServer::Run()+0x44>
 cec:	e59d0840 	ldr	r0, [sp, #2112]	; 0x840
 cf0:	e3560000 	cmp	r6, #0
 cf4:	e594221c 	ldr	r2, [r4, #540]	; 0x21c
 cf8:	13a07000 	movne	r7, #0
 cfc:	e1a0c006 	mov	ip, r6
 d00:	12400001 	subne	r0, r0, #1
 d04:	12422001 	subne	r2, r2, #1
 d08:	11a03007 	movne	r3, r7
 d0c:	0a000025 	beq	da8 <OscServer::Run()+0x4e8>
 d10:	e5f01001 	ldrb	r1, [r0, #1]!
 d14:	e2833001 	add	r3, r3, #1
 d18:	e5f2e001 	ldrb	lr, [r2, #1]!
 d1c:	e6ff3073 	uxth	r3, r3
 d20:	e15e0001 	cmp	lr, r1
 d24:	15c21000 	strbne	r1, [r2]
 d28:	11a07005 	movne	r7, r5
 d2c:	e15c0003 	cmp	ip, r3
 d30:	8afffff6 	bhi	d10 <OscServer::Run()+0x450>
 d34:	e3570000 	cmp	r7, #0
 d38:	0a00001a 	beq	da8 <OscServer::Run()+0x4e8>
 d3c:	e5d41008 	ldrb	r1, [r4, #8]
 d40:	e5940210 	ldr	r0, [r4, #528]	; 0x210
 d44:	e594221c 	ldr	r2, [r4, #540]	; 0x21c
 d48:	e2211001 	eor	r1, r1, #1
 d4c:	e5903000 	ldr	r3, [r0]
 d50:	e3560c02 	cmp	r6, #512	; 0x200
 d54:	03811001 	orreq	r1, r1, #1
 d58:	e5935010 	ldr	r5, [r3, #16]
 d5c:	e3510000 	cmp	r1, #0
 d60:	0a000018 	beq	dc8 <OscServer::Run()+0x508>
 d64:	e3a03c02 	mov	r3, #512	; 0x200
 d68:	e3a01000 	mov	r1, #0
 d6c:	e12fff35 	blx	r5
 d70:	eaffff6a 	b	b20 <OscServer::Run()+0x260>
 d74:	e5d43009 	ldrb	r3, [r4, #9]
 d78:	e3530000 	cmp	r3, #0
 d7c:	0afffee0 	beq	904 <OscServer::Run()+0x44>
 d80:	eaffff5a 	b	af0 <OscServer::Run()+0x230>
 d84:	e3a03c02 	mov	r3, #512	; 0x200
 d88:	e12fff35 	blx	r5
 d8c:	eaffff63 	b	b20 <OscServer::Run()+0x260>
 d90:	e1a01006 	mov	r1, r6
 d94:	e28d0024 	add	r0, sp, #36	; 0x24
 d98:	ebfffffe 	bl	0 <OscSimpleMessage::GetInt(unsigned int)>
 d9c:	e6ef3070 	uxtb	r3, r0
 da0:	eaffff4c 	b	ad8 <OscServer::Run()+0x218>
 da4:	437f0000 	cmnmi	pc, #0
 da8:	e5d43009 	ldrb	r3, [r4, #9]
 dac:	e3530000 	cmp	r3, #0
 db0:	1affffe1 	bne	d3c <OscServer::Run()+0x47c>
 db4:	eafffed2 	b	904 <OscServer::Run()+0x44>
 db8:	e5d43009 	ldrb	r3, [r4, #9]
 dbc:	e3530000 	cmp	r3, #0
 dc0:	1affff13 	bne	a14 <OscServer::Run()+0x154>
 dc4:	eafffece 	b	904 <OscServer::Run()+0x44>
 dc8:	e1d430ba 	ldrh	r3, [r4, #10]
 dcc:	e1530006 	cmp	r3, r6
 dd0:	31a03006 	movcc	r3, r6
 dd4:	e1c430ba 	strh	r3, [r4, #10]
 dd8:	e12fff35 	blx	r5
 ddc:	eaffff4f 	b	b20 <OscServer::Run()+0x260>
 de0:	e28d0024 	add	r0, sp, #36	; 0x24
 de4:	e3a01001 	mov	r1, #1
 de8:	ebfffffe 	bl	0 <OscSimpleMessage::GetInt(unsigned int)>
 dec:	e5cd0840 	strb	r0, [sp, #2112]	; 0x840
 df0:	eafffef3 	b	9c4 <OscServer::Run()+0x104>

Disassembly of section .rodata.str1.4:

00000000 <.LC0>:
   0:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
   4:	00000031 	andeq	r0, r0, r1, lsr r0

00000008 <.LC1>:
   8:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
   c:	002a2f31 	eoreq	r2, sl, r1, lsr pc

00000010 <.LC2>:
  10:	0000322f 	andeq	r3, r0, pc, lsr #4

00000014 <.LC3>:
  14:	786d642f 	stmdavc	sp!, {r0, r1, r2, r3, r5, sl, sp, lr}^
  18:	6c622f31 	stclvs	15, cr2, [r2], #-196	; 0xffffff3c
  1c:	6f6b6361 	svcvs	0x006b6361
  20:	00007475 	andeq	r7, r0, r5, ror r4

00000024 <.LC4>:
  24:	00302e31 	eorseq	r2, r0, r1, lsr lr

00000028 <.LC5>:
  28:	7325565b 			; <UNDEFINED> instruction: 0x7325565b
  2c:	7325205d 			; <UNDEFINED> instruction: 0x7325205d
  30:	00000000 	andeq	r0, r0, r0

00000034 <.LC6>:
  34:	20636544 	rsbcs	r6, r3, r4, asr #10
  38:	32203931 	eorcc	r3, r0, #802816	; 0xc4000
  3c:	00313230 	eorseq	r3, r1, r0, lsr r2

00000040 <.LC7>:
  40:	6e69702f 	cdpvs	0, 6, cr7, cr9, cr15, {1}
  44:	00000067 	andeq	r0, r0, r7, rrx

00000048 <.LC8>:
  48:	6e6f702f 	cdpvs	0, 6, cr7, cr15, cr15, {1}
  4c:	00000067 	andeq	r0, r0, r7, rrx

00000050 <.LC9>:
  50:	00000073 	andeq	r0, r0, r3, ror r0

00000054 <.LC10>:
  54:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
  58:	736f2f6f 	cmnvc	pc, #444	; 0x1bc
  5c:	00000000 	andeq	r0, r0, r0

00000060 <.LC11>:
  60:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
  64:	6f6d2f6f 	svcvs	0x006d2f6f
  68:	006c6564 	rsbeq	r6, ip, r4, ror #10

0000006c <.LC12>:
  6c:	666e692f 	strbtvs	r6, [lr], -pc, lsr #18
  70:	6f732f6f 	svcvs	0x00732f6f
  74:	Address 0x0000000000000074 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.


oscserverparamsset.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <OSCServerParams::Set(OscServer*)>:
   0:	e5903004 	ldr	r3, [r0, #4]
   4:	e92d4070 	push	{r4, r5, r6, lr}
   8:	e3130001 	tst	r3, #1
   c:	e1a04000 	mov	r4, r0
  10:	e1a05001 	mov	r5, r1
  14:	1a000024 	bne	ac <OSCServerParams::Set(OscServer*)+0xac>
  18:	e3130002 	tst	r3, #2
  1c:	1a00001d 	bne	98 <OSCServerParams::Set(OscServer*)+0x98>
  20:	e3130004 	tst	r3, #4
  24:	1a000016 	bne	84 <OSCServerParams::Set(OscServer*)+0x84>
  28:	e3130020 	tst	r3, #32
  2c:	1a00000f 	bne	70 <OSCServerParams::Set(OscServer*)+0x70>
  30:	e3130040 	tst	r3, #64	; 0x40
  34:	1a000005 	bne	50 <OSCServerParams::Set(OscServer*)+0x50>
  38:	e3130008 	tst	r3, #8
  3c:	08bd8070 	popeq	{r4, r5, r6, pc}
  40:	e5d4100d 	ldrb	r1, [r4, #13]
  44:	e1a00005 	mov	r0, r5
  48:	e8bd4070 	pop	{r4, r5, r6, lr}
  4c:	eafffffe 	b	0 <OscServer::SetPartialTransmission(bool)>
  50:	e2841f43 	add	r1, r4, #268	; 0x10c
  54:	e1a00005 	mov	r0, r5
  58:	e2811002 	add	r1, r1, #2
  5c:	ebfffffe 	bl	0 <OscServer::SetPathBlackOut(char const*)>
  60:	e5943004 	ldr	r3, [r4, #4]
  64:	e3130008 	tst	r3, #8
  68:	08bd8070 	popeq	{r4, r5, r6, pc}
  6c:	eafffff3 	b	40 <OSCServerParams::Set(OscServer*)+0x40>
  70:	e284108e 	add	r1, r4, #142	; 0x8e
  74:	e1a00005 	mov	r0, r5
  78:	ebfffffe 	bl	0 <OscServer::SetPathInfo(char const*)>
  7c:	e5943004 	ldr	r3, [r4, #4]
  80:	eaffffea 	b	30 <OSCServerParams::Set(OscServer*)+0x30>
  84:	e284100e 	add	r1, r4, #14
  88:	e1a00005 	mov	r0, r5
  8c:	ebfffffe 	bl	0 <OscServer::SetPath(char const*)>
  90:	e5943004 	ldr	r3, [r4, #4]
  94:	eaffffe3 	b	28 <OSCServerParams::Set(OscServer*)+0x28>
  98:	e1d410ba 	ldrh	r1, [r4, #10]
  9c:	e1a00005 	mov	r0, r5
  a0:	ebfffffe 	bl	0 <OscServer::SetPortOutgoing(unsigned short)>
  a4:	e5943004 	ldr	r3, [r4, #4]
  a8:	eaffffdc 	b	20 <OSCServerParams::Set(OscServer*)+0x20>
  ac:	e1d010b8 	ldrh	r1, [r0, #8]
  b0:	e1a00005 	mov	r0, r5
  b4:	ebfffffe 	bl	0 <OscServer::SetPortIncoming(unsigned short)>
  b8:	e5943004 	ldr	r3, [r4, #4]
  bc:	eaffffd5 	b	18 <OSCServerParams::Set(OscServer*)+0x18>

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	4728203a 			; <UNDEFINED> instruction: 0x4728203a
   8:	2029554e 	eorcs	r5, r9, lr, asr #10
   c:	322e3031 	eorcc	r3, lr, #49	; 0x31
  10:	Address 0x0000000000000010 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003441 	andeq	r3, r0, r1, asr #8
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002a 	andeq	r0, r0, sl, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c050a02 			; <UNDEFINED> instruction: 0x0c050a02
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1c011a01 			; <UNDEFINED> instruction: 0x1c011a01
  30:	22021e01 	andcs	r1, r2, #1, 28
  34:	Address 0x0000000000000034 is out of bounds.

